public class chess.BitBoard extends java.lang.Object
{
    public static final long[] kingAttacks;
    public static final long[] knightAttacks;
    public static final long[] wPawnAttacks;
    public static final long[] bPawnAttacks;
    static final long[] wPawnBlockerMask;
    static final long[] bPawnBlockerMask;
    public static final long maskAToGFiles;
    public static final long maskBToHFiles;
    public static final long maskAToFFiles;
    public static final long maskCToHFiles;
    public static final long[] maskFile;
    public static final long maskRow1;
    public static final long maskRow2;
    public static final long maskRow3;
    public static final long maskRow4;
    public static final long maskRow5;
    public static final long maskRow6;
    public static final long maskRow7;
    public static final long maskRow8;
    public static final long maskRow1Row8;
    public static final long maskDarkSq;
    public static final long maskLightSq;
    public static final long maskCorners;
    private static final long[][] rTables;
    private static final long[] rMasks;
    private static final int[] rBits;
    private static final long[] rMagics;
    private static final long[][] bTables;
    private static final long[] bMasks;
    private static final int[] bBits;
    private static final long[] bMagics;
    public static final long[][] squaresBetween;
    private static final byte[] dirTable;
    private static final byte[] distTable;
    private static final int[] trailingZ;

    public void <init>()
    {
        chess.BitBoard r0;

        r0 := @this: chess.BitBoard;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static final long createPattern(int, long)
    {
        int i0, i3;
        long l1, l2, l4, l5, $l6, $l7, $l8, $l9;
        byte $b10, $b11;

        i0 := @parameter0: int;
        l1 := @parameter1: long;
        l2 = 0L;
        i3 = 0;

     label0:
        $l6 = l1 - 1L;
        l4 = l1 & $l6;
        l5 = l1 ^ l4;
        $l7 = (long) i0;
        $l8 = 1L << i3;
        $l9 = $l7 & $l8;
        $b10 = $l9 cmp 0L;
        if $b10 == 0 goto label1;

        l2 = l2 | l5;

     label1:
        l1 = l4;
        $b11 = l1 cmp 0L;
        if $b11 != 0 goto label2;

        goto label3;

     label2:
        i3 = i3 + 1;
        goto label0;

     label3:
        return l2;
    }

    private static final long addRookRays(int, int, long, boolean)
    {
        int i0, i1;
        long l2, l3, l4, l5, l6, l7;
        boolean z0;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        l2 := @parameter2: long;
        z0 := @parameter3: boolean;
        l3 = 0L;
        l4 = staticinvoke <chess.BitBoard: long addRay(long,int,int,int,int,long,boolean)>(l3, i0, i1, 1, 0, l2, z0);
        l5 = staticinvoke <chess.BitBoard: long addRay(long,int,int,int,int,long,boolean)>(l4, i0, i1, -1, 0, l2, z0);
        l6 = staticinvoke <chess.BitBoard: long addRay(long,int,int,int,int,long,boolean)>(l5, i0, i1, 0, 1, l2, z0);
        l7 = staticinvoke <chess.BitBoard: long addRay(long,int,int,int,int,long,boolean)>(l6, i0, i1, 0, -1, l2, z0);
        return l7;
    }

    private static final long addBishopRays(int, int, long, boolean)
    {
        int i0, i1;
        long l2, l3, l4, l5, l6, l7;
        boolean z0;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        l2 := @parameter2: long;
        z0 := @parameter3: boolean;
        l3 = 0L;
        l4 = staticinvoke <chess.BitBoard: long addRay(long,int,int,int,int,long,boolean)>(l3, i0, i1, 1, 1, l2, z0);
        l5 = staticinvoke <chess.BitBoard: long addRay(long,int,int,int,int,long,boolean)>(l4, i0, i1, -1, -1, l2, z0);
        l6 = staticinvoke <chess.BitBoard: long addRay(long,int,int,int,int,long,boolean)>(l5, i0, i1, 1, -1, l2, z0);
        l7 = staticinvoke <chess.BitBoard: long addRay(long,int,int,int,int,long,boolean)>(l6, i0, i1, -1, 1, l2, z0);
        return l7;
    }

    private static final long addRay(long, int, int, int, int, long, boolean)
    {
        long l0, l5, $l11, $l12, $l13;
        int i1, i2, i3, i4, i8;
        boolean z0;
        byte b6, b7, $b9, $b10, $b14;

        l0 := @parameter0: long;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        l5 := @parameter5: long;
        z0 := @parameter6: boolean;
        if z0 == 0 goto label0;

        $b9 = 1;
        goto label1;

     label0:
        $b9 = 0;

     label1:
        b6 = $b9;
        if z0 == 0 goto label2;

        $b10 = 6;
        goto label3;

     label2:
        $b10 = 7;

     label3:
        b7 = $b10;

     label4:
        if i3 == 0 goto label5;

        i1 = i1 + i3;
        if i1 < b6 goto label8;

        if i1 <= b7 goto label5;

        goto label8;

     label5:
        if i4 == 0 goto label6;

        i2 = i2 + i4;
        if i2 < b6 goto label8;

        if i2 <= b7 goto label6;

        goto label8;

     label6:
        i8 = staticinvoke <chess.Position: int getSquare(int,int)>(i1, i2);
        $l11 = 1L << i8;
        l0 = l0 | $l11;
        $l12 = 1L << i8;
        $l13 = l5 & $l12;
        $b14 = $l13 cmp 0L;
        if $b14 == 0 goto label7;

        goto label8;

     label7:
        goto label4;

     label8:
        return l0;
    }

    public static final long bishopAttacks(int, long)
    {
        int i0, $i6, $i7, $i9;
        long l1, $l2, $l3, $l4, $l5, $l8, $l10;
        long[][] $r0;
        long[] $r1, $r2, $r3;
        int[] $r4;

        i0 := @parameter0: int;
        l1 := @parameter1: long;
        $r0 = <chess.BitBoard: long[][] bTables>;
        $r2 = $r0[i0];
        $r1 = <chess.BitBoard: long[] bMasks>;
        $l2 = $r1[i0];
        $l3 = l1 & $l2;
        $r3 = <chess.BitBoard: long[] bMagics>;
        $l4 = $r3[i0];
        $l5 = $l3 * $l4;
        $r4 = <chess.BitBoard: int[] bBits>;
        $i6 = $r4[i0];
        $i7 = 64 - $i6;
        $l8 = $l5 >>> $i7;
        $i9 = (int) $l8;
        $l10 = $r2[$i9];
        return $l10;
    }

    public static final long rookAttacks(int, long)
    {
        int i0, $i6, $i7, $i9;
        long l1, $l2, $l3, $l4, $l5, $l8, $l10;
        long[][] $r0;
        long[] $r1, $r2, $r3;
        int[] $r4;

        i0 := @parameter0: int;
        l1 := @parameter1: long;
        $r0 = <chess.BitBoard: long[][] rTables>;
        $r2 = $r0[i0];
        $r1 = <chess.BitBoard: long[] rMasks>;
        $l2 = $r1[i0];
        $l3 = l1 & $l2;
        $r3 = <chess.BitBoard: long[] rMagics>;
        $l4 = $r3[i0];
        $l5 = $l3 * $l4;
        $r4 = <chess.BitBoard: int[] rBits>;
        $i6 = $r4[i0];
        $i7 = 64 - $i6;
        $l8 = $l5 >>> $i7;
        $i9 = (int) $l8;
        $l10 = $r2[$i9];
        return $l10;
    }

    public static final int getDirection(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        byte[] $r0;
        byte $b8;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i3 = i1 | 7;
        $i4 = i1 + $i3;
        $i5 = $i4 - i0;
        $i6 = i0 | 7;
        $i7 = $i5 - $i6;
        i2 = $i7 + 119;
        $r0 = <chess.BitBoard: byte[] dirTable>;
        $b8 = $r0[i2];
        return $b8;
    }

    public static final int getDistance(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        byte[] $r0;
        byte $b8;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i3 = i1 | 7;
        $i4 = i1 + $i3;
        $i5 = $i4 - i0;
        $i6 = i0 | 7;
        $i7 = $i5 - $i6;
        i2 = $i7 + 119;
        $r0 = <chess.BitBoard: byte[] distTable>;
        $b8 = $r0[i2];
        return $b8;
    }

    public static final long southFill(long)
    {
        long l0, $l1, l2, $l3, l4, $l5, l6;

        l0 := @parameter0: long;
        $l1 = l0 >>> 8;
        l2 = l0 | $l1;
        $l3 = l2 >>> 16;
        l4 = l2 | $l3;
        $l5 = l4 >>> 32;
        l6 = l4 | $l5;
        return l6;
    }

    public static final long northFill(long)
    {
        long l0, $l1, l2, $l3, l4, $l5, l6;

        l0 := @parameter0: long;
        $l1 = l0 << 8;
        l2 = l0 | $l1;
        $l3 = l2 << 16;
        l4 = l2 | $l3;
        $l5 = l4 << 32;
        l6 = l4 | $l5;
        return l6;
    }

    public static final int numberOfTrailingZeros(long)
    {
        long l0, $l1, $l2, $l3, $l4;
        int[] $r0;
        int $i5, $i6;

        l0 := @parameter0: long;
        $r0 = <chess.BitBoard: int[] trailingZ>;
        $l1 = neg l0;
        $l2 = l0 & $l1;
        $l3 = $l2 * 571347909858961602L;
        $l4 = $l3 >>> 58;
        $i5 = (int) $l4;
        $i6 = $r0[$i5];
        return $i6;
    }

    static void <clinit>()
    {
        int i0, i3, i4, i5, i6, i7, i25, i46, $i59, $i60, $i62, $i64, $i65, i68, $i69, $i70, $i72, $i74, $i75, i77, i78, $i80, i81, i82, $i84, i85, i86, $i91, $i92, i98, i99, i100, $i102, i103, i104, $i106, i107, i108, $i113, $i114, i116, i122, i123, i124, i125, i127, i128, i129;
        long l1, l2, l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l39, $l40, $l41, $l42, $l43, $l44, l45, l47, $l48, $l49, $l50, $l51, l52, $l53, $l54, $l55, $l56, l57, l58, $l61, $l63, $l66, l67, $l71, $l73, $l76, $l79, $l83, $l87, l88, $l89, $l90, $l93, $l94, $l96, $l101, $l105, $l109, l110, $l111, $l112, $l115, l117, $l118, $l120, l126, $l130;
        long[] r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r19, $r20, $r22, $r23, $r24, $r29, $r30, r32, $r33, $r34, $r35, $r41, $r43, $r45;
        int[] $r14, $r16, $r21, $r25, $r31, $r36, $r48;
        long[][] $r18, $r27, $r28, $r38, $r39, $r40, $r42, $r44;
        byte $b95, $b97, $b119, $b121;
        java.lang.RuntimeException $r26, $r37;
        byte[] $r46, $r47;

        $r1 = newarray (long)[8];
        $r1[0] = 72340172838076673L;
        $r1[1] = 144680345676153346L;
        $r1[2] = 289360691352306692L;
        $r1[3] = 578721382704613384L;
        $r1[4] = 1157442765409226768L;
        $r1[5] = 2314885530818453536L;
        $r1[6] = 4629771061636907072L;
        $r1[7] = -9187201950435737472L;
        <chess.BitBoard: long[] maskFile> = $r1;
        $r2 = newarray (long)[64];
        <chess.BitBoard: long[] kingAttacks> = $r2;
        i0 = 0;

     label0:
        if i0 >= 64 goto label1;

        l1 = 1L << i0;
        $l9 = l1 >>> 1;
        $l10 = l1 << 7;
        $l11 = $l9 | $l10;
        $l12 = l1 >>> 9;
        $l13 = $l11 | $l12;
        $l14 = $l13 & 9187201950435737471L;
        $l15 = l1 << 1;
        $l16 = l1 << 9;
        $l17 = $l15 | $l16;
        $l18 = l1 >>> 7;
        $l19 = $l17 | $l18;
        $l20 = $l19 & -72340172838076674L;
        $l21 = $l14 | $l20;
        $l22 = l1 << 8;
        $l23 = $l21 | $l22;
        $l24 = l1 >>> 8;
        l2 = $l23 | $l24;
        $r3 = <chess.BitBoard: long[] kingAttacks>;
        $r3[i0] = l2;
        i0 = i0 + 1;
        goto label0;

     label1:
        $r4 = newarray (long)[64];
        <chess.BitBoard: long[] knightAttacks> = $r4;
        i25 = 0;

     label2:
        if i25 >= 64 goto label3;

        l26 = 1L << i25;
        $l27 = l26 << 6;
        $l28 = l26 >>> 10;
        $l29 = $l27 | $l28;
        $l30 = $l29 & 4557430888798830399L;
        $l31 = l26 << 15;
        $l32 = l26 >>> 17;
        $l33 = $l31 | $l32;
        $l34 = $l33 & 9187201950435737471L;
        $l35 = $l30 | $l34;
        $l36 = l26 << 17;
        $l37 = l26 >>> 15;
        $l38 = $l36 | $l37;
        $l39 = $l38 & -72340172838076674L;
        $l40 = $l35 | $l39;
        $l41 = l26 << 10;
        $l42 = l26 >>> 6;
        $l43 = $l41 | $l42;
        $l44 = $l43 & -217020518514230020L;
        l45 = $l40 | $l44;
        $r5 = <chess.BitBoard: long[] knightAttacks>;
        $r5[i25] = l45;
        i25 = i25 + 1;
        goto label2;

     label3:
        $r6 = newarray (long)[64];
        <chess.BitBoard: long[] wPawnAttacks> = $r6;
        $r7 = newarray (long)[64];
        <chess.BitBoard: long[] bPawnAttacks> = $r7;
        $r8 = newarray (long)[64];
        <chess.BitBoard: long[] wPawnBlockerMask> = $r8;
        $r9 = newarray (long)[64];
        <chess.BitBoard: long[] bPawnBlockerMask> = $r9;
        i46 = 0;

     label4:
        if i46 >= 64 goto label13;

        l47 = 1L << i46;
        $l48 = l47 << 7;
        $l49 = $l48 & 9187201950435737471L;
        $l50 = l47 << 9;
        $l51 = $l50 & -72340172838076674L;
        l52 = $l49 | $l51;
        $r10 = <chess.BitBoard: long[] wPawnAttacks>;
        $r10[i46] = l52;
        $l53 = l47 >>> 9;
        $l54 = $l53 & 9187201950435737471L;
        $l55 = l47 >>> 7;
        $l56 = $l55 & -72340172838076674L;
        l57 = $l54 | $l56;
        $r11 = <chess.BitBoard: long[] bPawnAttacks>;
        $r11[i46] = l57;
        i3 = staticinvoke <chess.Position: int getX(int)>(i46);
        i4 = staticinvoke <chess.Position: int getY(int)>(i46);
        l58 = 0L;
        i5 = i4 + 1;

     label5:
        if i5 >= 8 goto label8;

        if i3 <= 0 goto label6;

        $i59 = i3 - 1;
        $i60 = staticinvoke <chess.Position: int getSquare(int,int)>($i59, i5);
        $l61 = 1L << $i60;
        l58 = l58 | $l61;

     label6:
        $i62 = staticinvoke <chess.Position: int getSquare(int,int)>(i3, i5);
        $l63 = 1L << $i62;
        l58 = l58 | $l63;
        if i3 >= 7 goto label7;

        $i64 = i3 + 1;
        $i65 = staticinvoke <chess.Position: int getSquare(int,int)>($i64, i5);
        $l66 = 1L << $i65;
        l58 = l58 | $l66;

     label7:
        i5 = i5 + 1;
        goto label5;

     label8:
        $r12 = <chess.BitBoard: long[] wPawnBlockerMask>;
        $r12[i46] = l58;
        l67 = 0L;
        i68 = i4 - 1;

     label9:
        if i68 < 0 goto label12;

        if i3 <= 0 goto label10;

        $i69 = i3 - 1;
        $i70 = staticinvoke <chess.Position: int getSquare(int,int)>($i69, i68);
        $l71 = 1L << $i70;
        l67 = l67 | $l71;

     label10:
        $i72 = staticinvoke <chess.Position: int getSquare(int,int)>(i3, i68);
        $l73 = 1L << $i72;
        l67 = l67 | $l73;
        if i3 >= 7 goto label11;

        $i74 = i3 + 1;
        $i75 = staticinvoke <chess.Position: int getSquare(int,int)>($i74, i68);
        $l76 = 1L << $i75;
        l67 = l67 | $l76;

     label11:
        i68 = i68 + -1;
        goto label9;

     label12:
        $r13 = <chess.BitBoard: long[] bPawnBlockerMask>;
        $r13[i46] = l67;
        i46 = i46 + 1;
        goto label4;

     label13:
        $r14 = newarray (int)[64];
        $r14[0] = 12;
        $r14[1] = 11;
        $r14[2] = 11;
        $r14[3] = 11;
        $r14[4] = 11;
        $r14[5] = 11;
        $r14[6] = 11;
        $r14[7] = 12;
        $r14[8] = 11;
        $r14[9] = 10;
        $r14[10] = 10;
        $r14[11] = 11;
        $r14[12] = 10;
        $r14[13] = 10;
        $r14[14] = 10;
        $r14[15] = 11;
        $r14[16] = 11;
        $r14[17] = 10;
        $r14[18] = 10;
        $r14[19] = 10;
        $r14[20] = 10;
        $r14[21] = 10;
        $r14[22] = 10;
        $r14[23] = 11;
        $r14[24] = 11;
        $r14[25] = 10;
        $r14[26] = 10;
        $r14[27] = 10;
        $r14[28] = 10;
        $r14[29] = 10;
        $r14[30] = 10;
        $r14[31] = 11;
        $r14[32] = 11;
        $r14[33] = 10;
        $r14[34] = 10;
        $r14[35] = 10;
        $r14[36] = 10;
        $r14[37] = 10;
        $r14[38] = 10;
        $r14[39] = 11;
        $r14[40] = 11;
        $r14[41] = 10;
        $r14[42] = 10;
        $r14[43] = 11;
        $r14[44] = 10;
        $r14[45] = 10;
        $r14[46] = 10;
        $r14[47] = 11;
        $r14[48] = 10;
        $r14[49] = 9;
        $r14[50] = 9;
        $r14[51] = 9;
        $r14[52] = 9;
        $r14[53] = 9;
        $r14[54] = 10;
        $r14[55] = 10;
        $r14[56] = 11;
        $r14[57] = 10;
        $r14[58] = 10;
        $r14[59] = 10;
        $r14[60] = 10;
        $r14[61] = 11;
        $r14[62] = 10;
        $r14[63] = 11;
        <chess.BitBoard: int[] rBits> = $r14;
        $r15 = newarray (long)[64];
        $r15[0] = 1848728085108359167L;
        $r15[1] = 4600427526163791871L;
        $r15[2] = 4616189678032715774L;
        $r15[3] = 22518134233300991L;
        $r15[4] = 22520746999807920L;
        $r15[5] = 9178338789504843761L;
        $r15[6] = 9173833196911984636L;
        $r15[7] = 6582011165858594810L;
        $r15[8] = 11980280127029247L;
        $r15[9] = 87963062239231L;
        $r15[10] = 35923245514620927L;
        $r15[11] = 29994700382404607L;
        $r15[12] = 35852941194362879L;
        $r15[13] = 35676987234189282L;
        $r15[14] = 35676970188537851L;
        $r15[15] = 32035380319485914L;
        $r15[16] = 44895464958984186L;
        $r15[17] = 29273603745513471L;
        $r15[18] = 27127563202543612L;
        $r15[19] = 7318761912639485L;
        $r15[20] = 3659587114737663L;
        $r15[21] = 422624832282623L;
        $r15[22] = 3298602778618L;
        $r15[23] = 442347278434282L;
        $r15[24] = 72041182162610176L;
        $r15[25] = 36011444545830916L;
        $r15[26] = 17962042859864056L;
        $r15[27] = 2374946727534588L;
        $r15[28] = 4502504411760644L;
        $r15[29] = 2250704597550082L;
        $r15[30] = 1125765689507843L;
        $r15[31] = 562766075187968L;
        $r15[32] = 72054501667766369L;
        $r15[33] = 36028245477425216L;
        $r15[34] = 18013900299567200L;
        $r15[35] = 9005161420691552L;
        $r15[36] = 4502773907331084L;
        $r15[37] = 2251556061711366L;
        $r15[38] = 1125379456635909L;
        $r15[39] = 562944222953728L;
        $r15[40] = 72055385753669632L;
        $r15[41] = 36028251222552576L;
        $r15[42] = 18014258390327296L;
        $r15[43] = 9007063162179584L;
        $r15[44] = 4502775111139340L;
        $r15[45] = 2251112748900362L;
        $r15[46] = 1125825818574853L;
        $r15[47] = 562941162074113L;
        $r15[48] = 72056743622363648L;
        $r15[49] = 36027972373209856L;
        $r15[50] = 18013960417324544L;
        $r15[51] = 9006314477480448L;
        $r15[52] = 4502611769538048L;
        $r15[53] = 2251756863129088L;
        $r15[54] = 1125890779774688L;
        $r15[55] = 562906839946912L;
        $r15[56] = 72056898243121078L;
        $r15[57] = 36028500663190958L;
        $r15[58] = 18013788614474986L;
        $r15[59] = 9007036043130222L;
        $r15[60] = 4503556676860134L;
        $r15[61] = 2251791223629046L;
        $r15[62] = 1125827562356340L;
        $r15[63] = 562946262392926L;
        <chess.BitBoard: long[] rMagics> = $r15;
        $r16 = newarray (int)[64];
        $r16[0] = 5;
        $r16[1] = 4;
        $r16[2] = 5;
        $r16[3] = 5;
        $r16[4] = 5;
        $r16[5] = 5;
        $r16[6] = 4;
        $r16[7] = 5;
        $r16[8] = 4;
        $r16[9] = 4;
        $r16[10] = 5;
        $r16[11] = 5;
        $r16[12] = 5;
        $r16[13] = 5;
        $r16[14] = 4;
        $r16[15] = 4;
        $r16[16] = 4;
        $r16[17] = 4;
        $r16[18] = 7;
        $r16[19] = 7;
        $r16[20] = 7;
        $r16[21] = 7;
        $r16[22] = 4;
        $r16[23] = 4;
        $r16[24] = 5;
        $r16[25] = 5;
        $r16[26] = 7;
        $r16[27] = 9;
        $r16[28] = 9;
        $r16[29] = 7;
        $r16[30] = 5;
        $r16[31] = 5;
        $r16[32] = 5;
        $r16[33] = 5;
        $r16[34] = 7;
        $r16[35] = 9;
        $r16[36] = 9;
        $r16[37] = 7;
        $r16[38] = 5;
        $r16[39] = 5;
        $r16[40] = 4;
        $r16[41] = 4;
        $r16[42] = 7;
        $r16[43] = 7;
        $r16[44] = 7;
        $r16[45] = 7;
        $r16[46] = 4;
        $r16[47] = 4;
        $r16[48] = 4;
        $r16[49] = 4;
        $r16[50] = 5;
        $r16[51] = 5;
        $r16[52] = 5;
        $r16[53] = 5;
        $r16[54] = 4;
        $r16[55] = 4;
        $r16[56] = 5;
        $r16[57] = 4;
        $r16[58] = 5;
        $r16[59] = 5;
        $r16[60] = 5;
        $r16[61] = 5;
        $r16[62] = 4;
        $r16[63] = 5;
        <chess.BitBoard: int[] bBits> = $r16;
        $r17 = newarray (long)[64];
        $r17[0] = 1952686320645632L;
        $r17[1] = 14733686573891371L;
        $r17[2] = 5734402566249142L;
        $r17[3] = 16352366346826269L;
        $r17[4] = 5325398646559693L;
        $r17[5] = 3802671688720598L;
        $r17[6] = 2053671302982807L;
        $r17[7] = 58268109635583L;
        $r17[8] = 128022462535670L;
        $r17[9] = 64644406420471L;
        $r17[10] = 26790649133962L;
        $r17[11] = 63876497502311L;
        $r17[12] = 3912191768878L;
        $r17[13] = 2897894937198L;
        $r17[14] = 7463220018964L;
        $r17[15] = 3958716612487L;
        $r17[16] = 18031115270168572L;
        $r17[17] = 9045705682161648L;
        $r17[18] = 34622014848752637L;
        $r17[19] = 8162778822212934L;
        $r17[20] = 1126045987905531L;
        $r17[21] = 4398114455420793L;
        $r17[22] = 1126607445753823L;
        $r17[23] = 562985900507098L;
        $r17[24] = 11844308793409469L;
        $r17[25] = 2825837151694801L;
        $r17[26] = 1695451174678522L;
        $r17[27] = 18020995780612112L;
        $r17[28] = 7318487940759616L;
        $r17[29] = 7318761976758208L;
        $r17[30] = 3671055931490189L;
        $r17[31] = 426217592647633L;
        $r17[32] = 8934040670841357L;
        $r17[33] = 4470902072285711L;
        $r17[34] = 2247368196227137L;
        $r17[35] = 71227737670144L;
        $r17[36] = 35995193598042118L;
        $r17[37] = 16745420625420031L;
        $r17[38] = 8887319769598474L;
        $r17[39] = 4458604167471753L;
        $r17[40] = 4458152248360972L;
        $r17[41] = 2237120603840524L;
        $r17[42] = 1125341528473344L;
        $r17[43] = 4385816235524L;
        $r17[44] = 140480350264640L;
        $r17[45] = 36028107417714976L;
        $r17[46] = 17915865573188611L;
        $r17[47] = 8975422564778497L;
        $r17[48] = 2249584024491195L;
        $r17[49] = 1121050810550855L;
        $r17[50] = 4360174343501L;
        $r17[51] = 17060070275L;
        $r17[52] = 546442396816L;
        $r17[53] = 138288447840934L;
        $r17[54] = 35786712062400428L;
        $r17[55] = 17994843236161116L;
        $r17[56] = 1125069266668743L;
        $r17[57] = 4316391458302L;
        $r17[58] = 17070781523L;
        $r17[59] = 66640899L;
        $r17[60] = 2130346310L;
        $r17[61] = 544720744288L;
        $r17[62] = 139943527242966L;
        $r17[63] = 35947823912432565L;
        <chess.BitBoard: long[] bMagics> = $r17;
        $r18 = newarray (long[])[64];
        <chess.BitBoard: long[][] rTables> = $r18;
        $r19 = newarray (long)[64];
        <chess.BitBoard: long[] rMasks> = $r19;
        i77 = 0;

     label14:
        if i77 >= 64 goto label21;

        i78 = staticinvoke <chess.Position: int getX(int)>(i77);
        i6 = staticinvoke <chess.Position: int getY(int)>(i77);
        $r20 = <chess.BitBoard: long[] rMasks>;
        $l79 = staticinvoke <chess.BitBoard: long addRookRays(int,int,long,boolean)>(i78, i6, 0L, 1);
        $r20[i77] = $l79;
        $r21 = <chess.BitBoard: int[] rBits>;
        $i80 = $r21[i77];
        i81 = 1 << $i80;
        r0 = newarray (long)[i81];
        i82 = 0;

     label15:
        if i82 >= i81 goto label16;

        r0[i82] = -1L;
        i82 = i82 + 1;
        goto label15;

     label16:
        $r22 = <chess.BitBoard: long[] rMasks>;
        $l83 = $r22[i77];
        $i84 = staticinvoke <java.lang.Long: int bitCount(long)>($l83);
        i85 = 1 << $i84;
        i86 = 0;

     label17:
        if i86 >= i85 goto label20;

        $r23 = <chess.BitBoard: long[] rMasks>;
        $l87 = $r23[i77];
        l88 = staticinvoke <chess.BitBoard: long createPattern(int,long)>(i86, $l87);
        $r24 = <chess.BitBoard: long[] rMagics>;
        $l89 = $r24[i77];
        $l90 = l88 * $l89;
        $r25 = <chess.BitBoard: int[] rBits>;
        $i91 = $r25[i77];
        $i92 = 64 - $i91;
        $l93 = $l90 >>> $i92;
        i7 = (int) $l93;
        l8 = staticinvoke <chess.BitBoard: long addRookRays(int,int,long,boolean)>(i78, i6, l88, 0);
        $l94 = r0[i7];
        $b95 = $l94 cmp -1L;
        if $b95 != 0 goto label18;

        r0[i7] = l8;
        goto label19;

     label18:
        $l96 = r0[i7];
        $b97 = $l96 cmp l8;
        if $b97 == 0 goto label19;

        $r26 = new java.lang.RuntimeException;
        specialinvoke $r26.<java.lang.RuntimeException: void <init>()>();
        throw $r26;

     label19:
        i86 = i86 + 1;
        goto label17;

     label20:
        $r27 = <chess.BitBoard: long[][] rTables>;
        $r27[i77] = r0;
        i77 = i77 + 1;
        goto label14;

     label21:
        $r28 = newarray (long[])[64];
        <chess.BitBoard: long[][] bTables> = $r28;
        $r29 = newarray (long)[64];
        <chess.BitBoard: long[] bMasks> = $r29;
        i98 = 0;

     label22:
        if i98 >= 64 goto label29;

        i99 = staticinvoke <chess.Position: int getX(int)>(i98);
        i100 = staticinvoke <chess.Position: int getY(int)>(i98);
        $r30 = <chess.BitBoard: long[] bMasks>;
        $l101 = staticinvoke <chess.BitBoard: long addBishopRays(int,int,long,boolean)>(i99, i100, 0L, 1);
        $r30[i98] = $l101;
        $r31 = <chess.BitBoard: int[] bBits>;
        $i102 = $r31[i98];
        i103 = 1 << $i102;
        r32 = newarray (long)[i103];
        i104 = 0;

     label23:
        if i104 >= i103 goto label24;

        r32[i104] = -1L;
        i104 = i104 + 1;
        goto label23;

     label24:
        $r33 = <chess.BitBoard: long[] bMasks>;
        $l105 = $r33[i98];
        $i106 = staticinvoke <java.lang.Long: int bitCount(long)>($l105);
        i107 = 1 << $i106;
        i108 = 0;

     label25:
        if i108 >= i107 goto label28;

        $r34 = <chess.BitBoard: long[] bMasks>;
        $l109 = $r34[i98];
        l110 = staticinvoke <chess.BitBoard: long createPattern(int,long)>(i108, $l109);
        $r35 = <chess.BitBoard: long[] bMagics>;
        $l111 = $r35[i98];
        $l112 = l110 * $l111;
        $r36 = <chess.BitBoard: int[] bBits>;
        $i113 = $r36[i98];
        $i114 = 64 - $i113;
        $l115 = $l112 >>> $i114;
        i116 = (int) $l115;
        l117 = staticinvoke <chess.BitBoard: long addBishopRays(int,int,long,boolean)>(i99, i100, l110, 0);
        $l118 = r32[i116];
        $b119 = $l118 cmp -1L;
        if $b119 != 0 goto label26;

        r32[i116] = l117;
        goto label27;

     label26:
        $l120 = r32[i116];
        $b121 = $l120 cmp l117;
        if $b121 == 0 goto label27;

        $r37 = new java.lang.RuntimeException;
        specialinvoke $r37.<java.lang.RuntimeException: void <init>()>();
        throw $r37;

     label27:
        i108 = i108 + 1;
        goto label25;

     label28:
        $r38 = <chess.BitBoard: long[][] bTables>;
        $r38[i98] = r32;
        i98 = i98 + 1;
        goto label22;

     label29:
        $r39 = newarray (long[])[64];
        <chess.BitBoard: long[][] squaresBetween> = $r39;
        i122 = 0;

     label30:
        if i122 >= 64 goto label41;

        $r40 = <chess.BitBoard: long[][] squaresBetween>;
        $r41 = newarray (long)[64];
        $r40[i122] = $r41;
        i123 = 0;

     label31:
        if i123 >= 64 goto label32;

        $r42 = <chess.BitBoard: long[][] squaresBetween>;
        $r43 = $r42[i122];
        $r43[i123] = 0L;
        i123 = i123 + 1;
        goto label31;

     label32:
        i124 = -1;

     label33:
        if i124 > 1 goto label40;

        i125 = -1;

     label34:
        if i125 > 1 goto label39;

        if i124 != 0 goto label35;

        if i125 != 0 goto label35;

        goto label38;

     label35:
        l126 = 0L;
        i127 = staticinvoke <chess.Position: int getX(int)>(i122);
        i128 = staticinvoke <chess.Position: int getY(int)>(i122);

     label36:
        i127 = i127 + i124;
        i128 = i128 + i125;
        if i127 < 0 goto label38;

        if i127 > 7 goto label38;

        if i128 < 0 goto label38;

        if i128 <= 7 goto label37;

        goto label38;

     label37:
        i129 = staticinvoke <chess.Position: int getSquare(int,int)>(i127, i128);
        $r44 = <chess.BitBoard: long[][] squaresBetween>;
        $r45 = $r44[i122];
        $r45[i129] = l126;
        $l130 = 1L << i129;
        l126 = l126 | $l130;
        goto label36;

     label38:
        i125 = i125 + 1;
        goto label34;

     label39:
        i124 = i124 + 1;
        goto label33;

     label40:
        i122 = i122 + 1;
        goto label30;

     label41:
        $r46 = newarray (byte)[239];
        $r46[0] = -9;
        $r46[1] = 0;
        $r46[2] = 0;
        $r46[3] = 0;
        $r46[4] = 0;
        $r46[5] = 0;
        $r46[6] = 0;
        $r46[7] = -8;
        $r46[8] = 0;
        $r46[9] = 0;
        $r46[10] = 0;
        $r46[11] = 0;
        $r46[12] = 0;
        $r46[13] = 0;
        $r46[14] = -7;
        $r46[15] = 0;
        $r46[16] = 0;
        $r46[17] = -9;
        $r46[18] = 0;
        $r46[19] = 0;
        $r46[20] = 0;
        $r46[21] = 0;
        $r46[22] = 0;
        $r46[23] = -8;
        $r46[24] = 0;
        $r46[25] = 0;
        $r46[26] = 0;
        $r46[27] = 0;
        $r46[28] = 0;
        $r46[29] = -7;
        $r46[30] = 0;
        $r46[31] = 0;
        $r46[32] = 0;
        $r46[33] = 0;
        $r46[34] = -9;
        $r46[35] = 0;
        $r46[36] = 0;
        $r46[37] = 0;
        $r46[38] = 0;
        $r46[39] = -8;
        $r46[40] = 0;
        $r46[41] = 0;
        $r46[42] = 0;
        $r46[43] = 0;
        $r46[44] = -7;
        $r46[45] = 0;
        $r46[46] = 0;
        $r46[47] = 0;
        $r46[48] = 0;
        $r46[49] = 0;
        $r46[50] = 0;
        $r46[51] = -9;
        $r46[52] = 0;
        $r46[53] = 0;
        $r46[54] = 0;
        $r46[55] = -8;
        $r46[56] = 0;
        $r46[57] = 0;
        $r46[58] = 0;
        $r46[59] = -7;
        $r46[60] = 0;
        $r46[61] = 0;
        $r46[62] = 0;
        $r46[63] = 0;
        $r46[64] = 0;
        $r46[65] = 0;
        $r46[66] = 0;
        $r46[67] = 0;
        $r46[68] = -9;
        $r46[69] = 0;
        $r46[70] = 0;
        $r46[71] = -8;
        $r46[72] = 0;
        $r46[73] = 0;
        $r46[74] = -7;
        $r46[75] = 0;
        $r46[76] = 0;
        $r46[77] = 0;
        $r46[78] = 0;
        $r46[79] = 0;
        $r46[80] = 0;
        $r46[81] = 0;
        $r46[82] = 0;
        $r46[83] = 0;
        $r46[84] = 0;
        $r46[85] = -9;
        $r46[86] = -17;
        $r46[87] = -8;
        $r46[88] = -15;
        $r46[89] = -7;
        $r46[90] = 0;
        $r46[91] = 0;
        $r46[92] = 0;
        $r46[93] = 0;
        $r46[94] = 0;
        $r46[95] = 0;
        $r46[96] = 0;
        $r46[97] = 0;
        $r46[98] = 0;
        $r46[99] = 0;
        $r46[100] = 0;
        $r46[101] = -10;
        $r46[102] = -9;
        $r46[103] = -8;
        $r46[104] = -7;
        $r46[105] = -6;
        $r46[106] = 0;
        $r46[107] = 0;
        $r46[108] = 0;
        $r46[109] = 0;
        $r46[110] = 0;
        $r46[111] = 0;
        $r46[112] = -1;
        $r46[113] = -1;
        $r46[114] = -1;
        $r46[115] = -1;
        $r46[116] = -1;
        $r46[117] = -1;
        $r46[118] = -1;
        $r46[119] = 0;
        $r46[120] = 1;
        $r46[121] = 1;
        $r46[122] = 1;
        $r46[123] = 1;
        $r46[124] = 1;
        $r46[125] = 1;
        $r46[126] = 1;
        $r46[127] = 0;
        $r46[128] = 0;
        $r46[129] = 0;
        $r46[130] = 0;
        $r46[131] = 0;
        $r46[132] = 0;
        $r46[133] = 6;
        $r46[134] = 7;
        $r46[135] = 8;
        $r46[136] = 9;
        $r46[137] = 10;
        $r46[138] = 0;
        $r46[139] = 0;
        $r46[140] = 0;
        $r46[141] = 0;
        $r46[142] = 0;
        $r46[143] = 0;
        $r46[144] = 0;
        $r46[145] = 0;
        $r46[146] = 0;
        $r46[147] = 0;
        $r46[148] = 0;
        $r46[149] = 7;
        $r46[150] = 15;
        $r46[151] = 8;
        $r46[152] = 17;
        $r46[153] = 9;
        $r46[154] = 0;
        $r46[155] = 0;
        $r46[156] = 0;
        $r46[157] = 0;
        $r46[158] = 0;
        $r46[159] = 0;
        $r46[160] = 0;
        $r46[161] = 0;
        $r46[162] = 0;
        $r46[163] = 0;
        $r46[164] = 7;
        $r46[165] = 0;
        $r46[166] = 0;
        $r46[167] = 8;
        $r46[168] = 0;
        $r46[169] = 0;
        $r46[170] = 9;
        $r46[171] = 0;
        $r46[172] = 0;
        $r46[173] = 0;
        $r46[174] = 0;
        $r46[175] = 0;
        $r46[176] = 0;
        $r46[177] = 0;
        $r46[178] = 0;
        $r46[179] = 7;
        $r46[180] = 0;
        $r46[181] = 0;
        $r46[182] = 0;
        $r46[183] = 8;
        $r46[184] = 0;
        $r46[185] = 0;
        $r46[186] = 0;
        $r46[187] = 9;
        $r46[188] = 0;
        $r46[189] = 0;
        $r46[190] = 0;
        $r46[191] = 0;
        $r46[192] = 0;
        $r46[193] = 0;
        $r46[194] = 7;
        $r46[195] = 0;
        $r46[196] = 0;
        $r46[197] = 0;
        $r46[198] = 0;
        $r46[199] = 8;
        $r46[200] = 0;
        $r46[201] = 0;
        $r46[202] = 0;
        $r46[203] = 0;
        $r46[204] = 9;
        $r46[205] = 0;
        $r46[206] = 0;
        $r46[207] = 0;
        $r46[208] = 0;
        $r46[209] = 7;
        $r46[210] = 0;
        $r46[211] = 0;
        $r46[212] = 0;
        $r46[213] = 0;
        $r46[214] = 0;
        $r46[215] = 8;
        $r46[216] = 0;
        $r46[217] = 0;
        $r46[218] = 0;
        $r46[219] = 0;
        $r46[220] = 0;
        $r46[221] = 9;
        $r46[222] = 0;
        $r46[223] = 0;
        $r46[224] = 7;
        $r46[225] = 0;
        $r46[226] = 0;
        $r46[227] = 0;
        $r46[228] = 0;
        $r46[229] = 0;
        $r46[230] = 0;
        $r46[231] = 8;
        $r46[232] = 0;
        $r46[233] = 0;
        $r46[234] = 0;
        $r46[235] = 0;
        $r46[236] = 0;
        $r46[237] = 0;
        $r46[238] = 9;
        <chess.BitBoard: byte[] dirTable> = $r46;
        $r47 = newarray (byte)[239];
        $r47[0] = 7;
        $r47[1] = 7;
        $r47[2] = 7;
        $r47[3] = 7;
        $r47[4] = 7;
        $r47[5] = 7;
        $r47[6] = 7;
        $r47[7] = 7;
        $r47[8] = 7;
        $r47[9] = 7;
        $r47[10] = 7;
        $r47[11] = 7;
        $r47[12] = 7;
        $r47[13] = 7;
        $r47[14] = 7;
        $r47[15] = 0;
        $r47[16] = 7;
        $r47[17] = 6;
        $r47[18] = 6;
        $r47[19] = 6;
        $r47[20] = 6;
        $r47[21] = 6;
        $r47[22] = 6;
        $r47[23] = 6;
        $r47[24] = 6;
        $r47[25] = 6;
        $r47[26] = 6;
        $r47[27] = 6;
        $r47[28] = 6;
        $r47[29] = 6;
        $r47[30] = 7;
        $r47[31] = 0;
        $r47[32] = 7;
        $r47[33] = 6;
        $r47[34] = 5;
        $r47[35] = 5;
        $r47[36] = 5;
        $r47[37] = 5;
        $r47[38] = 5;
        $r47[39] = 5;
        $r47[40] = 5;
        $r47[41] = 5;
        $r47[42] = 5;
        $r47[43] = 5;
        $r47[44] = 5;
        $r47[45] = 6;
        $r47[46] = 7;
        $r47[47] = 0;
        $r47[48] = 7;
        $r47[49] = 6;
        $r47[50] = 5;
        $r47[51] = 4;
        $r47[52] = 4;
        $r47[53] = 4;
        $r47[54] = 4;
        $r47[55] = 4;
        $r47[56] = 4;
        $r47[57] = 4;
        $r47[58] = 4;
        $r47[59] = 4;
        $r47[60] = 5;
        $r47[61] = 6;
        $r47[62] = 7;
        $r47[63] = 0;
        $r47[64] = 7;
        $r47[65] = 6;
        $r47[66] = 5;
        $r47[67] = 4;
        $r47[68] = 3;
        $r47[69] = 3;
        $r47[70] = 3;
        $r47[71] = 3;
        $r47[72] = 3;
        $r47[73] = 3;
        $r47[74] = 3;
        $r47[75] = 4;
        $r47[76] = 5;
        $r47[77] = 6;
        $r47[78] = 7;
        $r47[79] = 0;
        $r47[80] = 7;
        $r47[81] = 6;
        $r47[82] = 5;
        $r47[83] = 4;
        $r47[84] = 3;
        $r47[85] = 2;
        $r47[86] = 2;
        $r47[87] = 2;
        $r47[88] = 2;
        $r47[89] = 2;
        $r47[90] = 3;
        $r47[91] = 4;
        $r47[92] = 5;
        $r47[93] = 6;
        $r47[94] = 7;
        $r47[95] = 0;
        $r47[96] = 7;
        $r47[97] = 6;
        $r47[98] = 5;
        $r47[99] = 4;
        $r47[100] = 3;
        $r47[101] = 2;
        $r47[102] = 1;
        $r47[103] = 1;
        $r47[104] = 1;
        $r47[105] = 2;
        $r47[106] = 3;
        $r47[107] = 4;
        $r47[108] = 5;
        $r47[109] = 6;
        $r47[110] = 7;
        $r47[111] = 0;
        $r47[112] = 7;
        $r47[113] = 6;
        $r47[114] = 5;
        $r47[115] = 4;
        $r47[116] = 3;
        $r47[117] = 2;
        $r47[118] = 1;
        $r47[119] = 0;
        $r47[120] = 1;
        $r47[121] = 2;
        $r47[122] = 3;
        $r47[123] = 4;
        $r47[124] = 5;
        $r47[125] = 6;
        $r47[126] = 7;
        $r47[127] = 0;
        $r47[128] = 7;
        $r47[129] = 6;
        $r47[130] = 5;
        $r47[131] = 4;
        $r47[132] = 3;
        $r47[133] = 2;
        $r47[134] = 1;
        $r47[135] = 1;
        $r47[136] = 1;
        $r47[137] = 2;
        $r47[138] = 3;
        $r47[139] = 4;
        $r47[140] = 5;
        $r47[141] = 6;
        $r47[142] = 7;
        $r47[143] = 0;
        $r47[144] = 7;
        $r47[145] = 6;
        $r47[146] = 5;
        $r47[147] = 4;
        $r47[148] = 3;
        $r47[149] = 2;
        $r47[150] = 2;
        $r47[151] = 2;
        $r47[152] = 2;
        $r47[153] = 2;
        $r47[154] = 3;
        $r47[155] = 4;
        $r47[156] = 5;
        $r47[157] = 6;
        $r47[158] = 7;
        $r47[159] = 0;
        $r47[160] = 7;
        $r47[161] = 6;
        $r47[162] = 5;
        $r47[163] = 4;
        $r47[164] = 3;
        $r47[165] = 3;
        $r47[166] = 3;
        $r47[167] = 3;
        $r47[168] = 3;
        $r47[169] = 3;
        $r47[170] = 3;
        $r47[171] = 4;
        $r47[172] = 5;
        $r47[173] = 6;
        $r47[174] = 7;
        $r47[175] = 0;
        $r47[176] = 7;
        $r47[177] = 6;
        $r47[178] = 5;
        $r47[179] = 4;
        $r47[180] = 4;
        $r47[181] = 4;
        $r47[182] = 4;
        $r47[183] = 4;
        $r47[184] = 4;
        $r47[185] = 4;
        $r47[186] = 4;
        $r47[187] = 4;
        $r47[188] = 5;
        $r47[189] = 6;
        $r47[190] = 7;
        $r47[191] = 0;
        $r47[192] = 7;
        $r47[193] = 6;
        $r47[194] = 5;
        $r47[195] = 5;
        $r47[196] = 5;
        $r47[197] = 5;
        $r47[198] = 5;
        $r47[199] = 5;
        $r47[200] = 5;
        $r47[201] = 5;
        $r47[202] = 5;
        $r47[203] = 5;
        $r47[204] = 5;
        $r47[205] = 6;
        $r47[206] = 7;
        $r47[207] = 0;
        $r47[208] = 7;
        $r47[209] = 6;
        $r47[210] = 6;
        $r47[211] = 6;
        $r47[212] = 6;
        $r47[213] = 6;
        $r47[214] = 6;
        $r47[215] = 6;
        $r47[216] = 6;
        $r47[217] = 6;
        $r47[218] = 6;
        $r47[219] = 6;
        $r47[220] = 6;
        $r47[221] = 6;
        $r47[222] = 7;
        $r47[223] = 0;
        $r47[224] = 7;
        $r47[225] = 7;
        $r47[226] = 7;
        $r47[227] = 7;
        $r47[228] = 7;
        $r47[229] = 7;
        $r47[230] = 7;
        $r47[231] = 7;
        $r47[232] = 7;
        $r47[233] = 7;
        $r47[234] = 7;
        $r47[235] = 7;
        $r47[236] = 7;
        $r47[237] = 7;
        $r47[238] = 7;
        <chess.BitBoard: byte[] distTable> = $r47;
        $r48 = newarray (int)[64];
        $r48[0] = 63;
        $r48[1] = 0;
        $r48[2] = 58;
        $r48[3] = 1;
        $r48[4] = 59;
        $r48[5] = 47;
        $r48[6] = 53;
        $r48[7] = 2;
        $r48[8] = 60;
        $r48[9] = 39;
        $r48[10] = 48;
        $r48[11] = 27;
        $r48[12] = 54;
        $r48[13] = 33;
        $r48[14] = 42;
        $r48[15] = 3;
        $r48[16] = 61;
        $r48[17] = 51;
        $r48[18] = 37;
        $r48[19] = 40;
        $r48[20] = 49;
        $r48[21] = 18;
        $r48[22] = 28;
        $r48[23] = 20;
        $r48[24] = 55;
        $r48[25] = 30;
        $r48[26] = 34;
        $r48[27] = 11;
        $r48[28] = 43;
        $r48[29] = 14;
        $r48[30] = 22;
        $r48[31] = 4;
        $r48[32] = 62;
        $r48[33] = 57;
        $r48[34] = 46;
        $r48[35] = 52;
        $r48[36] = 38;
        $r48[37] = 26;
        $r48[38] = 32;
        $r48[39] = 41;
        $r48[40] = 50;
        $r48[41] = 36;
        $r48[42] = 17;
        $r48[43] = 19;
        $r48[44] = 29;
        $r48[45] = 10;
        $r48[46] = 13;
        $r48[47] = 21;
        $r48[48] = 56;
        $r48[49] = 45;
        $r48[50] = 25;
        $r48[51] = 31;
        $r48[52] = 35;
        $r48[53] = 16;
        $r48[54] = 9;
        $r48[55] = 12;
        $r48[56] = 44;
        $r48[57] = 24;
        $r48[58] = 15;
        $r48[59] = 8;
        $r48[60] = 23;
        $r48[61] = 7;
        $r48[62] = 6;
        $r48[63] = 5;
        <chess.BitBoard: int[] trailingZ> = $r48;
        return;
    }
}
public class chess.Book$BookEntry extends java.lang.Object
{
    chess.Move move;
    int count;

    void <init>(chess.Move)
    {
        chess.Book$BookEntry r0;
        chess.Move r1;

        r0 := @this: chess.Book$BookEntry;
        r1 := @parameter0: chess.Move;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.Book$BookEntry: chess.Move move> = r1;
        r0.<chess.Book$BookEntry: int count> = 1;
        return;
    }
}
public class chess.Book extends java.lang.Object
{
    private static java.util.Map bookMap;
    private static java.util.Random rndGen;
    private static int numBookMoves;
    private boolean verbose;

    public void <init>(boolean)
    {
        chess.Book r0;
        boolean z0;

        r0 := @this: chess.Book;
        z0 := @parameter0: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.Book: boolean verbose> = z0;
        return;
    }

    private final void initBook()
    {
        chess.Book r0;
        int $i0, i2, i3, i4, i5, i6, i7, i8, i9, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22;
        long l1, $l10, l21, $l23;
        java.io.InputStream r1;
        java.util.ArrayList r2, $r10;
        byte[] r3;
        chess.UndoInfo r4, $r15;
        boolean z0, $z2, $z3, $z4;
        chess.Move r5, $r21;
        java.util.HashMap $r6;
        java.security.SecureRandom $r7;
        java.util.Random $r8;
        java.lang.Class $r9;
        byte $b11;
        java.lang.Byte $r11, $r17, $r19;
        chess.Position r12, $r13, r14, $r20;
        java.lang.Object $r16, $r18;
        chess.ChessParseError $r22, r23;
        java.lang.RuntimeException $r24, $r28;
        java.io.IOException $r25, r26;
        java.io.PrintStream $r27, $r29;
        java.lang.Object[] $r30;
        java.lang.Integer $r31;
        double $d0, $d1;
        java.lang.Double $r32;

        r0 := @this: chess.Book;
        $i0 = <chess.Book: int numBookMoves>;
        if $i0 < 0 goto label0;

        return;

     label0:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>()>();
        <chess.Book: java.util.Map bookMap> = $r6;
        $r7 = new java.security.SecureRandom;
        specialinvoke $r7.<java.security.SecureRandom: void <init>()>();
        <chess.Book: java.util.Random rndGen> = $r7;
        $r8 = <chess.Book: java.util.Random rndGen>;
        $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        virtualinvoke $r8.<java.util.Random: void setSeed(long)>($l10);
        <chess.Book: int numBookMoves> = 0;

     label1:
        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        r1 = virtualinvoke $r9.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/book.bin");
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(8192);
        r2 = $r10;
        r3 = newarray (byte)[1024];

     label2:
        i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r3);
        if i2 > 0 goto label3;

        goto label6;

     label3:
        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        $b11 = r3[i3];
        $r11 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b11);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);
        i3 = i3 + 1;
        goto label4;

     label5:
        goto label2;

     label6:
        virtualinvoke r1.<java.io.InputStream: void close()>();
        r12 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        $r13 = new chess.Position;
        specialinvoke $r13.<chess.Position: void <init>(chess.Position)>(r12);
        r14 = $r13;
        $r15 = new chess.UndoInfo;
        specialinvoke $r15.<chess.UndoInfo: void <init>()>();
        r4 = $r15;
        i4 = interfaceinvoke r2.<java.util.List: int size()>();
        i5 = 0;

     label7:
        if i5 >= i4 goto label15;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i5);
        $r17 = (java.lang.Byte) $r16;
        i6 = virtualinvoke $r17.<java.lang.Byte: byte byteValue()>();
        if i6 >= 0 goto label8;

        i6 = i6 + 256;

     label8:
        $i12 = i5 + 1;
        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i12);
        $r19 = (java.lang.Byte) $r18;
        i7 = virtualinvoke $r19.<java.lang.Byte: byte byteValue()>();
        if i7 >= 0 goto label9;

        i7 = i7 + 256;

     label9:
        $i13 = i6 << 8;
        i8 = $i13 + i7;
        if i8 != 0 goto label10;

        $r20 = new chess.Position;
        specialinvoke $r20.<chess.Position: void <init>(chess.Position)>(r12);
        r14 = $r20;
        goto label14;

     label10:
        $i14 = i8 >> 15;
        $i15 = $i14 & 1;
        if $i15 == 0 goto label11;

        $z2 = 1;
        goto label12;

     label11:
        $z2 = 0;

     label12:
        z0 = $z2;
        $i16 = i8 >> 12;
        i9 = $i16 & 7;
        $r21 = new chess.Move;
        $i17 = i8 & 63;
        $i18 = i8 >> 6;
        $i19 = $i18 & 63;
        $z3 = r14.<chess.Position: boolean whiteMove>;
        $i20 = staticinvoke <chess.Book: int promToPiece(int,boolean)>(i9, $z3);
        specialinvoke $r21.<chess.Move: void <init>(int,int,int)>($i17, $i19, $i20);
        r5 = $r21;
        if z0 != 0 goto label13;

        specialinvoke r0.<chess.Book: void addToBook(chess.Position,chess.Move)>(r14, r5);

     label13:
        virtualinvoke r14.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r5, r4);

     label14:
        i5 = i5 + 2;
        goto label7;

     label15:
        goto label18;

     label16:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = new java.lang.RuntimeException;
        specialinvoke $r24.<java.lang.RuntimeException: void <init>()>();
        throw $r24;

     label17:
        $r25 := @caughtexception;
        r26 = $r25;
        $r27 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("Can\'t read opening book resource");
        $r28 = new java.lang.RuntimeException;
        specialinvoke $r28.<java.lang.RuntimeException: void <init>()>();
        throw $r28;

     label18:
        $z4 = r0.<chess.Book: boolean verbose>;
        if $z4 == 0 goto label19;

        l21 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r29 = <java.lang.System: java.io.PrintStream out>;
        $r30 = newarray (java.lang.Object)[2];
        $i22 = <chess.Book: int numBookMoves>;
        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);
        $r30[0] = $r31;
        $l23 = l21 - l1;
        $d0 = (double) $l23;
        $d1 = $d0 / 1000.0;
        $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
        $r30[1] = $r32;
        virtualinvoke $r29.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Book moves:%d (parse time:%.3f)%n", $r30);

     label19:
        return;

        catch chess.ChessParseError from label1 to label15 with label16;
        catch java.io.IOException from label1 to label15 with label17;
    }

    private final void addToBook(chess.Position, chess.Move)
    {
        chess.Book r0;
        chess.Position r1;
        chess.Move r2, $r13;
        java.util.Map $r3, $r9;
        java.util.List r4;
        int i0, $i3, $i4, $i5, $i6, $i7;
        chess.Book$BookEntry r5, $r15, r16;
        long $l1, $l2;
        java.lang.Long $r6, $r10;
        java.lang.Object $r7, $r12;
        java.util.ArrayList $r8;
        boolean $z0;

        r0 := @this: chess.Book;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: chess.Move;
        $r3 = <chess.Book: java.util.Map bookMap>;
        $l1 = virtualinvoke r1.<chess.Position: long zobristHash()>();
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
        $r7 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);
        r4 = (java.util.List) $r7;
        if r4 != null goto label0;

        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r4 = $r8;
        $r9 = <chess.Book: java.util.Map bookMap>;
        $l2 = virtualinvoke r1.<chess.Position: long zobristHash()>();
        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4);

     label0:
        i0 = 0;

     label1:
        $i3 = interfaceinvoke r4.<java.util.List: int size()>();
        if i0 >= $i3 goto label3;

        $r12 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0);
        r5 = (chess.Book$BookEntry) $r12;
        $r13 = r5.<chess.Book$BookEntry: chess.Move move>;
        $z0 = virtualinvoke $r13.<chess.Move: boolean equals(java.lang.Object)>(r2);
        if $z0 == 0 goto label2;

        $i4 = r5.<chess.Book$BookEntry: int count>;
        $i5 = $i4 + 1;
        r5.<chess.Book$BookEntry: int count> = $i5;
        return;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        $r15 = new chess.Book$BookEntry;
        specialinvoke $r15.<chess.Book$BookEntry: void <init>(chess.Move)>(r2);
        r16 = $r15;
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r16);
        $i6 = <chess.Book: int numBookMoves>;
        $i7 = $i6 + 1;
        <chess.Book: int numBookMoves> = $i7;
        return;
    }

    public final chess.Move getBookMove(chess.Position)
    {
        chess.Book r0;
        chess.Position r1;
        java.util.List r2;
        chess.MoveGen$MoveList r3;
        int i0, i1, i2, $i4, $i5, $i6, $i7, i8, i9, i10, $i11, $i12, $i13;
        chess.Book$BookEntry r4, $r14, $r17, $r19;
        boolean z0, $z1;
        java.util.Map $r5;
        long $l3;
        java.lang.Long $r6;
        java.lang.Object $r7, $r9, $r13, $r16, $r18;
        chess.MoveGen $r8;
        chess.Move[] $r10;
        chess.Move $r11, $r12, $r20;
        java.util.Random $r15;
        java.lang.RuntimeException $r21;

        r0 := @this: chess.Book;
        r1 := @parameter0: chess.Position;
        specialinvoke r0.<chess.Book: void initBook()>();
        $r5 = <chess.Book: java.util.Map bookMap>;
        $l3 = virtualinvoke r1.<chess.Position: long zobristHash()>();
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);
        r2 = (java.util.List) $r7;
        if r2 != null goto label0;

        return null;

     label0:
        $r8 = new chess.MoveGen;
        specialinvoke $r8.<chess.MoveGen: void <init>()>();
        r3 = virtualinvoke $r8.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r1);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r1, r3);
        i0 = 0;
        i1 = 0;

     label1:
        $i4 = interfaceinvoke r2.<java.util.List: int size()>();
        if i1 >= $i4 goto label6;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);
        r4 = (chess.Book$BookEntry) $r9;
        z0 = 0;
        i2 = 0;

     label2:
        $i5 = r3.<chess.MoveGen$MoveList: int size>;
        if i2 >= $i5 goto label4;

        $r10 = r3.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r11 = $r10[i2];
        $r12 = r4.<chess.Book$BookEntry: chess.Move move>;
        $z1 = virtualinvoke $r11.<chess.Move: boolean equals(java.lang.Object)>($r12);
        if $z1 == 0 goto label3;

        z0 = 1;
        goto label4;

     label3:
        i2 = i2 + 1;
        goto label2;

     label4:
        if z0 != 0 goto label5;

        return null;

     label5:
        $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);
        $r14 = (chess.Book$BookEntry) $r13;
        $i6 = $r14.<chess.Book$BookEntry: int count>;
        $i7 = specialinvoke r0.<chess.Book: int getWeight(int)>($i6);
        i0 = i0 + $i7;
        i1 = i1 + 1;
        goto label1;

     label6:
        if i0 > 0 goto label7;

        return null;

     label7:
        $r15 = <chess.Book: java.util.Random rndGen>;
        i8 = virtualinvoke $r15.<java.util.Random: int nextInt(int)>(i0);
        i9 = 0;
        i10 = 0;

     label8:
        $i11 = interfaceinvoke r2.<java.util.List: int size()>();
        if i10 >= $i11 goto label10;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i10);
        $r17 = (chess.Book$BookEntry) $r16;
        $i12 = $r17.<chess.Book$BookEntry: int count>;
        $i13 = specialinvoke r0.<chess.Book: int getWeight(int)>($i12);
        i9 = i9 + $i13;
        if i8 >= i9 goto label9;

        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i10);
        $r19 = (chess.Book$BookEntry) $r18;
        $r20 = $r19.<chess.Book$BookEntry: chess.Move move>;
        return $r20;

     label9:
        i10 = i10 + 1;
        goto label8;

     label10:
        $r21 = new java.lang.RuntimeException;
        specialinvoke $r21.<java.lang.RuntimeException: void <init>()>();
        throw $r21;
    }

    private final int getWeight(int)
    {
        chess.Book r0;
        int i0, $i1;
        double d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: chess.Book;
        i0 := @parameter0: int;
        $d1 = (double) i0;
        d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);
        $d2 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);
        $d3 = d0 * $d2;
        $d4 = $d3 * 100.0;
        $d5 = $d4 + 1.0;
        $i1 = (int) $d5;
        return $i1;
    }

    public final java.lang.String getAllBookMoves(chess.Position)
    {
        chess.Book r0;
        chess.Position r1;
        java.lang.StringBuilder r2, $r7;
        java.util.List r3;
        java.util.Iterator r4;
        chess.Book$BookEntry r5;
        java.lang.String r6, $r17;
        java.util.Map $r8;
        long $l0;
        java.lang.Long $r9;
        java.lang.Object $r10, $r11;
        boolean $z0;
        chess.Move $r12;
        int $i1;

        r0 := @this: chess.Book;
        r1 := @parameter0: chess.Position;
        specialinvoke r0.<chess.Book: void initBook()>();
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        r2 = $r7;
        $r8 = <chess.Book: java.util.Map bookMap>;
        $l0 = virtualinvoke r1.<chess.Position: long zobristHash()>();
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);
        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);
        r3 = (java.util.List) $r10;
        if r3 == null goto label1;

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (chess.Book$BookEntry) $r11;
        $r12 = r5.<chess.Book$BookEntry: chess.Move move>;
        r6 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r1, $r12, 0);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
        $i1 = r5.<chess.Book$BookEntry: int count>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");
        goto label0;

     label1:
        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r17;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        java.util.List r1;
        java.io.FileOutputStream r2, $r4;
        int i0, i1;
        byte[] r3;
        java.lang.Object $r5;
        java.lang.Byte $r6;
        byte $b2;

        r0 := @parameter0: java.lang.String[];
        r1 = staticinvoke <chess.Book: java.util.List createBinBook()>();
        $r4 = new java.io.FileOutputStream;
        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>("../src/book.bin");
        r2 = $r4;
        i0 = interfaceinvoke r1.<java.util.List: int size()>();
        r3 = newarray (byte)[i0];
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);
        $r6 = (java.lang.Byte) $r5;
        $b2 = virtualinvoke $r6.<java.lang.Byte: byte byteValue()>();
        r3[i1] = $b2;
        i1 = i1 + 1;
        goto label0;

     label1:
        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[])>(r3);
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();
        return;
    }

    public static java.util.List createBinBook()
    {
        java.util.ArrayList $r0, r1;
        java.io.InputStream r2;
        java.io.InputStreamReader r3, $r9;
        java.io.BufferedReader r4, $r10;
        java.io.LineNumberReader r5, $r11;
        java.lang.String r6, $r12;
        java.lang.Object $r7;
        java.lang.Class $r8;
        boolean $z0, $z1;
        int $i0, $i1;
        java.io.PrintStream $r13, $r23;
        java.lang.Object[] $r14;
        java.lang.Integer $r15;
        java.lang.RuntimeException $r17, $r20, $r24;
        chess.ChessParseError $r18, r19;
        java.io.IOException $r21, r22;

        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(0);
        r1 = $r0;

     label0:
        $r7 = new java.lang.Object;
        specialinvoke $r7.<java.lang.Object: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();
        r2 = virtualinvoke $r8.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/book.txt");
        $r9 = new java.io.InputStreamReader;
        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);
        r3 = $r9;
        $r10 = new java.io.BufferedReader;
        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>(r3);
        r4 = $r10;
        $r11 = new java.io.LineNumberReader;
        specialinvoke $r11.<java.io.LineNumberReader: void <init>(java.io.Reader)>(r4);
        r5 = $r11;

     label1:
        $r12 = virtualinvoke r5.<java.io.LineNumberReader: java.lang.String readLine()>();
        r6 = $r12;
        if $r12 == null goto label3;

        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r6.<java.lang.String: int length()>();
        if $i0 != 0 goto label2;

        goto label1;

     label2:
        $z1 = staticinvoke <chess.Book: boolean addBookLine(java.lang.String,java.util.List)>(r6, r1);
        if $z1 != 0 goto label1;

        $r13 = <java.lang.System: java.io.PrintStream out>;
        $r14 = newarray (java.lang.Object)[1];
        $i1 = virtualinvoke r5.<java.io.LineNumberReader: int getLineNumber()>();
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        $r14[0] = $r15;
        virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Book parse error, line:%d\n", $r14);
        $r17 = new java.lang.RuntimeException;
        specialinvoke $r17.<java.lang.RuntimeException: void <init>()>();
        throw $r17;

     label3:
        virtualinvoke r5.<java.io.LineNumberReader: void close()>();

     label4:
        goto label7;

     label5:
        $r18 := @caughtexception;
        r19 = $r18;
        $r20 = new java.lang.RuntimeException;
        specialinvoke $r20.<java.lang.RuntimeException: void <init>()>();
        throw $r20;

     label6:
        $r21 := @caughtexception;
        r22 = $r21;
        $r23 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("Can\'t read opening book resource");
        $r24 = new java.lang.RuntimeException;
        specialinvoke $r24.<java.lang.RuntimeException: void <init>()>();
        throw $r24;

     label7:
        return r1;

        catch chess.ChessParseError from label0 to label4 with label5;
        catch java.io.IOException from label0 to label4 with label6;
    }

    private static boolean addBookLine(java.lang.String, java.util.List) throws chess.ChessParseError
    {
        java.lang.String r0, r6;
        java.util.List r1;
        chess.Position r2;
        chess.UndoInfo r3, $r8;
        java.lang.String[] r4, r5;
        int i0, i1, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17;
        byte b2, $b16, $b18;
        chess.Move r7;
        boolean $z0;
        java.lang.Byte $r9, $r10, $r11, $r12;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.List;
        r2 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        $r8 = new chess.UndoInfo;
        specialinvoke $r8.<chess.UndoInfo: void <init>()>();
        r3 = $r8;
        r4 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        r5 = r4;
        i0 = lengthof r5;
        i1 = 0;

     label0:
        if i1 >= i0 goto label3;

        r6 = r5[i1];
        b2 = 0;
        $z0 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>("?");
        if $z0 == 0 goto label1;

        $i5 = virtualinvoke r6.<java.lang.String: int length()>();
        $i6 = $i5 - 1;
        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);
        b2 = 1;

     label1:
        r7 = staticinvoke <chess.TextIO: chess.Move stringToMove(chess.Position,java.lang.String)>(r2, r6);
        if r7 != null goto label2;

        return 0;

     label2:
        $i7 = r7.<chess.Move: int promoteTo>;
        i3 = staticinvoke <chess.Book: int pieceToProm(int)>($i7);
        $i8 = r7.<chess.Move: int 'from'>;
        $i9 = r7.<chess.Move: int 'to'>;
        $i10 = $i9 << 6;
        $i11 = $i8 + $i10;
        $i12 = i3 << 12;
        $i13 = $i11 + $i12;
        $i14 = b2 << 15;
        i4 = $i13 + $i14;
        $i15 = i4 >> 8;
        $b16 = (byte) $i15;
        $r9 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b16);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);
        $i17 = i4 & 255;
        $b18 = (byte) $i17;
        $r10 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b18);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);
        virtualinvoke r2.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r7, r3);
        i1 = i1 + 1;
        goto label0;

     label3:
        $r11 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r11);
        $r12 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);
        return 1;
    }

    private static int pieceToProm(int)
    {
        int i0;

        i0 := @parameter0: int;
        tableswitch(i0)
        {
            case 2: goto label0;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label0;
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label3;
            default: goto label4;
        };

     label0:
        return 1;

     label1:
        return 2;

     label2:
        return 3;

     label3:
        return 4;

     label4:
        return 0;
    }

    private static int promToPiece(int, boolean)
    {
        int i0;
        boolean z0;
        byte $b1, $b2, $b3, $b4;

        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        tableswitch(i0)
        {
            case 1: goto label0;
            case 2: goto label3;
            case 3: goto label6;
            case 4: goto label9;
            default: goto label12;
        };

     label0:
        if z0 == 0 goto label1;

        $b1 = 2;
        goto label2;

     label1:
        $b1 = 8;

     label2:
        return $b1;

     label3:
        if z0 == 0 goto label4;

        $b2 = 3;
        goto label5;

     label4:
        $b2 = 9;

     label5:
        return $b2;

     label6:
        if z0 == 0 goto label7;

        $b3 = 4;
        goto label8;

     label7:
        $b3 = 10;

     label8:
        return $b3;

     label9:
        if z0 == 0 goto label10;

        $b4 = 5;
        goto label11;

     label10:
        $b4 = 11;

     label11:
        return $b4;

     label12:
        return 0;
    }

    static void <clinit>()
    {
        <chess.Book: int numBookMoves> = -1;
        return;
    }
}
public class chess.ChessParseError extends java.lang.Exception
{
    private static final long serialVersionUID;

    public void <init>()
    {
        chess.ChessParseError r0;

        r0 := @this: chess.ChessParseError;
        specialinvoke r0.<java.lang.Exception: void <init>()>();
        return;
    }

    public void <init>(java.lang.String)
    {
        chess.ChessParseError r0;
        java.lang.String r1;

        r0 := @this: chess.ChessParseError;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);
        return;
    }
}
public class chess.ComputerPlayer extends java.lang.Object implements chess.Player
{
    public static final java.lang.String engineName;
    int minTimeMillis;
    int maxTimeMillis;
    int maxDepth;
    int maxNodes;
    public boolean verbose;
    chess.TranspositionTable tt;
    chess.Book book;
    boolean bookEnabled;
    boolean randomMode;
    chess.Search currentSearch;
    chess.Search$Listener listener;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        chess.ComputerPlayer r0;
        chess.Book $r1;
        boolean $z0;

        r0 := @this: chess.ComputerPlayer;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.ComputerPlayer: int minTimeMillis> = 10000;
        r0.<chess.ComputerPlayer: int maxTimeMillis> = 10000;
        r0.<chess.ComputerPlayer: int maxDepth> = 100;
        r0.<chess.ComputerPlayer: int maxNodes> = -1;
        r0.<chess.ComputerPlayer: boolean verbose> = 1;
        virtualinvoke r0.<chess.ComputerPlayer: void setTTLogSize(int)>(15);
        $r1 = new chess.Book;
        $z0 = r0.<chess.ComputerPlayer: boolean verbose>;
        specialinvoke $r1.<chess.Book: void <init>(boolean)>($z0);
        r0.<chess.ComputerPlayer: chess.Book book> = $r1;
        r0.<chess.ComputerPlayer: boolean bookEnabled> = 1;
        r0.<chess.ComputerPlayer: boolean randomMode> = 0;
        return;
    }

    public void setTTLogSize(int)
    {
        chess.ComputerPlayer r0;
        int i0;
        chess.TranspositionTable $r1;

        r0 := @this: chess.ComputerPlayer;
        i0 := @parameter0: int;
        $r1 = new chess.TranspositionTable;
        specialinvoke $r1.<chess.TranspositionTable: void <init>(int)>(i0);
        r0.<chess.ComputerPlayer: chess.TranspositionTable tt> = $r1;
        return;
    }

    public void setListener(chess.Search$Listener)
    {
        chess.ComputerPlayer r0;
        chess.Search$Listener r1;

        r0 := @this: chess.ComputerPlayer;
        r1 := @parameter0: chess.Search$Listener;
        r0.<chess.ComputerPlayer: chess.Search$Listener listener> = r1;
        return;
    }

    public java.lang.String getCommand(chess.Position, boolean, java.util.List)
    {
        chess.ComputerPlayer r0;
        chess.Position r1, r5;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.List r2;
        long[] r3;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i12;
        java.util.Iterator r4;
        chess.MoveGen$MoveList r6;
        chess.Move r7, $r27, r30;
        java.lang.String r8, r9, $r22, $r24, $r28;
        java.lang.Object $r10;
        long $l4, $l11;
        chess.TranspositionTable $r11, $r15;
        chess.History $r12, r13;
        chess.Search $r14, r16;
        chess.MoveGen $r17;
        chess.Book $r18, $r21;
        java.io.PrintStream $r19;
        java.lang.Object[] $r20;
        chess.Search$Listener $r25;
        chess.Move[] $r26, $r29;

        r0 := @this: chess.ComputerPlayer;
        r1 := @parameter0: chess.Position;
        z0 := @parameter1: boolean;
        r2 := @parameter2: java.util.List;
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();
        $i2 = 200 + $i1;
        r3 = newarray (long)[$i2];
        i0 = 0;
        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label1;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (chess.Position) $r10;
        $i3 = i0;
        i0 = i0 + 1;
        $l4 = virtualinvoke r5.<chess.Position: long zobristHash()>();
        r3[$i3] = $l4;
        goto label0;

     label1:
        $r11 = r0.<chess.ComputerPlayer: chess.TranspositionTable tt>;
        virtualinvoke $r11.<chess.TranspositionTable: void nextGeneration()>();
        $r12 = new chess.History;
        specialinvoke $r12.<chess.History: void <init>()>();
        r13 = $r12;
        $r14 = new chess.Search;
        $r15 = r0.<chess.ComputerPlayer: chess.TranspositionTable tt>;
        specialinvoke $r14.<chess.Search: void <init>(chess.Position,long[],int,chess.TranspositionTable,chess.History)>(r1, r3, i0, $r15, r13);
        r16 = $r14;
        $r17 = new chess.MoveGen;
        specialinvoke $r17.<chess.MoveGen: void <init>()>();
        r6 = virtualinvoke $r17.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r1);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r1, r6);
        virtualinvoke r16.<chess.Search: void scoreMoveList(chess.MoveGen$MoveList,int)>(r6, 0);
        $i5 = r6.<chess.MoveGen$MoveList: int size>;
        if $i5 != 0 goto label2;

        return "swap";

     label2:
        $z2 = r0.<chess.ComputerPlayer: boolean bookEnabled>;
        if $z2 == 0 goto label3;

        $r18 = r0.<chess.ComputerPlayer: chess.Book book>;
        r7 = virtualinvoke $r18.<chess.Book: chess.Move getBookMove(chess.Position)>(r1);
        if r7 == null goto label3;

        $r19 = <java.lang.System: java.io.PrintStream out>;
        $r20 = newarray (java.lang.Object)[1];
        $r21 = r0.<chess.ComputerPlayer: chess.Book book>;
        $r22 = virtualinvoke $r21.<chess.Book: java.lang.String getAllBookMoves(chess.Position)>(r1);
        $r20[0] = $r22;
        virtualinvoke $r19.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Book moves: %s\n", $r20);
        $r24 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r1, r7, 0);
        return $r24;

     label3:
        r0.<chess.ComputerPlayer: chess.Search currentSearch> = r16;
        $r25 = r0.<chess.ComputerPlayer: chess.Search$Listener listener>;
        virtualinvoke r16.<chess.Search: void setListener(chess.Search$Listener)>($r25);
        $i6 = r6.<chess.MoveGen$MoveList: int size>;
        if $i6 != 1 goto label4;

        $r26 = r6.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r27 = $r26[0];
        $r28 = specialinvoke r0.<chess.ComputerPlayer: java.lang.String canClaimDraw(chess.Position,long[],int,chess.Move)>(r1, r3, i0, $r27);
        if $r28 != "" goto label4;

        $r29 = r6.<chess.MoveGen$MoveList: chess.Move[] m>;
        r30 = $r29[0];
        r30.<chess.Move: int score> = 0;
        goto label6;

     label4:
        $z3 = r0.<chess.ComputerPlayer: boolean randomMode>;
        if $z3 == 0 goto label5;

        r30 = specialinvoke r0.<chess.ComputerPlayer: chess.Move findSemiRandomMove(chess.Search,chess.MoveGen$MoveList)>(r16, r6);
        goto label6;

     label5:
        $i7 = r0.<chess.ComputerPlayer: int minTimeMillis>;
        $i8 = r0.<chess.ComputerPlayer: int maxTimeMillis>;
        virtualinvoke r16.<chess.Search: void timeLimit(int,int)>($i7, $i8);
        $i9 = r0.<chess.ComputerPlayer: int maxDepth>;
        $i10 = r0.<chess.ComputerPlayer: int maxNodes>;
        $l11 = (long) $i10;
        $z4 = r0.<chess.ComputerPlayer: boolean verbose>;
        r30 = virtualinvoke r16.<chess.Search: chess.Move iterativeDeepening(chess.MoveGen$MoveList,int,long,boolean)>(r6, $i9, $l11, $z4);

     label6:
        r0.<chess.ComputerPlayer: chess.Search currentSearch> = null;
        r8 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r1, r30, 0);
        $i12 = r30.<chess.Move: int score>;
        if $i12 > 0 goto label7;

        r9 = specialinvoke r0.<chess.ComputerPlayer: java.lang.String canClaimDraw(chess.Position,long[],int,chess.Move)>(r1, r3, i0, r30);
        if r9 == "" goto label7;

        r8 = r9;

     label7:
        return r8;
    }

    private java.lang.String canClaimDraw(chess.Position, long[], int, chess.Move)
    {
        chess.ComputerPlayer r0;
        chess.Position r1;
        long[] r2;
        int i0, i1;
        chess.Move r3;
        java.lang.String r4, r5;
        chess.UndoInfo r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        long $l2;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: chess.ComputerPlayer;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: long[];
        i0 := @parameter2: int;
        r3 := @parameter3: chess.Move;
        r4 = "";
        $z0 = staticinvoke <chess.Search: boolean canClaimDraw50(chess.Position)>(r1);
        if $z0 == 0 goto label0;

        r4 = "draw 50";
        goto label4;

     label0:
        $z1 = staticinvoke <chess.Search: boolean canClaimDrawRep(chess.Position,long[],int,int)>(r1, r2, i0, i0);
        if $z1 == 0 goto label1;

        r4 = "draw rep";
        goto label4;

     label1:
        r5 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r1, r3, 0);
        i1 = i0 + 1;
        $l2 = virtualinvoke r1.<chess.Position: long zobristHash()>();
        r2[i0] = $l2;
        $r7 = new chess.UndoInfo;
        specialinvoke $r7.<chess.UndoInfo: void <init>()>();
        r6 = $r7;
        virtualinvoke r1.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r3, r6);
        $z2 = staticinvoke <chess.Search: boolean canClaimDraw50(chess.Position)>(r1);
        if $z2 == 0 goto label2;

        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("draw 50 ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label3;

     label2:
        $z3 = staticinvoke <chess.Search: boolean canClaimDrawRep(chess.Position,long[],int,int)>(r1, r2, i1, i1);
        if $z3 == 0 goto label3;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("draw rep ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        virtualinvoke r1.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r3, r6);

     label4:
        return r4;
    }

    public boolean isHumanPlayer()
    {
        chess.ComputerPlayer r0;

        r0 := @this: chess.ComputerPlayer;
        return 0;
    }

    public void useBook(boolean)
    {
        chess.ComputerPlayer r0;
        boolean z0;

        r0 := @this: chess.ComputerPlayer;
        z0 := @parameter0: boolean;
        r0.<chess.ComputerPlayer: boolean bookEnabled> = z0;
        return;
    }

    public void timeLimit(int, int, boolean)
    {
        chess.ComputerPlayer r0;
        int i0, i1;
        boolean z0;
        chess.Search $r1, $r2;

        r0 := @this: chess.ComputerPlayer;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        if z0 == 0 goto label0;

        i0 = 0;
        i1 = 0;

     label0:
        r0.<chess.ComputerPlayer: int minTimeMillis> = i0;
        r0.<chess.ComputerPlayer: int maxTimeMillis> = i1;
        r0.<chess.ComputerPlayer: boolean randomMode> = z0;
        $r1 = r0.<chess.ComputerPlayer: chess.Search currentSearch>;
        if $r1 == null goto label1;

        $r2 = r0.<chess.ComputerPlayer: chess.Search currentSearch>;
        virtualinvoke $r2.<chess.Search: void timeLimit(int,int)>(i0, i1);

     label1:
        return;
    }

    public void clearTT()
    {
        chess.ComputerPlayer r0;
        chess.TranspositionTable $r1;

        r0 := @this: chess.ComputerPlayer;
        $r1 = r0.<chess.ComputerPlayer: chess.TranspositionTable tt>;
        virtualinvoke $r1.<chess.TranspositionTable: void clear()>();
        return;
    }

    public chess.TwoReturnValues searchPosition(chess.Position, int)
    {
        chess.ComputerPlayer r0;
        chess.Position r1;
        int i0;
        long[] r2;
        chess.History r3, $r10;
        chess.Search r4, $r11;
        chess.MoveGen$MoveList r5;
        chess.Move r6;
        java.lang.String r7, $r15, $r22, r24;
        chess.UndoInfo r8, $r18;
        chess.TranspositionTable $r9, $r12, $r21;
        chess.MoveGen $r13;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r20, $r23;
        chess.TwoReturnValues $r25;

        r0 := @this: chess.ComputerPlayer;
        r1 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        r2 = newarray (long)[200];
        $r9 = r0.<chess.ComputerPlayer: chess.TranspositionTable tt>;
        virtualinvoke $r9.<chess.TranspositionTable: void nextGeneration()>();
        $r10 = new chess.History;
        specialinvoke $r10.<chess.History: void <init>()>();
        r3 = $r10;
        $r11 = new chess.Search;
        $r12 = r0.<chess.ComputerPlayer: chess.TranspositionTable tt>;
        specialinvoke $r11.<chess.Search: void <init>(chess.Position,long[],int,chess.TranspositionTable,chess.History)>(r1, r2, 0, $r12, r3);
        r4 = $r11;
        $r13 = new chess.MoveGen;
        specialinvoke $r13.<chess.MoveGen: void <init>()>();
        r5 = virtualinvoke $r13.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r1);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r1, r5);
        virtualinvoke r4.<chess.Search: void scoreMoveList(chess.MoveGen$MoveList,int)>(r5, 0);
        virtualinvoke r4.<chess.Search: void timeLimit(int,int)>(i0, i0);
        r6 = virtualinvoke r4.<chess.Search: chess.Move iterativeDeepening(chess.MoveGen$MoveList,int,long,boolean)>(r5, -1, -1L, 0);
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r1, r6, 0);
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $r18 = new chess.UndoInfo;
        specialinvoke $r18.<chess.UndoInfo: void <init>()>();
        r8 = $r18;
        virtualinvoke r1.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r6, r8);
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r21 = r0.<chess.ComputerPlayer: chess.TranspositionTable tt>;
        $r22 = virtualinvoke $r21.<chess.TranspositionTable: java.lang.String extractPV(chess.Position)>(r1);
        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r1.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r6, r8);
        $r25 = new chess.TwoReturnValues;
        specialinvoke $r25.<chess.TwoReturnValues: void <init>(java.lang.Object,java.lang.Object)>(r6, r24);
        return $r25;
    }

    private chess.Move findSemiRandomMove(chess.Search, chess.MoveGen$MoveList)
    {
        chess.ComputerPlayer r0;
        chess.Search r1;
        chess.MoveGen$MoveList r2;
        chess.Move r3, $r7, $r9, $r11;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i10, $i11, $i12, i13, $i14, $i15;
        java.security.SecureRandom r4, $r5;
        long $l8, $l9;
        boolean $z0, $z1;
        chess.Move[] $r6, $r8, $r10;
        java.lang.AssertionError $r12;

        r0 := @this: chess.ComputerPlayer;
        r1 := @parameter0: chess.Search;
        r2 := @parameter1: chess.MoveGen$MoveList;
        $i5 = r0.<chess.ComputerPlayer: int minTimeMillis>;
        $i6 = r0.<chess.ComputerPlayer: int maxTimeMillis>;
        virtualinvoke r1.<chess.Search: void timeLimit(int,int)>($i5, $i6);
        $i7 = r0.<chess.ComputerPlayer: int maxNodes>;
        $l8 = (long) $i7;
        $z0 = r0.<chess.ComputerPlayer: boolean verbose>;
        r3 = virtualinvoke r1.<chess.Search: chess.Move iterativeDeepening(chess.MoveGen$MoveList,int,long,boolean)>(r2, 1, $l8, $z0);
        i0 = r3.<chess.Move: int score>;
        $r5 = new java.security.SecureRandom;
        specialinvoke $r5.<java.security.SecureRandom: void <init>()>();
        r4 = $r5;
        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        virtualinvoke r4.<java.util.Random: void setSeed(long)>($l9);
        i1 = 0;
        i2 = 0;

     label0:
        $i10 = r2.<chess.MoveGen$MoveList: int size>;
        if i2 >= $i10 goto label1;

        $r6 = r2.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r7 = $r6[i2];
        $i11 = $r7.<chess.Move: int score>;
        $i12 = staticinvoke <chess.ComputerPlayer: int moveProbWeight(int,int)>($i11, i0);
        i1 = i1 + $i12;
        i2 = i2 + 1;
        goto label0;

     label1:
        i13 = virtualinvoke r4.<java.util.Random: int nextInt(int)>(i1);
        i3 = 0;

     label2:
        $i14 = r2.<chess.MoveGen$MoveList: int size>;
        if i3 >= $i14 goto label4;

        $r8 = r2.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r9 = $r8[i3];
        $i15 = $r9.<chess.Move: int score>;
        i4 = staticinvoke <chess.ComputerPlayer: int moveProbWeight(int,int)>($i15, i0);
        if i13 >= i4 goto label3;

        $r10 = r2.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r11 = $r10[i3];
        return $r11;

     label3:
        i13 = i13 - i4;
        i3 = i3 + 1;
        goto label2;

     label4:
        $z1 = <chess.ComputerPlayer: boolean $assertionsDisabled>;
        if $z1 != 0 goto label5;

        $r12 = new java.lang.AssertionError;
        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();
        throw $r12;

     label5:
        return null;
    }

    private static final int moveProbWeight(int, int)
    {
        int i0, i1, $i2, $i3;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i2 = i1 - i0;
        $d2 = (double) $i2;
        d0 = $d2 / 100.0;
        $d3 = neg d0;
        $d4 = $d3 * d0;
        $d5 = $d4 / 2.0;
        $d6 = staticinvoke <java.lang.Math: double exp(double)>($d5);
        d1 = 100.0 * $d6;
        $d7 = staticinvoke <java.lang.Math: double ceil(double)>(d1);
        $i3 = (int) $d7;
        return $i3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String r1, r2, $r3, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10;

        $r0 = class "chess/ComputerPlayer";
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        <chess.ComputerPlayer: boolean $assertionsDisabled> = $z1;
        r1 = "CuckooChess 1.13a9";
        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("sun.arch.data.model");
        $r3 = "32";
        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z2 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 32-bit");
        r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label3;

     label2:
        $r7 = "64";
        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z3 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 64-bit");
        r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        <chess.ComputerPlayer: java.lang.String engineName> = r1;
        return;
    }
}
class chess.Evaluate$1 extends java.lang.Object
{
}
final class chess.Evaluate$KingSafetyHashData extends java.lang.Object
{
    long key;
    int score;

    private void <init>()
    {
        chess.Evaluate$KingSafetyHashData r0;

        r0 := @this: chess.Evaluate$KingSafetyHashData;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    void <init>(chess.Evaluate$1)
    {
        chess.Evaluate$KingSafetyHashData r0;
        chess.Evaluate$1 r1;

        r0 := @this: chess.Evaluate$KingSafetyHashData;
        r1 := @parameter0: chess.Evaluate$1;
        specialinvoke r0.<chess.Evaluate$KingSafetyHashData: void <init>()>();
        return;
    }
}
final class chess.Evaluate$PawnHashData extends java.lang.Object
{
    long key;
    int score;
    short passedBonusW;
    short passedBonusB;
    long passedPawnsW;
    long passedPawnsB;

    private void <init>()
    {
        chess.Evaluate$PawnHashData r0;

        r0 := @this: chess.Evaluate$PawnHashData;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    void <init>(chess.Evaluate$1)
    {
        chess.Evaluate$PawnHashData r0;
        chess.Evaluate$1 r1;

        r0 := @this: chess.Evaluate$PawnHashData;
        r1 := @parameter0: chess.Evaluate$1;
        specialinvoke r0.<chess.Evaluate$PawnHashData: void <init>()>();
        return;
    }
}
public class chess.Evaluate extends java.lang.Object
{
    static final int pV;
    static final int nV;
    static final int bV;
    static final int rV;
    static final int qV;
    static final int kV;
    static final int[] pieceValue;
    static final int[] kt1b;
    static final int[] kt2b;
    static final int[] pt1b;
    static final int[] pt2b;
    static final int[] nt1b;
    static final int[] nt2b;
    static final int[] bt1b;
    static final int[] bt2b;
    static final int[] qt1b;
    static final int[] rt1b;
    static final int[] kt1w;
    static final int[] qt1w;
    static final int[] rt1w;
    static final int[] bt1w;
    static final int[] nt1w;
    static final int[] pt1w;
    static final int[] kt2w;
    static final int[] bt2w;
    static final int[] nt2w;
    static final int[] pt2w;
    private static final int[] empty;
    static final int[][] psTab1;
    static final int[][] psTab2;
    static final int[][] distToH1A8;
    static final int[] rookMobScore;
    static final int[] bishMobScore;
    static final int[] queenMobScore;
    static final chess.Evaluate$PawnHashData[] pawnHash;
    static byte[] kpkTable;
    static byte[] krkpTable;
    private long wKingZone;
    private long bKingZone;
    private int wKingAttacks;
    private int bKingAttacks;
    private long wAttacksBB;
    private long bAttacksBB;
    private long wPawnAttacks;
    private long bPawnAttacks;
    private static final int[] castleFactor;
    private static final chess.Evaluate$KingSafetyHashData[] kingSafetyHash;

    public void <init>()
    {
        chess.Evaluate r0;
        byte[] $r1, $r2, $r3, $r4;

        r0 := @this: chess.Evaluate;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = <chess.Evaluate: byte[] kpkTable>;
        if $r1 != null goto label0;

        $r2 = specialinvoke r0.<chess.Evaluate: byte[] readTable(java.lang.String,int)>("/kpk.bitbase", 24576);
        <chess.Evaluate: byte[] kpkTable> = $r2;

     label0:
        $r3 = <chess.Evaluate: byte[] krkpTable>;
        if $r3 != null goto label1;

        $r4 = specialinvoke r0.<chess.Evaluate: byte[] readTable(java.lang.String,int)>("/krkp.winmasks", 24576);
        <chess.Evaluate: byte[] krkpTable> = $r4;

     label1:
        return;
    }

    private byte[] readTable(java.lang.String, int)
    {
        chess.Evaluate r0;
        java.lang.String r1;
        int i0, i1, i2, $i3, $i4, $i5;
        byte[] r2;
        java.io.InputStream r3;
        java.lang.Class $r4;
        java.lang.RuntimeException $r5, $r9;
        java.io.IOException $r7, r8;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        r2 = newarray (byte)[24576];
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        r3 = virtualinvoke $r4.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label0:
        i1 = 0;

     label1:
        $i3 = lengthof r2;
        if i1 >= $i3 goto label3;

        $i4 = lengthof r2;
        $i5 = $i4 - i1;
        i2 = virtualinvoke r3.<java.io.InputStream: int read(byte[],int,int)>(r2, i1, $i5);
        if i2 >= 0 goto label2;

        $r5 = new java.lang.RuntimeException;
        specialinvoke $r5.<java.lang.RuntimeException: void <init>()>();
        throw $r5;

     label2:
        i1 = i1 + i2;
        goto label1;

     label3:
        virtualinvoke r3.<java.io.InputStream: void close()>();

     label4:
        return r2;

     label5:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = new java.lang.RuntimeException;
        specialinvoke $r9.<java.lang.RuntimeException: void <init>()>();
        throw $r9;

        catch java.io.IOException from label0 to label4 with label5;
    }

    public final int evalPos(chess.Position)
    {
        chess.Evaluate r0;
        chess.Position r1;
        int i0, $i4, $i5, $i6, $i12, $i29, i30, $i31, i32, $i33, i34, $i35, i36, $i37, i38, $i39, i40, $i41, i42, $i43, i44, i45;
        byte $b1;
        long $l2, l3, $l7, $l8, $l9, $l10, $l11, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, l23, $l24, $l25, $l26, $l27, $l28;
        long[] $r2, $r4, $r6, $r7;
        boolean $z0;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        $i4 = r1.<chess.Position: int wMtrl>;
        $i5 = r1.<chess.Position: int bMtrl>;
        i0 = $i4 - $i5;
        $b1 = 0;
        r0.<chess.Evaluate: int bKingAttacks> = $b1;
        r0.<chess.Evaluate: int wKingAttacks> = $b1;
        $r2 = <chess.BitBoard: long[] kingAttacks>;
        $i6 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $l7 = $r2[$i6];
        r0.<chess.Evaluate: long wKingZone> = $l7;
        $l8 = r0.<chess.Evaluate: long wKingZone>;
        $l9 = r0.<chess.Evaluate: long wKingZone>;
        $l10 = $l9 << 8;
        $l11 = $l8 | $l10;
        r0.<chess.Evaluate: long wKingZone> = $l11;
        $r4 = <chess.BitBoard: long[] kingAttacks>;
        $i12 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $l13 = $r4[$i12];
        r0.<chess.Evaluate: long bKingZone> = $l13;
        $l14 = r0.<chess.Evaluate: long bKingZone>;
        $l15 = r0.<chess.Evaluate: long bKingZone>;
        $l16 = $l15 >>> 8;
        $l17 = $l14 | $l16;
        r0.<chess.Evaluate: long bKingZone> = $l17;
        $l2 = 0L;
        r0.<chess.Evaluate: long bAttacksBB> = $l2;
        r0.<chess.Evaluate: long wAttacksBB> = $l2;
        $r6 = r1.<chess.Position: long[] pieceTypeBB>;
        l3 = $r6[6];
        $l18 = l3 & -72340172838076674L;
        $l19 = $l18 << 7;
        $l20 = l3 & 9187201950435737471L;
        $l21 = $l20 << 9;
        $l22 = $l19 | $l21;
        r0.<chess.Evaluate: long wPawnAttacks> = $l22;
        $r7 = r1.<chess.Position: long[] pieceTypeBB>;
        l23 = $r7[12];
        $l24 = l23 & -72340172838076674L;
        $l25 = $l24 >>> 9;
        $l26 = l23 & 9187201950435737471L;
        $l27 = $l26 >>> 7;
        $l28 = $l25 | $l27;
        r0.<chess.Evaluate: long bPawnAttacks> = $l28;
        $i29 = specialinvoke r0.<chess.Evaluate: int pieceSquareEval(chess.Position)>(r1);
        i30 = i0 + $i29;
        $i31 = specialinvoke r0.<chess.Evaluate: int pawnBonus(chess.Position)>(r1);
        i32 = i30 + $i31;
        $i33 = specialinvoke r0.<chess.Evaluate: int tradeBonus(chess.Position)>(r1);
        i34 = i32 + $i33;
        $i35 = specialinvoke r0.<chess.Evaluate: int castleBonus(chess.Position)>(r1);
        i36 = i34 + $i35;
        $i37 = specialinvoke r0.<chess.Evaluate: int rookBonus(chess.Position)>(r1);
        i38 = i36 + $i37;
        $i39 = specialinvoke r0.<chess.Evaluate: int bishopEval(chess.Position,int)>(r1, i38);
        i40 = i38 + $i39;
        $i41 = specialinvoke r0.<chess.Evaluate: int threatBonus(chess.Position)>(r1);
        i42 = i40 + $i41;
        $i43 = specialinvoke r0.<chess.Evaluate: int kingSafety(chess.Position)>(r1);
        i44 = i42 + $i43;
        i45 = specialinvoke r0.<chess.Evaluate: int endGameEval(chess.Position,int)>(r1, i44);
        $z0 = r1.<chess.Position: boolean whiteMove>;
        if $z0 != 0 goto label0;

        i45 = neg i45;

     label0:
        return i45;
    }

    static final int material(chess.Position)
    {
        chess.Position r0;
        int $i0, $i1, $i2;

        r0 := @parameter0: chess.Position;
        $i0 = r0.<chess.Position: int wMtrl>;
        $i1 = r0.<chess.Position: int bMtrl>;
        $i2 = $i0 - $i1;
        return $i2;
    }

    private final int pieceSquareEval(chess.Position)
    {
        chess.Evaluate r0;
        chess.Position r1;
        byte b0, $b72, $b96;
        int i1, i2, i3, i4, $i5, i6, i7, i10, i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i22, $i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, i35, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, i51, $i52, $i53, $i54, i55, $i58, $i61, i63, i65, i70, i73, $i84, $i85, $i86, $i89, $i90, $i91, i94, i97, $i108, $i109, $i110, $i113, $i114, $i115, $i118, i119, $i120, $i121, i122, $i124, i125, $i126, $i127, i128;
        short s8, s9, s11, s20, s21, s33, s34, s37, s56, s57, s59, s60, $s62, $s64, $s69, $s93, s117, s123;
        short[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r21, $r26, $r27;
        long $l66, $l67, l68, l71, $l74, $l75, l76, $l77, $l78, $l79, $l80, $l81, $l82, $l83, $l87, $l88, $l92, l95, $l98, $l99, l100, $l101, $l102, $l103, $l104, $l105, $l106, $l107, $l111, $l112, $l116;
        long[] $r17, $r22;
        int[] $r19, $r24;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        b0 = 0;
        i1 = r1.<chess.Position: int wMtrl>;
        i2 = r1.<chess.Position: int bMtrl>;
        i3 = r1.<chess.Position: int wMtrlPawns>;
        i4 = r1.<chess.Position: int bMtrlPawns>;
        $i13 = <chess.Evaluate: int qV>;
        $i5 = <chess.Evaluate: int rV>;
        $i14 = 2 * $i5;
        $i15 = $i13 + $i14;
        $i16 = <chess.Evaluate: int bV>;
        $i17 = 2 * $i16;
        i6 = $i15 + $i17;
        i7 = <chess.Evaluate: int rV>;
        $r2 = r1.<chess.Position: short[] psScore1>;
        s8 = $r2[1];
        $r3 = r1.<chess.Position: short[] psScore2>;
        s9 = $r3[1];
        i10 = i2 - i4;
        $i18 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i10, i7, s9, i6, s8);
        i19 = b0 + $i18;
        $r4 = r1.<chess.Position: short[] psScore1>;
        s20 = $r4[7];
        $r5 = r1.<chess.Position: short[] psScore2>;
        s21 = $r5[7];
        i22 = i1 - i3;
        $i23 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i22, i7, s21, i6, s20);
        i24 = i19 - $i23;
        $i25 = <chess.Evaluate: int qV>;
        $i26 = <chess.Evaluate: int rV>;
        $i27 = 2 * $i26;
        $i28 = $i25 + $i27;
        $i29 = <chess.Evaluate: int bV>;
        $i30 = 2 * $i29;
        i31 = $i28 + $i30;
        i32 = <chess.Evaluate: int rV>;
        $r6 = r1.<chess.Position: short[] psScore1>;
        s33 = $r6[6];
        $r7 = r1.<chess.Position: short[] psScore2>;
        s34 = $r7[6];
        if s33 != 0 goto label0;

        if s34 == 0 goto label1;

     label0:
        i35 = i2 - i4;
        $i36 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i35, i32, s34, i31, s33);
        i24 = i24 + $i36;

     label1:
        $r8 = r1.<chess.Position: short[] psScore1>;
        s37 = $r8[12];
        $r9 = r1.<chess.Position: short[] psScore2>;
        s11 = $r9[12];
        if s37 != 0 goto label2;

        if s11 == 0 goto label3;

     label2:
        i12 = i1 - i3;
        $i38 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i12, i32, s11, i31, s37);
        i24 = i24 - $i38;

     label3:
        $i39 = <chess.Evaluate: int qV>;
        $i40 = <chess.Evaluate: int rV>;
        $i41 = 2 * $i40;
        $i42 = $i39 + $i41;
        $i43 = <chess.Evaluate: int bV>;
        $i44 = 1 * $i43;
        $i45 = $i42 + $i44;
        $i46 = <chess.Evaluate: int nV>;
        $i47 = 1 * $i46;
        $i48 = $i45 + $i47;
        $i49 = <chess.Evaluate: int pV>;
        $i50 = 6 * $i49;
        i51 = $i48 + $i50;
        $i52 = <chess.Evaluate: int nV>;
        $i53 = <chess.Evaluate: int pV>;
        $i54 = 8 * $i53;
        i55 = $i52 + $i54;
        $r10 = r1.<chess.Position: short[] psScore1>;
        s56 = $r10[5];
        $r11 = r1.<chess.Position: short[] psScore2>;
        s57 = $r11[5];
        if s56 != 0 goto label4;

        if s57 == 0 goto label5;

     label4:
        $i58 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i2, i55, s57, i51, s56);
        i24 = i24 + $i58;

     label5:
        $r12 = r1.<chess.Position: short[] psScore1>;
        s59 = $r12[11];
        $r13 = r1.<chess.Position: short[] psScore2>;
        s60 = $r13[11];
        if s59 != 0 goto label6;

        if s60 == 0 goto label7;

     label6:
        $i61 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i1, i55, s60, i51, s59);
        i24 = i24 - $i61;

     label7:
        $r14 = r1.<chess.Position: short[] psScore1>;
        $s62 = $r14[4];
        i63 = i24 + $s62;
        $r15 = r1.<chess.Position: short[] psScore1>;
        $s64 = $r15[10];
        i65 = i63 - $s64;
        $l66 = r1.<chess.Position: long whiteBB>;
        $l67 = r1.<chess.Position: long blackBB>;
        l68 = $l66 | $l67;
        $r16 = r1.<chess.Position: short[] psScore1>;
        $s69 = $r16[2];
        i70 = i65 + $s69;
        $r17 = r1.<chess.Position: long[] pieceTypeBB>;
        l71 = $r17[2];

     label8:
        $b72 = l71 cmp 0L;
        if $b72 == 0 goto label9;

        i73 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l71);
        $l74 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i73, l68);
        $l75 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i73, l68);
        l76 = $l74 | $l75;
        $l77 = r0.<chess.Evaluate: long wAttacksBB>;
        $l78 = $l77 | l76;
        r0.<chess.Evaluate: long wAttacksBB> = $l78;
        $r19 = <chess.Evaluate: int[] queenMobScore>;
        $l79 = r1.<chess.Position: long whiteBB>;
        $l80 = r0.<chess.Evaluate: long bPawnAttacks>;
        $l81 = $l79 | $l80;
        $l82 = $l81 ^ -1L;
        $l83 = l76 & $l82;
        $i84 = staticinvoke <java.lang.Long: int bitCount(long)>($l83);
        $i85 = $r19[$i84];
        i70 = i70 + $i85;
        $i86 = r0.<chess.Evaluate: int bKingAttacks>;
        $l87 = r0.<chess.Evaluate: long bKingZone>;
        $l88 = l76 & $l87;
        $i89 = staticinvoke <java.lang.Long: int bitCount(long)>($l88);
        $i90 = $i89 * 2;
        $i91 = $i86 + $i90;
        r0.<chess.Evaluate: int bKingAttacks> = $i91;
        $l92 = l71 - 1L;
        l71 = l71 & $l92;
        goto label8;

     label9:
        $r21 = r1.<chess.Position: short[] psScore1>;
        $s93 = $r21[8];
        i94 = i70 - $s93;
        $r22 = r1.<chess.Position: long[] pieceTypeBB>;
        l95 = $r22[8];

     label10:
        $b96 = l95 cmp 0L;
        if $b96 == 0 goto label11;

        i97 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l95);
        $l98 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i97, l68);
        $l99 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i97, l68);
        l100 = $l98 | $l99;
        $l101 = r0.<chess.Evaluate: long bAttacksBB>;
        $l102 = $l101 | l100;
        r0.<chess.Evaluate: long bAttacksBB> = $l102;
        $r24 = <chess.Evaluate: int[] queenMobScore>;
        $l103 = r1.<chess.Position: long blackBB>;
        $l104 = r0.<chess.Evaluate: long wPawnAttacks>;
        $l105 = $l103 | $l104;
        $l106 = $l105 ^ -1L;
        $l107 = l100 & $l106;
        $i108 = staticinvoke <java.lang.Long: int bitCount(long)>($l107);
        $i109 = $r24[$i108];
        i94 = i94 - $i109;
        $i110 = r0.<chess.Evaluate: int wKingAttacks>;
        $l111 = r0.<chess.Evaluate: long wKingZone>;
        $l112 = l100 & $l111;
        $i113 = staticinvoke <java.lang.Long: int bitCount(long)>($l112);
        $i114 = $i113 * 2;
        $i115 = $i110 + $i114;
        r0.<chess.Evaluate: int wKingAttacks> = $i115;
        $l116 = l95 - 1L;
        l95 = l95 & $l116;
        goto label10;

     label11:
        $r26 = r1.<chess.Position: short[] psScore1>;
        s117 = $r26[3];
        if s117 == 0 goto label12;

        $i118 = <chess.Evaluate: int pV>;
        i119 = i4 / $i118;
        $i120 = staticinvoke <java.lang.Math: int min(int,int)>(i119, 6);
        $i121 = s117 * $i120;
        i122 = $i121 / 6;
        i94 = i94 + i122;

     label12:
        $r27 = r1.<chess.Position: short[] psScore1>;
        s123 = $r27[9];
        if s123 == 0 goto label13;

        $i124 = <chess.Evaluate: int pV>;
        i125 = i3 / $i124;
        $i126 = staticinvoke <java.lang.Math: int min(int,int)>(i125, 6);
        $i127 = s123 * $i126;
        i128 = $i127 / 6;
        i94 = i94 - i128;

     label13:
        return i94;
    }

    private final int tradeBonus(chess.Position)
    {
        chess.Evaluate r0;
        chess.Position r1;
        int i0, i1, i2, i3, i4, $i6, $i7, $i9, $i10, $i11, $i12, $i13, i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29;
        byte b5;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        i0 = r1.<chess.Position: int wMtrl>;
        i1 = r1.<chess.Position: int bMtrl>;
        i2 = r1.<chess.Position: int wMtrlPawns>;
        i3 = r1.<chess.Position: int bMtrlPawns>;
        i4 = i0 - i1;
        b5 = 0;
        if i4 <= 0 goto label0;

        $i9 = i2;
        goto label1;

     label0:
        $i9 = i3;

     label1:
        $i10 = -30 * i4;
        $i11 = $i10 / 100;
        $i6 = <chess.Evaluate: int pV>;
        $i12 = 6 * $i6;
        $i13 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>($i9, 0, $i11, $i12, 0);
        i14 = b5 + $i13;
        if i4 <= 0 goto label2;

        $i16 = i1;
        goto label3;

     label2:
        $i16 = i0;

     label3:
        $i17 = 30 * i4;
        $i18 = $i17 / 100;
        $i19 = <chess.Evaluate: int qV>;
        $i7 = <chess.Evaluate: int rV>;
        $i20 = 2 * $i7;
        $i21 = $i19 + $i20;
        $i22 = <chess.Evaluate: int bV>;
        $i23 = 2 * $i22;
        $i24 = $i21 + $i23;
        $i25 = <chess.Evaluate: int nV>;
        $i26 = 2 * $i25;
        $i27 = $i24 + $i26;
        $i28 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>($i16, 0, $i18, $i27, 0);
        i29 = i14 + $i28;
        return i29;
    }

    private final int castleBonus(chess.Position)
    {
        chess.Evaluate r0;
        chess.Position r1;
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i30, $i31, i34, $i35, $i36, $i37;
        long l7, $l27, $l28, $l29, $l32, $l33;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        $i11 = virtualinvoke r1.<chess.Position: int getCastleMask()>();
        if $i11 != 0 goto label0;

        return 0;

     label0:
        $r2 = <chess.Evaluate: int[] kt1b>;
        $i12 = $r2[62];
        $r3 = <chess.Evaluate: int[] kt1b>;
        $i13 = $r3[60];
        i0 = $i12 - $i13;
        $r4 = <chess.Evaluate: int[] kt2b>;
        $i14 = $r4[62];
        $r5 = <chess.Evaluate: int[] kt2b>;
        $i15 = $r5[60];
        i1 = $i14 - $i15;
        $i16 = <chess.Evaluate: int qV>;
        $i17 = <chess.Evaluate: int rV>;
        $i18 = 2 * $i17;
        $i19 = $i16 + $i18;
        $i20 = <chess.Evaluate: int bV>;
        $i21 = 2 * $i20;
        i2 = $i19 + $i21;
        i3 = <chess.Evaluate: int rV>;
        $i22 = r1.<chess.Position: int bMtrl>;
        $i23 = r1.<chess.Position: int bMtrlPawns>;
        i4 = $i22 - $i23;
        i5 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i4, i3, i1, i2, i0);
        $r6 = <chess.Evaluate: int[] rt1b>;
        $i24 = $r6[61];
        $i25 = i5 + $i24;
        $r7 = <chess.Evaluate: int[] rt1b>;
        $i26 = $r7[63];
        i6 = $i25 - $i26;
        if i6 > 0 goto label1;

        return 0;

     label1:
        $l27 = r1.<chess.Position: long whiteBB>;
        $l28 = r1.<chess.Position: long blackBB>;
        l7 = $l27 | $l28;
        $l29 = l7 & 110L;
        i8 = (int) $l29;
        $z0 = virtualinvoke r1.<chess.Position: boolean a1Castle()>();
        if $z0 == 0 goto label2;

        i8 = i8 | 1;

     label2:
        $z1 = virtualinvoke r1.<chess.Position: boolean h1Castle()>();
        if $z1 == 0 goto label3;

        i8 = i8 | 128;

     label3:
        $r8 = <chess.Evaluate: int[] castleFactor>;
        $i30 = $r8[i8];
        $i31 = i6 * $i30;
        i9 = $i31 >> 10;
        $l32 = l7 >>> 56;
        $l33 = $l32 & 110L;
        i34 = (int) $l33;
        $z2 = virtualinvoke r1.<chess.Position: boolean a8Castle()>();
        if $z2 == 0 goto label4;

        i34 = i34 | 1;

     label4:
        $z3 = virtualinvoke r1.<chess.Position: boolean h8Castle()>();
        if $z3 == 0 goto label5;

        i34 = i34 | 128;

     label5:
        $r9 = <chess.Evaluate: int[] castleFactor>;
        $i35 = $r9[i34];
        $i36 = i6 * $i35;
        i10 = $i36 >> 10;
        $i37 = i9 - i10;
        return $i37;
    }

    private final int pawnBonus(chess.Position)
    {
        chess.Evaluate r0;
        chess.Position r1;
        long l0, l5, $l20, $l50, $l51, $l53, $l54, $l56, l59, $l75, $l76, $l78, $l79, $l81;
        chess.Evaluate$PawnHashData[] $r2, $r4;
        chess.Evaluate$PawnHashData r3;
        int i1, i2, i3, i4, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, $i16, $i17, $i18, $i19, $i22, $i23, $i24, $i25, $i26, $i28, $i30, i31, $i32, $i33, $i34, $i36, $i38, i39, $i41, $i42, $i44, $i45, $i46, $i47, $i48, $i49, $i52, i57, i58, $i61, $i62, i63, i64, i66, i67, i68, i69, $i70, $i71, $i72, $i73, $i74, $i77, i82, i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90;
        byte $b21, $b40, $b43, $b55, $b60, $b65, $b80;
        short $s27, $s29, $s35, $s37;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        l0 = virtualinvoke r1.<chess.Position: long pawnZobristHash()>();
        $r4 = <chess.Evaluate: chess.Evaluate$PawnHashData[] pawnHash>;
        $i16 = (int) l0;
        $r2 = <chess.Evaluate: chess.Evaluate$PawnHashData[] pawnHash>;
        $i17 = lengthof $r2;
        $i18 = $i17 - 1;
        $i19 = $i16 & $i18;
        r3 = $r4[$i19];
        $l20 = r3.<chess.Evaluate$PawnHashData: long key>;
        $b21 = $l20 cmp l0;
        if $b21 == 0 goto label0;

        specialinvoke r0.<chess.Evaluate: void computePawnHashData(chess.Position,chess.Evaluate$PawnHashData)>(r1, r3);

     label0:
        i1 = r3.<chess.Evaluate$PawnHashData: int score>;
        $i22 = <chess.Evaluate: int qV>;
        $i23 = <chess.Evaluate: int rV>;
        i2 = $i22 + $i23;
        $i24 = r1.<chess.Position: int bMtrl>;
        $i25 = r1.<chess.Position: int bMtrlPawns>;
        $i26 = $i24 - $i25;
        $s27 = r3.<chess.Evaluate$PawnHashData: short passedBonusW>;
        $i28 = 2 * $s27;
        $s29 = r3.<chess.Evaluate$PawnHashData: short passedBonusW>;
        $i30 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>($i26, 0, $i28, i2, $s29);
        i31 = i1 + $i30;
        $i32 = r1.<chess.Position: int wMtrl>;
        $i33 = r1.<chess.Position: int wMtrlPawns>;
        $i34 = $i32 - $i33;
        $s35 = r3.<chess.Evaluate$PawnHashData: short passedBonusB>;
        $i36 = 2 * $s35;
        $s37 = r3.<chess.Evaluate$PawnHashData: short passedBonusB>;
        $i38 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>($i34, 0, $i36, i2, $s37);
        i39 = i31 - $i38;
        i3 = 8;
        i4 = -1;
        l5 = r3.<chess.Evaluate$PawnHashData: long passedPawnsW>;
        $b40 = l5 cmp 0L;
        if $b40 == 0 goto label6;

        $i41 = r1.<chess.Position: int bMtrl>;
        $i42 = r1.<chess.Position: int bMtrlPawns>;
        i6 = $i41 - $i42;
        if i6 >= i2 goto label6;

        i7 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);

     label1:
        $b43 = l5 cmp 0L;
        if $b43 == 0 goto label6;

        i8 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l5);
        i9 = staticinvoke <chess.Position: int getX(int)>(i8);
        i10 = staticinvoke <chess.Position: int getY(int)>(i8);
        $i44 = 7 - i10;
        i11 = staticinvoke <java.lang.Math: int min(int,int)>(5, $i44);
        $i45 = staticinvoke <chess.Position: int getSquare(int,int)>(i9, 7);
        i12 = staticinvoke <chess.BitBoard: int getDistance(int,int)>(i7, $i45);
        i13 = i12 * 4;
        if i12 <= i11 goto label2;

        $i46 = i12 - i11;
        $i47 = i12 - i11;
        $i48 = $i46 * $i47;
        i13 = i13 + $i48;

     label2:
        $i49 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i6, 0, i13, i2, 0);
        i39 = i39 + $i49;
        $z0 = r1.<chess.Position: boolean whiteMove>;
        if $z0 != 0 goto label3;

        i12 = i12 + -1;

     label3:
        if i11 >= i12 goto label5;

        if i6 != 0 goto label5;

        $l50 = 1L << i8;
        $l51 = staticinvoke <chess.BitBoard: long northFill(long)>($l50);
        $i52 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $l53 = 1L << $i52;
        $l54 = $l51 & $l53;
        $b55 = $l54 cmp 0L;
        if $b55 == 0 goto label4;

        i11 = i11 + 1;

     label4:
        if i11 >= i3 goto label5;

        i3 = i11;
        i4 = staticinvoke <chess.Position: int getSquare(int,int)>(i9, 7);

     label5:
        $l56 = l5 - 1L;
        l5 = l5 & $l56;
        goto label1;

     label6:
        i57 = 8;
        i58 = -1;
        l59 = r3.<chess.Evaluate$PawnHashData: long passedPawnsB>;
        $b60 = l59 cmp 0L;
        if $b60 == 0 goto label12;

        $i61 = r1.<chess.Position: int wMtrl>;
        $i62 = r1.<chess.Position: int wMtrlPawns>;
        i63 = $i61 - $i62;
        if i63 >= i2 goto label12;

        i64 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);

     label7:
        $b65 = l59 cmp 0L;
        if $b65 == 0 goto label12;

        i66 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l59);
        i67 = staticinvoke <chess.Position: int getX(int)>(i66);
        i68 = staticinvoke <chess.Position: int getY(int)>(i66);
        i69 = staticinvoke <java.lang.Math: int min(int,int)>(5, i68);
        $i70 = staticinvoke <chess.Position: int getSquare(int,int)>(i67, 0);
        i14 = staticinvoke <chess.BitBoard: int getDistance(int,int)>(i64, $i70);
        i15 = i14 * 4;
        if i14 <= i69 goto label8;

        $i71 = i14 - i69;
        $i72 = i14 - i69;
        $i73 = $i71 * $i72;
        i15 = i15 + $i73;

     label8:
        $i74 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i63, 0, i15, i2, 0);
        i39 = i39 - $i74;
        $z1 = r1.<chess.Position: boolean whiteMove>;
        if $z1 == 0 goto label9;

        i14 = i14 + -1;

     label9:
        if i69 >= i14 goto label11;

        if i63 != 0 goto label11;

        $l75 = 1L << i66;
        $l76 = staticinvoke <chess.BitBoard: long southFill(long)>($l75);
        $i77 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $l78 = 1L << $i77;
        $l79 = $l76 & $l78;
        $b80 = $l79 cmp 0L;
        if $b80 == 0 goto label10;

        i69 = i69 + 1;

     label10:
        if i69 >= i57 goto label11;

        i57 = i69;
        i58 = staticinvoke <chess.Position: int getSquare(int,int)>(i67, 0);

     label11:
        $l81 = l59 - 1L;
        l59 = l59 & $l81;
        goto label7;

     label12:
        if i4 < 0 goto label20;

        if i58 < 0 goto label19;

        i82 = i3 * 2;
        $z2 = r1.<chess.Position: boolean whiteMove>;
        if $z2 == 0 goto label13;

        i82 = i82 + -1;

     label13:
        i83 = i57 * 2;
        $z3 = r1.<chess.Position: boolean whiteMove>;
        if $z3 != 0 goto label14;

        i83 = i83 + -1;

     label14:
        $i84 = i83 - 1;
        if i82 >= $i84 goto label15;

        i39 = i39 + 500;
        goto label18;

     label15:
        $i85 = i83 - 1;
        if i82 != $i85 goto label16;

        $i86 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $i87 = staticinvoke <chess.BitBoard: int getDirection(int,int)>(i4, $i86);
        if $i87 == 0 goto label18;

        i39 = i39 + 500;
        goto label18;

     label16:
        $i88 = i83 + 1;
        if i82 != $i88 goto label17;

        $i89 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $i90 = staticinvoke <chess.BitBoard: int getDirection(int,int)>(i58, $i89);
        if $i90 == 0 goto label18;

        i39 = i39 + -500;
        goto label18;

     label17:
        i39 = i39 + -500;

     label18:
        goto label21;

     label19:
        i39 = i39 + 500;
        goto label21;

     label20:
        if i58 < 0 goto label21;

        i39 = i39 + -500;

     label21:
        return i39;
    }

    private final void computePawnHashData(chess.Position, chess.Evaluate$PawnHashData)
    {
        chess.Evaluate r0;
        chess.Position r1;
        chess.Evaluate$PawnHashData r2;
        byte b0, $b109, $b117, $b127, $b136;
        long l1, l2, l6, l7, l11, l12, l13, l14, l15, l17, l18, l21, $l24, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l57, $l58, $l59, $l60, $l61, $l62, $l63, $l64, $l65, $l66, $l67, $l68, $l69, $l70, $l71, $l72, $l73, $l74, $l75, $l76, $l77, l78, $l79, $l80, l81, $l82, $l83, $l84, $l85, $l86, $l87, $l88, $l89, $l90, $l91, $l92, $l93, $l94, l95, $l96, $l97, l98, $l104, $l105, $l106, $l107, $l108, $l110, $l111, $l112, $l113, $l114, $l119, $l120, $l121, $l122, $l123, $l124, l125, $l128, $l129, $l130, $l131, $l132, l135, $l139, $l140;
        int i3, i4, i5, i8, i9, i10, i16, i19, i20, i22, i23, $i25, $i26, $i37, $i38, $i48, $i49, i50, $i51, $i52, i53, $i54, $i55, i56, $i99, $i100, $i101, $i102, i103, $i115, $i116, $i118, i126, $i133, $i134, $i137, $i138;
        int[] r3, $r6;
        long[] $r4, $r5;
        short $s141, $s142;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: chess.Evaluate$PawnHashData;
        b0 = 0;
        $r4 = r1.<chess.Position: long[] pieceTypeBB>;
        l1 = $r4[6];
        $l24 = staticinvoke <chess.BitBoard: long southFill(long)>(l1);
        l2 = $l24 & 255L;
        $i25 = staticinvoke <java.lang.Long: int bitCount(long)>(l1);
        $i26 = staticinvoke <java.lang.Long: int bitCount(long)>(l2);
        i3 = $i25 - $i26;
        $l27 = l2 ^ -1L;
        $l28 = $l27 >>> 1;
        $l29 = $l28 & l2;
        i4 = staticinvoke <java.lang.Long: int bitCount(long)>($l29);
        $l30 = l2 << 1;
        $l31 = $l30 ^ -1L;
        $l32 = $l31 & l2;
        $l33 = l2 >>> 1;
        $l34 = $l33 ^ -1L;
        $l35 = $l32 & $l34;
        i5 = staticinvoke <java.lang.Long: int bitCount(long)>($l35);
        $r5 = r1.<chess.Position: long[] pieceTypeBB>;
        l6 = $r5[12];
        $l36 = staticinvoke <chess.BitBoard: long southFill(long)>(l6);
        l7 = $l36 & 255L;
        $i37 = staticinvoke <java.lang.Long: int bitCount(long)>(l6);
        $i38 = staticinvoke <java.lang.Long: int bitCount(long)>(l7);
        i8 = $i37 - $i38;
        $l39 = l7 ^ -1L;
        $l40 = $l39 >>> 1;
        $l41 = $l40 & l7;
        i9 = staticinvoke <java.lang.Long: int bitCount(long)>($l41);
        $l42 = l7 << 1;
        $l43 = $l42 ^ -1L;
        $l44 = $l43 & l7;
        $l45 = l7 >>> 1;
        $l46 = $l45 ^ -1L;
        $l47 = $l44 & $l46;
        i10 = staticinvoke <java.lang.Long: int bitCount(long)>($l47);
        $i48 = i3 - i8;
        $i49 = $i48 * 25;
        i50 = b0 - $i49;
        $i51 = i4 - i9;
        $i52 = $i51 * 15;
        i53 = i50 - $i52;
        $i54 = i5 - i10;
        $i55 = $i54 * 15;
        i56 = i53 - $i55;
        $l57 = l1 & -72340172838076674L;
        $l58 = $l57 << 7;
        $l59 = l1 & 9187201950435737471L;
        $l60 = $l59 << 9;
        l11 = $l58 | $l60;
        $l61 = l6 & -72340172838076674L;
        $l62 = $l61 >>> 9;
        $l63 = l6 & 9187201950435737471L;
        $l64 = $l63 >>> 7;
        l12 = $l62 | $l64;
        $l65 = l1 | l6;
        $l66 = $l65 >>> 8;
        $l67 = $l66 ^ -1L;
        $l68 = l1 & $l67;
        $l69 = l12 >>> 8;
        $l70 = $l68 & $l69;
        $l71 = staticinvoke <chess.BitBoard: long northFill(long)>(l11);
        $l72 = $l71 ^ -1L;
        l13 = $l70 & $l72;
        $l73 = l1 & -72340172838076674L;
        $l74 = $l73 >>> 9;
        $l75 = l1 & 9187201950435737471L;
        $l76 = $l75 >>> 7;
        $l77 = $l74 | $l76;
        l78 = l13 & $l77;
        $l79 = staticinvoke <chess.BitBoard: long northFill(long)>(l7);
        $l80 = $l79 ^ -1L;
        l81 = l78 & $l80;
        $l82 = l1 | l6;
        $l83 = $l82 << 8;
        $l84 = $l83 ^ -1L;
        $l85 = l6 & $l84;
        $l86 = l11 << 8;
        $l87 = $l85 & $l86;
        $l88 = staticinvoke <chess.BitBoard: long southFill(long)>(l12);
        $l89 = $l88 ^ -1L;
        l14 = $l87 & $l89;
        $l90 = l6 & -72340172838076674L;
        $l91 = $l90 << 7;
        $l92 = l6 & 9187201950435737471L;
        $l93 = $l92 << 9;
        $l94 = $l91 | $l93;
        l95 = l14 & $l94;
        $l96 = staticinvoke <chess.BitBoard: long northFill(long)>(l2);
        $l97 = $l96 ^ -1L;
        l98 = l95 & $l97;
        $i99 = staticinvoke <java.lang.Long: int bitCount(long)>(l81);
        $i100 = staticinvoke <java.lang.Long: int bitCount(long)>(l98);
        $i101 = $i99 - $i100;
        $i102 = $i101 * 15;
        i103 = i56 - $i102;
        $l104 = l6 | l12;
        $l105 = l1 >>> 8;
        $l106 = $l104 | $l105;
        $l107 = staticinvoke <chess.BitBoard: long southFill(long)>($l106);
        $l108 = $l107 ^ -1L;
        l15 = l1 & $l108;
        $r6 = newarray (int)[8];
        $r6[0] = -1;
        $r6[1] = 24;
        $r6[2] = 26;
        $r6[3] = 30;
        $r6[4] = 36;
        $r6[5] = 55;
        $r6[6] = 100;
        $r6[7] = -1;
        r3 = $r6;
        i16 = 0;
        $b109 = l15 cmp 0L;
        if $b109 == 0 goto label1;

        $l110 = l1 & -72340172838076674L;
        $l111 = $l110 << 7;
        $l112 = l1 & 9187201950435737471L;
        $l113 = $l112 << 9;
        $l114 = $l111 | $l113;
        l17 = l15 & $l114;
        $i115 = staticinvoke <java.lang.Long: int bitCount(long)>(l17);
        $i116 = 15 * $i115;
        i16 = i16 + $i116;
        l18 = l15;

     label0:
        $b117 = l18 cmp 0L;
        if $b117 == 0 goto label1;

        i19 = staticinvoke <java.lang.Long: int numberOfTrailingZeros(long)>(l18);
        i20 = staticinvoke <chess.Position: int getY(int)>(i19);
        $i118 = r3[i20];
        i16 = i16 + $i118;
        $l119 = l18 - 1L;
        l18 = l18 & $l119;
        goto label0;

     label1:
        $l120 = l1 | l11;
        $l121 = l6 << 8;
        $l122 = $l120 | $l121;
        $l123 = staticinvoke <chess.BitBoard: long northFill(long)>($l122);
        $l124 = $l123 ^ -1L;
        l125 = l6 & $l124;
        i126 = 0;
        $b127 = l125 cmp 0L;
        if $b127 == 0 goto label3;

        $l128 = l6 & -72340172838076674L;
        $l129 = $l128 >>> 9;
        $l130 = l6 & 9187201950435737471L;
        $l131 = $l130 >>> 7;
        $l132 = $l129 | $l131;
        l21 = l125 & $l132;
        $i133 = staticinvoke <java.lang.Long: int bitCount(long)>(l21);
        $i134 = 15 * $i133;
        i126 = i126 + $i134;
        l135 = l125;

     label2:
        $b136 = l135 cmp 0L;
        if $b136 == 0 goto label3;

        i22 = staticinvoke <java.lang.Long: int numberOfTrailingZeros(long)>(l135);
        i23 = staticinvoke <chess.Position: int getY(int)>(i22);
        $i137 = 7 - i23;
        $i138 = r3[$i137];
        i126 = i126 + $i138;
        $l139 = l135 - 1L;
        l135 = l135 & $l139;
        goto label2;

     label3:
        $l140 = virtualinvoke r1.<chess.Position: long pawnZobristHash()>();
        r2.<chess.Evaluate$PawnHashData: long key> = $l140;
        r2.<chess.Evaluate$PawnHashData: int score> = i103;
        $s141 = (short) i16;
        r2.<chess.Evaluate$PawnHashData: short passedBonusW> = $s141;
        $s142 = (short) i126;
        r2.<chess.Evaluate$PawnHashData: short passedBonusB> = $s142;
        r2.<chess.Evaluate$PawnHashData: long passedPawnsW> = l15;
        r2.<chess.Evaluate$PawnHashData: long passedPawnsB> = l125;
        return;
    }

    private final int rookBonus(chess.Position)
    {
        chess.Evaluate r0;
        chess.Position r1;
        int i0, i5, i6, i8, $i16, $i28, $i29, $i33, $i36, $i37, i50, $i54, $i66, $i67, $i71, $i74, $i75;
        long l1, l2, l3, l4, l7, l9, $l10, $l11, $l13, $l14, $l17, $l18, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l30, $l31, $l34, $l35, $l38, $l39, $l40, l41, $l42, $l43, $l45, $l46, l48, $l51, $l52, $l55, $l56, $l59, $l60, $l61, $l62, $l63, $l64, $l65, $l68, $l69, $l72, $l73, $l76, $l77, l78, $l79, $l80, $l82, $l83;
        long[] $r2, $r3, $r4, $r5, $r6, $r10, $r11, $r12, $r13, $r14, $r18, $r19;
        byte $b12, $b15, $b19, $b20, $b32, $b44, $b47, $b49, $b53, $b57, $b58, $b70, $b81, $b84;
        int[] $r8, $r16;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        i0 = 0;
        $r2 = r1.<chess.Position: long[] pieceTypeBB>;
        l1 = $r2[6];
        $r3 = r1.<chess.Position: long[] pieceTypeBB>;
        l2 = $r3[12];
        $l10 = r1.<chess.Position: long whiteBB>;
        $l11 = r1.<chess.Position: long blackBB>;
        l3 = $l10 | $l11;
        $r4 = r1.<chess.Position: long[] pieceTypeBB>;
        l4 = $r4[3];

     label0:
        $b12 = l4 cmp 0L;
        if $b12 == 0 goto label5;

        i5 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l4);
        i6 = staticinvoke <chess.Position: int getX(int)>(i5);
        $r5 = <chess.BitBoard: long[] maskFile>;
        $l13 = $r5[i6];
        $l14 = l1 & $l13;
        $b15 = $l14 cmp 0L;
        if $b15 != 0 goto label3;

        $i16 = i0;
        $r6 = <chess.BitBoard: long[] maskFile>;
        $l17 = $r6[i6];
        $l18 = l2 & $l17;
        $b19 = $l18 cmp 0L;
        if $b19 != 0 goto label1;

        $b20 = 25;
        goto label2;

     label1:
        $b20 = 12;

     label2:
        i0 = $i16 + $b20;

     label3:
        l7 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i5, l3);
        $l21 = r0.<chess.Evaluate: long wAttacksBB>;
        $l22 = $l21 | l7;
        r0.<chess.Evaluate: long wAttacksBB> = $l22;
        $r8 = <chess.Evaluate: int[] rookMobScore>;
        $l23 = r1.<chess.Position: long whiteBB>;
        $l24 = r0.<chess.Evaluate: long bPawnAttacks>;
        $l25 = $l23 | $l24;
        $l26 = $l25 ^ -1L;
        $l27 = l7 & $l26;
        $i28 = staticinvoke <java.lang.Long: int bitCount(long)>($l27);
        $i29 = $r8[$i28];
        i0 = i0 + $i29;
        $l30 = r0.<chess.Evaluate: long bKingZone>;
        $l31 = l7 & $l30;
        $b32 = $l31 cmp 0L;
        if $b32 == 0 goto label4;

        $i33 = r0.<chess.Evaluate: int bKingAttacks>;
        $l34 = r0.<chess.Evaluate: long bKingZone>;
        $l35 = l7 & $l34;
        $i36 = staticinvoke <java.lang.Long: int bitCount(long)>($l35);
        $i37 = $i33 + $i36;
        r0.<chess.Evaluate: int bKingAttacks> = $i37;

     label4:
        $l38 = l4 - 1L;
        l4 = l4 & $l38;
        goto label0;

     label5:
        $r10 = r1.<chess.Position: long[] pieceTypeBB>;
        $l39 = $r10[3];
        $l40 = $l39 >>> 48;
        l41 = $l40 & 255L;
        $l42 = l41 - 1L;
        $l43 = l41 & $l42;
        $b44 = $l43 cmp 0L;
        if $b44 == 0 goto label6;

        $r11 = r1.<chess.Position: long[] pieceTypeBB>;
        $l45 = $r11[7];
        $l46 = $l45 & -72057594037927936L;
        $b47 = $l46 cmp 0L;
        if $b47 == 0 goto label6;

        i0 = i0 + 30;

     label6:
        $r12 = r1.<chess.Position: long[] pieceTypeBB>;
        l48 = $r12[9];

     label7:
        $b49 = l48 cmp 0L;
        if $b49 == 0 goto label12;

        i50 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l48);
        i8 = staticinvoke <chess.Position: int getX(int)>(i50);
        $r13 = <chess.BitBoard: long[] maskFile>;
        $l51 = $r13[i8];
        $l52 = l2 & $l51;
        $b53 = $l52 cmp 0L;
        if $b53 != 0 goto label10;

        $i54 = i0;
        $r14 = <chess.BitBoard: long[] maskFile>;
        $l55 = $r14[i8];
        $l56 = l1 & $l55;
        $b57 = $l56 cmp 0L;
        if $b57 != 0 goto label8;

        $b58 = 25;
        goto label9;

     label8:
        $b58 = 12;

     label9:
        i0 = $i54 - $b58;

     label10:
        l9 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i50, l3);
        $l59 = r0.<chess.Evaluate: long bAttacksBB>;
        $l60 = $l59 | l9;
        r0.<chess.Evaluate: long bAttacksBB> = $l60;
        $r16 = <chess.Evaluate: int[] rookMobScore>;
        $l61 = r1.<chess.Position: long blackBB>;
        $l62 = r0.<chess.Evaluate: long wPawnAttacks>;
        $l63 = $l61 | $l62;
        $l64 = $l63 ^ -1L;
        $l65 = l9 & $l64;
        $i66 = staticinvoke <java.lang.Long: int bitCount(long)>($l65);
        $i67 = $r16[$i66];
        i0 = i0 - $i67;
        $l68 = r0.<chess.Evaluate: long wKingZone>;
        $l69 = l9 & $l68;
        $b70 = $l69 cmp 0L;
        if $b70 == 0 goto label11;

        $i71 = r0.<chess.Evaluate: int wKingAttacks>;
        $l72 = r0.<chess.Evaluate: long wKingZone>;
        $l73 = l9 & $l72;
        $i74 = staticinvoke <java.lang.Long: int bitCount(long)>($l73);
        $i75 = $i71 + $i74;
        r0.<chess.Evaluate: int wKingAttacks> = $i75;

     label11:
        $l76 = l48 - 1L;
        l48 = l48 & $l76;
        goto label7;

     label12:
        $r18 = r1.<chess.Position: long[] pieceTypeBB>;
        $l77 = $r18[9];
        l78 = $l77 & 65280L;
        $l79 = l78 - 1L;
        $l80 = l78 & $l79;
        $b81 = $l80 cmp 0L;
        if $b81 == 0 goto label13;

        $r19 = r1.<chess.Position: long[] pieceTypeBB>;
        $l82 = $r19[1];
        $l83 = $l82 & 255L;
        $b84 = $l83 cmp 0L;
        if $b84 == 0 goto label13;

        i0 = i0 + -30;

     label13:
        return i0;
    }

    private final int bishopEval(chess.Position, int)
    {
        chess.Evaluate r0;
        chess.Position r1;
        int i0, i1, i6, i8, i9, i10, i11, i12, i13, $i26, $i27, $i31, $i34, $i35, i39, $i48, $i49, $i53, $i56, $i57, $i75, $i76, $i77, $i78, $i79, $i80, $i81, i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i137, $i138, $i139;
        long l2, l3, l4, l5, l7, $l14, $l15, $l16, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l28, $l29, $l32, $l33, $l36, l37, l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l50, $l51, $l54, $l55, $l58, $l59, $l60, $l62, $l63, $l65, $l66, $l68, $l69, $l107, $l108, $l120, $l135;
        boolean z0, z1, $z2, z3, $z4, z5, $z6, $z7;
        long[] $r2, $r3, $r10, $r11, $r12, $r13, $r20, $r27;
        byte $b17, $b18, $b30, $b38, $b52, $b61, $b64, $b67, $b70, $b71, $b72, $b73, $b74, $b109, $b121, $b136;
        int[] $r5, $r8, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        i1 = 0;
        $l14 = r1.<chess.Position: long whiteBB>;
        $l15 = r1.<chess.Position: long blackBB>;
        l2 = $l14 | $l15;
        $r2 = r1.<chess.Position: long[] pieceTypeBB>;
        l3 = $r2[4];
        $r3 = r1.<chess.Position: long[] pieceTypeBB>;
        l4 = $r3[10];
        $l16 = l3 | l4;
        $b17 = $l16 cmp 0L;
        if $b17 != 0 goto label0;

        return 0;

     label0:
        l5 = l3;

     label1:
        $b18 = l5 cmp 0L;
        if $b18 == 0 goto label3;

        i6 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l5);
        l7 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i6, l2);
        $l19 = r0.<chess.Evaluate: long wAttacksBB>;
        $l20 = $l19 | l7;
        r0.<chess.Evaluate: long wAttacksBB> = $l20;
        $r5 = <chess.Evaluate: int[] bishMobScore>;
        $l21 = r1.<chess.Position: long whiteBB>;
        $l22 = r0.<chess.Evaluate: long bPawnAttacks>;
        $l23 = $l21 | $l22;
        $l24 = $l23 ^ -1L;
        $l25 = l7 & $l24;
        $i26 = staticinvoke <java.lang.Long: int bitCount(long)>($l25);
        $i27 = $r5[$i26];
        i1 = i1 + $i27;
        $l28 = r0.<chess.Evaluate: long bKingZone>;
        $l29 = l7 & $l28;
        $b30 = $l29 cmp 0L;
        if $b30 == 0 goto label2;

        $i31 = r0.<chess.Evaluate: int bKingAttacks>;
        $l32 = r0.<chess.Evaluate: long bKingZone>;
        $l33 = l7 & $l32;
        $i34 = staticinvoke <java.lang.Long: int bitCount(long)>($l33);
        $i35 = $i31 + $i34;
        r0.<chess.Evaluate: int bKingAttacks> = $i35;

     label2:
        $l36 = l5 - 1L;
        l5 = l5 & $l36;
        goto label1;

     label3:
        l37 = l4;

     label4:
        $b38 = l37 cmp 0L;
        if $b38 == 0 goto label6;

        i39 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l37);
        l40 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i39, l2);
        $l41 = r0.<chess.Evaluate: long bAttacksBB>;
        $l42 = $l41 | l40;
        r0.<chess.Evaluate: long bAttacksBB> = $l42;
        $r8 = <chess.Evaluate: int[] bishMobScore>;
        $l43 = r1.<chess.Position: long blackBB>;
        $l44 = r0.<chess.Evaluate: long wPawnAttacks>;
        $l45 = $l43 | $l44;
        $l46 = $l45 ^ -1L;
        $l47 = l40 & $l46;
        $i48 = staticinvoke <java.lang.Long: int bitCount(long)>($l47);
        $i49 = $r8[$i48];
        i1 = i1 - $i49;
        $l50 = r0.<chess.Evaluate: long wKingZone>;
        $l51 = l40 & $l50;
        $b52 = $l51 cmp 0L;
        if $b52 == 0 goto label5;

        $i53 = r0.<chess.Evaluate: int wKingAttacks>;
        $l54 = r0.<chess.Evaluate: long wKingZone>;
        $l55 = l40 & $l54;
        $i56 = staticinvoke <java.lang.Long: int bitCount(long)>($l55);
        $i57 = $i53 + $i56;
        r0.<chess.Evaluate: int wKingAttacks> = $i57;

     label5:
        $l58 = l37 - 1L;
        l37 = l37 & $l58;
        goto label4;

     label6:
        $r10 = r1.<chess.Position: long[] pieceTypeBB>;
        $l59 = $r10[4];
        $l60 = $l59 & -6172840429334713771L;
        $b61 = $l60 cmp 0L;
        if $b61 == 0 goto label7;

        $z2 = 1;
        goto label8;

     label7:
        $z2 = 0;

     label8:
        z3 = $z2;
        $r11 = r1.<chess.Position: long[] pieceTypeBB>;
        $l62 = $r11[4];
        $l63 = $l62 & 6172840429334713770L;
        $b64 = $l63 cmp 0L;
        if $b64 == 0 goto label9;

        $z4 = 1;
        goto label10;

     label9:
        $z4 = 0;

     label10:
        z5 = $z4;
        $r12 = r1.<chess.Position: long[] pieceTypeBB>;
        $l65 = $r12[10];
        $l66 = $l65 & -6172840429334713771L;
        $b67 = $l66 cmp 0L;
        if $b67 == 0 goto label11;

        $z6 = 1;
        goto label12;

     label11:
        $z6 = 0;

     label12:
        z0 = $z6;
        $r13 = r1.<chess.Position: long[] pieceTypeBB>;
        $l68 = $r13[10];
        $l69 = $l68 & 6172840429334713770L;
        $b70 = $l69 cmp 0L;
        if $b70 == 0 goto label13;

        $z7 = 1;
        goto label14;

     label13:
        $z7 = 0;

     label14:
        z1 = $z7;
        if z3 == 0 goto label15;

        $b71 = 1;
        goto label16;

     label15:
        $b71 = 0;

     label16:
        if z5 == 0 goto label17;

        $b72 = 1;
        goto label18;

     label17:
        $b72 = 0;

     label18:
        i8 = $b71 + $b72;
        if z0 == 0 goto label19;

        $b73 = 1;
        goto label20;

     label19:
        $b73 = 0;

     label20:
        if z1 == 0 goto label21;

        $b74 = 1;
        goto label22;

     label21:
        $b74 = 0;

     label22:
        i9 = $b73 + $b74;
        if i8 != 2 goto label23;

        $i75 = r1.<chess.Position: int wMtrlPawns>;
        $i76 = <chess.Evaluate: int pV>;
        i10 = $i75 / $i76;
        $i77 = 8 - i10;
        $i78 = $i77 * 3;
        $i79 = 28 + $i78;
        i1 = i1 + $i79;

     label23:
        if i9 != 2 goto label24;

        $i80 = r1.<chess.Position: int bMtrlPawns>;
        $i81 = <chess.Evaluate: int pV>;
        i82 = $i80 / $i81;
        $i83 = 8 - i82;
        $i84 = $i83 * 3;
        $i85 = 28 + $i84;
        i1 = i1 - $i85;

     label24:
        if i8 != 1 goto label25;

        if i9 != 1 goto label25;

        if z3 == z0 goto label25;

        $i86 = r1.<chess.Position: int wMtrl>;
        $i87 = r1.<chess.Position: int wMtrlPawns>;
        $i88 = $i86 - $i87;
        $i89 = r1.<chess.Position: int bMtrl>;
        $i90 = r1.<chess.Position: int bMtrlPawns>;
        $i91 = $i89 - $i90;
        if $i88 != $i91 goto label25;

        $i92 = i0 + i1;
        i93 = $i92 / 2;
        $i94 = <chess.Evaluate: int bV>;
        i11 = 2 * $i94;
        $i95 = <chess.Evaluate: int qV>;
        $i96 = <chess.Evaluate: int rV>;
        $i97 = $i95 + $i96;
        $i98 = <chess.Evaluate: int bV>;
        $i99 = $i97 + $i98;
        i12 = 2 * $i99;
        $i100 = r1.<chess.Position: int wMtrl>;
        $i101 = r1.<chess.Position: int bMtrl>;
        $i102 = $i100 + $i101;
        $i103 = r1.<chess.Position: int wMtrlPawns>;
        $i104 = $i102 - $i103;
        $i105 = r1.<chess.Position: int bMtrlPawns>;
        i13 = $i104 - $i105;
        $i106 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i13, i11, i93, i12, 0);
        i1 = i1 - $i106;

     label25:
        $l107 = l3 | l4;
        $l108 = $l107 & 36310271995707648L;
        $b109 = $l108 cmp 0L;
        if $b109 == 0 goto label33;

        $r14 = r1.<chess.Position: int[] squares>;
        $i110 = $r14[48];
        if $i110 != 4 goto label26;

        $r15 = r1.<chess.Position: int[] squares>;
        $i111 = $r15[41];
        if $i111 != 12 goto label26;

        $r16 = r1.<chess.Position: int[] squares>;
        $i112 = $r16[50];
        if $i112 != 12 goto label26;

        $i113 = <chess.Evaluate: int pV>;
        $i114 = $i113 * 3;
        $i115 = $i114 / 2;
        i1 = i1 - $i115;

     label26:
        $r17 = r1.<chess.Position: int[] squares>;
        $i116 = $r17[55];
        if $i116 != 4 goto label29;

        $r18 = r1.<chess.Position: int[] squares>;
        $i117 = $r18[46];
        if $i117 != 12 goto label29;

        $r19 = r1.<chess.Position: int[] squares>;
        $i118 = $r19[53];
        if $i118 != 12 goto label29;

        $i119 = i1;
        $r20 = r1.<chess.Position: long[] pieceTypeBB>;
        $l120 = $r20[2];
        $b121 = $l120 cmp 0L;
        if $b121 == 0 goto label27;

        $i122 = <chess.Evaluate: int pV>;
        goto label28;

     label27:
        $i123 = <chess.Evaluate: int pV>;
        $i124 = $i123 * 3;
        $i122 = $i124 / 2;

     label28:
        i1 = $i119 - $i122;

     label29:
        $r21 = r1.<chess.Position: int[] squares>;
        $i125 = $r21[8];
        if $i125 != 10 goto label30;

        $r22 = r1.<chess.Position: int[] squares>;
        $i126 = $r22[17];
        if $i126 != 6 goto label30;

        $r23 = r1.<chess.Position: int[] squares>;
        $i127 = $r23[10];
        if $i127 != 6 goto label30;

        $i128 = <chess.Evaluate: int pV>;
        $i129 = $i128 * 3;
        $i130 = $i129 / 2;
        i1 = i1 + $i130;

     label30:
        $r24 = r1.<chess.Position: int[] squares>;
        $i131 = $r24[15];
        if $i131 != 10 goto label33;

        $r25 = r1.<chess.Position: int[] squares>;
        $i132 = $r25[22];
        if $i132 != 6 goto label33;

        $r26 = r1.<chess.Position: int[] squares>;
        $i133 = $r26[13];
        if $i133 != 6 goto label33;

        $i134 = i1;
        $r27 = r1.<chess.Position: long[] pieceTypeBB>;
        $l135 = $r27[8];
        $b136 = $l135 cmp 0L;
        if $b136 == 0 goto label31;

        $i137 = <chess.Evaluate: int pV>;
        goto label32;

     label31:
        $i138 = <chess.Evaluate: int pV>;
        $i139 = $i138 * 3;
        $i137 = $i139 / 2;

     label32:
        i1 = $i134 + $i137;

     label33:
        return i1;
    }

    private int threatBonus(chess.Position)
    {
        chess.Evaluate r0;
        chess.Position r1;
        byte b0, $b4, $b28, $b38, $b63;
        long l1, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, l26, $l31, l37, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l49, $l50, $l51, $l52, $l53, $l54, $l55, $l56, $l57, $l58, $l59, $l60, l61, $l67;
        int i2, i3, i27, $i29, $i30, $i32, $i33, $i34, $i35, i36, i39, i62, i64, $i65, $i66, $i68, $i69, $i70, $i71, i72, $i73;
        long[] $r2, $r3, $r6, $r7, $r8, $r9, $r11, $r14, $r16, $r18, $r19, $r20, $r21, $r23;
        int[] $r12, $r13, $r24, $r25;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        b0 = 0;
        $r3 = r1.<chess.Position: long[] pieceTypeBB>;
        l1 = $r3[5];

     label0:
        $b4 = l1 cmp 0L;
        if $b4 == 0 goto label1;

        i2 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l1);
        $l5 = r0.<chess.Evaluate: long wAttacksBB>;
        $r2 = <chess.BitBoard: long[] knightAttacks>;
        $l6 = $r2[i2];
        $l7 = $l5 | $l6;
        r0.<chess.Evaluate: long wAttacksBB> = $l7;
        $l8 = l1 - 1L;
        l1 = l1 & $l8;
        goto label0;

     label1:
        $l9 = r0.<chess.Evaluate: long wAttacksBB>;
        $r6 = r1.<chess.Position: long[] pieceTypeBB>;
        $l10 = $r6[11];
        $r7 = r1.<chess.Position: long[] pieceTypeBB>;
        $l11 = $r7[10];
        $l12 = $l10 | $l11;
        $r8 = r1.<chess.Position: long[] pieceTypeBB>;
        $l13 = $r8[9];
        $l14 = $l12 | $l13;
        $r9 = r1.<chess.Position: long[] pieceTypeBB>;
        $l15 = $r9[8];
        $l16 = $l14 | $l15;
        $l17 = $l9 & $l16;
        r0.<chess.Evaluate: long wAttacksBB> = $l17;
        $l18 = r0.<chess.Evaluate: long wAttacksBB>;
        $l19 = r0.<chess.Evaluate: long wPawnAttacks>;
        $l20 = $l18 | $l19;
        r0.<chess.Evaluate: long wAttacksBB> = $l20;
        $l21 = r0.<chess.Evaluate: long wAttacksBB>;
        $l22 = r1.<chess.Position: long blackBB>;
        $l23 = $l21 & $l22;
        $r11 = r1.<chess.Position: long[] pieceTypeBB>;
        $l24 = $r11[7];
        $l25 = $l24 ^ -1L;
        l26 = $l23 & $l25;
        i27 = 0;

     label2:
        $b28 = l26 cmp 0L;
        if $b28 == 0 goto label3;

        i3 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l26);
        $r12 = <chess.Evaluate: int[] pieceValue>;
        $r13 = r1.<chess.Position: int[] squares>;
        $i29 = $r13[i3];
        $i30 = $r12[$i29];
        i27 = i27 + $i30;
        $l31 = l26 - 1L;
        l26 = l26 & $l31;
        goto label2;

     label3:
        $i32 = i27 * i27;
        $i33 = <chess.Evaluate: int qV>;
        $i34 = $i32 / $i33;
        $i35 = i27 + $i34;
        i36 = b0 + $i35;
        $r14 = r1.<chess.Position: long[] pieceTypeBB>;
        l37 = $r14[11];

     label4:
        $b38 = l37 cmp 0L;
        if $b38 == 0 goto label5;

        i39 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l37);
        $l40 = r0.<chess.Evaluate: long bAttacksBB>;
        $r16 = <chess.BitBoard: long[] knightAttacks>;
        $l41 = $r16[i39];
        $l42 = $l40 | $l41;
        r0.<chess.Evaluate: long bAttacksBB> = $l42;
        $l43 = l37 - 1L;
        l37 = l37 & $l43;
        goto label4;

     label5:
        $l44 = r0.<chess.Evaluate: long bAttacksBB>;
        $r18 = r1.<chess.Position: long[] pieceTypeBB>;
        $l45 = $r18[5];
        $r19 = r1.<chess.Position: long[] pieceTypeBB>;
        $l46 = $r19[4];
        $l47 = $l45 | $l46;
        $r20 = r1.<chess.Position: long[] pieceTypeBB>;
        $l48 = $r20[3];
        $l49 = $l47 | $l48;
        $r21 = r1.<chess.Position: long[] pieceTypeBB>;
        $l50 = $r21[2];
        $l51 = $l49 | $l50;
        $l52 = $l44 & $l51;
        r0.<chess.Evaluate: long bAttacksBB> = $l52;
        $l53 = r0.<chess.Evaluate: long bAttacksBB>;
        $l54 = r0.<chess.Evaluate: long bPawnAttacks>;
        $l55 = $l53 | $l54;
        r0.<chess.Evaluate: long bAttacksBB> = $l55;
        $l56 = r0.<chess.Evaluate: long bAttacksBB>;
        $l57 = r1.<chess.Position: long whiteBB>;
        $l58 = $l56 & $l57;
        $r23 = r1.<chess.Position: long[] pieceTypeBB>;
        $l59 = $r23[1];
        $l60 = $l59 ^ -1L;
        l61 = $l58 & $l60;
        i62 = 0;

     label6:
        $b63 = l61 cmp 0L;
        if $b63 == 0 goto label7;

        i64 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l61);
        $r24 = <chess.Evaluate: int[] pieceValue>;
        $r25 = r1.<chess.Position: int[] squares>;
        $i65 = $r25[i64];
        $i66 = $r24[$i65];
        i62 = i62 + $i66;
        $l67 = l61 - 1L;
        l61 = l61 & $l67;
        goto label6;

     label7:
        $i68 = i62 * i62;
        $i69 = <chess.Evaluate: int qV>;
        $i70 = $i68 / $i69;
        $i71 = i62 + $i70;
        i72 = i36 - $i71;
        $i73 = i72 / 64;
        return $i73;
    }

    private final int kingSafety(chess.Position)
    {
        chess.Evaluate r0;
        chess.Position r1;
        int $i0, $i1, i2, i3, $i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i53, $i54, $i83, $i84, $i85, $i86, i87;
        long[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        long $l25, $l26, $l28, $l29, $l31, $l32, $l33, $l35, $l36, $l37, $l39, $l40, $l42, $l43, $l45, $l46, $l47, $l49, $l50, $l51, $l55, $l56, $l58, $l59, $l61, $l62, $l63, $l65, $l66, $l67, $l69, $l70, $l72, $l73, $l75, $l76, $l77, $l79, $l80, $l81;
        byte $b27, $b30, $b34, $b38, $b41, $b44, $b48, $b52, $b57, $b60, $b64, $b68, $b71, $b74, $b78, $b82;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        $i0 = <chess.Evaluate: int rV>;
        $i1 = <chess.Evaluate: int bV>;
        i2 = $i0 + $i1;
        $i8 = r1.<chess.Position: int wMtrl>;
        $i9 = r1.<chess.Position: int wMtrlPawns>;
        $i10 = $i8 - $i9;
        $i11 = r1.<chess.Position: int bMtrl>;
        $i12 = $i10 + $i11;
        $i13 = r1.<chess.Position: int bMtrlPawns>;
        $i14 = $i12 - $i13;
        i3 = $i14 / 2;
        if i3 > i2 goto label0;

        return 0;

     label0:
        $i15 = <chess.Evaluate: int qV>;
        $i4 = <chess.Evaluate: int rV>;
        $i16 = 2 * $i4;
        $i17 = $i15 + $i16;
        $i18 = <chess.Evaluate: int bV>;
        $i19 = 2 * $i18;
        $i20 = $i17 + $i19;
        $i21 = <chess.Evaluate: int nV>;
        $i22 = 2 * $i21;
        i5 = $i20 + $i22;
        i6 = specialinvoke r0.<chess.Evaluate: int kingSafetyKPPart(chess.Position)>(r1);
        $i23 = r1.<chess.Position: int wKingSq>;
        $i24 = staticinvoke <chess.Position: int getY(int)>($i23);
        if $i24 != 0 goto label2;

        $r2 = r1.<chess.Position: long[] pieceTypeBB>;
        $l25 = $r2[1];
        $l26 = $l25 & 96L;
        $b27 = $l26 cmp 0L;
        if $b27 == 0 goto label1;

        $r3 = r1.<chess.Position: long[] pieceTypeBB>;
        $l28 = $r3[3];
        $l29 = $l28 & 192L;
        $b30 = $l29 cmp 0L;
        if $b30 == 0 goto label1;

        $r4 = r1.<chess.Position: long[] pieceTypeBB>;
        $l31 = $r4[6];
        $r5 = <chess.BitBoard: long[] maskFile>;
        $l32 = $r5[6];
        $l33 = $l31 & $l32;
        $b34 = $l33 cmp 0L;
        if $b34 == 0 goto label1;

        $r6 = r1.<chess.Position: long[] pieceTypeBB>;
        $l35 = $r6[6];
        $r7 = <chess.BitBoard: long[] maskFile>;
        $l36 = $r7[7];
        $l37 = $l35 & $l36;
        $b38 = $l37 cmp 0L;
        if $b38 == 0 goto label1;

        i6 = i6 + -90;
        goto label2;

     label1:
        $r8 = r1.<chess.Position: long[] pieceTypeBB>;
        $l39 = $r8[1];
        $l40 = $l39 & 6L;
        $b41 = $l40 cmp 0L;
        if $b41 == 0 goto label2;

        $r9 = r1.<chess.Position: long[] pieceTypeBB>;
        $l42 = $r9[3];
        $l43 = $l42 & 3L;
        $b44 = $l43 cmp 0L;
        if $b44 == 0 goto label2;

        $r10 = r1.<chess.Position: long[] pieceTypeBB>;
        $l45 = $r10[6];
        $r11 = <chess.BitBoard: long[] maskFile>;
        $l46 = $r11[0];
        $l47 = $l45 & $l46;
        $b48 = $l47 cmp 0L;
        if $b48 == 0 goto label2;

        $r12 = r1.<chess.Position: long[] pieceTypeBB>;
        $l49 = $r12[6];
        $r13 = <chess.BitBoard: long[] maskFile>;
        $l50 = $r13[1];
        $l51 = $l49 & $l50;
        $b52 = $l51 cmp 0L;
        if $b52 == 0 goto label2;

        i6 = i6 + -90;

     label2:
        $i53 = r1.<chess.Position: int bKingSq>;
        $i54 = staticinvoke <chess.Position: int getY(int)>($i53);
        if $i54 != 7 goto label4;

        $r14 = r1.<chess.Position: long[] pieceTypeBB>;
        $l55 = $r14[7];
        $l56 = $l55 & 6917529027641081856L;
        $b57 = $l56 cmp 0L;
        if $b57 == 0 goto label3;

        $r15 = r1.<chess.Position: long[] pieceTypeBB>;
        $l58 = $r15[9];
        $l59 = $l58 & -4611686018427387904L;
        $b60 = $l59 cmp 0L;
        if $b60 == 0 goto label3;

        $r16 = r1.<chess.Position: long[] pieceTypeBB>;
        $l61 = $r16[12];
        $r17 = <chess.BitBoard: long[] maskFile>;
        $l62 = $r17[6];
        $l63 = $l61 & $l62;
        $b64 = $l63 cmp 0L;
        if $b64 == 0 goto label3;

        $r18 = r1.<chess.Position: long[] pieceTypeBB>;
        $l65 = $r18[12];
        $r19 = <chess.BitBoard: long[] maskFile>;
        $l66 = $r19[7];
        $l67 = $l65 & $l66;
        $b68 = $l67 cmp 0L;
        if $b68 == 0 goto label3;

        i6 = i6 + 90;
        goto label4;

     label3:
        $r20 = r1.<chess.Position: long[] pieceTypeBB>;
        $l69 = $r20[7];
        $l70 = $l69 & 432345564227567616L;
        $b71 = $l70 cmp 0L;
        if $b71 == 0 goto label4;

        $r21 = r1.<chess.Position: long[] pieceTypeBB>;
        $l72 = $r21[9];
        $l73 = $l72 & 216172782113783808L;
        $b74 = $l73 cmp 0L;
        if $b74 == 0 goto label4;

        $r22 = r1.<chess.Position: long[] pieceTypeBB>;
        $l75 = $r22[12];
        $r23 = <chess.BitBoard: long[] maskFile>;
        $l76 = $r23[0];
        $l77 = $l75 & $l76;
        $b78 = $l77 cmp 0L;
        if $b78 == 0 goto label4;

        $r24 = r1.<chess.Position: long[] pieceTypeBB>;
        $l79 = $r24[12];
        $r25 = <chess.BitBoard: long[] maskFile>;
        $l80 = $r25[1];
        $l81 = $l79 & $l80;
        $b82 = $l81 cmp 0L;
        if $b82 == 0 goto label4;

        i6 = i6 + 90;

     label4:
        $i83 = r0.<chess.Evaluate: int bKingAttacks>;
        $i84 = r0.<chess.Evaluate: int wKingAttacks>;
        $i85 = $i83 - $i84;
        $i86 = $i85 * 4;
        i87 = i6 + $i86;
        i7 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>(i3, i2, 0, i5, i87);
        return i7;
    }

    private final int kingSafetyKPPart(chess.Position)
    {
        chess.Evaluate r0;
        chess.Position r1;
        long l0, l2, l3, l6, l7, l8, $l9, $l10, $l15, $l21, $l22, $l23, $l24, $l25, l26, l27, $l28, $l32, $l33, $l34, l38, $l39, l43, $l44, $l47, $l48, $l49, $l50, $l52, $l56, $l59, $l60, $l61, $l62, $l64, $l68, l82, $l83, $l84, $l85, $l86, $l87, l88, l89, $l90, $l94, $l95, $l96, l100, $l101, l105, $l106, $l109, $l110, $l111, $l112, l113, $l115, $l119, $l122, $l123, $l124, $l125, l126, $l128, $l132;
        chess.Evaluate$KingSafetyHashData r2;
        byte b1, $b16, $b51, $b63, $b114, $b127;
        int i4, i5, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i20, $i29, $i30, i31, $i35, $i36, i37, $i40, $i41, i42, $i45, i46, $i53, $i54, i55, $i57, $i58, $i65, $i66, i67, $i69, $i70, $i71, $i72, i73, i74, i75, i76, $i77, $i78, $i79, $i80, $i81, $i91, $i92, i93, $i97, $i98, i99, $i102, $i103, i104, $i107, i108, $i116, $i117, i118, $i120, $i121, $i129, $i130, i131, $i133, $i134, $i135, $i136, i137, i138, $i139;
        chess.Evaluate$KingSafetyHashData[] $r3, $r4;
        long[] $r5, $r6;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        $l9 = virtualinvoke r1.<chess.Position: long pawnZobristHash()>();
        $l10 = virtualinvoke r1.<chess.Position: long kingZobristHash()>();
        l0 = $l9 ^ $l10;
        $r3 = <chess.Evaluate: chess.Evaluate$KingSafetyHashData[] kingSafetyHash>;
        $i11 = (int) l0;
        $r4 = <chess.Evaluate: chess.Evaluate$KingSafetyHashData[] kingSafetyHash>;
        $i12 = lengthof $r4;
        $i13 = $i12 - 1;
        $i14 = $i11 & $i13;
        r2 = $r3[$i14];
        $l15 = r2.<chess.Evaluate$KingSafetyHashData: long key>;
        $b16 = $l15 cmp l0;
        if $b16 == 0 goto label6;

        b1 = 0;
        $r5 = r1.<chess.Position: long[] pieceTypeBB>;
        l2 = $r5[6];
        $r6 = r1.<chess.Position: long[] pieceTypeBB>;
        l3 = $r6[12];
        i4 = 0;
        i5 = 0;
        $i17 = r1.<chess.Position: int wKingSq>;
        $i18 = staticinvoke <chess.Position: int getY(int)>($i17);
        if $i18 >= 2 goto label2;

        $i19 = r1.<chess.Position: int wKingSq>;
        $i20 = staticinvoke <chess.Position: int getX(int)>($i19);
        l6 = 1L << $i20;
        $l21 = l6 & -72340172838076674L;
        $l22 = $l21 >>> 1;
        $l23 = l6 & 9187201950435737471L;
        $l24 = $l23 << 1;
        $l25 = $l22 | $l24;
        l26 = l6 | $l25;
        l27 = l26 << 8;
        $l28 = l2 & l27;
        $i29 = staticinvoke <java.lang.Long: int bitCount(long)>($l28);
        $i30 = 3 * $i29;
        i31 = i4 + $i30;
        $l32 = l27 << 8;
        $l33 = l27 | $l32;
        $l34 = l3 & $l33;
        $i35 = staticinvoke <java.lang.Long: int bitCount(long)>($l34);
        $i36 = 2 * $i35;
        i37 = i31 - $i36;
        l38 = l27 << 8;
        $l39 = l2 & l38;
        $i40 = staticinvoke <java.lang.Long: int bitCount(long)>($l39);
        $i41 = 2 * $i40;
        i42 = i37 + $i41;
        l43 = l38 << 8;
        $l44 = l3 & l43;
        $i45 = staticinvoke <java.lang.Long: int bitCount(long)>($l44);
        i46 = i42 - $i45;
        $l47 = staticinvoke <chess.BitBoard: long southFill(long)>(l43);
        $l48 = staticinvoke <chess.BitBoard: long southFill(long)>(l2);
        $l49 = $l48 ^ -1L;
        $l50 = $l47 & $l49;
        l7 = $l50 & 255L;
        $b51 = l7 cmp 0L;
        if $b51 == 0 goto label0;

        $l52 = l7 & 231L;
        $i53 = staticinvoke <java.lang.Long: int bitCount(long)>($l52);
        $i54 = 25 * $i53;
        i55 = i5 + $i54;
        $l56 = l7 & 24L;
        $i57 = staticinvoke <java.lang.Long: int bitCount(long)>($l56);
        $i58 = 10 * $i57;
        i5 = i55 + $i58;

     label0:
        $l59 = staticinvoke <chess.BitBoard: long southFill(long)>(l43);
        $l60 = staticinvoke <chess.BitBoard: long southFill(long)>(l3);
        $l61 = $l60 ^ -1L;
        $l62 = $l59 & $l61;
        l8 = $l62 & 255L;
        $b63 = l8 cmp 0L;
        if $b63 == 0 goto label1;

        $l64 = l8 & 231L;
        $i65 = staticinvoke <java.lang.Long: int bitCount(long)>($l64);
        $i66 = 25 * $i65;
        i67 = i5 + $i66;
        $l68 = l8 & 24L;
        $i69 = staticinvoke <java.lang.Long: int bitCount(long)>($l68);
        $i70 = 10 * $i69;
        i5 = i67 + $i70;

     label1:
        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i46, 8);

     label2:
        $i71 = i4 - 9;
        $i72 = $i71 * 15;
        i73 = $i72 - i5;
        i74 = b1 + i73;
        i75 = 0;
        i76 = 0;
        $i77 = r1.<chess.Position: int bKingSq>;
        $i78 = staticinvoke <chess.Position: int getY(int)>($i77);
        if $i78 < 6 goto label5;

        $i79 = r1.<chess.Position: int bKingSq>;
        $i80 = staticinvoke <chess.Position: int getX(int)>($i79);
        $i81 = 56 + $i80;
        l82 = 1L << $i81;
        $l83 = l82 & -72340172838076674L;
        $l84 = $l83 >>> 1;
        $l85 = l82 & 9187201950435737471L;
        $l86 = $l85 << 1;
        $l87 = $l84 | $l86;
        l88 = l82 | $l87;
        l89 = l88 >>> 8;
        $l90 = l3 & l89;
        $i91 = staticinvoke <java.lang.Long: int bitCount(long)>($l90);
        $i92 = 3 * $i91;
        i93 = i75 + $i92;
        $l94 = l89 >>> 8;
        $l95 = l89 | $l94;
        $l96 = l2 & $l95;
        $i97 = staticinvoke <java.lang.Long: int bitCount(long)>($l96);
        $i98 = 2 * $i97;
        i99 = i93 - $i98;
        l100 = l89 >>> 8;
        $l101 = l3 & l100;
        $i102 = staticinvoke <java.lang.Long: int bitCount(long)>($l101);
        $i103 = 2 * $i102;
        i104 = i99 + $i103;
        l105 = l100 >>> 8;
        $l106 = l2 & l105;
        $i107 = staticinvoke <java.lang.Long: int bitCount(long)>($l106);
        i108 = i104 - $i107;
        $l109 = staticinvoke <chess.BitBoard: long southFill(long)>(l105);
        $l110 = staticinvoke <chess.BitBoard: long southFill(long)>(l2);
        $l111 = $l110 ^ -1L;
        $l112 = $l109 & $l111;
        l113 = $l112 & 255L;
        $b114 = l113 cmp 0L;
        if $b114 == 0 goto label3;

        $l115 = l113 & 231L;
        $i116 = staticinvoke <java.lang.Long: int bitCount(long)>($l115);
        $i117 = 25 * $i116;
        i118 = i76 + $i117;
        $l119 = l113 & 24L;
        $i120 = staticinvoke <java.lang.Long: int bitCount(long)>($l119);
        $i121 = 10 * $i120;
        i76 = i118 + $i121;

     label3:
        $l122 = staticinvoke <chess.BitBoard: long southFill(long)>(l105);
        $l123 = staticinvoke <chess.BitBoard: long southFill(long)>(l3);
        $l124 = $l123 ^ -1L;
        $l125 = $l122 & $l124;
        l126 = $l125 & 255L;
        $b127 = l126 cmp 0L;
        if $b127 == 0 goto label4;

        $l128 = l126 & 231L;
        $i129 = staticinvoke <java.lang.Long: int bitCount(long)>($l128);
        $i130 = 25 * $i129;
        i131 = i76 + $i130;
        $l132 = l126 & 24L;
        $i133 = staticinvoke <java.lang.Long: int bitCount(long)>($l132);
        $i134 = 10 * $i133;
        i76 = i131 + $i134;

     label4:
        i75 = staticinvoke <java.lang.Math: int min(int,int)>(i108, 8);

     label5:
        $i135 = i75 - 9;
        $i136 = $i135 * 15;
        i137 = $i136 - i76;
        i138 = i74 - i137;
        r2.<chess.Evaluate$KingSafetyHashData: long key> = l0;
        r2.<chess.Evaluate$KingSafetyHashData: int score> = i138;

     label6:
        $i139 = r2.<chess.Evaluate$KingSafetyHashData: int score>;
        return $i139;
    }

    private final int endGameEval(chess.Position, int)
    {
        chess.Evaluate r0;
        chess.Position r1;
        int i0, i1, $i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i31, $i32, $i35, $i36, i38, $i39, $i40, $i41, $i42, i45, i46, i47, i48, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, i68, i70, i72, i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i84, $i85, i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, i98, i99, i100, i101, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i144, $i145, i147, i149, $i150, $i151, $i152, $i153, $i154, $i155, i156, $i157, $i158, $i159, $i160, i161, i162, i163, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i211, $i212, i214, i216, $i217, $i218, $i219, $i220, $i221, $i222, i223, $i224, $i225, $i226, $i227, i228, i229, i230, i231, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, i247, $i248, $i249, $i250, $i251, $i252, $i253;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, z8, $z9, $z10, z11;
        long[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r61;
        long $l25, $l27, $l28, $l29, $l30, $l33, $l37, $l43, $l49, $l50, $l65, $l67, $l69, $l71, $l73, $l82, $l86, $l96, $l102, $l103, $l120, $l121, $l122, $l123, $l124, $l126, $l127, $l129, $l130, $l132, $l133, $l135, $l136, $l138, $l139, $l141, $l142, $l146, $l148, $l164, $l165, $l178, $l187, $l188, $l189, $l190, $l191, $l193, $l194, $l196, $l197, $l199, $l200, $l202, $l203, $l205, $l206, $l208, $l209, $l213, $l215, $l232, $l233, $l246;
        byte $b26, $b34, $b44, $b51, $b66, $b83, $b97, $b104, $b125, $b128, $b131, $b134, $b137, $b140, $b143, $b166, $b192, $b195, $b198, $b201, $b204, $b207, $b210, $b234;
        int[][] $r11, $r13, $r24, $r26, $r40, $r42, $r57, $r59;
        int[] $r12, $r14, $r25, $r27, $r41, $r43, $r58, $r60;

        r0 := @this: chess.Evaluate;
        r1 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        i1 = i0;
        $i12 = r1.<chess.Position: int wMtrl>;
        $i13 = r1.<chess.Position: int bMtrl>;
        $i14 = $i12 + $i13;
        $i2 = <chess.Evaluate: int rV>;
        $i15 = 6 * $i2;
        if $i14 <= $i15 goto label0;

        return i1;

     label0:
        i3 = r1.<chess.Position: int wMtrlPawns>;
        i4 = r1.<chess.Position: int bMtrlPawns>;
        $i16 = r1.<chess.Position: int wMtrl>;
        i5 = $i16 - i3;
        $i17 = r1.<chess.Position: int bMtrl>;
        i6 = $i17 - i4;
        z0 = 0;
        $i18 = i3 + i4;
        if $i18 != 0 goto label1;

        $i19 = <chess.Evaluate: int rV>;
        if i5 >= $i19 goto label1;

        $i20 = <chess.Evaluate: int rV>;
        if i6 >= $i20 goto label1;

        return 0;

     label1:
        if z0 != 0 goto label2;

        $i21 = r1.<chess.Position: int wMtrl>;
        $i22 = <chess.Evaluate: int qV>;
        if $i21 != $i22 goto label2;

        $i23 = r1.<chess.Position: int bMtrl>;
        $i24 = <chess.Evaluate: int pV>;
        if $i23 != $i24 goto label2;

        $r2 = r1.<chess.Position: long[] pieceTypeBB>;
        $l25 = $r2[2];
        $b26 = $l25 cmp 0L;
        if $b26 == 0 goto label2;

        $r3 = r1.<chess.Position: long[] pieceTypeBB>;
        $l27 = $r3[1];
        i7 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l27);
        $r4 = r1.<chess.Position: long[] pieceTypeBB>;
        $l28 = $r4[2];
        i8 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l28);
        $r5 = r1.<chess.Position: long[] pieceTypeBB>;
        $l29 = $r5[7];
        i9 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l29);
        $r6 = r1.<chess.Position: long[] pieceTypeBB>;
        $l30 = $r6[12];
        i10 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l30);
        $z1 = r1.<chess.Position: boolean whiteMove>;
        i1 = staticinvoke <chess.Evaluate: int evalKQKP(int,int,int,int,boolean)>(i7, i8, i9, i10, $z1);
        z0 = 1;

     label2:
        if z0 != 0 goto label6;

        $i31 = r1.<chess.Position: int wMtrl>;
        $i32 = <chess.Evaluate: int rV>;
        if $i31 != $i32 goto label6;

        $r7 = r1.<chess.Position: long[] pieceTypeBB>;
        $l33 = $r7[3];
        $b34 = $l33 cmp 0L;
        if $b34 == 0 goto label6;

        $i35 = r1.<chess.Position: int bMtrl>;
        $i36 = <chess.Evaluate: int pV>;
        if $i35 != $i36 goto label3;

        $r8 = r1.<chess.Position: long[] pieceTypeBB>;
        $l37 = $r8[12];
        i38 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l37);
        $i39 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $i40 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $z2 = r1.<chess.Position: boolean whiteMove>;
        i1 = staticinvoke <chess.Evaluate: int krkpEval(int,int,int,boolean)>($i39, $i40, i38, $z2);
        z0 = 1;
        goto label6;

     label3:
        $i41 = r1.<chess.Position: int bMtrl>;
        $i42 = <chess.Evaluate: int bV>;
        if $i41 != $i42 goto label6;

        $r9 = r1.<chess.Position: long[] pieceTypeBB>;
        $l43 = $r9[10];
        $b44 = $l43 cmp 0L;
        if $b44 == 0 goto label6;

        i45 = i1 / 8;
        i46 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        i47 = staticinvoke <chess.Position: int getX(int)>(i46);
        i48 = staticinvoke <chess.Position: int getY(int)>(i46);
        $r10 = r1.<chess.Position: long[] pieceTypeBB>;
        $l49 = $r10[10];
        $l50 = $l49 & -6172840429334713771L;
        $b51 = $l50 cmp 0L;
        if $b51 == 0 goto label4;

        $r11 = <chess.Evaluate: int[][] distToH1A8>;
        $i52 = 7 - i48;
        $r12 = $r11[$i52];
        $i53 = 7 - i47;
        $i54 = $r12[$i53];
        $i55 = 7 - $i54;
        $i56 = $i55 * 7;
        i1 = i45 + $i56;
        goto label5;

     label4:
        $r13 = <chess.Evaluate: int[][] distToH1A8>;
        $i57 = 7 - i48;
        $r14 = $r13[$i57];
        $i58 = $r14[i47];
        $i59 = 7 - $i58;
        $i60 = $i59 * 7;
        i1 = i45 + $i60;

     label5:
        z0 = 1;

     label6:
        if z0 != 0 goto label9;

        $i61 = r1.<chess.Position: int bMtrl>;
        $i62 = <chess.Evaluate: int qV>;
        if $i61 != $i62 goto label9;

        $i63 = r1.<chess.Position: int wMtrl>;
        $i64 = <chess.Evaluate: int pV>;
        if $i63 != $i64 goto label9;

        $r15 = r1.<chess.Position: long[] pieceTypeBB>;
        $l65 = $r15[8];
        $b66 = $l65 cmp 0L;
        if $b66 == 0 goto label9;

        $r16 = r1.<chess.Position: long[] pieceTypeBB>;
        $l67 = $r16[7];
        i68 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l67);
        $r17 = r1.<chess.Position: long[] pieceTypeBB>;
        $l69 = $r17[8];
        i70 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l69);
        $r18 = r1.<chess.Position: long[] pieceTypeBB>;
        $l71 = $r18[1];
        i72 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l71);
        $r19 = r1.<chess.Position: long[] pieceTypeBB>;
        $l73 = $r19[6];
        i74 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l73);
        $i75 = 63 - i68;
        $i76 = 63 - i70;
        $i77 = 63 - i72;
        $i78 = 63 - i74;
        $z3 = r1.<chess.Position: boolean whiteMove>;
        if $z3 != 0 goto label7;

        $z4 = 1;
        goto label8;

     label7:
        $z4 = 0;

     label8:
        $i79 = staticinvoke <chess.Evaluate: int evalKQKP(int,int,int,int,boolean)>($i75, $i76, $i77, $i78, $z4);
        i1 = neg $i79;
        z0 = 1;

     label9:
        if z0 != 0 goto label15;

        $i80 = r1.<chess.Position: int bMtrl>;
        $i81 = <chess.Evaluate: int rV>;
        if $i80 != $i81 goto label15;

        $r20 = r1.<chess.Position: long[] pieceTypeBB>;
        $l82 = $r20[9];
        $b83 = $l82 cmp 0L;
        if $b83 == 0 goto label15;

        $i84 = r1.<chess.Position: int wMtrl>;
        $i85 = <chess.Evaluate: int pV>;
        if $i84 != $i85 goto label12;

        $r21 = r1.<chess.Position: long[] pieceTypeBB>;
        $l86 = $r21[6];
        i87 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l86);
        $i88 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $i89 = 63 - $i88;
        $i90 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $i91 = 63 - $i90;
        $i92 = 63 - i87;
        $z5 = r1.<chess.Position: boolean whiteMove>;
        if $z5 != 0 goto label10;

        $z6 = 1;
        goto label11;

     label10:
        $z6 = 0;

     label11:
        $i93 = staticinvoke <chess.Evaluate: int krkpEval(int,int,int,boolean)>($i89, $i91, $i92, $z6);
        i1 = neg $i93;
        z0 = 1;
        goto label15;

     label12:
        $i94 = r1.<chess.Position: int wMtrl>;
        $i95 = <chess.Evaluate: int bV>;
        if $i94 != $i95 goto label15;

        $r22 = r1.<chess.Position: long[] pieceTypeBB>;
        $l96 = $r22[4];
        $b97 = $l96 cmp 0L;
        if $b97 == 0 goto label15;

        i98 = i1 / 8;
        i99 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        i100 = staticinvoke <chess.Position: int getX(int)>(i99);
        i101 = staticinvoke <chess.Position: int getY(int)>(i99);
        $r23 = r1.<chess.Position: long[] pieceTypeBB>;
        $l102 = $r23[4];
        $l103 = $l102 & -6172840429334713771L;
        $b104 = $l103 cmp 0L;
        if $b104 == 0 goto label13;

        $r24 = <chess.Evaluate: int[][] distToH1A8>;
        $i105 = 7 - i101;
        $r25 = $r24[$i105];
        $i106 = 7 - i100;
        $i107 = $r25[$i106];
        $i108 = 7 - $i107;
        $i109 = $i108 * 7;
        i1 = i98 - $i109;
        goto label14;

     label13:
        $r26 = <chess.Evaluate: int[][] distToH1A8>;
        $i110 = 7 - i101;
        $r27 = $r26[$i110];
        $i111 = $r27[i100];
        $i112 = 7 - $i111;
        $i113 = $i112 * 7;
        i1 = i98 - $i113;

     label14:
        z0 = 1;

     label15:
        if z0 != 0 goto label19;

        if i1 <= 0 goto label19;

        if i3 != 0 goto label17;

        $i114 = <chess.Evaluate: int bV>;
        $i115 = i6 + $i114;
        if i5 > $i115 goto label17;

        $i116 = <chess.Evaluate: int rV>;
        if i5 >= $i116 goto label16;

        $i117 = r1.<chess.Position: int bMtrl>;
        $i118 = neg $i117;
        $i119 = $i118 / 50;
        return $i119;

     label16:
        i1 = i1 / 8;
        z0 = 1;
        goto label19;

     label17:
        $r28 = r1.<chess.Position: long[] pieceTypeBB>;
        $l120 = $r28[3];
        $r29 = r1.<chess.Position: long[] pieceTypeBB>;
        $l121 = $r29[5];
        $l122 = $l120 | $l121;
        $r30 = r1.<chess.Position: long[] pieceTypeBB>;
        $l123 = $r30[2];
        $l124 = $l122 | $l123;
        $b125 = $l124 cmp 0L;
        if $b125 != 0 goto label19;

        $r31 = r1.<chess.Position: long[] pieceTypeBB>;
        $l126 = $r31[6];
        $l127 = $l126 & -72340172838076674L;
        $b128 = $l127 cmp 0L;
        if $b128 != 0 goto label18;

        $r32 = r1.<chess.Position: long[] pieceTypeBB>;
        $l129 = $r32[4];
        $l130 = $l129 & 6172840429334713770L;
        $b131 = $l130 cmp 0L;
        if $b131 != 0 goto label18;

        $r33 = r1.<chess.Position: long[] pieceTypeBB>;
        $l132 = $r33[7];
        $l133 = $l132 & 217017207043915776L;
        $b134 = $l133 cmp 0L;
        if $b134 == 0 goto label18;

        return 0;

     label18:
        $r34 = r1.<chess.Position: long[] pieceTypeBB>;
        $l135 = $r34[6];
        $l136 = $l135 & 9187201950435737471L;
        $b137 = $l136 cmp 0L;
        if $b137 != 0 goto label19;

        $r35 = r1.<chess.Position: long[] pieceTypeBB>;
        $l138 = $r35[4];
        $l139 = $l138 & -6172840429334713771L;
        $b140 = $l139 cmp 0L;
        if $b140 != 0 goto label19;

        $r36 = r1.<chess.Position: long[] pieceTypeBB>;
        $l141 = $r36[7];
        $l142 = $l141 & -4557642822898941952L;
        $b143 = $l142 cmp 0L;
        if $b143 == 0 goto label19;

        return 0;

     label19:
        if z0 != 0 goto label26;

        if i4 != 0 goto label26;

        $i144 = i5 - i6;
        $i145 = <chess.Evaluate: int bV>;
        if $i144 <= $i145 goto label25;

        $r37 = r1.<chess.Position: long[] pieceTypeBB>;
        $l146 = $r37[5];
        i147 = staticinvoke <java.lang.Long: int bitCount(long)>($l146);
        $r38 = r1.<chess.Position: long[] pieceTypeBB>;
        $l148 = $r38[4];
        i149 = staticinvoke <java.lang.Long: int bitCount(long)>($l148);
        if i147 != 2 goto label20;

        $i150 = r1.<chess.Position: int wMtrl>;
        $i151 = <chess.Evaluate: int nV>;
        $i152 = 2 * $i151;
        if $i150 != $i152 goto label20;

        if i6 != 0 goto label20;

        i1 = i1 / 50;
        goto label24;

     label20:
        if i147 != 1 goto label23;

        if i149 != 1 goto label23;

        $i153 = <chess.Evaluate: int nV>;
        $i154 = <chess.Evaluate: int bV>;
        $i155 = $i153 + $i154;
        if i5 != $i155 goto label23;

        if i6 != 0 goto label23;

        i156 = i1 / 10;
        $i157 = <chess.Evaluate: int nV>;
        $i158 = <chess.Evaluate: int bV>;
        $i159 = $i157 + $i158;
        $i160 = $i159 + 300;
        i161 = i156 + $i160;
        i162 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        i163 = staticinvoke <chess.Position: int getX(int)>(i162);
        i11 = staticinvoke <chess.Position: int getY(int)>(i162);
        $r39 = r1.<chess.Position: long[] pieceTypeBB>;
        $l164 = $r39[4];
        $l165 = $l164 & -6172840429334713771L;
        $b166 = $l165 cmp 0L;
        if $b166 == 0 goto label21;

        $r40 = <chess.Evaluate: int[][] distToH1A8>;
        $i167 = 7 - i11;
        $r41 = $r40[$i167];
        $i168 = 7 - i163;
        $i169 = $r41[$i168];
        $i170 = 7 - $i169;
        $i171 = $i170 * 10;
        i1 = i161 + $i171;
        goto label22;

     label21:
        $r42 = <chess.Evaluate: int[][] distToH1A8>;
        $i172 = 7 - i11;
        $r43 = $r42[$i172];
        $i173 = $r43[i163];
        $i174 = 7 - $i173;
        $i175 = $i174 * 10;
        i1 = i161 + $i175;

     label22:
        goto label24;

     label23:
        i1 = i1 + 300;

     label24:
        z0 = 1;
        goto label26;

     label25:
        $i176 = i5 + i6;
        if $i176 != 0 goto label26;

        $i177 = <chess.Evaluate: int pV>;
        if i3 != $i177 goto label26;

        $r44 = r1.<chess.Position: long[] pieceTypeBB>;
        $l178 = $r44[6];
        i179 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l178);
        $i180 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $i181 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $z7 = r1.<chess.Position: boolean whiteMove>;
        i1 = staticinvoke <chess.Evaluate: int kpkEval(int,int,int,boolean)>($i180, $i181, i179, $z7);
        z0 = 1;

     label26:
        if z0 != 0 goto label30;

        if i1 >= 0 goto label30;

        if i4 != 0 goto label28;

        $i182 = <chess.Evaluate: int bV>;
        $i183 = i5 + $i182;
        if i6 > $i183 goto label28;

        $i184 = <chess.Evaluate: int rV>;
        if i6 >= $i184 goto label27;

        $i185 = r1.<chess.Position: int wMtrl>;
        $i186 = $i185 / 50;
        return $i186;

     label27:
        i1 = i1 / 8;
        z0 = 1;
        goto label30;

     label28:
        $r45 = r1.<chess.Position: long[] pieceTypeBB>;
        $l187 = $r45[9];
        $r46 = r1.<chess.Position: long[] pieceTypeBB>;
        $l188 = $r46[11];
        $l189 = $l187 | $l188;
        $r47 = r1.<chess.Position: long[] pieceTypeBB>;
        $l190 = $r47[8];
        $l191 = $l189 | $l190;
        $b192 = $l191 cmp 0L;
        if $b192 != 0 goto label30;

        $r48 = r1.<chess.Position: long[] pieceTypeBB>;
        $l193 = $r48[12];
        $l194 = $l193 & -72340172838076674L;
        $b195 = $l194 cmp 0L;
        if $b195 != 0 goto label29;

        $r49 = r1.<chess.Position: long[] pieceTypeBB>;
        $l196 = $r49[10];
        $l197 = $l196 & -6172840429334713771L;
        $b198 = $l197 cmp 0L;
        if $b198 != 0 goto label29;

        $r50 = r1.<chess.Position: long[] pieceTypeBB>;
        $l199 = $r50[1];
        $l200 = $l199 & 771L;
        $b201 = $l200 cmp 0L;
        if $b201 == 0 goto label29;

        return 0;

     label29:
        $r51 = r1.<chess.Position: long[] pieceTypeBB>;
        $l202 = $r51[12];
        $l203 = $l202 & 9187201950435737471L;
        $b204 = $l203 cmp 0L;
        if $b204 != 0 goto label30;

        $r52 = r1.<chess.Position: long[] pieceTypeBB>;
        $l205 = $r52[10];
        $l206 = $l205 & 6172840429334713770L;
        $b207 = $l206 cmp 0L;
        if $b207 != 0 goto label30;

        $r53 = r1.<chess.Position: long[] pieceTypeBB>;
        $l208 = $r53[1];
        $l209 = $l208 & 49344L;
        $b210 = $l209 cmp 0L;
        if $b210 == 0 goto label30;

        return 0;

     label30:
        if z0 != 0 goto label39;

        if i3 != 0 goto label39;

        $i211 = i6 - i5;
        $i212 = <chess.Evaluate: int bV>;
        if $i211 <= $i212 goto label36;

        $r54 = r1.<chess.Position: long[] pieceTypeBB>;
        $l213 = $r54[11];
        i214 = staticinvoke <java.lang.Long: int bitCount(long)>($l213);
        $r55 = r1.<chess.Position: long[] pieceTypeBB>;
        $l215 = $r55[10];
        i216 = staticinvoke <java.lang.Long: int bitCount(long)>($l215);
        if i214 != 2 goto label31;

        $i217 = r1.<chess.Position: int bMtrl>;
        $i218 = <chess.Evaluate: int nV>;
        $i219 = 2 * $i218;
        if $i217 != $i219 goto label31;

        if i5 != 0 goto label31;

        i1 = i1 / 50;
        goto label35;

     label31:
        if i214 != 1 goto label34;

        if i216 != 1 goto label34;

        $i220 = <chess.Evaluate: int nV>;
        $i221 = <chess.Evaluate: int bV>;
        $i222 = $i220 + $i221;
        if i6 != $i222 goto label34;

        if i5 != 0 goto label34;

        i223 = i1 / 10;
        $i224 = <chess.Evaluate: int nV>;
        $i225 = <chess.Evaluate: int bV>;
        $i226 = $i224 + $i225;
        $i227 = $i226 + 300;
        i228 = i223 - $i227;
        i229 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        i230 = staticinvoke <chess.Position: int getX(int)>(i229);
        i231 = staticinvoke <chess.Position: int getY(int)>(i229);
        $r56 = r1.<chess.Position: long[] pieceTypeBB>;
        $l232 = $r56[10];
        $l233 = $l232 & -6172840429334713771L;
        $b234 = $l233 cmp 0L;
        if $b234 == 0 goto label32;

        $r57 = <chess.Evaluate: int[][] distToH1A8>;
        $i235 = 7 - i231;
        $r58 = $r57[$i235];
        $i236 = 7 - i230;
        $i237 = $r58[$i236];
        $i238 = 7 - $i237;
        $i239 = $i238 * 10;
        i1 = i228 - $i239;
        goto label33;

     label32:
        $r59 = <chess.Evaluate: int[][] distToH1A8>;
        $i240 = 7 - i231;
        $r60 = $r59[$i240];
        $i241 = $r60[i230];
        $i242 = 7 - $i241;
        $i243 = $i242 * 10;
        i1 = i228 - $i243;

     label33:
        goto label35;

     label34:
        i1 = i1 + -300;

     label35:
        z8 = 1;
        goto label39;

     label36:
        $i244 = i5 + i6;
        if $i244 != 0 goto label39;

        $i245 = <chess.Evaluate: int pV>;
        if i4 != $i245 goto label39;

        $r61 = r1.<chess.Position: long[] pieceTypeBB>;
        $l246 = $r61[12];
        i247 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l246);
        $i248 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $i249 = 63 - $i248;
        $i250 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $i251 = 63 - $i250;
        $i252 = 63 - i247;
        $z9 = r1.<chess.Position: boolean whiteMove>;
        if $z9 != 0 goto label37;

        $z10 = 1;
        goto label38;

     label37:
        $z10 = 0;

     label38:
        $i253 = staticinvoke <chess.Evaluate: int kpkEval(int,int,int,boolean)>($i249, $i251, $i252, $z10);
        i1 = neg $i253;
        z11 = 1;

     label39:
        return i1;
    }

    private static final int evalKQKP(int, int, int, int, boolean)
    {
        int i0, i1, i2, i3, i4, i5, $i9, $i10, $i11, $i12, $i16, $i26, $i27, $i28, $i29, $i30;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        long $l6, $l7, $l13, $l14, $l17, $l18, $l20, $l21, $l23, $l24;
        byte $b8, $b15, $b19, $b22, $b25;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        z0 := @parameter4: boolean;
        z1 = 0;
        $l6 = 1L << i2;
        $l7 = $l6 & 65535L;
        $b8 = $l7 cmp 0L;
        if $b8 != 0 goto label0;

        z2 = 1;
        goto label15;

     label0:
        $i9 = staticinvoke <chess.Position: int getX(int)>(i3);
        $i10 = staticinvoke <chess.Position: int getX(int)>(i2);
        $i11 = $i9 - $i10;
        $i12 = staticinvoke <java.lang.Math: int abs(int)>($i11);
        if $i12 <= 2 goto label1;

        z2 = 1;
        goto label15;

     label1:
        tableswitch(i3)
        {
            case 8: goto label2;
            case 9: goto label14;
            case 10: goto label5;
            case 11: goto label14;
            case 12: goto label14;
            case 13: goto label8;
            case 14: goto label14;
            case 15: goto label11;
            default: goto label14;
        };

     label2:
        $l13 = 1L << i0;
        $l14 = $l13 & 64946642719L;
        $b15 = $l14 cmp 0L;
        if $b15 == 0 goto label3;

        $z3 = 1;
        goto label4;

     label3:
        $z3 = 0;

     label4:
        z2 = $z3;
        if z2 == 0 goto label15;

        if i2 != 0 goto label15;

        $i16 = staticinvoke <chess.Position: int getX(int)>(i1);
        if $i16 != 1 goto label15;

        if z0 != 0 goto label15;

        z2 = 0;
        goto label15;

     label5:
        $l17 = 1L << i0;
        $l18 = $l17 & 119480095L;
        $b19 = $l18 cmp 0L;
        if $b19 == 0 goto label6;

        $z4 = 1;
        goto label7;

     label6:
        $z4 = 0;

     label7:
        z2 = $z4;
        goto label15;

     label8:
        $l20 = 1L << i0;
        $l21 = $l20 & 3774413048L;
        $b22 = $l21 cmp 0L;
        if $b22 == 0 goto label9;

        $z5 = 1;
        goto label10;

     label9:
        $z5 = 0;

     label10:
        z2 = $z5;
        goto label15;

     label11:
        $l23 = 1L << i0;
        $l24 = $l23 & 1034969217272L;
        $b25 = $l24 cmp 0L;
        if $b25 == 0 goto label12;

        $z6 = 1;
        goto label13;

     label12:
        $z6 = 0;

     label13:
        z2 = $z6;
        if z2 == 0 goto label15;

        if i2 != 7 goto label15;

        $i26 = staticinvoke <chess.Position: int getX(int)>(i1);
        if $i26 != 6 goto label15;

        if z0 != 0 goto label15;

        z2 = 0;
        goto label15;

     label14:
        z2 = 1;

     label15:
        i4 = staticinvoke <chess.BitBoard: int getDistance(int,int)>(i0, i3);
        $i27 = <chess.Evaluate: int qV>;
        $i28 = <chess.Evaluate: int pV>;
        $i29 = $i27 - $i28;
        $i30 = 20 * i4;
        i5 = $i29 - $i30;
        if z2 != 0 goto label16;

        i5 = i5 / 50;

     label16:
        return i5;
    }

    private static final int kpkEval(int, int, int, boolean)
    {
        int i0, i1, i2, i4, i5, $i6, $i8, $i9, $i10, $i11, $i12, i13, $i14, i15, $i16, $i17, i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        boolean z0, z1, $z2;
        byte b3, $b7, $b19;
        byte[] $r0;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        z0 := @parameter3: boolean;
        $i6 = staticinvoke <chess.Position: int getX(int)>(i0);
        if $i6 < 4 goto label0;

        i0 = i0 ^ 7;
        i1 = i1 ^ 7;
        i2 = i2 ^ 7;

     label0:
        if z0 == 0 goto label1;

        $b7 = 0;
        goto label2;

     label1:
        $b7 = 1;

     label2:
        b3 = $b7;
        $i8 = b3 * 32;
        $i9 = staticinvoke <chess.Position: int getY(int)>(i0);
        $i10 = $i9 * 4;
        $i11 = $i8 + $i10;
        $i12 = staticinvoke <chess.Position: int getX(int)>(i0);
        i13 = $i11 + $i12;
        $i14 = i13 * 64;
        i15 = $i14 + i1;
        $i16 = i15 * 48;
        $i17 = $i16 + i2;
        i18 = $i17 - 8;
        i4 = i18 / 8;
        i5 = i18 % 8;
        $r0 = <chess.Evaluate: byte[] kpkTable>;
        $b19 = $r0[i4];
        $i20 = 1 << i5;
        $i21 = $b19 & $i20;
        if $i21 != 0 goto label3;

        $z2 = 1;
        goto label4;

     label3:
        $z2 = 0;

     label4:
        z1 = $z2;
        if z1 == 0 goto label5;

        return 0;

     label5:
        $i22 = <chess.Evaluate: int qV>;
        $i23 = <chess.Evaluate: int pV>;
        $i24 = $i23 / 4;
        $i25 = staticinvoke <chess.Position: int getY(int)>(i2);
        $i26 = 7 - $i25;
        $i27 = $i24 * $i26;
        $i28 = $i22 - $i27;
        return $i28;
    }

    private static final int krkpEval(int, int, int, boolean)
    {
        int i0, i1, i2, i5, $i6, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, i16, $i17, $i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30;
        boolean z0, z1, $z2;
        byte b3, b4, $b7;
        byte[] $r0;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        z0 := @parameter3: boolean;
        $i6 = staticinvoke <chess.Position: int getX(int)>(i1);
        if $i6 < 4 goto label0;

        i0 = i0 ^ 7;
        i1 = i1 ^ 7;
        i2 = i2 ^ 7;

     label0:
        if z0 == 0 goto label1;

        $b7 = 0;
        goto label2;

     label1:
        $b7 = 1;

     label2:
        b3 = $b7;
        $i8 = b3 * 32;
        $i9 = staticinvoke <chess.Position: int getY(int)>(i1);
        $i10 = $i9 * 4;
        $i11 = $i8 + $i10;
        $i12 = staticinvoke <chess.Position: int getX(int)>(i1);
        i13 = $i11 + $i12;
        $i14 = i13 * 48;
        $i15 = $i14 + i2;
        i16 = $i15 - 8;
        $i17 = i16 * 8;
        $i18 = staticinvoke <chess.Position: int getY(int)>(i0);
        i19 = $i17 + $i18;
        $r0 = <chess.Evaluate: byte[] krkpTable>;
        b4 = $r0[i19];
        $i20 = staticinvoke <chess.Position: int getX(int)>(i0);
        $i21 = 1 << $i20;
        $i22 = b4 & $i21;
        if $i22 == 0 goto label3;

        $z2 = 1;
        goto label4;

     label3:
        $z2 = 0;

     label4:
        z1 = $z2;
        $i23 = <chess.Evaluate: int rV>;
        $i24 = <chess.Evaluate: int pV>;
        $i25 = $i23 - $i24;
        $i26 = staticinvoke <chess.Position: int getY(int)>(i2);
        $i27 = <chess.Evaluate: int pV>;
        $i28 = $i26 * $i27;
        $i29 = $i28 / 4;
        i5 = $i25 + $i29;
        if z1 == 0 goto label5;

        i30 = i5 + 150;
        goto label6;

     label5:
        i30 = i5 / 50;

     label6:
        return i30;
    }

    static final int interpolate(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        if i0 <= i3 goto label0;

        return i4;

     label0:
        if i0 >= i1 goto label1;

        return i2;

     label1:
        $i5 = i0 - i1;
        $i6 = i4 - i2;
        $i7 = $i5 * $i6;
        $i8 = i3 - i1;
        $i9 = $i7 / $i8;
        $i10 = $i9 + i2;
        return $i10;
    }

    static void <clinit>()
    {
        chess.Parameters $r0, $r2, $r3, $r4, $r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, i45, $i46, $i49, $i50, $i53, $i54, $i55, i57;
        chess.Evaluate$PawnHashData r1, $r102;
        boolean z0, $z1, z2, $z3;
        int[] $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r104, $r105;
        int[][] $r61, $r75, $r89;
        chess.Evaluate$PawnHashData[] $r101, $r103;
        long $l47, $l48, $l51, $l52;
        char c56;
        chess.Evaluate$KingSafetyHashData[] $r106, $r109;
        chess.Evaluate$KingSafetyHashData $r107, r108;

        $r0 = staticinvoke <chess.Parameters: chess.Parameters instance()>();
        $i3 = virtualinvoke $r0.<chess.Parameters: int getIntPar(java.lang.String)>("pV");
        $i4 = 92 + $i3;
        <chess.Evaluate: int pV> = $i4;
        $r2 = staticinvoke <chess.Parameters: chess.Parameters instance()>();
        $i5 = virtualinvoke $r2.<chess.Parameters: int getIntPar(java.lang.String)>("nV");
        $i6 = 385 + $i5;
        <chess.Evaluate: int nV> = $i6;
        $r3 = staticinvoke <chess.Parameters: chess.Parameters instance()>();
        $i7 = virtualinvoke $r3.<chess.Parameters: int getIntPar(java.lang.String)>("bV");
        $i8 = 385 + $i7;
        <chess.Evaluate: int bV> = $i8;
        $r4 = staticinvoke <chess.Parameters: chess.Parameters instance()>();
        $i9 = virtualinvoke $r4.<chess.Parameters: int getIntPar(java.lang.String)>("rV");
        $i10 = 593 + $i9;
        <chess.Evaluate: int rV> = $i10;
        $r5 = staticinvoke <chess.Parameters: chess.Parameters instance()>();
        $i11 = virtualinvoke $r5.<chess.Parameters: int getIntPar(java.lang.String)>("qV");
        $i12 = 1244 + $i11;
        <chess.Evaluate: int qV> = $i12;
        $r6 = newarray (int)[13];
        <chess.Evaluate: int[] pieceValue> = $r6;
        $r7 = <chess.Evaluate: int[] pieceValue>;
        $r7[1] = 9900;
        $r8 = <chess.Evaluate: int[] pieceValue>;
        $i13 = <chess.Evaluate: int qV>;
        $r8[2] = $i13;
        $r9 = <chess.Evaluate: int[] pieceValue>;
        $i14 = <chess.Evaluate: int rV>;
        $r9[3] = $i14;
        $r10 = <chess.Evaluate: int[] pieceValue>;
        $i15 = <chess.Evaluate: int bV>;
        $r10[4] = $i15;
        $r11 = <chess.Evaluate: int[] pieceValue>;
        $i16 = <chess.Evaluate: int nV>;
        $r11[5] = $i16;
        $r12 = <chess.Evaluate: int[] pieceValue>;
        $i17 = <chess.Evaluate: int pV>;
        $r12[6] = $i17;
        $r13 = <chess.Evaluate: int[] pieceValue>;
        $r13[7] = 9900;
        $r14 = <chess.Evaluate: int[] pieceValue>;
        $i18 = <chess.Evaluate: int qV>;
        $r14[8] = $i18;
        $r15 = <chess.Evaluate: int[] pieceValue>;
        $i19 = <chess.Evaluate: int rV>;
        $r15[9] = $i19;
        $r16 = <chess.Evaluate: int[] pieceValue>;
        $i20 = <chess.Evaluate: int bV>;
        $r16[10] = $i20;
        $r17 = <chess.Evaluate: int[] pieceValue>;
        $i21 = <chess.Evaluate: int nV>;
        $r17[11] = $i21;
        $r18 = <chess.Evaluate: int[] pieceValue>;
        $i22 = <chess.Evaluate: int pV>;
        $r18[12] = $i22;
        $r19 = <chess.Evaluate: int[] pieceValue>;
        $r19[0] = 0;
        $r20 = newarray (int)[64];
        $r20[0] = -22;
        $r20[1] = -35;
        $r20[2] = -40;
        $r20[3] = -40;
        $r20[4] = -40;
        $r20[5] = -40;
        $r20[6] = -35;
        $r20[7] = -22;
        $r20[8] = -22;
        $r20[9] = -35;
        $r20[10] = -40;
        $r20[11] = -40;
        $r20[12] = -40;
        $r20[13] = -40;
        $r20[14] = -35;
        $r20[15] = -22;
        $r20[16] = -25;
        $r20[17] = -35;
        $r20[18] = -40;
        $r20[19] = -45;
        $r20[20] = -45;
        $r20[21] = -40;
        $r20[22] = -35;
        $r20[23] = -25;
        $r20[24] = -15;
        $r20[25] = -30;
        $r20[26] = -35;
        $r20[27] = -40;
        $r20[28] = -40;
        $r20[29] = -35;
        $r20[30] = -30;
        $r20[31] = -15;
        $r20[32] = -10;
        $r20[33] = -15;
        $r20[34] = -20;
        $r20[35] = -25;
        $r20[36] = -25;
        $r20[37] = -20;
        $r20[38] = -15;
        $r20[39] = -10;
        $r20[40] = 4;
        $r20[41] = -2;
        $r20[42] = -5;
        $r20[43] = -15;
        $r20[44] = -15;
        $r20[45] = -5;
        $r20[46] = -2;
        $r20[47] = 4;
        $r20[48] = 16;
        $r20[49] = 14;
        $r20[50] = 7;
        $r20[51] = -3;
        $r20[52] = -3;
        $r20[53] = 7;
        $r20[54] = 14;
        $r20[55] = 16;
        $r20[56] = 24;
        $r20[57] = 24;
        $r20[58] = 9;
        $r20[59] = 0;
        $r20[60] = 0;
        $r20[61] = 9;
        $r20[62] = 24;
        $r20[63] = 24;
        <chess.Evaluate: int[] kt1b> = $r20;
        $r21 = newarray (int)[64];
        $r21[0] = 0;
        $r21[1] = 8;
        $r21[2] = 16;
        $r21[3] = 24;
        $r21[4] = 24;
        $r21[5] = 16;
        $r21[6] = 8;
        $r21[7] = 0;
        $r21[8] = 8;
        $r21[9] = 16;
        $r21[10] = 24;
        $r21[11] = 32;
        $r21[12] = 32;
        $r21[13] = 24;
        $r21[14] = 16;
        $r21[15] = 8;
        $r21[16] = 16;
        $r21[17] = 24;
        $r21[18] = 32;
        $r21[19] = 40;
        $r21[20] = 40;
        $r21[21] = 32;
        $r21[22] = 24;
        $r21[23] = 16;
        $r21[24] = 24;
        $r21[25] = 32;
        $r21[26] = 40;
        $r21[27] = 48;
        $r21[28] = 48;
        $r21[29] = 40;
        $r21[30] = 32;
        $r21[31] = 24;
        $r21[32] = 24;
        $r21[33] = 32;
        $r21[34] = 40;
        $r21[35] = 48;
        $r21[36] = 48;
        $r21[37] = 40;
        $r21[38] = 32;
        $r21[39] = 24;
        $r21[40] = 16;
        $r21[41] = 24;
        $r21[42] = 32;
        $r21[43] = 40;
        $r21[44] = 40;
        $r21[45] = 32;
        $r21[46] = 24;
        $r21[47] = 16;
        $r21[48] = 8;
        $r21[49] = 16;
        $r21[50] = 24;
        $r21[51] = 32;
        $r21[52] = 32;
        $r21[53] = 24;
        $r21[54] = 16;
        $r21[55] = 8;
        $r21[56] = 0;
        $r21[57] = 8;
        $r21[58] = 16;
        $r21[59] = 24;
        $r21[60] = 24;
        $r21[61] = 16;
        $r21[62] = 8;
        $r21[63] = 0;
        <chess.Evaluate: int[] kt2b> = $r21;
        $r22 = newarray (int)[64];
        $r22[0] = 0;
        $r22[1] = 0;
        $r22[2] = 0;
        $r22[3] = 0;
        $r22[4] = 0;
        $r22[5] = 0;
        $r22[6] = 0;
        $r22[7] = 0;
        $r22[8] = 8;
        $r22[9] = 16;
        $r22[10] = 24;
        $r22[11] = 32;
        $r22[12] = 32;
        $r22[13] = 24;
        $r22[14] = 16;
        $r22[15] = 8;
        $r22[16] = 3;
        $r22[17] = 12;
        $r22[18] = 20;
        $r22[19] = 28;
        $r22[20] = 28;
        $r22[21] = 20;
        $r22[22] = 12;
        $r22[23] = 3;
        $r22[24] = -5;
        $r22[25] = 4;
        $r22[26] = 10;
        $r22[27] = 20;
        $r22[28] = 20;
        $r22[29] = 10;
        $r22[30] = 4;
        $r22[31] = -5;
        $r22[32] = -6;
        $r22[33] = 4;
        $r22[34] = 5;
        $r22[35] = 16;
        $r22[36] = 16;
        $r22[37] = 5;
        $r22[38] = 4;
        $r22[39] = -6;
        $r22[40] = -6;
        $r22[41] = 4;
        $r22[42] = 2;
        $r22[43] = 5;
        $r22[44] = 5;
        $r22[45] = 2;
        $r22[46] = 4;
        $r22[47] = -6;
        $r22[48] = -6;
        $r22[49] = 4;
        $r22[50] = 4;
        $r22[51] = -15;
        $r22[52] = -15;
        $r22[53] = 4;
        $r22[54] = 4;
        $r22[55] = -6;
        $r22[56] = 0;
        $r22[57] = 0;
        $r22[58] = 0;
        $r22[59] = 0;
        $r22[60] = 0;
        $r22[61] = 0;
        $r22[62] = 0;
        $r22[63] = 0;
        <chess.Evaluate: int[] pt1b> = $r22;
        $r23 = newarray (int)[64];
        $r23[0] = 0;
        $r23[1] = 0;
        $r23[2] = 0;
        $r23[3] = 0;
        $r23[4] = 0;
        $r23[5] = 0;
        $r23[6] = 0;
        $r23[7] = 0;
        $r23[8] = 25;
        $r23[9] = 40;
        $r23[10] = 45;
        $r23[11] = 45;
        $r23[12] = 45;
        $r23[13] = 45;
        $r23[14] = 40;
        $r23[15] = 25;
        $r23[16] = 17;
        $r23[17] = 32;
        $r23[18] = 35;
        $r23[19] = 35;
        $r23[20] = 35;
        $r23[21] = 35;
        $r23[22] = 32;
        $r23[23] = 17;
        $r23[24] = 5;
        $r23[25] = 24;
        $r23[26] = 24;
        $r23[27] = 24;
        $r23[28] = 24;
        $r23[29] = 24;
        $r23[30] = 24;
        $r23[31] = 5;
        $r23[32] = -9;
        $r23[33] = 11;
        $r23[34] = 11;
        $r23[35] = 11;
        $r23[36] = 11;
        $r23[37] = 11;
        $r23[38] = 11;
        $r23[39] = -9;
        $r23[40] = -17;
        $r23[41] = 3;
        $r23[42] = 3;
        $r23[43] = 3;
        $r23[44] = 3;
        $r23[45] = 3;
        $r23[46] = 3;
        $r23[47] = -17;
        $r23[48] = -20;
        $r23[49] = 0;
        $r23[50] = 0;
        $r23[51] = 0;
        $r23[52] = 0;
        $r23[53] = 0;
        $r23[54] = 0;
        $r23[55] = -20;
        $r23[56] = 0;
        $r23[57] = 0;
        $r23[58] = 0;
        $r23[59] = 0;
        $r23[60] = 0;
        $r23[61] = 0;
        $r23[62] = 0;
        $r23[63] = 0;
        <chess.Evaluate: int[] pt2b> = $r23;
        $r24 = newarray (int)[64];
        $r24[0] = -53;
        $r24[1] = -42;
        $r24[2] = -32;
        $r24[3] = -21;
        $r24[4] = -21;
        $r24[5] = -32;
        $r24[6] = -42;
        $r24[7] = -53;
        $r24[8] = -42;
        $r24[9] = -32;
        $r24[10] = -10;
        $r24[11] = 0;
        $r24[12] = 0;
        $r24[13] = -10;
        $r24[14] = -32;
        $r24[15] = -42;
        $r24[16] = -21;
        $r24[17] = 5;
        $r24[18] = 10;
        $r24[19] = 16;
        $r24[20] = 16;
        $r24[21] = 10;
        $r24[22] = 5;
        $r24[23] = -21;
        $r24[24] = -18;
        $r24[25] = 0;
        $r24[26] = 10;
        $r24[27] = 21;
        $r24[28] = 21;
        $r24[29] = 10;
        $r24[30] = 0;
        $r24[31] = -18;
        $r24[32] = -18;
        $r24[33] = 0;
        $r24[34] = 3;
        $r24[35] = 21;
        $r24[36] = 21;
        $r24[37] = 3;
        $r24[38] = 0;
        $r24[39] = -18;
        $r24[40] = -21;
        $r24[41] = -10;
        $r24[42] = 0;
        $r24[43] = 0;
        $r24[44] = 0;
        $r24[45] = 0;
        $r24[46] = -10;
        $r24[47] = -21;
        $r24[48] = -42;
        $r24[49] = -32;
        $r24[50] = -10;
        $r24[51] = 0;
        $r24[52] = 0;
        $r24[53] = -10;
        $r24[54] = -32;
        $r24[55] = -42;
        $r24[56] = -53;
        $r24[57] = -42;
        $r24[58] = -32;
        $r24[59] = -21;
        $r24[60] = -21;
        $r24[61] = -32;
        $r24[62] = -42;
        $r24[63] = -53;
        <chess.Evaluate: int[] nt1b> = $r24;
        $r25 = newarray (int)[64];
        $r25[0] = -56;
        $r25[1] = -44;
        $r25[2] = -34;
        $r25[3] = -22;
        $r25[4] = -22;
        $r25[5] = -34;
        $r25[6] = -44;
        $r25[7] = -56;
        $r25[8] = -44;
        $r25[9] = -34;
        $r25[10] = -10;
        $r25[11] = 0;
        $r25[12] = 0;
        $r25[13] = -10;
        $r25[14] = -34;
        $r25[15] = -44;
        $r25[16] = -22;
        $r25[17] = 5;
        $r25[18] = 10;
        $r25[19] = 17;
        $r25[20] = 17;
        $r25[21] = 10;
        $r25[22] = 5;
        $r25[23] = -22;
        $r25[24] = -19;
        $r25[25] = 0;
        $r25[26] = 10;
        $r25[27] = 22;
        $r25[28] = 22;
        $r25[29] = 10;
        $r25[30] = 0;
        $r25[31] = -19;
        $r25[32] = -19;
        $r25[33] = 0;
        $r25[34] = 3;
        $r25[35] = 22;
        $r25[36] = 22;
        $r25[37] = 3;
        $r25[38] = 0;
        $r25[39] = -19;
        $r25[40] = -22;
        $r25[41] = -10;
        $r25[42] = 0;
        $r25[43] = 0;
        $r25[44] = 0;
        $r25[45] = 0;
        $r25[46] = -10;
        $r25[47] = -22;
        $r25[48] = -44;
        $r25[49] = -34;
        $r25[50] = -10;
        $r25[51] = 0;
        $r25[52] = 0;
        $r25[53] = -10;
        $r25[54] = -34;
        $r25[55] = -44;
        $r25[56] = -56;
        $r25[57] = -44;
        $r25[58] = -34;
        $r25[59] = -22;
        $r25[60] = -22;
        $r25[61] = -34;
        $r25[62] = -44;
        $r25[63] = -56;
        <chess.Evaluate: int[] nt2b> = $r25;
        $r26 = newarray (int)[64];
        $r26[0] = 0;
        $r26[1] = 0;
        $r26[2] = 0;
        $r26[3] = 0;
        $r26[4] = 0;
        $r26[5] = 0;
        $r26[6] = 0;
        $r26[7] = 0;
        $r26[8] = 0;
        $r26[9] = 4;
        $r26[10] = 2;
        $r26[11] = 2;
        $r26[12] = 2;
        $r26[13] = 2;
        $r26[14] = 4;
        $r26[15] = 0;
        $r26[16] = 0;
        $r26[17] = 2;
        $r26[18] = 4;
        $r26[19] = 4;
        $r26[20] = 4;
        $r26[21] = 4;
        $r26[22] = 2;
        $r26[23] = 0;
        $r26[24] = 0;
        $r26[25] = 2;
        $r26[26] = 4;
        $r26[27] = 4;
        $r26[28] = 4;
        $r26[29] = 4;
        $r26[30] = 2;
        $r26[31] = 0;
        $r26[32] = 0;
        $r26[33] = 2;
        $r26[34] = 4;
        $r26[35] = 4;
        $r26[36] = 4;
        $r26[37] = 4;
        $r26[38] = 2;
        $r26[39] = 0;
        $r26[40] = 0;
        $r26[41] = 3;
        $r26[42] = 4;
        $r26[43] = 4;
        $r26[44] = 4;
        $r26[45] = 4;
        $r26[46] = 3;
        $r26[47] = 0;
        $r26[48] = 0;
        $r26[49] = 4;
        $r26[50] = 2;
        $r26[51] = 2;
        $r26[52] = 2;
        $r26[53] = 2;
        $r26[54] = 4;
        $r26[55] = 0;
        $r26[56] = -5;
        $r26[57] = -5;
        $r26[58] = -7;
        $r26[59] = -5;
        $r26[60] = -5;
        $r26[61] = -7;
        $r26[62] = -5;
        $r26[63] = -5;
        <chess.Evaluate: int[] bt1b> = $r26;
        $r27 = newarray (int)[64];
        $r27[0] = 0;
        $r27[1] = 0;
        $r27[2] = 0;
        $r27[3] = 0;
        $r27[4] = 0;
        $r27[5] = 0;
        $r27[6] = 0;
        $r27[7] = 0;
        $r27[8] = 0;
        $r27[9] = 2;
        $r27[10] = 2;
        $r27[11] = 2;
        $r27[12] = 2;
        $r27[13] = 2;
        $r27[14] = 2;
        $r27[15] = 0;
        $r27[16] = 0;
        $r27[17] = 2;
        $r27[18] = 4;
        $r27[19] = 4;
        $r27[20] = 4;
        $r27[21] = 4;
        $r27[22] = 2;
        $r27[23] = 0;
        $r27[24] = 0;
        $r27[25] = 2;
        $r27[26] = 4;
        $r27[27] = 4;
        $r27[28] = 4;
        $r27[29] = 4;
        $r27[30] = 2;
        $r27[31] = 0;
        $r27[32] = 0;
        $r27[33] = 2;
        $r27[34] = 4;
        $r27[35] = 4;
        $r27[36] = 4;
        $r27[37] = 4;
        $r27[38] = 2;
        $r27[39] = 0;
        $r27[40] = 0;
        $r27[41] = 2;
        $r27[42] = 4;
        $r27[43] = 4;
        $r27[44] = 4;
        $r27[45] = 4;
        $r27[46] = 2;
        $r27[47] = 0;
        $r27[48] = 0;
        $r27[49] = 2;
        $r27[50] = 2;
        $r27[51] = 2;
        $r27[52] = 2;
        $r27[53] = 2;
        $r27[54] = 2;
        $r27[55] = 0;
        $r27[56] = 0;
        $r27[57] = 0;
        $r27[58] = 0;
        $r27[59] = 0;
        $r27[60] = 0;
        $r27[61] = 0;
        $r27[62] = 0;
        $r27[63] = 0;
        <chess.Evaluate: int[] bt2b> = $r27;
        $r28 = newarray (int)[64];
        $r28[0] = -10;
        $r28[1] = -5;
        $r28[2] = 0;
        $r28[3] = 0;
        $r28[4] = 0;
        $r28[5] = 0;
        $r28[6] = -5;
        $r28[7] = -10;
        $r28[8] = -5;
        $r28[9] = 0;
        $r28[10] = 5;
        $r28[11] = 5;
        $r28[12] = 5;
        $r28[13] = 5;
        $r28[14] = 0;
        $r28[15] = -5;
        $r28[16] = 0;
        $r28[17] = 5;
        $r28[18] = 5;
        $r28[19] = 6;
        $r28[20] = 6;
        $r28[21] = 5;
        $r28[22] = 5;
        $r28[23] = 0;
        $r28[24] = 0;
        $r28[25] = 5;
        $r28[26] = 6;
        $r28[27] = 6;
        $r28[28] = 6;
        $r28[29] = 6;
        $r28[30] = 5;
        $r28[31] = 0;
        $r28[32] = 0;
        $r28[33] = 5;
        $r28[34] = 6;
        $r28[35] = 6;
        $r28[36] = 6;
        $r28[37] = 6;
        $r28[38] = 5;
        $r28[39] = 0;
        $r28[40] = 0;
        $r28[41] = 5;
        $r28[42] = 5;
        $r28[43] = 6;
        $r28[44] = 6;
        $r28[45] = 5;
        $r28[46] = 5;
        $r28[47] = 0;
        $r28[48] = -5;
        $r28[49] = 0;
        $r28[50] = 5;
        $r28[51] = 5;
        $r28[52] = 5;
        $r28[53] = 5;
        $r28[54] = 0;
        $r28[55] = -5;
        $r28[56] = -10;
        $r28[57] = -5;
        $r28[58] = 0;
        $r28[59] = 0;
        $r28[60] = 0;
        $r28[61] = 0;
        $r28[62] = -5;
        $r28[63] = -10;
        <chess.Evaluate: int[] qt1b> = $r28;
        $r29 = newarray (int)[64];
        $r29[0] = 8;
        $r29[1] = 11;
        $r29[2] = 13;
        $r29[3] = 13;
        $r29[4] = 13;
        $r29[5] = 13;
        $r29[6] = 11;
        $r29[7] = 8;
        $r29[8] = 22;
        $r29[9] = 27;
        $r29[10] = 27;
        $r29[11] = 27;
        $r29[12] = 27;
        $r29[13] = 27;
        $r29[14] = 27;
        $r29[15] = 22;
        $r29[16] = 0;
        $r29[17] = 0;
        $r29[18] = 0;
        $r29[19] = 0;
        $r29[20] = 0;
        $r29[21] = 0;
        $r29[22] = 0;
        $r29[23] = 0;
        $r29[24] = 0;
        $r29[25] = 0;
        $r29[26] = 0;
        $r29[27] = 0;
        $r29[28] = 0;
        $r29[29] = 0;
        $r29[30] = 0;
        $r29[31] = 0;
        $r29[32] = -2;
        $r29[33] = 0;
        $r29[34] = 0;
        $r29[35] = 0;
        $r29[36] = 0;
        $r29[37] = 0;
        $r29[38] = 0;
        $r29[39] = -2;
        $r29[40] = -2;
        $r29[41] = 0;
        $r29[42] = 0;
        $r29[43] = 2;
        $r29[44] = 2;
        $r29[45] = 0;
        $r29[46] = 0;
        $r29[47] = -2;
        $r29[48] = -3;
        $r29[49] = 2;
        $r29[50] = 5;
        $r29[51] = 5;
        $r29[52] = 5;
        $r29[53] = 5;
        $r29[54] = 2;
        $r29[55] = -3;
        $r29[56] = 0;
        $r29[57] = 3;
        $r29[58] = 5;
        $r29[59] = 5;
        $r29[60] = 5;
        $r29[61] = 5;
        $r29[62] = 3;
        $r29[63] = 0;
        <chess.Evaluate: int[] rt1b> = $r29;
        $r30 = newarray (int)[64];
        <chess.Evaluate: int[] kt1w> = $r30;
        $r31 = newarray (int)[64];
        <chess.Evaluate: int[] qt1w> = $r31;
        $r32 = newarray (int)[64];
        <chess.Evaluate: int[] rt1w> = $r32;
        $r33 = newarray (int)[64];
        <chess.Evaluate: int[] bt1w> = $r33;
        $r34 = newarray (int)[64];
        <chess.Evaluate: int[] nt1w> = $r34;
        $r35 = newarray (int)[64];
        <chess.Evaluate: int[] pt1w> = $r35;
        $r36 = newarray (int)[64];
        <chess.Evaluate: int[] kt2w> = $r36;
        $r37 = newarray (int)[64];
        <chess.Evaluate: int[] bt2w> = $r37;
        $r38 = newarray (int)[64];
        <chess.Evaluate: int[] nt2w> = $r38;
        $r39 = newarray (int)[64];
        <chess.Evaluate: int[] pt2w> = $r39;
        i0 = 0;

     label0:
        if i0 >= 64 goto label1;

        $r40 = <chess.Evaluate: int[] kt1w>;
        $r41 = <chess.Evaluate: int[] kt1b>;
        $i23 = 63 - i0;
        $i24 = $r41[$i23];
        $r40[i0] = $i24;
        $r42 = <chess.Evaluate: int[] qt1w>;
        $r43 = <chess.Evaluate: int[] qt1b>;
        $i25 = 63 - i0;
        $i26 = $r43[$i25];
        $r42[i0] = $i26;
        $r44 = <chess.Evaluate: int[] rt1w>;
        $r45 = <chess.Evaluate: int[] rt1b>;
        $i27 = 63 - i0;
        $i28 = $r45[$i27];
        $r44[i0] = $i28;
        $r46 = <chess.Evaluate: int[] bt1w>;
        $r47 = <chess.Evaluate: int[] bt1b>;
        $i29 = 63 - i0;
        $i30 = $r47[$i29];
        $r46[i0] = $i30;
        $r48 = <chess.Evaluate: int[] nt1w>;
        $r49 = <chess.Evaluate: int[] nt1b>;
        $i31 = 63 - i0;
        $i32 = $r49[$i31];
        $r48[i0] = $i32;
        $r50 = <chess.Evaluate: int[] pt1w>;
        $r51 = <chess.Evaluate: int[] pt1b>;
        $i33 = 63 - i0;
        $i34 = $r51[$i33];
        $r50[i0] = $i34;
        $r52 = <chess.Evaluate: int[] kt2w>;
        $r53 = <chess.Evaluate: int[] kt2b>;
        $i35 = 63 - i0;
        $i36 = $r53[$i35];
        $r52[i0] = $i36;
        $r54 = <chess.Evaluate: int[] bt2w>;
        $r55 = <chess.Evaluate: int[] bt2b>;
        $i37 = 63 - i0;
        $i38 = $r55[$i37];
        $r54[i0] = $i38;
        $r56 = <chess.Evaluate: int[] nt2w>;
        $r57 = <chess.Evaluate: int[] nt2b>;
        $i39 = 63 - i0;
        $i40 = $r57[$i39];
        $r56[i0] = $i40;
        $r58 = <chess.Evaluate: int[] pt2w>;
        $r59 = <chess.Evaluate: int[] pt2b>;
        $i41 = 63 - i0;
        $i42 = $r59[$i41];
        $r58[i0] = $i42;
        i0 = i0 + 1;
        goto label0;

     label1:
        $r60 = newarray (int)[64];
        $r60[0] = 0;
        $r60[1] = 0;
        $r60[2] = 0;
        $r60[3] = 0;
        $r60[4] = 0;
        $r60[5] = 0;
        $r60[6] = 0;
        $r60[7] = 0;
        $r60[8] = 0;
        $r60[9] = 0;
        $r60[10] = 0;
        $r60[11] = 0;
        $r60[12] = 0;
        $r60[13] = 0;
        $r60[14] = 0;
        $r60[15] = 0;
        $r60[16] = 0;
        $r60[17] = 0;
        $r60[18] = 0;
        $r60[19] = 0;
        $r60[20] = 0;
        $r60[21] = 0;
        $r60[22] = 0;
        $r60[23] = 0;
        $r60[24] = 0;
        $r60[25] = 0;
        $r60[26] = 0;
        $r60[27] = 0;
        $r60[28] = 0;
        $r60[29] = 0;
        $r60[30] = 0;
        $r60[31] = 0;
        $r60[32] = 0;
        $r60[33] = 0;
        $r60[34] = 0;
        $r60[35] = 0;
        $r60[36] = 0;
        $r60[37] = 0;
        $r60[38] = 0;
        $r60[39] = 0;
        $r60[40] = 0;
        $r60[41] = 0;
        $r60[42] = 0;
        $r60[43] = 0;
        $r60[44] = 0;
        $r60[45] = 0;
        $r60[46] = 0;
        $r60[47] = 0;
        $r60[48] = 0;
        $r60[49] = 0;
        $r60[50] = 0;
        $r60[51] = 0;
        $r60[52] = 0;
        $r60[53] = 0;
        $r60[54] = 0;
        $r60[55] = 0;
        $r60[56] = 0;
        $r60[57] = 0;
        $r60[58] = 0;
        $r60[59] = 0;
        $r60[60] = 0;
        $r60[61] = 0;
        $r60[62] = 0;
        $r60[63] = 0;
        <chess.Evaluate: int[] empty> = $r60;
        $r61 = newarray (int[])[13];
        $r62 = <chess.Evaluate: int[] empty>;
        $r61[0] = $r62;
        $r63 = <chess.Evaluate: int[] kt1w>;
        $r61[1] = $r63;
        $r64 = <chess.Evaluate: int[] qt1w>;
        $r61[2] = $r64;
        $r65 = <chess.Evaluate: int[] rt1w>;
        $r61[3] = $r65;
        $r66 = <chess.Evaluate: int[] bt1w>;
        $r61[4] = $r66;
        $r67 = <chess.Evaluate: int[] nt1w>;
        $r61[5] = $r67;
        $r68 = <chess.Evaluate: int[] pt1w>;
        $r61[6] = $r68;
        $r69 = <chess.Evaluate: int[] kt1b>;
        $r61[7] = $r69;
        $r70 = <chess.Evaluate: int[] qt1b>;
        $r61[8] = $r70;
        $r71 = <chess.Evaluate: int[] rt1b>;
        $r61[9] = $r71;
        $r72 = <chess.Evaluate: int[] bt1b>;
        $r61[10] = $r72;
        $r73 = <chess.Evaluate: int[] nt1b>;
        $r61[11] = $r73;
        $r74 = <chess.Evaluate: int[] pt1b>;
        $r61[12] = $r74;
        <chess.Evaluate: int[][] psTab1> = $r61;
        $r75 = newarray (int[])[13];
        $r76 = <chess.Evaluate: int[] empty>;
        $r75[0] = $r76;
        $r77 = <chess.Evaluate: int[] kt2w>;
        $r75[1] = $r77;
        $r78 = <chess.Evaluate: int[] qt1w>;
        $r75[2] = $r78;
        $r79 = <chess.Evaluate: int[] rt1w>;
        $r75[3] = $r79;
        $r80 = <chess.Evaluate: int[] bt2w>;
        $r75[4] = $r80;
        $r81 = <chess.Evaluate: int[] nt2w>;
        $r75[5] = $r81;
        $r82 = <chess.Evaluate: int[] pt2w>;
        $r75[6] = $r82;
        $r83 = <chess.Evaluate: int[] kt2b>;
        $r75[7] = $r83;
        $r84 = <chess.Evaluate: int[] qt1b>;
        $r75[8] = $r84;
        $r85 = <chess.Evaluate: int[] rt1b>;
        $r75[9] = $r85;
        $r86 = <chess.Evaluate: int[] bt2b>;
        $r75[10] = $r86;
        $r87 = <chess.Evaluate: int[] nt2b>;
        $r75[11] = $r87;
        $r88 = <chess.Evaluate: int[] pt2b>;
        $r75[12] = $r88;
        <chess.Evaluate: int[][] psTab2> = $r75;
        $r89 = newarray (int[])[8];
        $r90 = newarray (int)[8];
        $r90[0] = 0;
        $r90[1] = 1;
        $r90[2] = 2;
        $r90[3] = 3;
        $r90[4] = 4;
        $r90[5] = 5;
        $r90[6] = 6;
        $r90[7] = 7;
        $r89[0] = $r90;
        $r91 = newarray (int)[8];
        $r91[0] = 1;
        $r91[1] = 2;
        $r91[2] = 3;
        $r91[3] = 4;
        $r91[4] = 5;
        $r91[5] = 6;
        $r91[6] = 7;
        $r91[7] = 6;
        $r89[1] = $r91;
        $r92 = newarray (int)[8];
        $r92[0] = 2;
        $r92[1] = 3;
        $r92[2] = 4;
        $r92[3] = 5;
        $r92[4] = 6;
        $r92[5] = 7;
        $r92[6] = 6;
        $r92[7] = 5;
        $r89[2] = $r92;
        $r93 = newarray (int)[8];
        $r93[0] = 3;
        $r93[1] = 4;
        $r93[2] = 5;
        $r93[3] = 6;
        $r93[4] = 7;
        $r93[5] = 6;
        $r93[6] = 5;
        $r93[7] = 4;
        $r89[3] = $r93;
        $r94 = newarray (int)[8];
        $r94[0] = 4;
        $r94[1] = 5;
        $r94[2] = 6;
        $r94[3] = 7;
        $r94[4] = 6;
        $r94[5] = 5;
        $r94[6] = 4;
        $r94[7] = 3;
        $r89[4] = $r94;
        $r95 = newarray (int)[8];
        $r95[0] = 5;
        $r95[1] = 6;
        $r95[2] = 7;
        $r95[3] = 6;
        $r95[4] = 5;
        $r95[5] = 4;
        $r95[6] = 3;
        $r95[7] = 2;
        $r89[5] = $r95;
        $r96 = newarray (int)[8];
        $r96[0] = 6;
        $r96[1] = 7;
        $r96[2] = 6;
        $r96[3] = 5;
        $r96[4] = 4;
        $r96[5] = 3;
        $r96[6] = 2;
        $r96[7] = 1;
        $r89[6] = $r96;
        $r97 = newarray (int)[8];
        $r97[0] = 7;
        $r97[1] = 6;
        $r97[2] = 5;
        $r97[3] = 4;
        $r97[4] = 3;
        $r97[5] = 2;
        $r97[6] = 1;
        $r97[7] = 0;
        $r89[7] = $r97;
        <chess.Evaluate: int[][] distToH1A8> = $r89;
        $r98 = newarray (int)[15];
        $r98[0] = -10;
        $r98[1] = -7;
        $r98[2] = -4;
        $r98[3] = -1;
        $r98[4] = 2;
        $r98[5] = 5;
        $r98[6] = 7;
        $r98[7] = 9;
        $r98[8] = 11;
        $r98[9] = 12;
        $r98[10] = 13;
        $r98[11] = 14;
        $r98[12] = 14;
        $r98[13] = 14;
        $r98[14] = 14;
        <chess.Evaluate: int[] rookMobScore> = $r98;
        $r99 = newarray (int)[14];
        $r99[0] = -15;
        $r99[1] = -10;
        $r99[2] = -6;
        $r99[3] = -2;
        $r99[4] = 2;
        $r99[5] = 6;
        $r99[6] = 10;
        $r99[7] = 13;
        $r99[8] = 16;
        $r99[9] = 18;
        $r99[10] = 20;
        $r99[11] = 22;
        $r99[12] = 23;
        $r99[13] = 24;
        <chess.Evaluate: int[] bishMobScore> = $r99;
        $r100 = newarray (int)[28];
        $r100[0] = -5;
        $r100[1] = -4;
        $r100[2] = -3;
        $r100[3] = -2;
        $r100[4] = -1;
        $r100[5] = 0;
        $r100[6] = 1;
        $r100[7] = 2;
        $r100[8] = 3;
        $r100[9] = 4;
        $r100[10] = 5;
        $r100[11] = 6;
        $r100[12] = 7;
        $r100[13] = 8;
        $r100[14] = 9;
        $r100[15] = 9;
        $r100[16] = 10;
        $r100[17] = 10;
        $r100[18] = 10;
        $r100[19] = 10;
        $r100[20] = 10;
        $r100[21] = 10;
        $r100[22] = 10;
        $r100[23] = 10;
        $r100[24] = 10;
        $r100[25] = 10;
        $r100[26] = 10;
        $r100[27] = 10;
        <chess.Evaluate: int[] queenMobScore> = $r100;
        i43 = 65536;
        $r101 = newarray (chess.Evaluate$PawnHashData)[65536];
        <chess.Evaluate: chess.Evaluate$PawnHashData[] pawnHash> = $r101;
        i1 = 0;

     label2:
        if i1 >= 65536 goto label3;

        $r102 = new chess.Evaluate$PawnHashData;
        specialinvoke $r102.<chess.Evaluate$PawnHashData: void <init>(chess.Evaluate$1)>(null);
        r1 = $r102;
        r1.<chess.Evaluate$PawnHashData: long key> = -1L;
        r1.<chess.Evaluate$PawnHashData: int score> = 0;
        $r103 = <chess.Evaluate: chess.Evaluate$PawnHashData[] pawnHash>;
        $r103[i1] = r1;
        i1 = i1 + 1;
        goto label2;

     label3:
        <chess.Evaluate: byte[] kpkTable> = null;
        <chess.Evaluate: byte[] krkpTable> = null;
        $r104 = newarray (int)[256];
        <chess.Evaluate: int[] castleFactor> = $r104;
        i44 = 0;

     label4:
        if i44 >= 256 goto label11;

        i45 = 100;
        $i46 = i44 & 128;
        if $i46 == 0 goto label5;

        $z1 = 1;
        goto label6;

     label5:
        $z1 = 0;

     label6:
        z2 = $z1;
        if z2 == 0 goto label7;

        $l47 = (long) i44;
        $l48 = $l47 & 96L;
        $i49 = staticinvoke <java.lang.Long: int bitCount(long)>($l48);
        i45 = 2 + $i49;

     label7:
        i2 = 100;
        $i50 = i44 & 1;
        if $i50 == 0 goto label8;

        $z3 = 1;
        goto label9;

     label8:
        $z3 = 0;

     label9:
        z0 = $z3;
        if z0 == 0 goto label10;

        $l51 = (long) i44;
        $l52 = $l51 & 14L;
        $i53 = staticinvoke <java.lang.Long: int bitCount(long)>($l52);
        i2 = 2 + $i53;

     label10:
        $r105 = <chess.Evaluate: int[] castleFactor>;
        $i54 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i45);
        $i55 = 1024 / $i54;
        $r105[i44] = $i55;
        i44 = i44 + 1;
        goto label4;

     label11:
        c56 = 32768;
        $r106 = newarray (chess.Evaluate$KingSafetyHashData)[32768];
        <chess.Evaluate: chess.Evaluate$KingSafetyHashData[] kingSafetyHash> = $r106;
        i57 = 0;

     label12:
        if i57 >= 32768 goto label13;

        $r107 = new chess.Evaluate$KingSafetyHashData;
        specialinvoke $r107.<chess.Evaluate$KingSafetyHashData: void <init>(chess.Evaluate$1)>(null);
        r108 = $r107;
        r108.<chess.Evaluate$KingSafetyHashData: long key> = -1L;
        r108.<chess.Evaluate$KingSafetyHashData: int score> = 0;
        $r109 = <chess.Evaluate: chess.Evaluate$KingSafetyHashData[] kingSafetyHash>;
        $r109[i57] = r108;
        i57 = i57 + 1;
        goto label12;

     label13:
        return;
    }
}
class chess.Game$1 extends java.lang.Object
{
    static final int[] $SwitchMap$chess$Game$GameState;

    static void <clinit>()
    {
        chess.Game$GameState[] $r0;
        chess.Game$GameState $r1, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35, $r39, $r43;
        java.lang.NoSuchFieldError r2, $r5, $r8, r9, $r12, r13, $r16, r17, $r20, r21, $r24, r25, $r28, r29, $r32, r33, $r36, r37, $r40, r41, $r44, r45;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] $r3, $r4, $r6, $r10, $r14, $r18, $r22, $r26, $r30, $r34, $r38, $r42;

        $r0 = staticinvoke <chess.Game$GameState: chess.Game$GameState[] values()>();
        $i0 = lengthof $r0;
        $r3 = newarray (int)[$i0];
        <chess.Game$1: int[] $SwitchMap$chess$Game$GameState> = $r3;

     label0:
        $r4 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r1 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        $i1 = virtualinvoke $r1.<chess.Game$GameState: int ordinal()>();
        $r4[$i1] = 1;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;

     label3:
        $r6 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r7 = <chess.Game$GameState: chess.Game$GameState WHITE_MATE>;
        $i2 = virtualinvoke $r7.<chess.Game$GameState: int ordinal()>();
        $r6[$i2] = 2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;

     label6:
        $r10 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r11 = <chess.Game$GameState: chess.Game$GameState BLACK_MATE>;
        $i3 = virtualinvoke $r11.<chess.Game$GameState: int ordinal()>();
        $r10[$i3] = 3;

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;
        r13 = $r12;

     label9:
        $r14 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r15 = <chess.Game$GameState: chess.Game$GameState WHITE_STALEMATE>;
        $i4 = virtualinvoke $r15.<chess.Game$GameState: int ordinal()>();
        $r14[$i4] = 4;

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;
        r17 = $r16;

     label12:
        $r18 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r19 = <chess.Game$GameState: chess.Game$GameState BLACK_STALEMATE>;
        $i5 = virtualinvoke $r19.<chess.Game$GameState: int ordinal()>();
        $r18[$i5] = 5;

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;
        r21 = $r20;

     label15:
        $r22 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r23 = <chess.Game$GameState: chess.Game$GameState DRAW_REP>;
        $i6 = virtualinvoke $r23.<chess.Game$GameState: int ordinal()>();
        $r22[$i6] = 6;

     label16:
        goto label18;

     label17:
        $r24 := @caughtexception;
        r25 = $r24;

     label18:
        $r26 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r27 = <chess.Game$GameState: chess.Game$GameState DRAW_50>;
        $i7 = virtualinvoke $r27.<chess.Game$GameState: int ordinal()>();
        $r26[$i7] = 7;

     label19:
        goto label21;

     label20:
        $r28 := @caughtexception;
        r29 = $r28;

     label21:
        $r30 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r31 = <chess.Game$GameState: chess.Game$GameState DRAW_NO_MATE>;
        $i8 = virtualinvoke $r31.<chess.Game$GameState: int ordinal()>();
        $r30[$i8] = 8;

     label22:
        goto label24;

     label23:
        $r32 := @caughtexception;
        r33 = $r32;

     label24:
        $r34 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r35 = <chess.Game$GameState: chess.Game$GameState DRAW_AGREE>;
        $i9 = virtualinvoke $r35.<chess.Game$GameState: int ordinal()>();
        $r34[$i9] = 9;

     label25:
        goto label27;

     label26:
        $r36 := @caughtexception;
        r37 = $r36;

     label27:
        $r38 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r39 = <chess.Game$GameState: chess.Game$GameState RESIGN_WHITE>;
        $i10 = virtualinvoke $r39.<chess.Game$GameState: int ordinal()>();
        $r38[$i10] = 10;

     label28:
        goto label30;

     label29:
        $r40 := @caughtexception;
        r41 = $r40;

     label30:
        $r42 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r43 = <chess.Game$GameState: chess.Game$GameState RESIGN_BLACK>;
        $i11 = virtualinvoke $r43.<chess.Game$GameState: int ordinal()>();
        $r42[$i11] = 11;

     label31:
        goto label33;

     label32:
        $r44 := @caughtexception;
        r45 = $r44;

     label33:
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
        catch java.lang.NoSuchFieldError from label15 to label16 with label17;
        catch java.lang.NoSuchFieldError from label18 to label19 with label20;
        catch java.lang.NoSuchFieldError from label21 to label22 with label23;
        catch java.lang.NoSuchFieldError from label24 to label25 with label26;
        catch java.lang.NoSuchFieldError from label27 to label28 with label29;
        catch java.lang.NoSuchFieldError from label30 to label31 with label32;
    }
}
public final enum class chess.Game$GameState extends java.lang.Enum
{
    public static final enum chess.Game$GameState ALIVE;
    public static final enum chess.Game$GameState WHITE_MATE;
    public static final enum chess.Game$GameState BLACK_MATE;
    public static final enum chess.Game$GameState WHITE_STALEMATE;
    public static final enum chess.Game$GameState BLACK_STALEMATE;
    public static final enum chess.Game$GameState DRAW_REP;
    public static final enum chess.Game$GameState DRAW_50;
    public static final enum chess.Game$GameState DRAW_NO_MATE;
    public static final enum chess.Game$GameState DRAW_AGREE;
    public static final enum chess.Game$GameState RESIGN_WHITE;
    public static final enum chess.Game$GameState RESIGN_BLACK;
    private static final chess.Game$GameState[] $VALUES;

    public static chess.Game$GameState[] values()
    {
        chess.Game$GameState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <chess.Game$GameState: chess.Game$GameState[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (chess.Game$GameState[]) $r1;
        return $r2;
    }

    public static chess.Game$GameState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        chess.Game$GameState $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "chess/Game$GameState", r0);
        $r2 = (chess.Game$GameState) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        chess.Game$GameState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: chess.Game$GameState;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        chess.Game$GameState $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        chess.Game$GameState[] $r11;

        $r0 = new chess.Game$GameState;
        specialinvoke $r0.<chess.Game$GameState: void <init>(java.lang.String,int)>("ALIVE", 0);
        <chess.Game$GameState: chess.Game$GameState ALIVE> = $r0;
        $r1 = new chess.Game$GameState;
        specialinvoke $r1.<chess.Game$GameState: void <init>(java.lang.String,int)>("WHITE_MATE", 1);
        <chess.Game$GameState: chess.Game$GameState WHITE_MATE> = $r1;
        $r2 = new chess.Game$GameState;
        specialinvoke $r2.<chess.Game$GameState: void <init>(java.lang.String,int)>("BLACK_MATE", 2);
        <chess.Game$GameState: chess.Game$GameState BLACK_MATE> = $r2;
        $r3 = new chess.Game$GameState;
        specialinvoke $r3.<chess.Game$GameState: void <init>(java.lang.String,int)>("WHITE_STALEMATE", 3);
        <chess.Game$GameState: chess.Game$GameState WHITE_STALEMATE> = $r3;
        $r4 = new chess.Game$GameState;
        specialinvoke $r4.<chess.Game$GameState: void <init>(java.lang.String,int)>("BLACK_STALEMATE", 4);
        <chess.Game$GameState: chess.Game$GameState BLACK_STALEMATE> = $r4;
        $r5 = new chess.Game$GameState;
        specialinvoke $r5.<chess.Game$GameState: void <init>(java.lang.String,int)>("DRAW_REP", 5);
        <chess.Game$GameState: chess.Game$GameState DRAW_REP> = $r5;
        $r6 = new chess.Game$GameState;
        specialinvoke $r6.<chess.Game$GameState: void <init>(java.lang.String,int)>("DRAW_50", 6);
        <chess.Game$GameState: chess.Game$GameState DRAW_50> = $r6;
        $r7 = new chess.Game$GameState;
        specialinvoke $r7.<chess.Game$GameState: void <init>(java.lang.String,int)>("DRAW_NO_MATE", 7);
        <chess.Game$GameState: chess.Game$GameState DRAW_NO_MATE> = $r7;
        $r8 = new chess.Game$GameState;
        specialinvoke $r8.<chess.Game$GameState: void <init>(java.lang.String,int)>("DRAW_AGREE", 8);
        <chess.Game$GameState: chess.Game$GameState DRAW_AGREE> = $r8;
        $r9 = new chess.Game$GameState;
        specialinvoke $r9.<chess.Game$GameState: void <init>(java.lang.String,int)>("RESIGN_WHITE", 9);
        <chess.Game$GameState: chess.Game$GameState RESIGN_WHITE> = $r9;
        $r10 = new chess.Game$GameState;
        specialinvoke $r10.<chess.Game$GameState: void <init>(java.lang.String,int)>("RESIGN_BLACK", 10);
        <chess.Game$GameState: chess.Game$GameState RESIGN_BLACK> = $r10;
        $r11 = newarray (chess.Game$GameState)[11];
        $r12 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        $r11[0] = $r12;
        $r13 = <chess.Game$GameState: chess.Game$GameState WHITE_MATE>;
        $r11[1] = $r13;
        $r14 = <chess.Game$GameState: chess.Game$GameState BLACK_MATE>;
        $r11[2] = $r14;
        $r15 = <chess.Game$GameState: chess.Game$GameState WHITE_STALEMATE>;
        $r11[3] = $r15;
        $r16 = <chess.Game$GameState: chess.Game$GameState BLACK_STALEMATE>;
        $r11[4] = $r16;
        $r17 = <chess.Game$GameState: chess.Game$GameState DRAW_REP>;
        $r11[5] = $r17;
        $r18 = <chess.Game$GameState: chess.Game$GameState DRAW_50>;
        $r11[6] = $r18;
        $r19 = <chess.Game$GameState: chess.Game$GameState DRAW_NO_MATE>;
        $r11[7] = $r19;
        $r20 = <chess.Game$GameState: chess.Game$GameState DRAW_AGREE>;
        $r11[8] = $r20;
        $r21 = <chess.Game$GameState: chess.Game$GameState RESIGN_WHITE>;
        $r11[9] = $r21;
        $r22 = <chess.Game$GameState: chess.Game$GameState RESIGN_BLACK>;
        $r11[10] = $r22;
        <chess.Game$GameState: chess.Game$GameState[] $VALUES> = $r11;
        return;
    }
}
public class chess.Game extends java.lang.Object
{
    protected java.util.List moveList;
    protected java.util.List uiInfoList;
    java.util.List drawOfferList;
    protected int currentMove;
    boolean pendingDrawOffer;
    chess.Game$GameState drawState;
    java.lang.String drawStateMoveStr;
    chess.Game$GameState resignState;
    public chess.Position pos;
    protected chess.Player whitePlayer;
    protected chess.Player blackPlayer;

    public void <init>(chess.Player, chess.Player)
    {
        chess.Game r0;
        chess.Player r1, r2;

        r0 := @this: chess.Game;
        r1 := @parameter0: chess.Player;
        r2 := @parameter1: chess.Player;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.Game: java.util.List moveList> = null;
        r0.<chess.Game: java.util.List uiInfoList> = null;
        r0.<chess.Game: java.util.List drawOfferList> = null;
        r0.<chess.Game: chess.Position pos> = null;
        r0.<chess.Game: chess.Player whitePlayer> = r1;
        r0.<chess.Game: chess.Player blackPlayer> = r2;
        virtualinvoke r0.<chess.Game: boolean handleCommand(java.lang.String)>("new");
        return;
    }

    public boolean processString(java.lang.String)
    {
        chess.Game r0;
        java.lang.String r1;
        chess.Move r2;
        chess.UndoInfo r3, $r7;
        boolean $z0, $z3;
        chess.Game$GameState $r4, $r5;
        chess.Position $r6, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.List $r10, $r11, $r13, $r15, $r17, $r18, $r19;
        java.lang.Boolean $r20;

        r0 := @this: chess.Game;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<chess.Game: boolean handleCommand(java.lang.String)>(r1);
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $r4 = virtualinvoke r0.<chess.Game: chess.Game$GameState getGameState()>();
        $r5 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        if $r4 == $r5 goto label1;

        return 0;

     label1:
        $r6 = r0.<chess.Game: chess.Position pos>;
        r2 = staticinvoke <chess.TextIO: chess.Move stringToMove(chess.Position,java.lang.String)>($r6, r1);
        if r2 != null goto label2;

        return 0;

     label2:
        $r7 = new chess.UndoInfo;
        specialinvoke $r7.<chess.UndoInfo: void <init>()>();
        r3 = $r7;
        $r8 = r0.<chess.Game: chess.Position pos>;
        virtualinvoke $r8.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r2, r3);
        $r9 = r0.<chess.Game: chess.Position pos>;
        staticinvoke <chess.TextIO: void fixupEPSquare(chess.Position)>($r9);

     label3:
        $i0 = r0.<chess.Game: int currentMove>;
        $r10 = r0.<chess.Game: java.util.List moveList>;
        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();
        if $i0 >= $i1 goto label4;

        $r11 = r0.<chess.Game: java.util.List moveList>;
        $i2 = r0.<chess.Game: int currentMove>;
        interfaceinvoke $r11.<java.util.List: java.lang.Object remove(int)>($i2);
        $r13 = r0.<chess.Game: java.util.List uiInfoList>;
        $i3 = r0.<chess.Game: int currentMove>;
        interfaceinvoke $r13.<java.util.List: java.lang.Object remove(int)>($i3);
        $r15 = r0.<chess.Game: java.util.List drawOfferList>;
        $i4 = r0.<chess.Game: int currentMove>;
        interfaceinvoke $r15.<java.util.List: java.lang.Object remove(int)>($i4);
        goto label3;

     label4:
        $r17 = r0.<chess.Game: java.util.List moveList>;
        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(r2);
        $r18 = r0.<chess.Game: java.util.List uiInfoList>;
        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>(r3);
        $r19 = r0.<chess.Game: java.util.List drawOfferList>;
        $z3 = r0.<chess.Game: boolean pendingDrawOffer>;
        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);
        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20);
        r0.<chess.Game: boolean pendingDrawOffer> = 0;
        $i5 = r0.<chess.Game: int currentMove>;
        $i6 = $i5 + 1;
        r0.<chess.Game: int currentMove> = $i6;
        return 1;
    }

    public final java.lang.String getGameStateString()
    {
        chess.Game r0;
        int[] $r1;
        java.lang.String r2, $r4, $r5, $r9, r12, $r13, $r14, $r18;
        chess.Game$GameState $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r15, $r16, $r17, $r19, $r20;
        java.lang.RuntimeException $r21;

        r0 := @this: chess.Game;
        $r1 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r3 = virtualinvoke r0.<chess.Game: chess.Game$GameState getGameState()>();
        $i0 = virtualinvoke $r3.<chess.Game$GameState: int ordinal()>();
        $i1 = $r1[$i0];
        tableswitch($i1)
        {
            case 1: goto label0;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label4;
            case 7: goto label6;
            case 8: goto label8;
            case 9: goto label9;
            case 10: goto label10;
            case 11: goto label11;
            default: goto label12;
        };

     label0:
        return "";

     label1:
        return "Game over, white mates!";

     label2:
        return "Game over, black mates!";

     label3:
        return "Game over, draw by stalemate!";

     label4:
        r2 = "Game over, draw by repetition!";
        $r4 = r0.<chess.Game: java.lang.String drawStateMoveStr>;
        if $r4 == null goto label5;

        $r5 = r0.<chess.Game: java.lang.String drawStateMoveStr>;
        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();
        if $i2 <= 0 goto label5;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");
        $r9 = r0.<chess.Game: java.lang.String drawStateMoveStr>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return r2;

     label6:
        r12 = "Game over, draw by 50 move rule!";
        $r13 = r0.<chess.Game: java.lang.String drawStateMoveStr>;
        if $r13 == null goto label7;

        $r14 = r0.<chess.Game: java.lang.String drawStateMoveStr>;
        $i3 = virtualinvoke $r14.<java.lang.String: int length()>();
        if $i3 <= 0 goto label7;

        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");
        $r18 = r0.<chess.Game: java.lang.String drawStateMoveStr>;
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r12 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        return r12;

     label8:
        return "Game over, draw by impossibility of mate!";

     label9:
        return "Game over, draw by agreement!";

     label10:
        return "Game over, white resigns!";

     label11:
        return "Game over, black resigns!";

     label12:
        $r21 = new java.lang.RuntimeException;
        specialinvoke $r21.<java.lang.RuntimeException: void <init>()>();
        throw $r21;
    }

    public chess.Move getLastMove()
    {
        chess.Game r0;
        chess.Move r1;
        int $i0, $i1, $i2;
        java.util.List $r2;
        java.lang.Object $r3;

        r0 := @this: chess.Game;
        r1 = null;
        $i0 = r0.<chess.Game: int currentMove>;
        if $i0 <= 0 goto label0;

        $r2 = r0.<chess.Game: java.util.List moveList>;
        $i1 = r0.<chess.Game: int currentMove>;
        $i2 = $i1 - 1;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i2);
        r1 = (chess.Move) $r3;

     label0:
        return r1;
    }

    public chess.Game$GameState getGameState()
    {
        chess.Game r0;
        chess.MoveGen $r1;
        chess.MoveGen$MoveList r2;
        chess.Position $r3, $r4, $r5, $r6, $r8;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        chess.Game$GameState $r7, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: chess.Game;
        $r1 = new chess.MoveGen;
        specialinvoke $r1.<chess.MoveGen: void <init>()>();
        $r3 = r0.<chess.Game: chess.Position pos>;
        r2 = virtualinvoke $r1.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>($r3);
        $r4 = r0.<chess.Game: chess.Position pos>;
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>($r4, r2);
        $i0 = r2.<chess.MoveGen$MoveList: int size>;
        if $i0 != 0 goto label5;

        $r5 = r0.<chess.Game: chess.Position pos>;
        $z0 = staticinvoke <chess.MoveGen: boolean inCheck(chess.Position)>($r5);
        if $z0 == 0 goto label2;

        $r6 = r0.<chess.Game: chess.Position pos>;
        $z1 = $r6.<chess.Position: boolean whiteMove>;
        if $z1 == 0 goto label0;

        $r7 = <chess.Game$GameState: chess.Game$GameState BLACK_MATE>;
        goto label1;

     label0:
        $r7 = <chess.Game$GameState: chess.Game$GameState WHITE_MATE>;

     label1:
        return $r7;

     label2:
        $r8 = r0.<chess.Game: chess.Position pos>;
        $z2 = $r8.<chess.Position: boolean whiteMove>;
        if $z2 == 0 goto label3;

        $r9 = <chess.Game$GameState: chess.Game$GameState WHITE_STALEMATE>;
        goto label4;

     label3:
        $r9 = <chess.Game$GameState: chess.Game$GameState BLACK_STALEMATE>;

     label4:
        return $r9;

     label5:
        $z3 = specialinvoke r0.<chess.Game: boolean insufficientMaterial()>();
        if $z3 == 0 goto label6;

        $r10 = <chess.Game$GameState: chess.Game$GameState DRAW_NO_MATE>;
        return $r10;

     label6:
        $r11 = r0.<chess.Game: chess.Game$GameState resignState>;
        $r12 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        if $r11 == $r12 goto label7;

        $r13 = r0.<chess.Game: chess.Game$GameState resignState>;
        return $r13;

     label7:
        $r14 = r0.<chess.Game: chess.Game$GameState drawState>;
        return $r14;
    }

    public boolean haveDrawOffer()
    {
        chess.Game r0;
        int $i0, $i1, $i2;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: chess.Game;
        $i0 = r0.<chess.Game: int currentMove>;
        if $i0 <= 0 goto label0;

        $r1 = r0.<chess.Game: java.util.List drawOfferList>;
        $i1 = r0.<chess.Game: int currentMove>;
        $i2 = $i1 - 1;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);
        $r3 = (java.lang.Boolean) $r2;
        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();
        return $z0;

     label0:
        return 0;
    }

    protected boolean handleCommand(java.lang.String)
    {
        chess.Game r0;
        java.lang.String r1, r38, $r42, r45, r49, r55, r56, $r63, r65, $r79;
        chess.ChessParseError r2, r4, $r11, $r39;
        chess.Position r3, $r10, $r15, $r27, $r44, $r53, $r68;
        long l0, l1, l2, $l28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.util.ArrayList $r5, $r6, $r7;
        chess.Game$GameState $r8, $r9, $r23, $r24, $r47, $r48, $r50, $r51, $r54;
        java.lang.RuntimeException $r12;
        chess.Player $r13, $r14, r36, $r37, $r57, $r58;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i25, $i26, i27;
        java.util.List $r16, $r19, $r26, $r28, $r31;
        java.lang.Object $r17, $r20, $r29, $r32;
        chess.Move $r18, $r30;
        chess.UndoInfo $r21, $r33;
        java.io.PrintStream $r25, $r35, $r40, $r46, $r61, $r69, $r77;
        java.lang.Object[] $r41, $r62, $r70, $r78;
        java.lang.NumberFormatException $r59, r60, $r75, r76;
        chess.MoveGen $r66, r67;
        java.lang.Integer $r71;
        java.lang.Long $r72;
        double $d0, $d1;
        java.lang.Double $r73;

        r0 := @this: chess.Game;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("new");
        if $z0 == 0 goto label4;

        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r0.<chess.Game: java.util.List moveList> = $r5;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r0.<chess.Game: java.util.List uiInfoList> = $r6;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r0.<chess.Game: java.util.List drawOfferList> = $r7;
        r0.<chess.Game: int currentMove> = 0;
        r0.<chess.Game: boolean pendingDrawOffer> = 0;
        $r8 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        r0.<chess.Game: chess.Game$GameState drawState> = $r8;
        $r9 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        r0.<chess.Game: chess.Game$GameState resignState> = $r9;

     label0:
        $r10 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        r0.<chess.Game: chess.Position pos> = $r10;

     label1:
        goto label3;

     label2:
        $r11 := @caughtexception;
        r2 = $r11;
        $r12 = new java.lang.RuntimeException;
        specialinvoke $r12.<java.lang.RuntimeException: void <init>()>();
        throw $r12;

     label3:
        $r13 = r0.<chess.Game: chess.Player whitePlayer>;
        interfaceinvoke $r13.<chess.Player: void clearTT()>();
        $r14 = r0.<chess.Game: chess.Player blackPlayer>;
        interfaceinvoke $r14.<chess.Player: void clearTT()>();
        virtualinvoke r0.<chess.Game: void activateHumanPlayer()>();
        return 1;

     label4:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("undo");
        if $z1 == 0 goto label6;

        $i3 = r0.<chess.Game: int currentMove>;
        if $i3 <= 0 goto label5;

        $r15 = r0.<chess.Game: chess.Position pos>;
        $r16 = r0.<chess.Game: java.util.List moveList>;
        $i4 = r0.<chess.Game: int currentMove>;
        $i5 = $i4 - 1;
        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i5);
        $r18 = (chess.Move) $r17;
        $r19 = r0.<chess.Game: java.util.List uiInfoList>;
        $i6 = r0.<chess.Game: int currentMove>;
        $i7 = $i6 - 1;
        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>($i7);
        $r21 = (chess.UndoInfo) $r20;
        virtualinvoke $r15.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>($r18, $r21);
        $i8 = r0.<chess.Game: int currentMove>;
        $i9 = $i8 - 1;
        r0.<chess.Game: int currentMove> = $i9;
        r0.<chess.Game: boolean pendingDrawOffer> = 0;
        $r23 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        r0.<chess.Game: chess.Game$GameState drawState> = $r23;
        $r24 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        r0.<chess.Game: chess.Game$GameState resignState> = $r24;
        $z2 = virtualinvoke r0.<chess.Game: boolean handleCommand(java.lang.String)>("swap");
        return $z2;

     label5:
        $r25 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("Nothing to undo");
        return 1;

     label6:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("redo");
        if $z3 == 0 goto label8;

        $i10 = r0.<chess.Game: int currentMove>;
        $r26 = r0.<chess.Game: java.util.List moveList>;
        $i11 = interfaceinvoke $r26.<java.util.List: int size()>();
        if $i10 >= $i11 goto label7;

        $r27 = r0.<chess.Game: chess.Position pos>;
        $r28 = r0.<chess.Game: java.util.List moveList>;
        $i12 = r0.<chess.Game: int currentMove>;
        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>($i12);
        $r30 = (chess.Move) $r29;
        $r31 = r0.<chess.Game: java.util.List uiInfoList>;
        $i13 = r0.<chess.Game: int currentMove>;
        $r32 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>($i13);
        $r33 = (chess.UndoInfo) $r32;
        virtualinvoke $r27.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>($r30, $r33);
        $i14 = r0.<chess.Game: int currentMove>;
        $i15 = $i14 + 1;
        r0.<chess.Game: int currentMove> = $i15;
        r0.<chess.Game: boolean pendingDrawOffer> = 0;
        $z4 = virtualinvoke r0.<chess.Game: boolean handleCommand(java.lang.String)>("swap");
        return $z4;

     label7:
        $r35 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("Nothing to redo");
        return 1;

     label8:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("swap");
        if $z5 != 0 goto label9;

        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("go");
        if $z6 == 0 goto label10;

     label9:
        r36 = r0.<chess.Game: chess.Player whitePlayer>;
        $r37 = r0.<chess.Game: chess.Player blackPlayer>;
        r0.<chess.Game: chess.Player whitePlayer> = $r37;
        r0.<chess.Game: chess.Player blackPlayer> = r36;
        return 1;

     label10:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("list");
        if $z7 == 0 goto label11;

        specialinvoke r0.<chess.Game: void listMoves()>();
        return 1;

     label11:
        $z8 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("setpos ");
        if $z8 == 0 goto label17;

        $i16 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        $i17 = $i16 + 1;
        r38 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i17);
        r3 = null;

     label12:
        r3 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>(r38);

     label13:
        goto label15;

     label14:
        $r39 := @caughtexception;
        r4 = $r39;
        $r40 = <java.lang.System: java.io.PrintStream out>;
        $r41 = newarray (java.lang.Object)[2];
        $r41[0] = r38;
        $r42 = virtualinvoke r4.<chess.ChessParseError: java.lang.String getMessage()>();
        $r41[1] = $r42;
        virtualinvoke $r40.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Invalid FEN: %s (%s)%n", $r41);

     label15:
        if r3 == null goto label16;

        virtualinvoke r0.<chess.Game: boolean handleCommand(java.lang.String)>("new");
        r0.<chess.Game: chess.Position pos> = r3;
        virtualinvoke r0.<chess.Game: void activateHumanPlayer()>();

     label16:
        return 1;

     label17:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("getpos");
        if $z10 == 0 goto label18;

        $r44 = r0.<chess.Game: chess.Position pos>;
        r45 = staticinvoke <chess.TextIO: java.lang.String toFEN(chess.Position)>($r44);
        $r46 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>(r45);
        return 1;

     label18:
        $z11 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("draw ");
        if $z11 == 0 goto label20;

        $r47 = virtualinvoke r0.<chess.Game: chess.Game$GameState getGameState()>();
        $r48 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        if $r47 != $r48 goto label19;

        $i18 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        $i19 = $i18 + 1;
        r49 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i19);
        $z12 = specialinvoke r0.<chess.Game: boolean handleDrawCmd(java.lang.String)>(r49);
        return $z12;

     label19:
        return 1;

     label20:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("resign");
        if $z13 == 0 goto label24;

        $r50 = virtualinvoke r0.<chess.Game: chess.Game$GameState getGameState()>();
        $r51 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        if $r50 != $r51 goto label23;

        $r53 = r0.<chess.Game: chess.Position pos>;
        $z14 = $r53.<chess.Position: boolean whiteMove>;
        if $z14 == 0 goto label21;

        $r54 = <chess.Game$GameState: chess.Game$GameState RESIGN_WHITE>;
        goto label22;

     label21:
        $r54 = <chess.Game$GameState: chess.Game$GameState RESIGN_BLACK>;

     label22:
        r0.<chess.Game: chess.Game$GameState resignState> = $r54;
        return 1;

     label23:
        return 1;

     label24:
        $z15 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("book");
        if $z15 == 0 goto label25;

        $i20 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        $i21 = $i20 + 1;
        r55 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i21);
        $z16 = specialinvoke r0.<chess.Game: boolean handleBookCmd(java.lang.String)>(r55);
        return $z16;

     label25:
        $z17 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("time");
        if $z17 == 0 goto label29;

     label26:
        $i22 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        $i23 = $i22 + 1;
        r56 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i23);
        i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r56);
        $r57 = r0.<chess.Game: chess.Player whitePlayer>;
        interfaceinvoke $r57.<chess.Player: void timeLimit(int,int,boolean)>(i24, i24, 0);
        $r58 = r0.<chess.Game: chess.Player blackPlayer>;
        interfaceinvoke $r58.<chess.Player: void timeLimit(int,int,boolean)>(i24, i24, 0);
        $z18 = 1;

     label27:
        return $z18;

     label28:
        $r59 := @caughtexception;
        r60 = $r59;
        $r61 = <java.lang.System: java.io.PrintStream out>;
        $r62 = newarray (java.lang.Object)[1];
        $r63 = virtualinvoke r60.<java.lang.NumberFormatException: java.lang.String getMessage()>();
        $r62[0] = $r63;
        virtualinvoke $r61.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Number format exception: %s\n", $r62);
        return 0;

     label29:
        $z19 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("perft ");
        if $z19 == 0 goto label34;

     label30:
        $i25 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        $i26 = $i25 + 1;
        r65 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i26);
        i27 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r65);
        $r66 = new chess.MoveGen;
        specialinvoke $r66.<chess.MoveGen: void <init>()>();
        r67 = $r66;
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r68 = r0.<chess.Game: chess.Position pos>;
        l1 = staticinvoke <chess.Game: long perfT(chess.MoveGen,chess.Position,int)>(r67, $r68, i27);
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r69 = <java.lang.System: java.io.PrintStream out>;
        $r70 = newarray (java.lang.Object)[3];
        $r71 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);
        $r70[0] = $r71;
        $r72 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);
        $r70[1] = $r72;
        $l28 = l2 - l0;
        $d0 = (double) $l28;
        $d1 = $d0 * 0.001;
        $r73 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
        $r70[2] = $r73;
        virtualinvoke $r69.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("perft(%d) = %d, t=%.3fs\n", $r70);

     label31:
        goto label33;

     label32:
        $r75 := @caughtexception;
        r76 = $r75;
        $r77 = <java.lang.System: java.io.PrintStream out>;
        $r78 = newarray (java.lang.Object)[1];
        $r79 = virtualinvoke r76.<java.lang.NumberFormatException: java.lang.String getMessage()>();
        $r78[0] = $r79;
        virtualinvoke $r77.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Number format exception: %s\n", $r78);
        return 0;

     label33:
        return 1;

     label34:
        return 0;

        catch chess.ChessParseError from label0 to label1 with label2;
        catch chess.ChessParseError from label12 to label13 with label14;
        catch java.lang.NumberFormatException from label26 to label27 with label28;
        catch java.lang.NumberFormatException from label30 to label31 with label32;
    }

    protected void activateHumanPlayer()
    {
        chess.Game r0;
        chess.Player r1, $r3, $r4;
        chess.Position $r2;
        boolean $z0, $z1;

        r0 := @this: chess.Game;
        $r2 = r0.<chess.Game: chess.Position pos>;
        $z0 = $r2.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label0;

        $r3 = r0.<chess.Game: chess.Player whitePlayer>;
        goto label1;

     label0:
        $r3 = r0.<chess.Game: chess.Player blackPlayer>;

     label1:
        $z1 = interfaceinvoke $r3.<chess.Player: boolean isHumanPlayer()>();
        if $z1 != 0 goto label2;

        r1 = r0.<chess.Game: chess.Player whitePlayer>;
        $r4 = r0.<chess.Game: chess.Player blackPlayer>;
        r0.<chess.Game: chess.Player whitePlayer> = $r4;
        r0.<chess.Game: chess.Player blackPlayer> = r1;

     label2:
        return;
    }

    public java.util.List getPosHistory()
    {
        chess.Game r0;
        java.util.ArrayList $r1, r2;
        chess.Position r3, $r7, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        chess.Move r4, $r11;
        java.lang.String r5, $r15, $r22, $r25, $r28;
        chess.UndoInfo r6, $r14, $r24;
        java.util.List $r9, $r12, $r18, $r19, $r26;
        java.lang.Object $r10, $r13, $r20;
        java.lang.StringBuilder $r16, r17;
        java.lang.Object[] $r21;
        java.lang.Integer $r27;

        r0 := @this: chess.Game;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r7 = new chess.Position;
        $r8 = r0.<chess.Game: chess.Position pos>;
        specialinvoke $r7.<chess.Position: void <init>(chess.Position)>($r8);
        r3 = $r7;
        i0 = r0.<chess.Game: int currentMove>;

     label0:
        if i0 <= 0 goto label1;

        $r9 = r0.<chess.Game: java.util.List moveList>;
        $i2 = i0 - 1;
        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i2);
        $r11 = (chess.Move) $r10;
        $r12 = r0.<chess.Game: java.util.List uiInfoList>;
        $i3 = i0 - 1;
        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i3);
        $r14 = (chess.UndoInfo) $r13;
        virtualinvoke r3.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>($r11, $r14);
        i0 = i0 + -1;
        goto label0;

     label1:
        $r15 = staticinvoke <chess.TextIO: java.lang.String toFEN(chess.Position)>(r3);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r15);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        r17 = $r16;
        i1 = 0;

     label2:
        $r18 = r0.<chess.Game: java.util.List moveList>;
        $i4 = interfaceinvoke $r18.<java.util.List: int size()>();
        if i1 >= $i4 goto label3;

        $r19 = r0.<chess.Game: java.util.List moveList>;
        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i1);
        r4 = (chess.Move) $r20;
        r5 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r3, r4, 0);
        $r21 = newarray (java.lang.Object)[1];
        $r21[0] = r5;
        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %s", $r21);
        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = new chess.UndoInfo;
        specialinvoke $r24.<chess.UndoInfo: void <init>()>();
        r6 = $r24;
        virtualinvoke r3.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r4, r6);
        i1 = i1 + 1;
        goto label2;

     label3:
        $r25 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r25);
        $r26 = r0.<chess.Game: java.util.List moveList>;
        $i5 = interfaceinvoke $r26.<java.util.List: int size()>();
        $i6 = r0.<chess.Game: int currentMove>;
        i7 = $i5 - $i6;
        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);
        $r28 = virtualinvoke $r27.<java.lang.Integer: java.lang.String toString()>();
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r28);
        return r2;
    }

    private void listMoves()
    {
        chess.Game r0;
        java.lang.String r1;
        java.io.PrintStream $r2;
        java.lang.Object[] $r3;

        r0 := @this: chess.Game;
        r1 = virtualinvoke r0.<chess.Game: java.lang.String getMoveListString(boolean)>(0);
        $r2 = <java.lang.System: java.io.PrintStream out>;
        $r3 = newarray (java.lang.Object)[1];
        $r3[0] = r1;
        virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s", $r3);
        return;
    }

    public final java.lang.String getMoveListString(boolean)
    {
        chess.Game r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r1, r2, $r22, $r23, $r24;
        chess.Position r3, $r8, $r9;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r4, r6, r16, r25, $r28, $r32, $r37, $r41, r43, $r46, $r48;
        chess.Move r5, $r12;
        chess.UndoInfo r7, $r15, $r34;
        java.util.List $r10, $r13, $r17, $r19;
        java.lang.Object $r11, $r14, $r18, $r20;
        java.lang.Boolean $r21;
        java.lang.Object[] $r26, $r30, $r35, $r39, $r45;
        java.lang.Integer $r27, $r31, $r36, $r40;

        r0 := @this: chess.Game;
        z0 := @parameter0: boolean;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r8 = new chess.Position;
        $r9 = r0.<chess.Game: chess.Position pos>;
        specialinvoke $r8.<chess.Position: void <init>(chess.Position)>($r9);
        r3 = $r8;
        i0 = r0.<chess.Game: int currentMove>;

     label0:
        if i0 <= 0 goto label1;

        $r10 = r0.<chess.Game: java.util.List moveList>;
        $i2 = i0 - 1;
        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i2);
        $r12 = (chess.Move) $r11;
        $r13 = r0.<chess.Game: java.util.List uiInfoList>;
        $i3 = i0 - 1;
        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i3);
        $r15 = (chess.UndoInfo) $r14;
        virtualinvoke r3.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>($r12, $r15);
        i0 = i0 + -1;
        goto label0;

     label1:
        r16 = "";
        r4 = "";
        i1 = 0;

     label2:
        $i4 = r0.<chess.Game: int currentMove>;
        if i1 >= $i4 goto label9;

        $r17 = r0.<chess.Game: java.util.List moveList>;
        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i1);
        r5 = (chess.Move) $r18;
        r6 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r3, r5, 0);
        $r19 = r0.<chess.Game: java.util.List drawOfferList>;
        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i1);
        $r21 = (java.lang.Boolean) $r20;
        $z1 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();
        if $z1 == 0 goto label3;

        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (d)");
        r6 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $z2 = r3.<chess.Position: boolean whiteMove>;
        if $z2 == 0 goto label4;

        r16 = r6;
        goto label8;

     label4:
        r25 = r6;
        $i5 = virtualinvoke r16.<java.lang.String: int length()>();
        if $i5 != 0 goto label5;

        r16 = "...";

     label5:
        if z0 == 0 goto label6;

        $r26 = newarray (java.lang.Object)[3];
        $i6 = r3.<chess.Position: int fullMoveCounter>;
        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);
        $r26[0] = $r27;
        $r26[1] = r16;
        $r26[2] = r25;
        $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d. %s %s ", $r26);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        goto label7;

     label6:
        $r30 = newarray (java.lang.Object)[3];
        $i7 = r3.<chess.Position: int fullMoveCounter>;
        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
        $r30[0] = $r31;
        $r30[1] = r16;
        $r30[2] = r25;
        $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%3d.  %-10s %-10s%n", $r30);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

     label7:
        r16 = "";
        r4 = "";

     label8:
        $r34 = new chess.UndoInfo;
        specialinvoke $r34.<chess.UndoInfo: void <init>()>();
        r7 = $r34;
        virtualinvoke r3.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r5, r7);
        i1 = i1 + 1;
        goto label2;

     label9:
        $i8 = virtualinvoke r16.<java.lang.String: int length()>();
        if $i8 > 0 goto label10;

        $i9 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i9 <= 0 goto label13;

     label10:
        $i10 = virtualinvoke r16.<java.lang.String: int length()>();
        if $i10 != 0 goto label11;

        r16 = "...";

     label11:
        if z0 == 0 goto label12;

        $r35 = newarray (java.lang.Object)[3];
        $i11 = r3.<chess.Position: int fullMoveCounter>;
        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);
        $r35[0] = $r36;
        $r35[1] = r16;
        $r35[2] = r4;
        $r37 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d. %s %s ", $r35);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        goto label13;

     label12:
        $r39 = newarray (java.lang.Object)[3];
        $i12 = r3.<chess.Position: int fullMoveCounter>;
        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);
        $r39[0] = $r40;
        $r39[1] = r16;
        $r39[2] = r4;
        $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%3d.  %-8s %-8s%n", $r39);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

     label13:
        r43 = virtualinvoke r0.<chess.Game: java.lang.String getPGNResultString()>();
        $z3 = virtualinvoke r43.<java.lang.String: boolean equals(java.lang.Object)>("*");
        if $z3 != 0 goto label15;

        if z0 == 0 goto label14;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);
        goto label15;

     label14:
        $r45 = newarray (java.lang.Object)[1];
        $r45[0] = r43;
        $r46 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s%n", $r45);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

     label15:
        $r48 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r48;
    }

    public final java.lang.String getPGNResultString()
    {
        chess.Game r0;
        java.lang.String r1;
        int[] $r2;
        chess.Game$GameState $r3;
        int $i0, $i1;

        r0 := @this: chess.Game;
        r1 = "*";
        $r2 = <chess.Game$1: int[] $SwitchMap$chess$Game$GameState>;
        $r3 = virtualinvoke r0.<chess.Game: chess.Game$GameState getGameState()>();
        $i0 = virtualinvoke $r3.<chess.Game$GameState: int ordinal()>();
        $i1 = $r2[$i0];
        tableswitch($i1)
        {
            case 1: goto label0;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label2;
            case 11: goto label1;
            default: goto label4;
        };

     label0:
        goto label4;

     label1:
        r1 = "1-0";
        goto label4;

     label2:
        r1 = "0-1";
        goto label4;

     label3:
        r1 = "1/2-1/2";

     label4:
        return r1;
    }

    public java.util.ArrayList getHistory()
    {
        chess.Game r0;
        java.util.ArrayList $r1, r2;
        chess.Position r3, $r4, $r5, $r12;
        int i0, $i1, $i2, $i3;
        java.util.List $r6, $r9;
        java.lang.Object $r7, $r10;
        chess.Move $r8;
        chess.UndoInfo $r11;

        r0 := @this: chess.Game;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r4 = new chess.Position;
        $r5 = r0.<chess.Game: chess.Position pos>;
        specialinvoke $r4.<chess.Position: void <init>(chess.Position)>($r5);
        r3 = $r4;
        i0 = r0.<chess.Game: int currentMove>;

     label0:
        if i0 <= 0 goto label2;

        $i1 = r3.<chess.Position: int halfMoveClock>;
        if $i1 != 0 goto label1;

        goto label2;

     label1:
        $r6 = r0.<chess.Game: java.util.List moveList>;
        $i2 = i0 - 1;
        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i2);
        $r8 = (chess.Move) $r7;
        $r9 = r0.<chess.Game: java.util.List uiInfoList>;
        $i3 = i0 - 1;
        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i3);
        $r11 = (chess.UndoInfo) $r10;
        virtualinvoke r3.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>($r8, $r11);
        $r12 = new chess.Position;
        specialinvoke $r12.<chess.Position: void <init>(chess.Position)>(r3);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);
        i0 = i0 + -1;
        goto label0;

     label2:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r2);
        return r2;
    }

    private boolean handleDrawCmd(java.lang.String)
    {
        chess.Game r0;
        java.lang.String r1, r3, $r34, r35;
        boolean z0, z1, $z2, $z3, $z7, $z8, $z9, $z11, $z13, $z14;
        chess.Move r2, $r20, $r37;
        java.util.ArrayList r4, $r11;
        chess.UndoInfo r5, $r12, $r23, $r29, r30;
        chess.Position r6, r7, r9, $r10, $r13, $r14, $r15, r16, $r17, $r26, $r27, r28, $r33, $r36;
        java.util.Iterator r8;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, $i7, $i8;
        java.util.List $r18, $r21;
        java.lang.Object $r19, $r22, $r24, $r25;
        chess.Game$GameState $r32, $r38;

        r0 := @this: chess.Game;
        r1 := @parameter0: java.lang.String;
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("rep");
        if $z2 != 0 goto label0;

        $z3 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("50");
        if $z3 == 0 goto label18;

     label0:
        z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("rep");
        r2 = null;
        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        $i1 = $i0 + 1;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);
        $i2 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i2 <= 0 goto label1;

        $r10 = r0.<chess.Game: chess.Position pos>;
        r2 = staticinvoke <chess.TextIO: chess.Move stringToMove(chess.Position,java.lang.String)>($r10, r3);

     label1:
        if z0 == 0 goto label9;

        z1 = 0;
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r4 = $r11;
        if r2 == null goto label2;

        $r12 = new chess.UndoInfo;
        specialinvoke $r12.<chess.UndoInfo: void <init>()>();
        r5 = $r12;
        $r13 = new chess.Position;
        $r14 = r0.<chess.Game: chess.Position pos>;
        specialinvoke $r13.<chess.Position: void <init>(chess.Position)>($r14);
        r6 = $r13;
        virtualinvoke r6.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r2, r5);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6);

     label2:
        $r15 = r0.<chess.Game: chess.Position pos>;
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r15);
        r16 = r0.<chess.Game: chess.Position pos>;
        $i3 = r0.<chess.Game: int currentMove>;
        i4 = $i3 - 1;

     label3:
        if i4 < 0 goto label4;

        $r17 = new chess.Position;
        specialinvoke $r17.<chess.Position: void <init>(chess.Position)>(r16);
        r16 = $r17;
        $r18 = r0.<chess.Game: java.util.List moveList>;
        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i4);
        $r20 = (chess.Move) $r19;
        $r21 = r0.<chess.Game: java.util.List uiInfoList>;
        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i4);
        $r23 = (chess.UndoInfo) $r22;
        virtualinvoke r16.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>($r20, $r23);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r16);
        i4 = i4 + -1;
        goto label3;

     label4:
        i5 = 0;
        $r24 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);
        r7 = (chess.Position) $r24;
        r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z7 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();
        if $z7 == 0 goto label7;

        $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();
        r9 = (chess.Position) $r25;
        $z8 = virtualinvoke r9.<chess.Position: boolean drawRuleEquals(chess.Position)>(r7);
        if $z8 == 0 goto label6;

        i5 = i5 + 1;

     label6:
        goto label5;

     label7:
        if i5 < 3 goto label8;

        z1 = 1;

     label8:
        goto label13;

     label9:
        $r26 = new chess.Position;
        $r27 = r0.<chess.Game: chess.Position pos>;
        specialinvoke $r26.<chess.Position: void <init>(chess.Position)>($r27);
        r28 = $r26;
        if r2 == null goto label10;

        $r29 = new chess.UndoInfo;
        specialinvoke $r29.<chess.UndoInfo: void <init>()>();
        r30 = $r29;
        virtualinvoke r28.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r2, r30);

     label10:
        $i6 = r28.<chess.Position: int halfMoveClock>;
        if $i6 < 100 goto label11;

        $z9 = 1;
        goto label12;

     label11:
        $z9 = 0;

     label12:
        z1 = $z9;

     label13:
        if z1 == 0 goto label16;

        if z0 == 0 goto label14;

        $r32 = <chess.Game$GameState: chess.Game$GameState DRAW_REP>;
        goto label15;

     label14:
        $r32 = <chess.Game$GameState: chess.Game$GameState DRAW_50>;

     label15:
        r0.<chess.Game: chess.Game$GameState drawState> = $r32;
        r0.<chess.Game: java.lang.String drawStateMoveStr> = null;
        if r2 == null goto label17;

        $r33 = r0.<chess.Game: chess.Position pos>;
        $r34 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>($r33, r2, 0);
        r0.<chess.Game: java.lang.String drawStateMoveStr> = $r34;
        goto label17;

     label16:
        r0.<chess.Game: boolean pendingDrawOffer> = 1;
        if r2 == null goto label17;

        virtualinvoke r0.<chess.Game: boolean processString(java.lang.String)>(r3);

     label17:
        return 1;

     label18:
        $z11 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("offer ");
        if $z11 == 0 goto label20;

        r0.<chess.Game: boolean pendingDrawOffer> = 1;
        $i7 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        $i8 = $i7 + 1;
        r35 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i8);
        $r36 = r0.<chess.Game: chess.Position pos>;
        $r37 = staticinvoke <chess.TextIO: chess.Move stringToMove(chess.Position,java.lang.String)>($r36, r35);
        if $r37 == null goto label19;

        virtualinvoke r0.<chess.Game: boolean processString(java.lang.String)>(r35);

     label19:
        return 1;

     label20:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("accept");
        if $z13 == 0 goto label22;

        $z14 = virtualinvoke r0.<chess.Game: boolean haveDrawOffer()>();
        if $z14 == 0 goto label21;

        $r38 = <chess.Game$GameState: chess.Game$GameState DRAW_AGREE>;
        r0.<chess.Game: chess.Game$GameState drawState> = $r38;

     label21:
        return 1;

     label22:
        return 0;
    }

    private boolean handleBookCmd(java.lang.String)
    {
        chess.Game r0;
        java.lang.String r1;
        boolean $z0, $z1;
        chess.Player $r2, $r3, $r4, $r5;

        r0 := @this: chess.Game;
        r1 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("off");
        if $z0 == 0 goto label0;

        $r2 = r0.<chess.Game: chess.Player whitePlayer>;
        interfaceinvoke $r2.<chess.Player: void useBook(boolean)>(0);
        $r3 = r0.<chess.Game: chess.Player blackPlayer>;
        interfaceinvoke $r3.<chess.Player: void useBook(boolean)>(0);
        return 1;

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("on");
        if $z1 == 0 goto label1;

        $r4 = r0.<chess.Game: chess.Player whitePlayer>;
        interfaceinvoke $r4.<chess.Player: void useBook(boolean)>(1);
        $r5 = r0.<chess.Game: chess.Player whitePlayer>;
        interfaceinvoke $r5.<chess.Player: void useBook(boolean)>(1);
        return 1;

     label1:
        return 0;
    }

    private boolean insufficientMaterial()
    {
        chess.Game r0;
        int i0, i1, i2, i3, $i21, $i22, $i23, $i24;
        long l4, $l5, $l7, $l9, $l11, $l13, $l15, $l17, $l18, $l19, $l20, $l25, $l26, $l27, $l29;
        chess.Position $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;
        long[] $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        byte $b6, $b8, $b10, $b12, $b14, $b16, $b28, $b30;

        r0 := @this: chess.Game;
        $r1 = r0.<chess.Game: chess.Position pos>;
        $r2 = $r1.<chess.Position: long[] pieceTypeBB>;
        $l5 = $r2[2];
        $b6 = $l5 cmp 0L;
        if $b6 == 0 goto label0;

        return 0;

     label0:
        $r3 = r0.<chess.Game: chess.Position pos>;
        $r4 = $r3.<chess.Position: long[] pieceTypeBB>;
        $l7 = $r4[3];
        $b8 = $l7 cmp 0L;
        if $b8 == 0 goto label1;

        return 0;

     label1:
        $r5 = r0.<chess.Game: chess.Position pos>;
        $r6 = $r5.<chess.Position: long[] pieceTypeBB>;
        $l9 = $r6[6];
        $b10 = $l9 cmp 0L;
        if $b10 == 0 goto label2;

        return 0;

     label2:
        $r7 = r0.<chess.Game: chess.Position pos>;
        $r8 = $r7.<chess.Position: long[] pieceTypeBB>;
        $l11 = $r8[8];
        $b12 = $l11 cmp 0L;
        if $b12 == 0 goto label3;

        return 0;

     label3:
        $r9 = r0.<chess.Game: chess.Position pos>;
        $r10 = $r9.<chess.Position: long[] pieceTypeBB>;
        $l13 = $r10[9];
        $b14 = $l13 cmp 0L;
        if $b14 == 0 goto label4;

        return 0;

     label4:
        $r11 = r0.<chess.Game: chess.Position pos>;
        $r12 = $r11.<chess.Position: long[] pieceTypeBB>;
        $l15 = $r12[12];
        $b16 = $l15 cmp 0L;
        if $b16 == 0 goto label5;

        return 0;

     label5:
        $r13 = r0.<chess.Game: chess.Position pos>;
        $r14 = $r13.<chess.Position: long[] pieceTypeBB>;
        $l17 = $r14[4];
        i0 = staticinvoke <java.lang.Long: int bitCount(long)>($l17);
        $r15 = r0.<chess.Game: chess.Position pos>;
        $r16 = $r15.<chess.Position: long[] pieceTypeBB>;
        $l18 = $r16[5];
        i1 = staticinvoke <java.lang.Long: int bitCount(long)>($l18);
        $r17 = r0.<chess.Game: chess.Position pos>;
        $r18 = $r17.<chess.Position: long[] pieceTypeBB>;
        $l19 = $r18[10];
        i2 = staticinvoke <java.lang.Long: int bitCount(long)>($l19);
        $r19 = r0.<chess.Game: chess.Position pos>;
        $r20 = $r19.<chess.Position: long[] pieceTypeBB>;
        $l20 = $r20[11];
        i3 = staticinvoke <java.lang.Long: int bitCount(long)>($l20);
        $i21 = i0 + i1;
        $i22 = $i21 + i2;
        $i23 = $i22 + i3;
        if $i23 > 1 goto label6;

        return 1;

     label6:
        $i24 = i1 + i3;
        if $i24 != 0 goto label8;

        $r21 = r0.<chess.Game: chess.Position pos>;
        $r22 = $r21.<chess.Position: long[] pieceTypeBB>;
        $l25 = $r22[4];
        $r23 = r0.<chess.Game: chess.Position pos>;
        $r24 = $r23.<chess.Position: long[] pieceTypeBB>;
        $l26 = $r24[10];
        l4 = $l25 | $l26;
        $l27 = l4 & -6172840429334713771L;
        $b28 = $l27 cmp 0L;
        if $b28 == 0 goto label7;

        $l29 = l4 & 6172840429334713770L;
        $b30 = $l29 cmp 0L;
        if $b30 != 0 goto label8;

     label7:
        return 1;

     label8:
        return 0;
    }

    static final long perfT(chess.MoveGen, chess.Position, int)
    {
        chess.MoveGen r0;
        chess.Position r1;
        int i0, i2, i3, $i5, $i6;
        long l1, $l4, $l7;
        chess.MoveGen$MoveList r2;
        chess.Move r3;
        chess.UndoInfo $r4, r5;
        chess.Move[] $r6;

        r0 := @parameter0: chess.MoveGen;
        r1 := @parameter1: chess.Position;
        i0 := @parameter2: int;
        if i0 != 0 goto label0;

        return 1L;

     label0:
        l1 = 0L;
        r2 = virtualinvoke r0.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r1);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r1, r2);
        if i0 != 1 goto label1;

        i2 = r2.<chess.MoveGen$MoveList: int size>;
        virtualinvoke r0.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r2);
        $l4 = (long) i2;
        return $l4;

     label1:
        $r4 = new chess.UndoInfo;
        specialinvoke $r4.<chess.UndoInfo: void <init>()>();
        r5 = $r4;
        i3 = 0;

     label2:
        $i5 = r2.<chess.MoveGen$MoveList: int size>;
        if i3 >= $i5 goto label3;

        $r6 = r2.<chess.MoveGen$MoveList: chess.Move[] m>;
        r3 = $r6[i3];
        virtualinvoke r1.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r3, r5);
        $i6 = i0 - 1;
        $l7 = staticinvoke <chess.Game: long perfT(chess.MoveGen,chess.Position,int)>(r0, r1, $i6);
        l1 = l1 + $l7;
        virtualinvoke r1.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r3, r5);
        i3 = i3 + 1;
        goto label2;

     label3:
        virtualinvoke r0.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r2);
        return l1;
    }
}
public final class chess.History extends java.lang.Object
{
    private int[][] countSuccess;
    private int[][] countFail;
    private int[][] score;

    public void <init>()
    {
        chess.History r0;

        r0 := @this: chess.History;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        virtualinvoke r0.<chess.History: void init()>();
        return;
    }

    public void init()
    {
        chess.History r0;
        int i0, i1;
        int[][] $r1, $r2, $r3, $r4, $r6, $r8;
        int[] $r5, $r7, $r9;

        r0 := @this: chess.History;
        $r1 = newmultiarray (int)[13][64];
        r0.<chess.History: int[][] countSuccess> = $r1;
        $r2 = newmultiarray (int)[13][64];
        r0.<chess.History: int[][] countFail> = $r2;
        $r3 = newmultiarray (int)[13][64];
        r0.<chess.History: int[][] score> = $r3;
        i0 = 0;

     label0:
        if i0 >= 13 goto label3;

        i1 = 0;

     label1:
        if i1 >= 64 goto label2;

        $r4 = r0.<chess.History: int[][] countSuccess>;
        $r5 = $r4[i0];
        $r5[i1] = 0;
        $r6 = r0.<chess.History: int[][] countFail>;
        $r7 = $r6[i0];
        $r7[i1] = 0;
        $r8 = r0.<chess.History: int[][] score>;
        $r9 = $r8[i0];
        $r9[i1] = -1;
        i1 = i1 + 1;
        goto label1;

     label2:
        i0 = i0 + 1;
        goto label0;

     label3:
        return;
    }

    public final void addSuccess(chess.Position, chess.Move, int)
    {
        chess.History r0;
        chess.Position r1;
        chess.Move r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[][] $r3, $r5, $r7, $r9;
        int[] $r4, $r6, $r8, $r10;

        r0 := @this: chess.History;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: chess.Move;
        i0 := @parameter2: int;
        $i4 = r2.<chess.Move: int 'from'>;
        i1 = virtualinvoke r1.<chess.Position: int getPiece(int)>($i4);
        i2 = i0;
        $r3 = r0.<chess.History: int[][] countSuccess>;
        $r4 = $r3[i1];
        $i5 = r2.<chess.Move: int 'to'>;
        $i6 = $r4[$i5];
        i3 = $i6 + i2;
        if i3 <= 1000 goto label0;

        i3 = i3 / 2;
        $r5 = r0.<chess.History: int[][] countFail>;
        $r6 = $r5[i1];
        $i7 = r2.<chess.Move: int 'to'>;
        $i8 = $r6[$i7];
        $i9 = $i8 / 2;
        $r6[$i7] = $i9;

     label0:
        $r7 = r0.<chess.History: int[][] countSuccess>;
        $r8 = $r7[i1];
        $i10 = r2.<chess.Move: int 'to'>;
        $r8[$i10] = i3;
        $r9 = r0.<chess.History: int[][] score>;
        $r10 = $r9[i1];
        $i11 = r2.<chess.Move: int 'to'>;
        $r10[$i11] = -1;
        return;
    }

    public final void addFail(chess.Position, chess.Move, int)
    {
        chess.History r0;
        chess.Position r1;
        chess.Move r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        int[][] $r3, $r5;
        int[] $r4, $r6;

        r0 := @this: chess.History;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: chess.Move;
        i0 := @parameter2: int;
        $i3 = r2.<chess.Move: int 'from'>;
        i1 = virtualinvoke r1.<chess.Position: int getPiece(int)>($i3);
        i2 = i0;
        $r3 = r0.<chess.History: int[][] countFail>;
        $r4 = $r3[i1];
        $i4 = r2.<chess.Move: int 'to'>;
        $i5 = $r4[$i4];
        $i6 = $i5 + i2;
        $r4[$i4] = $i6;
        $r5 = r0.<chess.History: int[][] score>;
        $r6 = $r5[i1];
        $i7 = r2.<chess.Move: int 'to'>;
        $r6[$i7] = -1;
        return;
    }

    public final int getHistScore(chess.Position, chess.Move)
    {
        chess.History r0;
        chess.Position r1;
        chess.Move r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12;
        int[][] $r3, $r5, $r7, $r9;
        int[] $r4, $r6, $r8, $r10;

        r0 := @this: chess.History;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: chess.Move;
        $i4 = r2.<chess.Move: int 'from'>;
        i0 = virtualinvoke r1.<chess.Position: int getPiece(int)>($i4);
        $r3 = r0.<chess.History: int[][] score>;
        $r4 = $r3[i0];
        $i5 = r2.<chess.Move: int 'to'>;
        i1 = $r4[$i5];
        if i1 < 0 goto label0;

        return i1;

     label0:
        $r5 = r0.<chess.History: int[][] countSuccess>;
        $r6 = $r5[i0];
        $i6 = r2.<chess.Move: int 'to'>;
        i2 = $r6[$i6];
        $r7 = r0.<chess.History: int[][] countFail>;
        $r8 = $r7[i0];
        $i7 = r2.<chess.Move: int 'to'>;
        i3 = $r8[$i7];
        $i8 = i2 + i3;
        if $i8 <= 0 goto label1;

        $i9 = i2 * 49;
        $i10 = i2 + i3;
        i11 = $i9 / $i10;
        goto label2;

     label1:
        i11 = 0;

     label2:
        $r9 = r0.<chess.History: int[][] score>;
        $r10 = $r9[i0];
        $i12 = r2.<chess.Move: int 'to'>;
        $r10[$i12] = i11;
        return i11;
    }
}
public class chess.HumanPlayer extends java.lang.Object implements chess.Player
{
    private java.lang.String lastCmd;
    private java.io.BufferedReader in;

    public void <init>()
    {
        chess.HumanPlayer r0;
        java.io.InputStreamReader $r1;
        java.io.InputStream $r2;
        java.io.BufferedReader $r3;

        r0 := @this: chess.HumanPlayer;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.HumanPlayer: java.lang.String lastCmd> = "";
        $r3 = new java.io.BufferedReader;
        $r1 = new java.io.InputStreamReader;
        $r2 = <java.lang.System: java.io.InputStream in>;
        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2);
        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);
        r0.<chess.HumanPlayer: java.io.BufferedReader in> = $r3;
        return;
    }

    public java.lang.String getCommand(chess.Position, boolean, java.util.List)
    {
        chess.HumanPlayer r0;
        chess.Position r1;
        boolean z0, $z1;
        java.util.List r2;
        java.lang.String r3, r4, $r5, $r8, $r10, $r11;
        java.io.PrintStream $r6;
        java.lang.Object[] $r7;
        java.io.BufferedReader $r9;
        int $i0;
        java.io.IOException $r13, r14;

        r0 := @this: chess.HumanPlayer;
        r1 := @parameter0: chess.Position;
        z0 := @parameter1: boolean;
        r2 := @parameter2: java.util.List;

     label0:
        $z1 = r1.<chess.Position: boolean whiteMove>;
        if $z1 == 0 goto label1;

        $r5 = "white";
        goto label2;

     label1:
        $r5 = "black";

     label2:
        r3 = $r5;
        $r6 = <java.lang.System: java.io.PrintStream out>;
        $r7 = newarray (java.lang.Object)[1];
        $r7[0] = r3;
        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Enter move (%s):", $r7);
        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.String)>($r8);
        $r9 = r0.<chess.HumanPlayer: java.io.BufferedReader in>;
        r4 = virtualinvoke $r9.<java.io.BufferedReader: java.lang.String readLine()>();
        if r4 != null goto label4;

        $r10 = "quit";

     label3:
        return $r10;

     label4:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i0 != 0 goto label6;

        $r11 = r0.<chess.HumanPlayer: java.lang.String lastCmd>;

     label5:
        return $r11;

     label6:
        r0.<chess.HumanPlayer: java.lang.String lastCmd> = r4;

     label7:
        return r4;

     label8:
        $r13 := @caughtexception;
        r14 = $r13;
        return "quit";

        catch java.io.IOException from label0 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public boolean isHumanPlayer()
    {
        chess.HumanPlayer r0;

        r0 := @this: chess.HumanPlayer;
        return 1;
    }

    public void useBook(boolean)
    {
        chess.HumanPlayer r0;
        boolean z0;

        r0 := @this: chess.HumanPlayer;
        z0 := @parameter0: boolean;
        return;
    }

    public void timeLimit(int, int, boolean)
    {
        chess.HumanPlayer r0;
        int i0, i1;
        boolean z0;

        r0 := @this: chess.HumanPlayer;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        return;
    }

    public void clearTT()
    {
        chess.HumanPlayer r0;

        r0 := @this: chess.HumanPlayer;
        return;
    }
}
final class chess.KillerTable$KTEntry extends java.lang.Object
{
    int move0;
    int move1;

    public void <init>()
    {
        chess.KillerTable$KTEntry r0;
        byte $b0;

        r0 := @this: chess.KillerTable$KTEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $b0 = 0;
        r0.<chess.KillerTable$KTEntry: int move1> = $b0;
        r0.<chess.KillerTable$KTEntry: int move0> = $b0;
        return;
    }
}
public class chess.KillerTable extends java.lang.Object
{
    chess.KillerTable$KTEntry[] ktList;

    public void <init>()
    {
        chess.KillerTable r0;
        int i0, $i1;
        chess.KillerTable$KTEntry $r1;
        chess.KillerTable$KTEntry[] $r2, $r3, $r4;

        r0 := @this: chess.KillerTable;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = newarray (chess.KillerTable$KTEntry)[200];
        r0.<chess.KillerTable: chess.KillerTable$KTEntry[] ktList> = $r2;
        i0 = 0;

     label0:
        $r3 = r0.<chess.KillerTable: chess.KillerTable$KTEntry[] ktList>;
        $i1 = lengthof $r3;
        if i0 >= $i1 goto label1;

        $r4 = r0.<chess.KillerTable: chess.KillerTable$KTEntry[] ktList>;
        $r1 = new chess.KillerTable$KTEntry;
        specialinvoke $r1.<chess.KillerTable$KTEntry: void <init>()>();
        $r4[i0] = $r1;
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }

    public final void addKiller(int, chess.Move)
    {
        chess.KillerTable r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        chess.Move r1;
        short s1;
        chess.KillerTable$KTEntry r2;
        chess.KillerTable$KTEntry[] $r3, $r4;

        r0 := @this: chess.KillerTable;
        i0 := @parameter0: int;
        r1 := @parameter1: chess.Move;
        $r3 = r0.<chess.KillerTable: chess.KillerTable$KTEntry[] ktList>;
        $i2 = lengthof $r3;
        if i0 < $i2 goto label0;

        return;

     label0:
        $i3 = r1.<chess.Move: int 'from'>;
        $i4 = r1.<chess.Move: int 'to'>;
        $i5 = $i4 << 6;
        $i6 = $i3 + $i5;
        $i7 = r1.<chess.Move: int promoteTo>;
        $i8 = $i7 << 12;
        $i9 = $i6 + $i8;
        s1 = (short) $i9;
        $r4 = r0.<chess.KillerTable: chess.KillerTable$KTEntry[] ktList>;
        r2 = $r4[i0];
        $i10 = r2.<chess.KillerTable$KTEntry: int move0>;
        if s1 == $i10 goto label1;

        $i11 = r2.<chess.KillerTable$KTEntry: int move0>;
        r2.<chess.KillerTable$KTEntry: int move1> = $i11;
        r2.<chess.KillerTable$KTEntry: int move0> = s1;

     label1:
        return;
    }

    public final int getKillerScore(int, chess.Move)
    {
        chess.KillerTable r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        chess.Move r1;
        short s1;
        chess.KillerTable$KTEntry r2, r7;
        chess.KillerTable$KTEntry[] $r3, $r4, $r5, $r6;

        r0 := @this: chess.KillerTable;
        i0 := @parameter0: int;
        r1 := @parameter1: chess.Move;
        $i2 = r1.<chess.Move: int 'from'>;
        $i3 = r1.<chess.Move: int 'to'>;
        $i4 = $i3 << 6;
        $i5 = $i2 + $i4;
        $i6 = r1.<chess.Move: int promoteTo>;
        $i7 = $i6 << 12;
        $i8 = $i5 + $i7;
        s1 = (short) $i8;
        $r3 = r0.<chess.KillerTable: chess.KillerTable$KTEntry[] ktList>;
        $i9 = lengthof $r3;
        if i0 >= $i9 goto label1;

        $r4 = r0.<chess.KillerTable: chess.KillerTable$KTEntry[] ktList>;
        r2 = $r4[i0];
        $i10 = r2.<chess.KillerTable$KTEntry: int move0>;
        if s1 != $i10 goto label0;

        return 4;

     label0:
        $i11 = r2.<chess.KillerTable$KTEntry: int move1>;
        if s1 != $i11 goto label1;

        return 3;

     label1:
        $i12 = i0 - 2;
        if $i12 < 0 goto label3;

        $i13 = i0 - 2;
        $r5 = r0.<chess.KillerTable: chess.KillerTable$KTEntry[] ktList>;
        $i14 = lengthof $r5;
        if $i13 >= $i14 goto label3;

        $r6 = r0.<chess.KillerTable: chess.KillerTable$KTEntry[] ktList>;
        $i15 = i0 - 2;
        r7 = $r6[$i15];
        $i16 = r7.<chess.KillerTable$KTEntry: int move0>;
        if s1 != $i16 goto label2;

        return 2;

     label2:
        $i17 = r7.<chess.KillerTable$KTEntry: int move1>;
        if s1 != $i17 goto label3;

        return 1;

     label3:
        return 0;
    }
}
public class chess.Move$SortByScore extends java.lang.Object implements java.util.Comparator
{

    public void <init>()
    {
        chess.Move$SortByScore r0;

        r0 := @this: chess.Move$SortByScore;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public int compare(chess.Move, chess.Move)
    {
        chess.Move$SortByScore r0;
        chess.Move r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: chess.Move$SortByScore;
        r1 := @parameter0: chess.Move;
        r2 := @parameter1: chess.Move;
        $i0 = r2.<chess.Move: int score>;
        $i1 = r1.<chess.Move: int score>;
        $i2 = $i0 - $i1;
        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        chess.Move$SortByScore r0;
        java.lang.Object r1, r2;
        chess.Move $r3, $r4;
        int $i0;

        r0 := @this: chess.Move$SortByScore;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (chess.Move) r1;
        $r4 = (chess.Move) r2;
        $i0 = virtualinvoke r0.<chess.Move$SortByScore: int compare(chess.Move,chess.Move)>($r3, $r4);
        return $i0;
    }
}
public class chess.Move extends java.lang.Object
{
    public int 'from';
    public int 'to';
    public int promoteTo;
    public int score;

    public void <init>(int, int, int)
    {
        chess.Move r0;
        int i0, i1, i2;

        r0 := @this: chess.Move;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.Move: int 'from'> = i0;
        r0.<chess.Move: int 'to'> = i1;
        r0.<chess.Move: int promoteTo> = i2;
        r0.<chess.Move: int score> = 0;
        return;
    }

    public void <init>(int, int, int, int)
    {
        chess.Move r0;
        int i0, i1, i2, i3;

        r0 := @this: chess.Move;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.Move: int 'from'> = i0;
        r0.<chess.Move: int 'to'> = i1;
        r0.<chess.Move: int promoteTo> = i2;
        r0.<chess.Move: int score> = i3;
        return;
    }

    public void <init>(chess.Move)
    {
        chess.Move r0, r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: chess.Move;
        r1 := @parameter0: chess.Move;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $i0 = r1.<chess.Move: int 'from'>;
        r0.<chess.Move: int 'from'> = $i0;
        $i1 = r1.<chess.Move: int 'to'>;
        r0.<chess.Move: int 'to'> = $i1;
        $i2 = r1.<chess.Move: int promoteTo>;
        r0.<chess.Move: int promoteTo> = $i2;
        $i3 = r1.<chess.Move: int score>;
        r0.<chess.Move: int score> = $i3;
        return;
    }

    public final void copyFrom(chess.Move)
    {
        chess.Move r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: chess.Move;
        r1 := @parameter0: chess.Move;
        $i0 = r1.<chess.Move: int 'from'>;
        r0.<chess.Move: int 'from'> = $i0;
        $i1 = r1.<chess.Move: int 'to'>;
        r0.<chess.Move: int 'to'> = $i1;
        $i2 = r1.<chess.Move: int promoteTo>;
        r0.<chess.Move: int promoteTo> = $i2;
        return;
    }

    public final void clear()
    {
        chess.Move r0;

        r0 := @this: chess.Move;
        r0.<chess.Move: int 'from'> = 0;
        r0.<chess.Move: int 'to'> = 0;
        r0.<chess.Move: int promoteTo> = 0;
        r0.<chess.Move: int score> = 0;
        return;
    }

    public final void setMove(int, int, int, int)
    {
        chess.Move r0;
        int i0, i1, i2, i3;

        r0 := @this: chess.Move;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        r0.<chess.Move: int 'from'> = i0;
        r0.<chess.Move: int 'to'> = i1;
        r0.<chess.Move: int promoteTo> = i2;
        r0.<chess.Move: int score> = i3;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        chess.Move r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: chess.Move;
        r1 := @parameter0: java.lang.Object;
        if r1 == null goto label0;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label1;

     label0:
        return 0;

     label1:
        r2 = (chess.Move) r1;
        $i0 = r0.<chess.Move: int 'from'>;
        $i1 = r2.<chess.Move: int 'from'>;
        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $i2 = r0.<chess.Move: int 'to'>;
        $i3 = r2.<chess.Move: int 'to'>;
        if $i2 == $i3 goto label3;

        return 0;

     label3:
        $i4 = r0.<chess.Move: int promoteTo>;
        $i5 = r2.<chess.Move: int promoteTo>;
        if $i4 == $i5 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        chess.Move r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: chess.Move;
        $i0 = r0.<chess.Move: int 'from'>;
        $i1 = $i0 * 64;
        $i2 = r0.<chess.Move: int 'to'>;
        $i3 = $i1 + $i2;
        $i4 = $i3 * 16;
        $i5 = r0.<chess.Move: int promoteTo>;
        $i6 = $i4 + $i5;
        return $i6;
    }

    public final java.lang.String toString()
    {
        chess.Move r0;
        java.lang.String $r1;

        r0 := @this: chess.Move;
        $r1 = staticinvoke <chess.TextIO: java.lang.String moveToUCIString(chess.Move)>(r0);
        return $r1;
    }
}
public final class chess.MoveGen$MoveList extends java.lang.Object
{
    public final chess.Move[] m;
    public int size;

    void <init>()
    {
        chess.MoveGen$MoveList r0;
        chess.Move[] $r1;

        r0 := @this: chess.MoveGen$MoveList;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (chess.Move)[256];
        r0.<chess.MoveGen$MoveList: chess.Move[] m> = $r1;
        r0.<chess.MoveGen$MoveList: int size> = 0;
        return;
    }

    public final void filter(java.util.List)
    {
        chess.MoveGen$MoveList r0;
        java.util.List r1;
        int i0, i1, $i2, $i3;
        chess.Move[] $r2, $r4, $r5;
        chess.Move $r3, $r6;
        boolean $z0;

        r0 := @this: chess.MoveGen$MoveList;
        r1 := @parameter0: java.util.List;
        i0 = 0;
        i1 = 0;

     label0:
        $i2 = r0.<chess.MoveGen$MoveList: int size>;
        if i1 >= $i2 goto label2;

        $r2 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r3 = $r2[i1];
        $z0 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>($r3);
        if $z0 == 0 goto label1;

        $r4 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $i3 = i0;
        i0 = i0 + 1;
        $r5 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r6 = $r5[i1];
        $r4[$i3] = $r6;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        r0.<chess.MoveGen$MoveList: int size> = i0;
        return;
    }
}
public final class chess.MoveGen extends java.lang.Object
{
    static final chess.MoveGen instance;
    private java.lang.Object[] moveListCache;
    private int moveListsInCache;
    private static final int MAX_MOVES;

    public void <init>()
    {
        chess.MoveGen r0;
        java.lang.Object[] $r1;

        r0 := @this: chess.MoveGen;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (java.lang.Object)[200];
        r0.<chess.MoveGen: java.lang.Object[] moveListCache> = $r1;
        r0.<chess.MoveGen: int moveListsInCache> = 0;
        return;
    }

    public final chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)
    {
        chess.MoveGen r0;
        chess.Position r1;
        chess.MoveGen$MoveList r2;
        long l0, l1, l3, l5, l6, l8, $l9, $l10, $l12, $l13, $l14, $l15, $l16, $l17, l18, $l21, $l22, $l23, l24, $l25, l26, $l29, $l30, $l31, l32, $l33, $l35, $l36, $l37, l38, $l41, $l42, $l43, $l44, $l49, $l50, $l51, $l52, l55, $l57, $l58, $l59, l60, $l61, l62, $l63, $l64, l65, $l66, $l67, $l68, l69, $l71, $l72, $l73, $l74, $l75, l76, $l77, $l78, $l79, $l80, l81, l82, $l85, $l86, $l87, $l88, $l89, l90, $l91, l92, $l95, $l96, $l97, l98, $l99, l100, $l103, $l104, $l105, l106, $l107, $l109, $l110, $l111, l112, l114, l115, $l118, $l119, $l120, $l121, $l126, $l127, $l128, $l129, l132, $l135, $l136, $l137, l138, $l139, l140, $l141, $l142, l143, $l144, $l145, $l146, l147, $l149, l150, $l151, $l152, $l153, $l154, l155, $l156, $l157, $l158, $l159, l160;
        int i2, i7, i20, i28, i34, $i39, $i40, $i46, $i47, $i48, $i54, i70, i84, i94, i102, i108, $i116, $i117, $i123, $i124, $i125, $i131, i134, i148;
        byte b4, $b11, $b19, $b27, $b45, $b53, $b56, $b83, $b93, $b101, b113, $b122, $b130, $b133;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        long[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: chess.MoveGen;
        r1 := @parameter0: chess.Position;
        r2 = specialinvoke r0.<chess.MoveGen: chess.MoveGen$MoveList getMoveListObj()>();
        $l9 = r1.<chess.Position: long whiteBB>;
        $l10 = r1.<chess.Position: long blackBB>;
        l0 = $l9 | $l10;
        $z0 = r1.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label20;

        $r3 = r1.<chess.Position: long[] pieceTypeBB>;
        l1 = $r3[2];

     label0:
        $b11 = l1 cmp 0L;
        if $b11 == 0 goto label2;

        i2 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l1);
        $l12 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i2, l0);
        $l13 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i2, l0);
        $l14 = $l12 | $l13;
        $l15 = r1.<chess.Position: long whiteBB>;
        $l16 = $l15 ^ -1L;
        l3 = $l14 & $l16;
        $z1 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i2, l3);
        if $z1 == 0 goto label1;

        return r2;

     label1:
        $l17 = l1 - 1L;
        l1 = l1 & $l17;
        goto label0;

     label2:
        $r4 = r1.<chess.Position: long[] pieceTypeBB>;
        l18 = $r4[3];

     label3:
        $b19 = l18 cmp 0L;
        if $b19 == 0 goto label5;

        i20 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l18);
        $l21 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i20, l0);
        $l22 = r1.<chess.Position: long whiteBB>;
        $l23 = $l22 ^ -1L;
        l24 = $l21 & $l23;
        $z2 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i20, l24);
        if $z2 == 0 goto label4;

        return r2;

     label4:
        $l25 = l18 - 1L;
        l18 = l18 & $l25;
        goto label3;

     label5:
        $r5 = r1.<chess.Position: long[] pieceTypeBB>;
        l26 = $r5[4];

     label6:
        $b27 = l26 cmp 0L;
        if $b27 == 0 goto label8;

        i28 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l26);
        $l29 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i28, l0);
        $l30 = r1.<chess.Position: long whiteBB>;
        $l31 = $l30 ^ -1L;
        l32 = $l29 & $l31;
        $z3 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i28, l32);
        if $z3 == 0 goto label7;

        return r2;

     label7:
        $l33 = l26 - 1L;
        l26 = l26 & $l33;
        goto label6;

     label8:
        i34 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $r6 = <chess.BitBoard: long[] kingAttacks>;
        $l35 = $r6[i34];
        $l36 = r1.<chess.Position: long whiteBB>;
        $l37 = $l36 ^ -1L;
        l38 = $l35 & $l37;
        $z4 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i34, l38);
        if $z4 == 0 goto label9;

        return r2;

     label9:
        b4 = 4;
        if i34 != 4 goto label11;

        l5 = 96L;
        l6 = 14L;
        $i39 = virtualinvoke r1.<chess.Position: int getCastleMask()>();
        $i40 = $i39 & 2;
        if $i40 == 0 goto label10;

        $l41 = r1.<chess.Position: long whiteBB>;
        $l42 = r1.<chess.Position: long blackBB>;
        $l43 = $l41 | $l42;
        $l44 = 96L & $l43;
        $b45 = $l44 cmp 0L;
        if $b45 != 0 goto label10;

        $i46 = virtualinvoke r1.<chess.Position: int getPiece(int)>(7);
        if $i46 != 3 goto label10;

        $z5 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 4);
        if $z5 != 0 goto label10;

        $z6 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 5);
        if $z6 != 0 goto label10;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r2, 4, 6, 0);

     label10:
        $i47 = virtualinvoke r1.<chess.Position: int getCastleMask()>();
        $i48 = $i47 & 1;
        if $i48 == 0 goto label11;

        $l49 = r1.<chess.Position: long whiteBB>;
        $l50 = r1.<chess.Position: long blackBB>;
        $l51 = $l49 | $l50;
        $l52 = 14L & $l51;
        $b53 = $l52 cmp 0L;
        if $b53 != 0 goto label11;

        $i54 = virtualinvoke r1.<chess.Position: int getPiece(int)>(0);
        if $i54 != 3 goto label11;

        $z7 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 4);
        if $z7 != 0 goto label11;

        $z8 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 3);
        if $z8 != 0 goto label11;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r2, 4, 2, 0);

     label11:
        $r7 = r1.<chess.Position: long[] pieceTypeBB>;
        l55 = $r7[5];

     label12:
        $b56 = l55 cmp 0L;
        if $b56 == 0 goto label14;

        i7 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l55);
        $r8 = <chess.BitBoard: long[] knightAttacks>;
        $l57 = $r8[i7];
        $l58 = r1.<chess.Position: long whiteBB>;
        $l59 = $l58 ^ -1L;
        l60 = $l57 & $l59;
        $z9 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i7, l60);
        if $z9 == 0 goto label13;

        return r2;

     label13:
        $l61 = l55 - 1L;
        l55 = l55 & $l61;
        goto label12;

     label14:
        $r9 = r1.<chess.Position: long[] pieceTypeBB>;
        l62 = $r9[6];
        $l63 = l62 << 8;
        $l64 = l0 ^ -1L;
        l65 = $l63 & $l64;
        $z10 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l65, -8, 1);
        if $z10 == 0 goto label15;

        return r2;

     label15:
        $l66 = l65 & 16711680L;
        $l67 = $l66 << 8;
        $l68 = l0 ^ -1L;
        l69 = $l67 & $l68;
        staticinvoke <chess.MoveGen: void addPawnDoubleMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int)>(r2, r1, l69, -16);
        i70 = virtualinvoke r1.<chess.Position: int getEpSquare()>();
        if i70 < 0 goto label16;

        $l71 = 1L << i70;
        goto label17;

     label16:
        $l71 = 0L;

     label17:
        l8 = $l71;
        $l72 = l62 << 7;
        $l73 = $l72 & 9187201950435737471L;
        $l74 = r1.<chess.Position: long blackBB>;
        $l75 = $l74 | l8;
        l76 = $l73 & $l75;
        $z11 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l76, -7, 1);
        if $z11 == 0 goto label18;

        return r2;

     label18:
        $l77 = l62 << 9;
        $l78 = $l77 & -72340172838076674L;
        $l79 = r1.<chess.Position: long blackBB>;
        $l80 = $l79 | l8;
        l81 = $l78 & $l80;
        $z12 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l81, -9, 1);
        if $z12 == 0 goto label19;

        return r2;

     label19:
        goto label40;

     label20:
        $r10 = r1.<chess.Position: long[] pieceTypeBB>;
        l82 = $r10[8];

     label21:
        $b83 = l82 cmp 0L;
        if $b83 == 0 goto label23;

        i84 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l82);
        $l85 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i84, l0);
        $l86 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i84, l0);
        $l87 = $l85 | $l86;
        $l88 = r1.<chess.Position: long blackBB>;
        $l89 = $l88 ^ -1L;
        l90 = $l87 & $l89;
        $z13 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i84, l90);
        if $z13 == 0 goto label22;

        return r2;

     label22:
        $l91 = l82 - 1L;
        l82 = l82 & $l91;
        goto label21;

     label23:
        $r11 = r1.<chess.Position: long[] pieceTypeBB>;
        l92 = $r11[9];

     label24:
        $b93 = l92 cmp 0L;
        if $b93 == 0 goto label26;

        i94 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l92);
        $l95 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i94, l0);
        $l96 = r1.<chess.Position: long blackBB>;
        $l97 = $l96 ^ -1L;
        l98 = $l95 & $l97;
        $z14 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i94, l98);
        if $z14 == 0 goto label25;

        return r2;

     label25:
        $l99 = l92 - 1L;
        l92 = l92 & $l99;
        goto label24;

     label26:
        $r12 = r1.<chess.Position: long[] pieceTypeBB>;
        l100 = $r12[10];

     label27:
        $b101 = l100 cmp 0L;
        if $b101 == 0 goto label29;

        i102 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l100);
        $l103 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i102, l0);
        $l104 = r1.<chess.Position: long blackBB>;
        $l105 = $l104 ^ -1L;
        l106 = $l103 & $l105;
        $z15 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i102, l106);
        if $z15 == 0 goto label28;

        return r2;

     label28:
        $l107 = l100 - 1L;
        l100 = l100 & $l107;
        goto label27;

     label29:
        i108 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $r13 = <chess.BitBoard: long[] kingAttacks>;
        $l109 = $r13[i108];
        $l110 = r1.<chess.Position: long blackBB>;
        $l111 = $l110 ^ -1L;
        l112 = $l109 & $l111;
        $z16 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i108, l112);
        if $z16 == 0 goto label30;

        return r2;

     label30:
        b113 = 60;
        if i108 != 60 goto label32;

        l114 = 6917529027641081856L;
        l115 = 1008806316530991104L;
        $i116 = virtualinvoke r1.<chess.Position: int getCastleMask()>();
        $i117 = $i116 & 8;
        if $i117 == 0 goto label31;

        $l118 = r1.<chess.Position: long whiteBB>;
        $l119 = r1.<chess.Position: long blackBB>;
        $l120 = $l118 | $l119;
        $l121 = 6917529027641081856L & $l120;
        $b122 = $l121 cmp 0L;
        if $b122 != 0 goto label31;

        $i123 = virtualinvoke r1.<chess.Position: int getPiece(int)>(63);
        if $i123 != 9 goto label31;

        $z17 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 60);
        if $z17 != 0 goto label31;

        $z18 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 61);
        if $z18 != 0 goto label31;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r2, 60, 62, 0);

     label31:
        $i124 = virtualinvoke r1.<chess.Position: int getCastleMask()>();
        $i125 = $i124 & 4;
        if $i125 == 0 goto label32;

        $l126 = r1.<chess.Position: long whiteBB>;
        $l127 = r1.<chess.Position: long blackBB>;
        $l128 = $l126 | $l127;
        $l129 = 1008806316530991104L & $l128;
        $b130 = $l129 cmp 0L;
        if $b130 != 0 goto label32;

        $i131 = virtualinvoke r1.<chess.Position: int getPiece(int)>(56);
        if $i131 != 9 goto label32;

        $z19 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 60);
        if $z19 != 0 goto label32;

        $z20 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 59);
        if $z20 != 0 goto label32;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r2, 60, 58, 0);

     label32:
        $r14 = r1.<chess.Position: long[] pieceTypeBB>;
        l132 = $r14[11];

     label33:
        $b133 = l132 cmp 0L;
        if $b133 == 0 goto label35;

        i134 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l132);
        $r15 = <chess.BitBoard: long[] knightAttacks>;
        $l135 = $r15[i134];
        $l136 = r1.<chess.Position: long blackBB>;
        $l137 = $l136 ^ -1L;
        l138 = $l135 & $l137;
        $z21 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i134, l138);
        if $z21 == 0 goto label34;

        return r2;

     label34:
        $l139 = l132 - 1L;
        l132 = l132 & $l139;
        goto label33;

     label35:
        $r16 = r1.<chess.Position: long[] pieceTypeBB>;
        l140 = $r16[12];
        $l141 = l140 >>> 8;
        $l142 = l0 ^ -1L;
        l143 = $l141 & $l142;
        $z22 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l143, 8, 1);
        if $z22 == 0 goto label36;

        return r2;

     label36:
        $l144 = l143 & 280375465082880L;
        $l145 = $l144 >>> 8;
        $l146 = l0 ^ -1L;
        l147 = $l145 & $l146;
        staticinvoke <chess.MoveGen: void addPawnDoubleMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int)>(r2, r1, l147, 16);
        i148 = virtualinvoke r1.<chess.Position: int getEpSquare()>();
        if i148 < 0 goto label37;

        $l149 = 1L << i148;
        goto label38;

     label37:
        $l149 = 0L;

     label38:
        l150 = $l149;
        $l151 = l140 >>> 9;
        $l152 = $l151 & 9187201950435737471L;
        $l153 = r1.<chess.Position: long whiteBB>;
        $l154 = $l153 | l150;
        l155 = $l152 & $l154;
        $z23 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l155, 9, 1);
        if $z23 == 0 goto label39;

        return r2;

     label39:
        $l156 = l140 >>> 7;
        $l157 = $l156 & -72340172838076674L;
        $l158 = r1.<chess.Position: long whiteBB>;
        $l159 = $l158 | l150;
        l160 = $l157 & $l159;
        $z24 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l160, 7, 1);
        if $z24 == 0 goto label40;

        return r2;

     label40:
        return r2;
    }

    public final chess.MoveGen$MoveList checkEvasions(chess.Position)
    {
        chess.MoveGen r0;
        chess.Position r1;
        chess.MoveGen$MoveList r2;
        long l0, l1, l2, l3, l4, l7, l9, l10, l12, $l13, $l14, $l15, $l17, $l18, $l19, $l22, $l23, $l24, $l25, $l28, $l29, $l30, $l32, $l33, l34, $l36, $l37, $l40, $l41, l42, l43, $l45, $l46, $l47, $l48, $l49, $l50, $l51, l52, $l55, $l56, $l57, $l58, l59, $l60, l61, $l64, $l65, $l66, $l67, l68, $l69, $l71, $l72, $l73, l74, l75, $l77, $l78, $l79, $l80, $l81, l82, $l83, $l84, $l85, $l86, $l87, $l88, l89, $l90, $l91, $l92, $l93, $l94, $l95, $l96, l97, $l98, $l99, $l100, $l101, $l102, l103, $l104, $l106, l107, $l108, $l109, l110, $l113, $l114, $l115, $l116, l117, $l120, $l121, $l122, $l124, $l125, l126, l127, $l129, $l130, $l134, $l135, l136, l137, $l140, $l141, $l142, $l143, $l144, $l145, l146, $l147, l148, $l151, $l152, $l153, $l154, l155, $l156, l157, $l160, $l161, $l162, $l163, l164, $l165, $l167, $l168, $l169, l170, l171, $l174, $l175, $l176, $l177, l178, $l179, l180, $l181, $l182, l183, $l184, $l185, $l186, $l187, l188, $l189, $l191, l192, $l193, $l194, $l195, $l196, $l197, l198, $l199, $l200, $l201, $l202, $l203, l204;
        int i5, i6, i8, i11, $i16, $i21, $i27, $i31, $i39, i54, i63, i70, $i105, $i112, $i119, $i123, i132, $i133, i139, i150, i159, i166, i173, i190;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        long[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        byte $b20, $b26, $b35, $b38, $b44, $b53, $b62, $b76, $b111, $b118, $b128, $b131, $b138, $b149, $b158, $b172;
        long[][] $r11, $r29;

        r0 := @this: chess.MoveGen;
        r1 := @parameter0: chess.Position;
        r2 = specialinvoke r0.<chess.MoveGen: chess.MoveGen$MoveList getMoveListObj()>();
        $l13 = r1.<chess.Position: long whiteBB>;
        $l14 = r1.<chess.Position: long blackBB>;
        l0 = $l13 | $l14;
        $z0 = r1.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label21;

        $r3 = r1.<chess.Position: long[] pieceTypeBB>;
        $l15 = $r3[11];
        $r4 = <chess.BitBoard: long[] knightAttacks>;
        $i16 = r1.<chess.Position: int wKingSq>;
        $l17 = $r4[$i16];
        l1 = $l15 & $l17;
        $r5 = r1.<chess.Position: long[] pieceTypeBB>;
        $l18 = $r5[9];
        $r6 = r1.<chess.Position: long[] pieceTypeBB>;
        $l19 = $r6[8];
        l2 = $l18 | $l19;
        $b20 = l2 cmp 0L;
        if $b20 == 0 goto label0;

        $i21 = r1.<chess.Position: int wKingSq>;
        $l22 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>($i21, l0);
        $l23 = l2 & $l22;
        l1 = l1 | $l23;

     label0:
        $r7 = r1.<chess.Position: long[] pieceTypeBB>;
        $l24 = $r7[10];
        $r8 = r1.<chess.Position: long[] pieceTypeBB>;
        $l25 = $r8[8];
        l3 = $l24 | $l25;
        $b26 = l3 cmp 0L;
        if $b26 == 0 goto label1;

        $i27 = r1.<chess.Position: int wKingSq>;
        $l28 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>($i27, l0);
        $l29 = l3 & $l28;
        l1 = l1 | $l29;

     label1:
        $r9 = r1.<chess.Position: long[] pieceTypeBB>;
        $l30 = $r9[12];
        $r10 = <chess.BitBoard: long[] wPawnAttacks>;
        $i31 = r1.<chess.Position: int wKingSq>;
        $l32 = $r10[$i31];
        $l33 = $l30 & $l32;
        l34 = l1 | $l33;
        l4 = 0L;
        $b35 = l34 cmp 0L;
        if $b35 == 0 goto label2;

        $l36 = l34 - 1L;
        $l37 = l34 & $l36;
        $b38 = $l37 cmp 0L;
        if $b38 != 0 goto label2;

        i5 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l34);
        $r11 = <chess.BitBoard: long[][] squaresBetween>;
        $i39 = r1.<chess.Position: int wKingSq>;
        $r12 = $r11[$i39];
        $l40 = $r12[i5];
        l4 = l34 | $l40;

     label2:
        $r13 = r1.<chess.Position: long[] pieceTypeBB>;
        $l41 = $r13[7];
        l42 = l4 | $l41;
        $r14 = r1.<chess.Position: long[] pieceTypeBB>;
        l43 = $r14[2];

     label3:
        $b44 = l43 cmp 0L;
        if $b44 == 0 goto label5;

        i6 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l43);
        $l45 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i6, l0);
        $l46 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i6, l0);
        $l47 = $l45 | $l46;
        $l48 = r1.<chess.Position: long whiteBB>;
        $l49 = $l48 ^ -1L;
        $l50 = $l47 & $l49;
        l7 = $l50 & l42;
        $z1 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i6, l7);
        if $z1 == 0 goto label4;

        return r2;

     label4:
        $l51 = l43 - 1L;
        l43 = l43 & $l51;
        goto label3;

     label5:
        $r15 = r1.<chess.Position: long[] pieceTypeBB>;
        l52 = $r15[3];

     label6:
        $b53 = l52 cmp 0L;
        if $b53 == 0 goto label8;

        i54 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l52);
        $l55 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i54, l0);
        $l56 = r1.<chess.Position: long whiteBB>;
        $l57 = $l56 ^ -1L;
        $l58 = $l55 & $l57;
        l59 = $l58 & l42;
        $z2 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i54, l59);
        if $z2 == 0 goto label7;

        return r2;

     label7:
        $l60 = l52 - 1L;
        l52 = l52 & $l60;
        goto label6;

     label8:
        $r16 = r1.<chess.Position: long[] pieceTypeBB>;
        l61 = $r16[4];

     label9:
        $b62 = l61 cmp 0L;
        if $b62 == 0 goto label11;

        i63 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l61);
        $l64 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i63, l0);
        $l65 = r1.<chess.Position: long whiteBB>;
        $l66 = $l65 ^ -1L;
        $l67 = $l64 & $l66;
        l68 = $l67 & l42;
        $z3 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i63, l68);
        if $z3 == 0 goto label10;

        return r2;

     label10:
        $l69 = l61 - 1L;
        l61 = l61 & $l69;
        goto label9;

     label11:
        i70 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $r17 = <chess.BitBoard: long[] kingAttacks>;
        $l71 = $r17[i70];
        $l72 = r1.<chess.Position: long whiteBB>;
        $l73 = $l72 ^ -1L;
        l74 = $l71 & $l73;
        $z4 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i70, l74);
        if $z4 == 0 goto label12;

        return r2;

     label12:
        $r18 = r1.<chess.Position: long[] pieceTypeBB>;
        l75 = $r18[5];

     label13:
        $b76 = l75 cmp 0L;
        if $b76 == 0 goto label15;

        i8 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l75);
        $r19 = <chess.BitBoard: long[] knightAttacks>;
        $l77 = $r19[i8];
        $l78 = r1.<chess.Position: long whiteBB>;
        $l79 = $l78 ^ -1L;
        $l80 = $l77 & $l79;
        l9 = $l80 & l42;
        $z5 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i8, l9);
        if $z5 == 0 goto label14;

        return r2;

     label14:
        $l81 = l75 - 1L;
        l75 = l75 & $l81;
        goto label13;

     label15:
        $r20 = r1.<chess.Position: long[] pieceTypeBB>;
        l82 = $r20[6];
        $l83 = l82 << 8;
        $l84 = l0 ^ -1L;
        l10 = $l83 & $l84;
        $l85 = l10 & l42;
        $z6 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, $l85, -8, 1);
        if $z6 == 0 goto label16;

        return r2;

     label16:
        $l86 = l10 & 16711680L;
        $l87 = $l86 << 8;
        $l88 = l0 ^ -1L;
        l89 = $l87 & $l88;
        $l90 = l89 & l42;
        staticinvoke <chess.MoveGen: void addPawnDoubleMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int)>(r2, r1, $l90, -16);
        i11 = virtualinvoke r1.<chess.Position: int getEpSquare()>();
        if i11 < 0 goto label17;

        $l91 = 1L << i11;
        goto label18;

     label17:
        $l91 = 0L;

     label18:
        l12 = $l91;
        $l92 = l82 << 7;
        $l93 = $l92 & 9187201950435737471L;
        $l94 = r1.<chess.Position: long blackBB>;
        $l95 = $l94 & l42;
        $l96 = $l95 | l12;
        l97 = $l93 & $l96;
        $z7 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l97, -7, 1);
        if $z7 == 0 goto label19;

        return r2;

     label19:
        $l98 = l82 << 9;
        $l99 = $l98 & -72340172838076674L;
        $l100 = r1.<chess.Position: long blackBB>;
        $l101 = $l100 & l42;
        $l102 = $l101 | l12;
        l103 = $l99 & $l102;
        $z8 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l103, -9, 1);
        if $z8 == 0 goto label20;

        return r2;

     label20:
        goto label42;

     label21:
        $r21 = r1.<chess.Position: long[] pieceTypeBB>;
        $l104 = $r21[5];
        $r22 = <chess.BitBoard: long[] knightAttacks>;
        $i105 = r1.<chess.Position: int bKingSq>;
        $l106 = $r22[$i105];
        l107 = $l104 & $l106;
        $r23 = r1.<chess.Position: long[] pieceTypeBB>;
        $l108 = $r23[3];
        $r24 = r1.<chess.Position: long[] pieceTypeBB>;
        $l109 = $r24[2];
        l110 = $l108 | $l109;
        $b111 = l110 cmp 0L;
        if $b111 == 0 goto label22;

        $i112 = r1.<chess.Position: int bKingSq>;
        $l113 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>($i112, l0);
        $l114 = l110 & $l113;
        l107 = l107 | $l114;

     label22:
        $r25 = r1.<chess.Position: long[] pieceTypeBB>;
        $l115 = $r25[4];
        $r26 = r1.<chess.Position: long[] pieceTypeBB>;
        $l116 = $r26[2];
        l117 = $l115 | $l116;
        $b118 = l117 cmp 0L;
        if $b118 == 0 goto label23;

        $i119 = r1.<chess.Position: int bKingSq>;
        $l120 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>($i119, l0);
        $l121 = l117 & $l120;
        l107 = l107 | $l121;

     label23:
        $r27 = r1.<chess.Position: long[] pieceTypeBB>;
        $l122 = $r27[6];
        $r28 = <chess.BitBoard: long[] bPawnAttacks>;
        $i123 = r1.<chess.Position: int bKingSq>;
        $l124 = $r28[$i123];
        $l125 = $l122 & $l124;
        l126 = l107 | $l125;
        l127 = 0L;
        $b128 = l126 cmp 0L;
        if $b128 == 0 goto label24;

        $l129 = l126 - 1L;
        $l130 = l126 & $l129;
        $b131 = $l130 cmp 0L;
        if $b131 != 0 goto label24;

        i132 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l126);
        $r29 = <chess.BitBoard: long[][] squaresBetween>;
        $i133 = r1.<chess.Position: int bKingSq>;
        $r30 = $r29[$i133];
        $l134 = $r30[i132];
        l127 = l126 | $l134;

     label24:
        $r31 = r1.<chess.Position: long[] pieceTypeBB>;
        $l135 = $r31[1];
        l136 = l127 | $l135;
        $r32 = r1.<chess.Position: long[] pieceTypeBB>;
        l137 = $r32[8];

     label25:
        $b138 = l137 cmp 0L;
        if $b138 == 0 goto label27;

        i139 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l137);
        $l140 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i139, l0);
        $l141 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i139, l0);
        $l142 = $l140 | $l141;
        $l143 = r1.<chess.Position: long blackBB>;
        $l144 = $l143 ^ -1L;
        $l145 = $l142 & $l144;
        l146 = $l145 & l136;
        $z9 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i139, l146);
        if $z9 == 0 goto label26;

        return r2;

     label26:
        $l147 = l137 - 1L;
        l137 = l137 & $l147;
        goto label25;

     label27:
        $r33 = r1.<chess.Position: long[] pieceTypeBB>;
        l148 = $r33[9];

     label28:
        $b149 = l148 cmp 0L;
        if $b149 == 0 goto label30;

        i150 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l148);
        $l151 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i150, l0);
        $l152 = r1.<chess.Position: long blackBB>;
        $l153 = $l152 ^ -1L;
        $l154 = $l151 & $l153;
        l155 = $l154 & l136;
        $z10 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i150, l155);
        if $z10 == 0 goto label29;

        return r2;

     label29:
        $l156 = l148 - 1L;
        l148 = l148 & $l156;
        goto label28;

     label30:
        $r34 = r1.<chess.Position: long[] pieceTypeBB>;
        l157 = $r34[10];

     label31:
        $b158 = l157 cmp 0L;
        if $b158 == 0 goto label33;

        i159 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l157);
        $l160 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i159, l0);
        $l161 = r1.<chess.Position: long blackBB>;
        $l162 = $l161 ^ -1L;
        $l163 = $l160 & $l162;
        l164 = $l163 & l136;
        $z11 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i159, l164);
        if $z11 == 0 goto label32;

        return r2;

     label32:
        $l165 = l157 - 1L;
        l157 = l157 & $l165;
        goto label31;

     label33:
        i166 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $r35 = <chess.BitBoard: long[] kingAttacks>;
        $l167 = $r35[i166];
        $l168 = r1.<chess.Position: long blackBB>;
        $l169 = $l168 ^ -1L;
        l170 = $l167 & $l169;
        $z12 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i166, l170);
        if $z12 == 0 goto label34;

        return r2;

     label34:
        $r36 = r1.<chess.Position: long[] pieceTypeBB>;
        l171 = $r36[11];

     label35:
        $b172 = l171 cmp 0L;
        if $b172 == 0 goto label37;

        i173 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l171);
        $r37 = <chess.BitBoard: long[] knightAttacks>;
        $l174 = $r37[i173];
        $l175 = r1.<chess.Position: long blackBB>;
        $l176 = $l175 ^ -1L;
        $l177 = $l174 & $l176;
        l178 = $l177 & l136;
        $z13 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i173, l178);
        if $z13 == 0 goto label36;

        return r2;

     label36:
        $l179 = l171 - 1L;
        l171 = l171 & $l179;
        goto label35;

     label37:
        $r38 = r1.<chess.Position: long[] pieceTypeBB>;
        l180 = $r38[12];
        $l181 = l180 >>> 8;
        $l182 = l0 ^ -1L;
        l183 = $l181 & $l182;
        $l184 = l183 & l136;
        $z14 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, $l184, 8, 1);
        if $z14 == 0 goto label38;

        return r2;

     label38:
        $l185 = l183 & 280375465082880L;
        $l186 = $l185 >>> 8;
        $l187 = l0 ^ -1L;
        l188 = $l186 & $l187;
        $l189 = l188 & l136;
        staticinvoke <chess.MoveGen: void addPawnDoubleMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int)>(r2, r1, $l189, 16);
        i190 = virtualinvoke r1.<chess.Position: int getEpSquare()>();
        if i190 < 0 goto label39;

        $l191 = 1L << i190;
        goto label40;

     label39:
        $l191 = 0L;

     label40:
        l192 = $l191;
        $l193 = l180 >>> 9;
        $l194 = $l193 & 9187201950435737471L;
        $l195 = r1.<chess.Position: long whiteBB>;
        $l196 = $l195 & l136;
        $l197 = $l196 | l192;
        l198 = $l194 & $l197;
        $z15 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l198, 9, 1);
        if $z15 == 0 goto label41;

        return r2;

     label41:
        $l199 = l180 >>> 7;
        $l200 = $l199 & -72340172838076674L;
        $l201 = r1.<chess.Position: long whiteBB>;
        $l202 = $l201 & l136;
        $l203 = $l202 | l192;
        l204 = $l200 & $l203;
        $z16 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l204, 7, 1);
        if $z16 == 0 goto label42;

        return r2;

     label42:
        return r2;
    }

    public final chess.MoveGen$MoveList pseudoLegalCapturesAndChecks(chess.Position)
    {
        chess.MoveGen r0;
        chess.Position r1;
        chess.MoveGen$MoveList r2;
        long l0, l2, l3, l4, l5, l7, l9, l10, l11, l12, l13, l14, l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l35, $l36, $l37, $l38, $l40, $l41, $l42, $l43, $l44, l45, $l46, l47, l50, $l51, $l52, $l54, $l55, $l56, $l57, l58, $l59, l60, l63, $l64, $l65, $l67, $l68, $l69, $l70, l71, $l72, l74, $l76, $l77, $l79, $l80, l81, $l84, $l85, $l86, $l87, $l92, $l93, $l94, $l95, l98, $l101, $l102, $l103, $l104, $l105, $l107, $l108, $l109, $l110, l111, $l112, l113, $l115, $l116, $l117, $l118, $l119, $l120, $l121, $l122, $l123, l124, $l125, $l126, $l127, $l128, $l129, $l130, l131, $l132, $l133, $l134, $l135, $l136, $l137, l138, $l139, $l140, $l141, $l142, $l143, $l144, $l145, l146, $l147, $l148, $l149, $l150, $l151, $l152, $l153, $l154, l155, $l156, $l157, l159, l160, $l161, $l162, $l163, $l164, $l165, $l166, $l167, l169, $l170, $l171, $l172, $l173, $l174, $l175, $l176, l178, $l181, $l182, l183, $l184, $l185, $l187, $l188, $l189, $l190, $l191, l192, $l193, l194, l197, $l198, $l199, $l201, $l202, $l203, $l204, l205, $l206, l207, l210, $l211, $l212, $l214, $l215, $l216, $l217, l218, $l219, l221, $l223, $l224, $l226, $l227, l228, l230, l231, $l234, $l235, $l236, $l237, $l242, $l243, $l244, $l245, l248, l249, $l252, $l253, $l254, l255, $l256, $l257, $l259, $l260, $l261, $l262, l263, $l264, l265, $l267, l268, $l269, $l270, $l271, $l272, l273, $l274, $l275, $l276, $l277, l278, l279, $l280, $l281, $l282, $l283, $l284, $l285, l286, $l287, $l288, $l289, $l290, $l291, $l292, l293, $l294, $l295, $l296, $l297, $l298, $l299, $l300, l301, $l302, $l303, $l304, $l305, $l306, $l307, $l308, $l309, l310, $l311, $l312;
        int i1, i6, i49, i62, i73, $i82, $i83, $i89, $i90, $i91, $i97, i100, i114, i158, i180, i196, i209, i220, $i232, $i233, $i239, $i240, $i241, $i247, i251, i266;
        byte b8, $b25, $b33, $b34, $b39, $b48, $b53, $b61, $b66, $b78, $b88, $b96, $b99, $b106, $b168, $b177, $b179, $b186, $b195, $b200, $b208, $b213, $b225, b229, $b238, $b246, $b250, $b258;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26;
        long[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;

        r0 := @this: chess.MoveGen;
        r1 := @parameter0: chess.Position;
        r2 = specialinvoke r0.<chess.MoveGen: chess.MoveGen$MoveList getMoveListObj()>();
        $l16 = r1.<chess.Position: long whiteBB>;
        $l17 = r1.<chess.Position: long blackBB>;
        l0 = $l16 | $l17;
        $z0 = r1.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label29;

        i1 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        l2 = 0L;
        l3 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i1, l0);
        $l18 = l3 ^ -1L;
        $l19 = l0 & $l18;
        $l20 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i1, $l19);
        $r3 = r1.<chess.Position: long[] pieceTypeBB>;
        $l21 = $r3[2];
        $r4 = r1.<chess.Position: long[] pieceTypeBB>;
        $l22 = $r4[3];
        $l23 = $l21 | $l22;
        $l24 = $l20 & $l23;
        $b25 = $l24 cmp 0L;
        if $b25 == 0 goto label0;

        l2 = l2 | l3;

     label0:
        l4 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i1, l0);
        $l26 = l4 ^ -1L;
        $l27 = l0 & $l26;
        $l28 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i1, $l27);
        $r5 = r1.<chess.Position: long[] pieceTypeBB>;
        $l29 = $r5[2];
        $r6 = r1.<chess.Position: long[] pieceTypeBB>;
        $l30 = $r6[4];
        $l31 = $l29 | $l30;
        $l32 = $l28 & $l31;
        $b33 = $l32 cmp 0L;
        if $b33 == 0 goto label1;

        l2 = l2 | l4;

     label1:
        $r7 = r1.<chess.Position: long[] pieceTypeBB>;
        l5 = $r7[2];

     label2:
        $b34 = l5 cmp 0L;
        if $b34 == 0 goto label5;

        i6 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l5);
        $l35 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i6, l0);
        $l36 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i6, l0);
        l7 = $l35 | $l36;
        $l37 = 1L << i6;
        $l38 = l2 & $l37;
        $b39 = $l38 cmp 0L;
        if $b39 != 0 goto label3;

        $l40 = r1.<chess.Position: long blackBB>;
        $l41 = $l40 | l3;
        $l42 = $l41 | l4;
        l7 = l7 & $l42;

     label3:
        $l43 = r1.<chess.Position: long whiteBB>;
        $l44 = $l43 ^ -1L;
        l45 = l7 & $l44;
        $z1 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i6, l45);
        if $z1 == 0 goto label4;

        return r2;

     label4:
        $l46 = l5 - 1L;
        l5 = l5 & $l46;
        goto label2;

     label5:
        $r8 = r1.<chess.Position: long[] pieceTypeBB>;
        l47 = $r8[3];

     label6:
        $b48 = l47 cmp 0L;
        if $b48 == 0 goto label9;

        i49 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l47);
        l50 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i49, l0);
        $l51 = 1L << i49;
        $l52 = l2 & $l51;
        $b53 = $l52 cmp 0L;
        if $b53 != 0 goto label7;

        $l54 = r1.<chess.Position: long blackBB>;
        $l55 = $l54 | l3;
        l50 = l50 & $l55;

     label7:
        $l56 = r1.<chess.Position: long whiteBB>;
        $l57 = $l56 ^ -1L;
        l58 = l50 & $l57;
        $z2 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i49, l58);
        if $z2 == 0 goto label8;

        return r2;

     label8:
        $l59 = l47 - 1L;
        l47 = l47 & $l59;
        goto label6;

     label9:
        $r9 = r1.<chess.Position: long[] pieceTypeBB>;
        l60 = $r9[4];

     label10:
        $b61 = l60 cmp 0L;
        if $b61 == 0 goto label13;

        i62 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l60);
        l63 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i62, l0);
        $l64 = 1L << i62;
        $l65 = l2 & $l64;
        $b66 = $l65 cmp 0L;
        if $b66 != 0 goto label11;

        $l67 = r1.<chess.Position: long blackBB>;
        $l68 = $l67 | l4;
        l63 = l63 & $l68;

     label11:
        $l69 = r1.<chess.Position: long whiteBB>;
        $l70 = $l69 ^ -1L;
        l71 = l63 & $l70;
        $z3 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i62, l71);
        if $z3 == 0 goto label12;

        return r2;

     label12:
        $l72 = l60 - 1L;
        l60 = l60 & $l72;
        goto label10;

     label13:
        i73 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $r10 = <chess.BitBoard: long[] kingAttacks>;
        l74 = $r10[i73];
        $l76 = 1L << i73;
        $l77 = l2 & $l76;
        $b78 = $l77 cmp 0L;
        if $b78 != 0 goto label14;

        $l79 = r1.<chess.Position: long blackBB>;
        goto label15;

     label14:
        $l80 = r1.<chess.Position: long whiteBB>;
        $l79 = $l80 ^ -1L;

     label15:
        l81 = l74 & $l79;
        $z4 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i73, l81);
        if $z4 == 0 goto label16;

        return r2;

     label16:
        b8 = 4;
        if i73 != 4 goto label18;

        l9 = 96L;
        l10 = 14L;
        $i82 = virtualinvoke r1.<chess.Position: int getCastleMask()>();
        $i83 = $i82 & 2;
        if $i83 == 0 goto label17;

        $l84 = r1.<chess.Position: long whiteBB>;
        $l85 = r1.<chess.Position: long blackBB>;
        $l86 = $l84 | $l85;
        $l87 = 96L & $l86;
        $b88 = $l87 cmp 0L;
        if $b88 != 0 goto label17;

        $i89 = virtualinvoke r1.<chess.Position: int getPiece(int)>(7);
        if $i89 != 3 goto label17;

        $z5 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 4);
        if $z5 != 0 goto label17;

        $z6 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 5);
        if $z6 != 0 goto label17;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r2, 4, 6, 0);

     label17:
        $i90 = virtualinvoke r1.<chess.Position: int getCastleMask()>();
        $i91 = $i90 & 1;
        if $i91 == 0 goto label18;

        $l92 = r1.<chess.Position: long whiteBB>;
        $l93 = r1.<chess.Position: long blackBB>;
        $l94 = $l92 | $l93;
        $l95 = 14L & $l94;
        $b96 = $l95 cmp 0L;
        if $b96 != 0 goto label18;

        $i97 = virtualinvoke r1.<chess.Position: int getPiece(int)>(0);
        if $i97 != 3 goto label18;

        $z7 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 4);
        if $z7 != 0 goto label18;

        $z8 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 3);
        if $z8 != 0 goto label18;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r2, 4, 2, 0);

     label18:
        $r11 = r1.<chess.Position: long[] pieceTypeBB>;
        l98 = $r11[5];
        $r12 = <chess.BitBoard: long[] knightAttacks>;
        l11 = $r12[i1];

     label19:
        $b99 = l98 cmp 0L;
        if $b99 == 0 goto label22;

        i100 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l98);
        $r13 = <chess.BitBoard: long[] knightAttacks>;
        $l101 = $r13[i100];
        $l102 = r1.<chess.Position: long whiteBB>;
        $l103 = $l102 ^ -1L;
        l12 = $l101 & $l103;
        $l104 = 1L << i100;
        $l105 = l2 & $l104;
        $b106 = $l105 cmp 0L;
        if $b106 != 0 goto label20;

        $l107 = r1.<chess.Position: long blackBB>;
        $l108 = $l107 | l11;
        l12 = l12 & $l108;

     label20:
        $l109 = r1.<chess.Position: long whiteBB>;
        $l110 = $l109 ^ -1L;
        l111 = l12 & $l110;
        $z9 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i100, l111);
        if $z9 == 0 goto label21;

        return r2;

     label21:
        $l112 = l98 - 1L;
        l98 = l98 & $l112;
        goto label19;

     label22:
        $r14 = r1.<chess.Position: long[] pieceTypeBB>;
        l113 = $r14[6];
        i114 = virtualinvoke r1.<chess.Position: int getEpSquare()>();
        if i114 < 0 goto label23;

        $l115 = 1L << i114;
        goto label24;

     label23:
        $l115 = 0L;

     label24:
        l13 = $l115;
        $l116 = l113 << 7;
        $l117 = $l116 & 9187201950435737471L;
        $l118 = r1.<chess.Position: long blackBB>;
        $l119 = $l118 | l13;
        l14 = $l117 & $l119;
        $z10 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l14, -7, 0);
        if $z10 == 0 goto label25;

        return r2;

     label25:
        $l120 = l113 << 9;
        $l121 = $l120 & -72340172838076674L;
        $l122 = r1.<chess.Position: long blackBB>;
        $l123 = $l122 | l13;
        l124 = $l121 & $l123;
        $z11 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l124, -9, 0);
        if $z11 == 0 goto label26;

        return r2;

     label26:
        l15 = l2 | 71776119061217280L;
        $l125 = l113 & l15;
        $l126 = $l125 << 8;
        $l127 = r1.<chess.Position: long whiteBB>;
        $l128 = r1.<chess.Position: long blackBB>;
        $l129 = $l127 | $l128;
        $l130 = $l129 ^ -1L;
        l131 = $l126 & $l130;
        $z12 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l131, -8, 0);
        if $z12 == 0 goto label27;

        return r2;

     label27:
        $l132 = l131 & 16711680L;
        $l133 = $l132 << 8;
        $l134 = r1.<chess.Position: long whiteBB>;
        $l135 = r1.<chess.Position: long blackBB>;
        $l136 = $l134 | $l135;
        $l137 = $l136 ^ -1L;
        l138 = $l133 & $l137;
        staticinvoke <chess.MoveGen: void addPawnDoubleMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int)>(r2, r1, l138, -16);
        $l139 = l15 ^ -1L;
        $l140 = l113 & $l139;
        $l141 = $l140 << 8;
        $l142 = r1.<chess.Position: long whiteBB>;
        $l143 = r1.<chess.Position: long blackBB>;
        $l144 = $l142 | $l143;
        $l145 = $l144 ^ -1L;
        l146 = $l141 & $l145;
        $r15 = <chess.BitBoard: long[] bPawnAttacks>;
        $l147 = $r15[i1];
        $l148 = l146 & $l147;
        $z13 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, $l148, -8, 0);
        if $z13 == 0 goto label28;

        return r2;

     label28:
        $l149 = l146 & 16711680L;
        $l150 = $l149 << 8;
        $l151 = r1.<chess.Position: long whiteBB>;
        $l152 = r1.<chess.Position: long blackBB>;
        $l153 = $l151 | $l152;
        $l154 = $l153 ^ -1L;
        l155 = $l150 & $l154;
        $r16 = <chess.BitBoard: long[] bPawnAttacks>;
        $l156 = $r16[i1];
        $l157 = l155 & $l156;
        staticinvoke <chess.MoveGen: void addPawnDoubleMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int)>(r2, r1, $l157, -16);
        goto label59;

     label29:
        i158 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        l159 = 0L;
        l160 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i158, l0);
        $l161 = l160 ^ -1L;
        $l162 = l0 & $l161;
        $l163 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i158, $l162);
        $r17 = r1.<chess.Position: long[] pieceTypeBB>;
        $l164 = $r17[8];
        $r18 = r1.<chess.Position: long[] pieceTypeBB>;
        $l165 = $r18[9];
        $l166 = $l164 | $l165;
        $l167 = $l163 & $l166;
        $b168 = $l167 cmp 0L;
        if $b168 == 0 goto label30;

        l159 = l159 | l160;

     label30:
        l169 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i158, l0);
        $l170 = l169 ^ -1L;
        $l171 = l0 & $l170;
        $l172 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i158, $l171);
        $r19 = r1.<chess.Position: long[] pieceTypeBB>;
        $l173 = $r19[8];
        $r20 = r1.<chess.Position: long[] pieceTypeBB>;
        $l174 = $r20[10];
        $l175 = $l173 | $l174;
        $l176 = $l172 & $l175;
        $b177 = $l176 cmp 0L;
        if $b177 == 0 goto label31;

        l159 = l159 | l169;

     label31:
        $r21 = r1.<chess.Position: long[] pieceTypeBB>;
        l178 = $r21[8];

     label32:
        $b179 = l178 cmp 0L;
        if $b179 == 0 goto label35;

        i180 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l178);
        $l181 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i180, l0);
        $l182 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i180, l0);
        l183 = $l181 | $l182;
        $l184 = 1L << i180;
        $l185 = l159 & $l184;
        $b186 = $l185 cmp 0L;
        if $b186 != 0 goto label33;

        $l187 = r1.<chess.Position: long whiteBB>;
        $l188 = $l187 | l160;
        $l189 = $l188 | l169;
        l183 = l183 & $l189;

     label33:
        $l190 = r1.<chess.Position: long blackBB>;
        $l191 = $l190 ^ -1L;
        l192 = l183 & $l191;
        $z14 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i180, l192);
        if $z14 == 0 goto label34;

        return r2;

     label34:
        $l193 = l178 - 1L;
        l178 = l178 & $l193;
        goto label32;

     label35:
        $r22 = r1.<chess.Position: long[] pieceTypeBB>;
        l194 = $r22[9];

     label36:
        $b195 = l194 cmp 0L;
        if $b195 == 0 goto label39;

        i196 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l194);
        l197 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i196, l0);
        $l198 = 1L << i196;
        $l199 = l159 & $l198;
        $b200 = $l199 cmp 0L;
        if $b200 != 0 goto label37;

        $l201 = r1.<chess.Position: long whiteBB>;
        $l202 = $l201 | l160;
        l197 = l197 & $l202;

     label37:
        $l203 = r1.<chess.Position: long blackBB>;
        $l204 = $l203 ^ -1L;
        l205 = l197 & $l204;
        $z15 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i196, l205);
        if $z15 == 0 goto label38;

        return r2;

     label38:
        $l206 = l194 - 1L;
        l194 = l194 & $l206;
        goto label36;

     label39:
        $r23 = r1.<chess.Position: long[] pieceTypeBB>;
        l207 = $r23[10];

     label40:
        $b208 = l207 cmp 0L;
        if $b208 == 0 goto label43;

        i209 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l207);
        l210 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i209, l0);
        $l211 = 1L << i209;
        $l212 = l159 & $l211;
        $b213 = $l212 cmp 0L;
        if $b213 != 0 goto label41;

        $l214 = r1.<chess.Position: long whiteBB>;
        $l215 = $l214 | l169;
        l210 = l210 & $l215;

     label41:
        $l216 = r1.<chess.Position: long blackBB>;
        $l217 = $l216 ^ -1L;
        l218 = l210 & $l217;
        $z16 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i209, l218);
        if $z16 == 0 goto label42;

        return r2;

     label42:
        $l219 = l207 - 1L;
        l207 = l207 & $l219;
        goto label40;

     label43:
        i220 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $r24 = <chess.BitBoard: long[] kingAttacks>;
        l221 = $r24[i220];
        $l223 = 1L << i220;
        $l224 = l159 & $l223;
        $b225 = $l224 cmp 0L;
        if $b225 != 0 goto label44;

        $l226 = r1.<chess.Position: long whiteBB>;
        goto label45;

     label44:
        $l227 = r1.<chess.Position: long blackBB>;
        $l226 = $l227 ^ -1L;

     label45:
        l228 = l221 & $l226;
        $z17 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i220, l228);
        if $z17 == 0 goto label46;

        return r2;

     label46:
        b229 = 60;
        if i220 != 60 goto label48;

        l230 = 6917529027641081856L;
        l231 = 1008806316530991104L;
        $i232 = virtualinvoke r1.<chess.Position: int getCastleMask()>();
        $i233 = $i232 & 8;
        if $i233 == 0 goto label47;

        $l234 = r1.<chess.Position: long whiteBB>;
        $l235 = r1.<chess.Position: long blackBB>;
        $l236 = $l234 | $l235;
        $l237 = 6917529027641081856L & $l236;
        $b238 = $l237 cmp 0L;
        if $b238 != 0 goto label47;

        $i239 = virtualinvoke r1.<chess.Position: int getPiece(int)>(63);
        if $i239 != 9 goto label47;

        $z18 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 60);
        if $z18 != 0 goto label47;

        $z19 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 61);
        if $z19 != 0 goto label47;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r2, 60, 62, 0);

     label47:
        $i240 = virtualinvoke r1.<chess.Position: int getCastleMask()>();
        $i241 = $i240 & 4;
        if $i241 == 0 goto label48;

        $l242 = r1.<chess.Position: long whiteBB>;
        $l243 = r1.<chess.Position: long blackBB>;
        $l244 = $l242 | $l243;
        $l245 = 1008806316530991104L & $l244;
        $b246 = $l245 cmp 0L;
        if $b246 != 0 goto label48;

        $i247 = virtualinvoke r1.<chess.Position: int getPiece(int)>(56);
        if $i247 != 9 goto label48;

        $z20 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 60);
        if $z20 != 0 goto label48;

        $z21 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r1, 59);
        if $z21 != 0 goto label48;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r2, 60, 58, 0);

     label48:
        $r25 = r1.<chess.Position: long[] pieceTypeBB>;
        l248 = $r25[11];
        $r26 = <chess.BitBoard: long[] knightAttacks>;
        l249 = $r26[i158];

     label49:
        $b250 = l248 cmp 0L;
        if $b250 == 0 goto label52;

        i251 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l248);
        $r27 = <chess.BitBoard: long[] knightAttacks>;
        $l252 = $r27[i251];
        $l253 = r1.<chess.Position: long blackBB>;
        $l254 = $l253 ^ -1L;
        l255 = $l252 & $l254;
        $l256 = 1L << i251;
        $l257 = l159 & $l256;
        $b258 = $l257 cmp 0L;
        if $b258 != 0 goto label50;

        $l259 = r1.<chess.Position: long whiteBB>;
        $l260 = $l259 | l249;
        l255 = l255 & $l260;

     label50:
        $l261 = r1.<chess.Position: long blackBB>;
        $l262 = $l261 ^ -1L;
        l263 = l255 & $l262;
        $z22 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i251, l263);
        if $z22 == 0 goto label51;

        return r2;

     label51:
        $l264 = l248 - 1L;
        l248 = l248 & $l264;
        goto label49;

     label52:
        $r28 = r1.<chess.Position: long[] pieceTypeBB>;
        l265 = $r28[12];
        i266 = virtualinvoke r1.<chess.Position: int getEpSquare()>();
        if i266 < 0 goto label53;

        $l267 = 1L << i266;
        goto label54;

     label53:
        $l267 = 0L;

     label54:
        l268 = $l267;
        $l269 = l265 >>> 9;
        $l270 = $l269 & 9187201950435737471L;
        $l271 = r1.<chess.Position: long whiteBB>;
        $l272 = $l271 | l268;
        l273 = $l270 & $l272;
        $z23 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l273, 9, 0);
        if $z23 == 0 goto label55;

        return r2;

     label55:
        $l274 = l265 >>> 7;
        $l275 = $l274 & -72340172838076674L;
        $l276 = r1.<chess.Position: long whiteBB>;
        $l277 = $l276 | l268;
        l278 = $l275 & $l277;
        $z24 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l278, 7, 0);
        if $z24 == 0 goto label56;

        return r2;

     label56:
        l279 = l159 | 65280L;
        $l280 = l265 & l279;
        $l281 = $l280 >>> 8;
        $l282 = r1.<chess.Position: long whiteBB>;
        $l283 = r1.<chess.Position: long blackBB>;
        $l284 = $l282 | $l283;
        $l285 = $l284 ^ -1L;
        l286 = $l281 & $l285;
        $z25 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l286, 8, 0);
        if $z25 == 0 goto label57;

        return r2;

     label57:
        $l287 = l286 & 280375465082880L;
        $l288 = $l287 >>> 8;
        $l289 = r1.<chess.Position: long whiteBB>;
        $l290 = r1.<chess.Position: long blackBB>;
        $l291 = $l289 | $l290;
        $l292 = $l291 ^ -1L;
        l293 = $l288 & $l292;
        staticinvoke <chess.MoveGen: void addPawnDoubleMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int)>(r2, r1, l293, 16);
        $l294 = l279 ^ -1L;
        $l295 = l265 & $l294;
        $l296 = $l295 >>> 8;
        $l297 = r1.<chess.Position: long whiteBB>;
        $l298 = r1.<chess.Position: long blackBB>;
        $l299 = $l297 | $l298;
        $l300 = $l299 ^ -1L;
        l301 = $l296 & $l300;
        $r29 = <chess.BitBoard: long[] wPawnAttacks>;
        $l302 = $r29[i158];
        $l303 = l301 & $l302;
        $z26 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, $l303, 8, 0);
        if $z26 == 0 goto label58;

        return r2;

     label58:
        $l304 = l301 & 280375465082880L;
        $l305 = $l304 >>> 8;
        $l306 = r1.<chess.Position: long whiteBB>;
        $l307 = r1.<chess.Position: long blackBB>;
        $l308 = $l306 | $l307;
        $l309 = $l308 ^ -1L;
        l310 = $l305 & $l309;
        $r30 = <chess.BitBoard: long[] wPawnAttacks>;
        $l311 = $r30[i158];
        $l312 = l310 & $l311;
        staticinvoke <chess.MoveGen: void addPawnDoubleMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int)>(r2, r1, $l312, 16);

     label59:
        return r2;
    }

    public final chess.MoveGen$MoveList pseudoLegalCaptures(chess.Position)
    {
        chess.MoveGen r0;
        chess.Position r1;
        chess.MoveGen$MoveList r2;
        long l0, l1, l3, l5, l6, l8, $l9, $l10, $l12, $l13, $l14, $l15, $l16, l17, $l20, $l21, l22, $l23, l24, $l27, $l28, l29, $l30, l31, $l33, $l34, $l35, $l37, $l38, l39, $l40, $l41, $l42, $l43, $l44, l45, l46, $l47, $l48, $l49, $l50, $l51, l52, $l53, $l54, $l55, $l56, l57, l58, $l61, $l62, $l63, $l64, l65, $l66, l67, $l70, $l71, l72, $l73, l74, $l77, $l78, l79, $l80, l81, $l84, $l85, l86, $l87, $l89, $l90, l91, l92, $l93, $l94, $l95, $l96, $l97, l98, l99, $l101, l102, $l103, $l104, $l105, $l106, l107, $l108, $l109, $l110, $l111, l112;
        int i2, i4, i7, i19, i26, i36, i60, i69, i76, i83, i88, i100;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        long[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        byte $b11, $b18, $b25, $b32, $b59, $b68, $b75, $b82;

        r0 := @this: chess.MoveGen;
        r1 := @parameter0: chess.Position;
        r2 = specialinvoke r0.<chess.MoveGen: chess.MoveGen$MoveList getMoveListObj()>();
        $l9 = r1.<chess.Position: long whiteBB>;
        $l10 = r1.<chess.Position: long blackBB>;
        l0 = $l9 | $l10;
        $z0 = r1.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label18;

        $r3 = r1.<chess.Position: long[] pieceTypeBB>;
        l1 = $r3[2];

     label0:
        $b11 = l1 cmp 0L;
        if $b11 == 0 goto label2;

        i2 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l1);
        $l12 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i2, l0);
        $l13 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i2, l0);
        $l14 = $l12 | $l13;
        $l15 = r1.<chess.Position: long blackBB>;
        l3 = $l14 & $l15;
        $z1 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i2, l3);
        if $z1 == 0 goto label1;

        return r2;

     label1:
        $l16 = l1 - 1L;
        l1 = l1 & $l16;
        goto label0;

     label2:
        $r4 = r1.<chess.Position: long[] pieceTypeBB>;
        l17 = $r4[3];

     label3:
        $b18 = l17 cmp 0L;
        if $b18 == 0 goto label5;

        i19 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l17);
        $l20 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i19, l0);
        $l21 = r1.<chess.Position: long blackBB>;
        l22 = $l20 & $l21;
        $z2 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i19, l22);
        if $z2 == 0 goto label4;

        return r2;

     label4:
        $l23 = l17 - 1L;
        l17 = l17 & $l23;
        goto label3;

     label5:
        $r5 = r1.<chess.Position: long[] pieceTypeBB>;
        l24 = $r5[4];

     label6:
        $b25 = l24 cmp 0L;
        if $b25 == 0 goto label8;

        i26 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l24);
        $l27 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i26, l0);
        $l28 = r1.<chess.Position: long blackBB>;
        l29 = $l27 & $l28;
        $z3 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i26, l29);
        if $z3 == 0 goto label7;

        return r2;

     label7:
        $l30 = l24 - 1L;
        l24 = l24 & $l30;
        goto label6;

     label8:
        $r6 = r1.<chess.Position: long[] pieceTypeBB>;
        l31 = $r6[5];

     label9:
        $b32 = l31 cmp 0L;
        if $b32 == 0 goto label11;

        i4 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l31);
        $r7 = <chess.BitBoard: long[] knightAttacks>;
        $l33 = $r7[i4];
        $l34 = r1.<chess.Position: long blackBB>;
        l5 = $l33 & $l34;
        $z4 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i4, l5);
        if $z4 == 0 goto label10;

        return r2;

     label10:
        $l35 = l31 - 1L;
        l31 = l31 & $l35;
        goto label9;

     label11:
        i36 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(1);
        $r8 = <chess.BitBoard: long[] kingAttacks>;
        $l37 = $r8[i36];
        $l38 = r1.<chess.Position: long blackBB>;
        l39 = $l37 & $l38;
        $z5 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i36, l39);
        if $z5 == 0 goto label12;

        return r2;

     label12:
        $r9 = r1.<chess.Position: long[] pieceTypeBB>;
        l6 = $r9[6];
        $l40 = l6 << 8;
        $l41 = r1.<chess.Position: long whiteBB>;
        $l42 = r1.<chess.Position: long blackBB>;
        $l43 = $l41 | $l42;
        $l44 = $l43 ^ -1L;
        l45 = $l40 & $l44;
        l46 = l45 & -72057594037927936L;
        $z6 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l46, -8, 0);
        if $z6 == 0 goto label13;

        return r2;

     label13:
        i7 = virtualinvoke r1.<chess.Position: int getEpSquare()>();
        if i7 < 0 goto label14;

        $l47 = 1L << i7;
        goto label15;

     label14:
        $l47 = 0L;

     label15:
        l8 = $l47;
        $l48 = l6 << 7;
        $l49 = $l48 & 9187201950435737471L;
        $l50 = r1.<chess.Position: long blackBB>;
        $l51 = $l50 | l8;
        l52 = $l49 & $l51;
        $z7 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l52, -7, 0);
        if $z7 == 0 goto label16;

        return r2;

     label16:
        $l53 = l6 << 9;
        $l54 = $l53 & -72340172838076674L;
        $l55 = r1.<chess.Position: long blackBB>;
        $l56 = $l55 | l8;
        l57 = $l54 & $l56;
        $z8 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l57, -9, 0);
        if $z8 == 0 goto label17;

        return r2;

     label17:
        goto label36;

     label18:
        $r10 = r1.<chess.Position: long[] pieceTypeBB>;
        l58 = $r10[8];

     label19:
        $b59 = l58 cmp 0L;
        if $b59 == 0 goto label21;

        i60 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l58);
        $l61 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i60, l0);
        $l62 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i60, l0);
        $l63 = $l61 | $l62;
        $l64 = r1.<chess.Position: long whiteBB>;
        l65 = $l63 & $l64;
        $z9 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i60, l65);
        if $z9 == 0 goto label20;

        return r2;

     label20:
        $l66 = l58 - 1L;
        l58 = l58 & $l66;
        goto label19;

     label21:
        $r11 = r1.<chess.Position: long[] pieceTypeBB>;
        l67 = $r11[9];

     label22:
        $b68 = l67 cmp 0L;
        if $b68 == 0 goto label24;

        i69 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l67);
        $l70 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i69, l0);
        $l71 = r1.<chess.Position: long whiteBB>;
        l72 = $l70 & $l71;
        $z10 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i69, l72);
        if $z10 == 0 goto label23;

        return r2;

     label23:
        $l73 = l67 - 1L;
        l67 = l67 & $l73;
        goto label22;

     label24:
        $r12 = r1.<chess.Position: long[] pieceTypeBB>;
        l74 = $r12[10];

     label25:
        $b75 = l74 cmp 0L;
        if $b75 == 0 goto label27;

        i76 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l74);
        $l77 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i76, l0);
        $l78 = r1.<chess.Position: long whiteBB>;
        l79 = $l77 & $l78;
        $z11 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i76, l79);
        if $z11 == 0 goto label26;

        return r2;

     label26:
        $l80 = l74 - 1L;
        l74 = l74 & $l80;
        goto label25;

     label27:
        $r13 = r1.<chess.Position: long[] pieceTypeBB>;
        l81 = $r13[11];

     label28:
        $b82 = l81 cmp 0L;
        if $b82 == 0 goto label30;

        i83 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l81);
        $r14 = <chess.BitBoard: long[] knightAttacks>;
        $l84 = $r14[i83];
        $l85 = r1.<chess.Position: long whiteBB>;
        l86 = $l84 & $l85;
        $z12 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i83, l86);
        if $z12 == 0 goto label29;

        return r2;

     label29:
        $l87 = l81 - 1L;
        l81 = l81 & $l87;
        goto label28;

     label30:
        i88 = virtualinvoke r1.<chess.Position: int getKingSq(boolean)>(0);
        $r15 = <chess.BitBoard: long[] kingAttacks>;
        $l89 = $r15[i88];
        $l90 = r1.<chess.Position: long whiteBB>;
        l91 = $l89 & $l90;
        $z13 = staticinvoke <chess.MoveGen: boolean addMovesByMask(chess.MoveGen$MoveList,chess.Position,int,long)>(r2, r1, i88, l91);
        if $z13 == 0 goto label31;

        return r2;

     label31:
        $r16 = r1.<chess.Position: long[] pieceTypeBB>;
        l92 = $r16[12];
        $l93 = l92 >>> 8;
        $l94 = r1.<chess.Position: long whiteBB>;
        $l95 = r1.<chess.Position: long blackBB>;
        $l96 = $l94 | $l95;
        $l97 = $l96 ^ -1L;
        l98 = $l93 & $l97;
        l99 = l98 & 255L;
        $z14 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l99, 8, 0);
        if $z14 == 0 goto label32;

        return r2;

     label32:
        i100 = virtualinvoke r1.<chess.Position: int getEpSquare()>();
        if i100 < 0 goto label33;

        $l101 = 1L << i100;
        goto label34;

     label33:
        $l101 = 0L;

     label34:
        l102 = $l101;
        $l103 = l92 >>> 9;
        $l104 = $l103 & 9187201950435737471L;
        $l105 = r1.<chess.Position: long whiteBB>;
        $l106 = $l105 | l102;
        l107 = $l104 & $l106;
        $z15 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l107, 9, 0);
        if $z15 == 0 goto label35;

        return r2;

     label35:
        $l108 = l92 >>> 7;
        $l109 = $l108 & -72340172838076674L;
        $l110 = r1.<chess.Position: long whiteBB>;
        $l111 = $l110 | l102;
        l112 = $l109 & $l111;
        $z16 = staticinvoke <chess.MoveGen: boolean addPawnMovesByMask(chess.MoveGen$MoveList,chess.Position,long,int,boolean)>(r2, r1, l112, 7, 0);
        if $z16 == 0 goto label36;

        return r2;

     label36:
        return r2;
    }

    public static final boolean inCheck(chess.Position)
    {
        chess.Position r0;
        int i0;
        boolean $z0, $z1;

        r0 := @parameter0: chess.Position;
        $z0 = r0.<chess.Position: boolean whiteMove>;
        i0 = virtualinvoke r0.<chess.Position: int getKingSq(boolean)>($z0);
        $z1 = staticinvoke <chess.MoveGen: boolean sqAttacked(chess.Position,int)>(r0, i0);
        return $z1;
    }

    private static final int nextPiece(chess.Position, int, int)
    {
        chess.Position r0;
        int i0, i1, i2;

        r0 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        i1 := @parameter2: int;

     label0:
        i0 = i0 + i1;
        i2 = virtualinvoke r0.<chess.Position: int getPiece(int)>(i0);
        if i2 == 0 goto label1;

        return i2;

     label1:
        goto label0;
    }

    private static final int nextPieceSafe(chess.Position, int, int)
    {
        chess.Position r0;
        int i0, i1, i4, i5, i6, $i7;
        byte b2, b3;

        r0 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        b2 = 0;
        b3 = 0;
        tableswitch(i1)
        {
            case -9: goto label5;
            case -8: goto label6;
            case -7: goto label7;
            case -6: goto label8;
            case -5: goto label8;
            case -4: goto label8;
            case -3: goto label8;
            case -2: goto label8;
            case -1: goto label4;
            case 0: goto label8;
            case 1: goto label0;
            case 2: goto label8;
            case 3: goto label8;
            case 4: goto label8;
            case 5: goto label8;
            case 6: goto label8;
            case 7: goto label3;
            case 8: goto label2;
            case 9: goto label1;
            default: goto label8;
        };

     label0:
        b2 = 1;
        b3 = 0;
        goto label8;

     label1:
        b2 = 1;
        b3 = 1;
        goto label8;

     label2:
        b2 = 0;
        b3 = 1;
        goto label8;

     label3:
        b2 = -1;
        b3 = 1;
        goto label8;

     label4:
        b2 = -1;
        b3 = 0;
        goto label8;

     label5:
        b2 = -1;
        b3 = -1;
        goto label8;

     label6:
        b2 = 0;
        b3 = -1;
        goto label8;

     label7:
        b2 = 1;
        b3 = -1;

     label8:
        i4 = staticinvoke <chess.Position: int getX(int)>(i0);
        i5 = staticinvoke <chess.Position: int getY(int)>(i0);

     label9:
        i4 = i4 + b2;
        i5 = i5 + b3;
        if i4 < 0 goto label10;

        if i4 > 7 goto label10;

        if i5 < 0 goto label10;

        if i5 <= 7 goto label11;

     label10:
        return 0;

     label11:
        $i7 = staticinvoke <chess.Position: int getSquare(int,int)>(i4, i5);
        i6 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i7);
        if i6 == 0 goto label12;

        return i6;

     label12:
        goto label9;
    }

    public static final boolean givesCheck(chess.Position, chess.Move)
    {
        chess.Position r0;
        chess.Move r1;
        boolean z0, $z1, $z2;
        int i0, i2, i3, i4, i5, i6, i7, i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i56, $i57, $i58, $i59, $i60, $i61, $i62, i63, $i64, $i65, $i66, $i71, $i72, $i73, $i74, $i75, $i76, i77, $i82, $i83, $i84, $i85, $i86, $i87, i88;
        byte b1, $b9, $b27, $b29, $b31, $b33, $b46, $b55, $b68, $b70, $b79, $b81, $b90, $b92;

        r0 := @parameter0: chess.Position;
        r1 := @parameter1: chess.Move;
        z0 = r0.<chess.Position: boolean whiteMove>;
        if z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        i0 = virtualinvoke r0.<chess.Position: int getKingSq(boolean)>($z1);
        if z0 == 0 goto label2;

        $b9 = 7;
        goto label3;

     label2:
        $b9 = 1;

     label3:
        b1 = $b9;
        $i10 = r1.<chess.Move: int promoteTo>;
        if $i10 != 0 goto label4;

        $i11 = r1.<chess.Move: int 'from'>;
        $i12 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i11);
        goto label5;

     label4:
        $i12 = r1.<chess.Move: int promoteTo>;

     label5:
        i2 = staticinvoke <chess.Piece: int makeWhite(int)>($i12);
        $i13 = r1.<chess.Move: int 'to'>;
        i3 = staticinvoke <chess.BitBoard: int getDirection(int,int)>($i13, i0);
        tableswitch(i3)
        {
            case -9: goto label8;
            case -8: goto label6;
            case -7: goto label8;
            case -6: goto label13;
            case -5: goto label13;
            case -4: goto label13;
            case -3: goto label13;
            case -2: goto label13;
            case -1: goto label6;
            case 0: goto label13;
            case 1: goto label6;
            case 2: goto label13;
            case 3: goto label13;
            case 4: goto label13;
            case 5: goto label13;
            case 6: goto label13;
            case 7: goto label8;
            case 8: goto label6;
            case 9: goto label8;
            default: goto label13;
        };

     label6:
        if i2 == 2 goto label7;

        if i2 != 3 goto label14;

     label7:
        if i3 == 0 goto label14;

        $i14 = r1.<chess.Move: int 'to'>;
        $i15 = staticinvoke <chess.MoveGen: int nextPiece(chess.Position,int,int)>(r0, $i14, i3);
        if $i15 != b1 goto label14;

        return 1;

     label8:
        if i2 == 2 goto label9;

        if i2 != 4 goto label10;

     label9:
        if i3 == 0 goto label14;

        $i16 = r1.<chess.Move: int 'to'>;
        $i17 = staticinvoke <chess.MoveGen: int nextPiece(chess.Position,int,int)>(r0, $i16, i3);
        if $i17 != b1 goto label14;

        return 1;

     label10:
        if i2 != 6 goto label14;

        if i3 <= 0 goto label11;

        $z2 = 1;
        goto label12;

     label11:
        $z2 = 0;

     label12:
        if $z2 != z0 goto label14;

        $i18 = r1.<chess.Move: int 'to'>;
        $i19 = $i18 + i3;
        $i20 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i19);
        if $i20 != b1 goto label14;

        return 1;

     label13:
        if i3 == 0 goto label14;

        if i2 != 5 goto label14;

        return 1;

     label14:
        $i21 = r1.<chess.Move: int 'from'>;
        i4 = staticinvoke <chess.BitBoard: int getDirection(int,int)>($i21, i0);
        if i4 == 0 goto label27;

        if i4 == i3 goto label27;

        $i22 = r1.<chess.Move: int 'from'>;
        $i23 = staticinvoke <chess.MoveGen: int nextPiece(chess.Position,int,int)>(r0, $i22, i4);
        if $i23 != b1 goto label27;

        $i24 = r1.<chess.Move: int 'from'>;
        $i25 = neg i4;
        i5 = staticinvoke <chess.MoveGen: int nextPieceSafe(chess.Position,int,int)>(r0, $i24, $i25);
        tableswitch(i4)
        {
            case -9: goto label21;
            case -8: goto label15;
            case -7: goto label21;
            case -6: goto label27;
            case -5: goto label27;
            case -4: goto label27;
            case -3: goto label27;
            case -2: goto label27;
            case -1: goto label15;
            case 0: goto label27;
            case 1: goto label15;
            case 2: goto label27;
            case 3: goto label27;
            case 4: goto label27;
            case 5: goto label27;
            case 6: goto label27;
            case 7: goto label21;
            case 8: goto label15;
            case 9: goto label21;
            default: goto label27;
        };

     label15:
        if z0 == 0 goto label16;

        $b27 = 2;
        goto label17;

     label16:
        $b27 = 8;

     label17:
        if i5 == $b27 goto label20;

        if z0 == 0 goto label18;

        $b29 = 3;
        goto label19;

     label18:
        $b29 = 9;

     label19:
        if i5 != $b29 goto label27;

     label20:
        return 1;

     label21:
        if z0 == 0 goto label22;

        $b31 = 2;
        goto label23;

     label22:
        $b31 = 8;

     label23:
        if i5 == $b31 goto label26;

        if z0 == 0 goto label24;

        $b33 = 4;
        goto label25;

     label24:
        $b33 = 10;

     label25:
        if i5 != $b33 goto label27;

     label26:
        return 1;

     label27:
        $i34 = r1.<chess.Move: int promoteTo>;
        if $i34 == 0 goto label32;

        if i3 == 0 goto label32;

        if i3 != i4 goto label32;

        tableswitch(i3)
        {
            case -9: goto label30;
            case -8: goto label28;
            case -7: goto label30;
            case -6: goto label32;
            case -5: goto label32;
            case -4: goto label32;
            case -3: goto label32;
            case -2: goto label32;
            case -1: goto label28;
            case 0: goto label32;
            case 1: goto label28;
            case 2: goto label32;
            case 3: goto label32;
            case 4: goto label32;
            case 5: goto label32;
            case 6: goto label32;
            case 7: goto label30;
            case 8: goto label28;
            case 9: goto label30;
            default: goto label32;
        };

     label28:
        if i2 == 2 goto label29;

        if i2 != 3 goto label32;

     label29:
        if i3 == 0 goto label32;

        $i35 = r1.<chess.Move: int 'from'>;
        $i36 = staticinvoke <chess.MoveGen: int nextPiece(chess.Position,int,int)>(r0, $i35, i3);
        if $i36 != b1 goto label32;

        return 1;

     label30:
        if i2 == 2 goto label31;

        if i2 != 4 goto label32;

     label31:
        if i3 == 0 goto label32;

        $i37 = r1.<chess.Move: int 'from'>;
        $i38 = staticinvoke <chess.MoveGen: int nextPiece(chess.Position,int,int)>(r0, $i37, i3);
        if $i38 != b1 goto label32;

        return 1;

     label32:
        if i2 != 1 goto label40;

        $i39 = r1.<chess.Move: int 'to'>;
        $i40 = r1.<chess.Move: int 'from'>;
        $i41 = $i39 - $i40;
        if $i41 != 2 goto label36;

        $i42 = r1.<chess.Move: int 'from'>;
        $i43 = staticinvoke <chess.MoveGen: int nextPieceSafe(chess.Position,int,int)>(r0, $i42, -1);
        if $i43 != b1 goto label33;

        return 1;

     label33:
        $i44 = r1.<chess.Move: int 'from'>;
        $i45 = $i44 + 1;
        if z0 == 0 goto label34;

        $b46 = 8;
        goto label35;

     label34:
        $b46 = -8;

     label35:
        $i47 = staticinvoke <chess.MoveGen: int nextPieceSafe(chess.Position,int,int)>(r0, $i45, $b46);
        if $i47 != b1 goto label61;

        return 1;

     label36:
        $i48 = r1.<chess.Move: int 'to'>;
        $i49 = r1.<chess.Move: int 'from'>;
        $i50 = $i48 - $i49;
        if $i50 != -2 goto label61;

        $i51 = r1.<chess.Move: int 'from'>;
        $i52 = staticinvoke <chess.MoveGen: int nextPieceSafe(chess.Position,int,int)>(r0, $i51, 1);
        if $i52 != b1 goto label37;

        return 1;

     label37:
        $i53 = r1.<chess.Move: int 'from'>;
        $i54 = $i53 - 1;
        if z0 == 0 goto label38;

        $b55 = 8;
        goto label39;

     label38:
        $b55 = -8;

     label39:
        $i56 = staticinvoke <chess.MoveGen: int nextPieceSafe(chess.Position,int,int)>(r0, $i54, $b55);
        if $i56 != b1 goto label61;

        return 1;

     label40:
        if i2 != 6 goto label61;

        $i57 = r1.<chess.Move: int 'to'>;
        $i58 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i57);
        if $i58 != 0 goto label61;

        $i59 = r1.<chess.Move: int 'to'>;
        $i60 = staticinvoke <chess.Position: int getX(int)>($i59);
        $i61 = r1.<chess.Move: int 'from'>;
        $i62 = staticinvoke <chess.Position: int getX(int)>($i61);
        i63 = $i60 - $i62;
        if i63 == 0 goto label61;

        $i64 = r1.<chess.Move: int 'from'>;
        i6 = $i64 + i63;
        i7 = staticinvoke <chess.BitBoard: int getDirection(int,int)>(i6, i0);
        tableswitch(i7)
        {
            case -9: goto label41;
            case -8: goto label61;
            case -7: goto label41;
            case -6: goto label61;
            case -5: goto label61;
            case -4: goto label61;
            case -3: goto label61;
            case -2: goto label61;
            case -1: goto label55;
            case 0: goto label61;
            case 1: goto label48;
            case 2: goto label61;
            case 3: goto label61;
            case 4: goto label61;
            case 5: goto label61;
            case 6: goto label61;
            case 7: goto label41;
            case 8: goto label61;
            case 9: goto label41;
            default: goto label61;
        };

     label41:
        $i65 = staticinvoke <chess.MoveGen: int nextPiece(chess.Position,int,int)>(r0, i6, i7);
        if $i65 != b1 goto label61;

        $i66 = neg i7;
        i8 = staticinvoke <chess.MoveGen: int nextPieceSafe(chess.Position,int,int)>(r0, i6, $i66);
        if z0 == 0 goto label42;

        $b68 = 2;
        goto label43;

     label42:
        $b68 = 8;

     label43:
        if i8 == $b68 goto label46;

        if z0 == 0 goto label44;

        $b70 = 4;
        goto label45;

     label44:
        $b70 = 10;

     label45:
        if i8 != $b70 goto label47;

     label46:
        return 1;

     label47:
        goto label61;

     label48:
        $i71 = r1.<chess.Move: int 'from'>;
        $i72 = staticinvoke <java.lang.Math: int max(int,int)>(i6, $i71);
        $i73 = staticinvoke <chess.MoveGen: int nextPiece(chess.Position,int,int)>(r0, $i72, i7);
        if $i73 != b1 goto label61;

        $i74 = r1.<chess.Move: int 'from'>;
        $i75 = staticinvoke <java.lang.Math: int min(int,int)>(i6, $i74);
        $i76 = neg i7;
        i77 = staticinvoke <chess.MoveGen: int nextPieceSafe(chess.Position,int,int)>(r0, $i75, $i76);
        if z0 == 0 goto label49;

        $b79 = 2;
        goto label50;

     label49:
        $b79 = 8;

     label50:
        if i77 == $b79 goto label53;

        if z0 == 0 goto label51;

        $b81 = 3;
        goto label52;

     label51:
        $b81 = 9;

     label52:
        if i77 != $b81 goto label54;

     label53:
        return 1;

     label54:
        goto label61;

     label55:
        $i82 = r1.<chess.Move: int 'from'>;
        $i83 = staticinvoke <java.lang.Math: int min(int,int)>(i6, $i82);
        $i84 = staticinvoke <chess.MoveGen: int nextPiece(chess.Position,int,int)>(r0, $i83, i7);
        if $i84 != b1 goto label61;

        $i85 = r1.<chess.Move: int 'from'>;
        $i86 = staticinvoke <java.lang.Math: int max(int,int)>(i6, $i85);
        $i87 = neg i7;
        i88 = staticinvoke <chess.MoveGen: int nextPieceSafe(chess.Position,int,int)>(r0, $i86, $i87);
        if z0 == 0 goto label56;

        $b90 = 2;
        goto label57;

     label56:
        $b90 = 8;

     label57:
        if i88 == $b90 goto label60;

        if z0 == 0 goto label58;

        $b92 = 3;
        goto label59;

     label58:
        $b92 = 9;

     label59:
        if i88 != $b92 goto label61;

     label60:
        return 1;

     label61:
        return 0;
    }

    public static final boolean canTakeKing(chess.Position)
    {
        chess.Position r0;
        boolean z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: chess.Position;
        $z1 = r0.<chess.Position: boolean whiteMove>;
        if $z1 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        virtualinvoke r0.<chess.Position: void setWhiteMove(boolean)>($z2);
        z0 = staticinvoke <chess.MoveGen: boolean inCheck(chess.Position)>(r0);
        $z3 = r0.<chess.Position: boolean whiteMove>;
        if $z3 != 0 goto label2;

        $z4 = 1;
        goto label3;

     label2:
        $z4 = 0;

     label3:
        virtualinvoke r0.<chess.Position: void setWhiteMove(boolean)>($z4);
        return z0;
    }

    public static final boolean sqAttacked(chess.Position, int)
    {
        chess.Position r0;
        int i0;
        long l1, l2, $l3, $l4, $l5, $l7, $l8, $l9, $l11, $l12, $l13, $l15, $l16, $l17, $l18, $l19, $l20, $l22, $l23, $l24, $l25, $l27, $l28, $l29, $l31, $l32, $l33, $l35, $l36, $l37, $l39, $l40, l41, l42, $l43, $l44, $l45, $l46, $l48, $l49, $l50, $l51;
        boolean $z0;
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        byte $b6, $b10, $b14, $b21, $b26, $b30, $b34, $b38, $b47, $b52;

        r0 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        $z0 = r0.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label5;

        $r1 = <chess.BitBoard: long[] knightAttacks>;
        $l3 = $r1[i0];
        $r2 = r0.<chess.Position: long[] pieceTypeBB>;
        $l4 = $r2[11];
        $l5 = $l3 & $l4;
        $b6 = $l5 cmp 0L;
        if $b6 == 0 goto label0;

        return 1;

     label0:
        $r3 = <chess.BitBoard: long[] kingAttacks>;
        $l7 = $r3[i0];
        $r4 = r0.<chess.Position: long[] pieceTypeBB>;
        $l8 = $r4[7];
        $l9 = $l7 & $l8;
        $b10 = $l9 cmp 0L;
        if $b10 == 0 goto label1;

        return 1;

     label1:
        $r5 = <chess.BitBoard: long[] wPawnAttacks>;
        $l11 = $r5[i0];
        $r6 = r0.<chess.Position: long[] pieceTypeBB>;
        $l12 = $r6[12];
        $l13 = $l11 & $l12;
        $b14 = $l13 cmp 0L;
        if $b14 == 0 goto label2;

        return 1;

     label2:
        $l15 = r0.<chess.Position: long whiteBB>;
        $l16 = r0.<chess.Position: long blackBB>;
        l1 = $l15 | $l16;
        $r7 = r0.<chess.Position: long[] pieceTypeBB>;
        l2 = $r7[8];
        $l17 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i0, l1);
        $r8 = r0.<chess.Position: long[] pieceTypeBB>;
        $l18 = $r8[10];
        $l19 = $l18 | l2;
        $l20 = $l17 & $l19;
        $b21 = $l20 cmp 0L;
        if $b21 == 0 goto label3;

        return 1;

     label3:
        $l22 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i0, l1);
        $r9 = r0.<chess.Position: long[] pieceTypeBB>;
        $l23 = $r9[9];
        $l24 = $l23 | l2;
        $l25 = $l22 & $l24;
        $b26 = $l25 cmp 0L;
        if $b26 == 0 goto label4;

        return 1;

     label4:
        goto label10;

     label5:
        $r10 = <chess.BitBoard: long[] knightAttacks>;
        $l27 = $r10[i0];
        $r11 = r0.<chess.Position: long[] pieceTypeBB>;
        $l28 = $r11[5];
        $l29 = $l27 & $l28;
        $b30 = $l29 cmp 0L;
        if $b30 == 0 goto label6;

        return 1;

     label6:
        $r12 = <chess.BitBoard: long[] kingAttacks>;
        $l31 = $r12[i0];
        $r13 = r0.<chess.Position: long[] pieceTypeBB>;
        $l32 = $r13[1];
        $l33 = $l31 & $l32;
        $b34 = $l33 cmp 0L;
        if $b34 == 0 goto label7;

        return 1;

     label7:
        $r14 = <chess.BitBoard: long[] bPawnAttacks>;
        $l35 = $r14[i0];
        $r15 = r0.<chess.Position: long[] pieceTypeBB>;
        $l36 = $r15[6];
        $l37 = $l35 & $l36;
        $b38 = $l37 cmp 0L;
        if $b38 == 0 goto label8;

        return 1;

     label8:
        $l39 = r0.<chess.Position: long whiteBB>;
        $l40 = r0.<chess.Position: long blackBB>;
        l41 = $l39 | $l40;
        $r16 = r0.<chess.Position: long[] pieceTypeBB>;
        l42 = $r16[2];
        $l43 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i0, l41);
        $r17 = r0.<chess.Position: long[] pieceTypeBB>;
        $l44 = $r17[4];
        $l45 = $l44 | l42;
        $l46 = $l43 & $l45;
        $b47 = $l46 cmp 0L;
        if $b47 == 0 goto label9;

        return 1;

     label9:
        $l48 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i0, l41);
        $r18 = r0.<chess.Position: long[] pieceTypeBB>;
        $l49 = $r18[3];
        $l50 = $l49 | l42;
        $l51 = $l48 & $l50;
        $b52 = $l51 cmp 0L;
        if $b52 == 0 goto label10;

        return 1;

     label10:
        return 0;
    }

    public static final void removeIllegal(chess.Position, chess.MoveGen$MoveList)
    {
        chess.Position r0;
        chess.MoveGen$MoveList r1;
        int i0, i2, i4, i5, $i14, $i15, $i16, $i20, $i21, i22, $i23, $i24, $i25, $i29, $i30;
        chess.UndoInfo r2, $r4;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11, $z12, $z13, $z14, $z15, $z16;
        long l1, l3, $l6, $l7, $l8, $l9, $l12, l13, $l17, $l18, $l26, $l27;
        chess.Move r3, $r10, r12, $r16;
        long[] $r5;
        byte $b11, $b19, $b28;
        chess.Move[] $r6, $r9, $r11, $r15;

        r0 := @parameter0: chess.Position;
        r1 := @parameter1: chess.MoveGen$MoveList;
        i0 = 0;
        $r4 = new chess.UndoInfo;
        specialinvoke $r4.<chess.UndoInfo: void <init>()>();
        r2 = $r4;
        z0 = staticinvoke <chess.MoveGen: boolean inCheck(chess.Position)>(r0);
        $l6 = r0.<chess.Position: long whiteBB>;
        $l7 = r0.<chess.Position: long blackBB>;
        l1 = $l6 | $l7;
        $z2 = r0.<chess.Position: boolean whiteMove>;
        i2 = virtualinvoke r0.<chess.Position: int getKingSq(boolean)>($z2);
        $l8 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i2, l1);
        $l9 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i2, l1);
        l3 = $l8 | $l9;
        i4 = virtualinvoke r0.<chess.Position: int getEpSquare()>();
        if z0 == 0 goto label13;

        $r5 = r0.<chess.Position: long[] pieceTypeBB>;
        $z3 = r0.<chess.Position: boolean whiteMove>;
        if $z3 == 0 goto label0;

        $b11 = 11;
        goto label1;

     label0:
        $b11 = 5;

     label1:
        $l12 = $r5[$b11];
        l13 = l3 | $l12;
        i5 = 0;

     label2:
        $i14 = r1.<chess.MoveGen$MoveList: int size>;
        if i5 >= $i14 goto label12;

        $r6 = r1.<chess.MoveGen$MoveList: chess.Move[] m>;
        r3 = $r6[i5];
        $i15 = r3.<chess.Move: int 'from'>;
        if $i15 == i2 goto label3;

        $i16 = r3.<chess.Move: int 'to'>;
        $l17 = 1L << $i16;
        $l18 = l13 & $l17;
        $b19 = $l18 cmp 0L;
        if $b19 != 0 goto label3;

        $i20 = r3.<chess.Move: int 'to'>;
        if $i20 == i4 goto label3;

        z1 = 0;
        goto label10;

     label3:
        virtualinvoke r0.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r3, r2);
        $z4 = r0.<chess.Position: boolean whiteMove>;
        if $z4 != 0 goto label4;

        $z5 = 1;
        goto label5;

     label4:
        $z5 = 0;

     label5:
        virtualinvoke r0.<chess.Position: void setWhiteMove(boolean)>($z5);
        $z6 = staticinvoke <chess.MoveGen: boolean inCheck(chess.Position)>(r0);
        if $z6 != 0 goto label6;

        $z7 = 1;
        goto label7;

     label6:
        $z7 = 0;

     label7:
        z1 = $z7;
        $z8 = r0.<chess.Position: boolean whiteMove>;
        if $z8 != 0 goto label8;

        $z9 = 1;
        goto label9;

     label8:
        $z9 = 0;

     label9:
        virtualinvoke r0.<chess.Position: void setWhiteMove(boolean)>($z9);
        virtualinvoke r0.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r3, r2);

     label10:
        if z1 == 0 goto label11;

        $r9 = r1.<chess.MoveGen$MoveList: chess.Move[] m>;
        $i21 = i0;
        i0 = i0 + 1;
        $r10 = $r9[$i21];
        virtualinvoke $r10.<chess.Move: void copyFrom(chess.Move)>(r3);

     label11:
        i5 = i5 + 1;
        goto label2;

     label12:
        goto label24;

     label13:
        i22 = 0;

     label14:
        $i23 = r1.<chess.MoveGen$MoveList: int size>;
        if i22 >= $i23 goto label24;

        $r11 = r1.<chess.MoveGen$MoveList: chess.Move[] m>;
        r12 = $r11[i22];
        $i24 = r12.<chess.Move: int 'from'>;
        if $i24 == i2 goto label15;

        $i25 = r12.<chess.Move: int 'from'>;
        $l26 = 1L << $i25;
        $l27 = l3 & $l26;
        $b28 = $l27 cmp 0L;
        if $b28 != 0 goto label15;

        $i29 = r12.<chess.Move: int 'to'>;
        if $i29 == i4 goto label15;

        z10 = 1;
        goto label22;

     label15:
        virtualinvoke r0.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r12, r2);
        $z11 = r0.<chess.Position: boolean whiteMove>;
        if $z11 != 0 goto label16;

        $z12 = 1;
        goto label17;

     label16:
        $z12 = 0;

     label17:
        virtualinvoke r0.<chess.Position: void setWhiteMove(boolean)>($z12);
        $z13 = staticinvoke <chess.MoveGen: boolean inCheck(chess.Position)>(r0);
        if $z13 != 0 goto label18;

        $z14 = 1;
        goto label19;

     label18:
        $z14 = 0;

     label19:
        z10 = $z14;
        $z15 = r0.<chess.Position: boolean whiteMove>;
        if $z15 != 0 goto label20;

        $z16 = 1;
        goto label21;

     label20:
        $z16 = 0;

     label21:
        virtualinvoke r0.<chess.Position: void setWhiteMove(boolean)>($z16);
        virtualinvoke r0.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r12, r2);

     label22:
        if z10 == 0 goto label23;

        $r15 = r1.<chess.MoveGen$MoveList: chess.Move[] m>;
        $i30 = i0;
        i0 = i0 + 1;
        $r16 = $r15[$i30];
        virtualinvoke $r16.<chess.Move: void copyFrom(chess.Move)>(r12);

     label23:
        i22 = i22 + 1;
        goto label14;

     label24:
        r1.<chess.MoveGen$MoveList: int size> = i0;
        return;
    }

    private static final boolean addPawnMovesByMask(chess.MoveGen$MoveList, chess.Position, long, int, boolean)
    {
        chess.MoveGen$MoveList r0;
        chess.Position r1;
        long l0, l2, $l8, $l10, l12, $l13, l14, $l16, $l20;
        int i1, i3, i4, i5, $i11, i18, $i19;
        boolean z0, $z1;
        byte $b6, $b7, $b9, $b15, $b17;
        long[] $r2;

        r0 := @parameter0: chess.MoveGen$MoveList;
        r1 := @parameter1: chess.Position;
        l0 := @parameter2: long;
        i1 := @parameter3: int;
        z0 := @parameter4: boolean;
        $b6 = l0 cmp 0L;
        if $b6 != 0 goto label0;

        return 0;

     label0:
        $r2 = r1.<chess.Position: long[] pieceTypeBB>;
        $z1 = r1.<chess.Position: boolean whiteMove>;
        if $z1 == 0 goto label1;

        $b7 = 7;
        goto label2;

     label1:
        $b7 = 1;

     label2:
        l2 = $r2[$b7];
        $l8 = l0 & l2;
        $b9 = $l8 cmp 0L;
        if $b9 == 0 goto label3;

        $l10 = l0 & l2;
        i3 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l10);
        r0.<chess.MoveGen$MoveList: int size> = 0;
        $i11 = i3 + i1;
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, $i11, i3, 0);
        return 1;

     label3:
        l12 = l0 & -72057594037927681L;
        $l13 = l12 ^ -1L;
        l14 = l0 & $l13;

     label4:
        $b15 = l12 cmp 0L;
        if $b15 == 0 goto label7;

        i4 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l12);
        i5 = i4 + i1;
        if i4 < 56 goto label5;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i5, i4, 2);
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i5, i4, 5);
        if z0 == 0 goto label6;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i5, i4, 3);
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i5, i4, 4);
        goto label6;

     label5:
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i5, i4, 8);
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i5, i4, 11);
        if z0 == 0 goto label6;

        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i5, i4, 9);
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i5, i4, 10);

     label6:
        $l16 = l12 - 1L;
        l12 = l12 & $l16;
        goto label4;

     label7:
        $b17 = l14 cmp 0L;
        if $b17 == 0 goto label8;

        i18 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l14);
        $i19 = i18 + i1;
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, $i19, i18, 0);
        $l20 = l14 - 1L;
        l14 = l14 & $l20;
        goto label7;

     label8:
        return 0;
    }

    private static final void addPawnDoubleMovesByMask(chess.MoveGen$MoveList, chess.Position, long, int)
    {
        chess.MoveGen$MoveList r0;
        chess.Position r1;
        long l0, $l5;
        int i1, i2, $i4;
        byte $b3;

        r0 := @parameter0: chess.MoveGen$MoveList;
        r1 := @parameter1: chess.Position;
        l0 := @parameter2: long;
        i1 := @parameter3: int;

     label0:
        $b3 = l0 cmp 0L;
        if $b3 == 0 goto label1;

        i2 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l0);
        $i4 = i2 + i1;
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, $i4, i2, 0);
        $l5 = l0 - 1L;
        l0 = l0 & $l5;
        goto label0;

     label1:
        return;
    }

    private static final boolean addMovesByMask(chess.MoveGen$MoveList, chess.Position, int, long)
    {
        chess.MoveGen$MoveList r0;
        chess.Position r1;
        int i0, i3, i9;
        long l1, l2, $l5, $l7, $l10;
        long[] $r2;
        boolean $z0;
        byte $b4, $b6, $b8;

        r0 := @parameter0: chess.MoveGen$MoveList;
        r1 := @parameter1: chess.Position;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        $r2 = r1.<chess.Position: long[] pieceTypeBB>;
        $z0 = r1.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label0;

        $b4 = 7;
        goto label1;

     label0:
        $b4 = 1;

     label1:
        l2 = $r2[$b4];
        $l5 = l1 & l2;
        $b6 = $l5 cmp 0L;
        if $b6 == 0 goto label2;

        $l7 = l1 & l2;
        i3 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>($l7);
        r0.<chess.MoveGen$MoveList: int size> = 0;
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i0, i3, 0);
        return 1;

     label2:
        $b8 = l1 cmp 0L;
        if $b8 == 0 goto label3;

        i9 = staticinvoke <chess.BitBoard: int numberOfTrailingZeros(long)>(l1);
        staticinvoke <chess.MoveGen: void setMove(chess.MoveGen$MoveList,int,int,int)>(r0, i0, i9, 0);
        $l10 = l1 - 1L;
        l1 = l1 & $l10;
        goto label2;

     label3:
        return 0;
    }

    private static final void setMove(chess.MoveGen$MoveList, int, int, int)
    {
        chess.MoveGen$MoveList r0;
        int i0, i1, i2, $i3, $i4;
        chess.Move r2;
        chess.Move[] $r3;

        r0 := @parameter0: chess.MoveGen$MoveList;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r3 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $i3 = r0.<chess.MoveGen$MoveList: int size>;
        $i4 = $i3 + 1;
        r0.<chess.MoveGen$MoveList: int size> = $i4;
        r2 = $r3[$i3];
        r2.<chess.Move: int 'from'> = i0;
        r2.<chess.Move: int 'to'> = i1;
        r2.<chess.Move: int promoteTo> = i2;
        r2.<chess.Move: int score> = 0;
        return;
    }

    private final chess.MoveGen$MoveList getMoveListObj()
    {
        chess.MoveGen r0;
        chess.MoveGen$MoveList r2, $r5;
        int i0, $i1, $i2, $i3;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        chess.Move[] $r6;
        chess.Move $r7;

        r0 := @this: chess.MoveGen;
        $i1 = r0.<chess.MoveGen: int moveListsInCache>;
        if $i1 <= 0 goto label0;

        $r3 = r0.<chess.MoveGen: java.lang.Object[] moveListCache>;
        $i2 = r0.<chess.MoveGen: int moveListsInCache>;
        $i3 = $i2 - 1;
        r0.<chess.MoveGen: int moveListsInCache> = $i3;
        $r4 = $r3[$i3];
        r2 = (chess.MoveGen$MoveList) $r4;
        r2.<chess.MoveGen$MoveList: int size> = 0;
        goto label2;

     label0:
        $r5 = new chess.MoveGen$MoveList;
        specialinvoke $r5.<chess.MoveGen$MoveList: void <init>()>();
        r2 = $r5;
        i0 = 0;

     label1:
        if i0 >= 256 goto label2;

        $r6 = r2.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r7 = new chess.Move;
        specialinvoke $r7.<chess.Move: void <init>(int,int,int)>(0, 0, 0);
        $r6[i0] = $r7;
        i0 = i0 + 1;
        goto label1;

     label2:
        return r2;
    }

    public final void returnMoveList(chess.MoveGen$MoveList)
    {
        chess.MoveGen r0;
        chess.MoveGen$MoveList r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object[] $r2, $r3;

        r0 := @this: chess.MoveGen;
        r1 := @parameter0: chess.MoveGen$MoveList;
        $i1 = r0.<chess.MoveGen: int moveListsInCache>;
        $r2 = r0.<chess.MoveGen: java.lang.Object[] moveListCache>;
        $i2 = lengthof $r2;
        if $i1 >= $i2 goto label0;

        $r3 = r0.<chess.MoveGen: java.lang.Object[] moveListCache>;
        $i0 = r0.<chess.MoveGen: int moveListsInCache>;
        $i3 = $i0 + 1;
        r0.<chess.MoveGen: int moveListsInCache> = $i3;
        $r3[$i0] = r1;

     label0:
        return;
    }

    static void <clinit>()
    {
        chess.MoveGen $r0;

        $r0 = new chess.MoveGen;
        specialinvoke $r0.<chess.MoveGen: void <init>()>();
        <chess.MoveGen: chess.MoveGen instance> = $r0;
        return;
    }
}
class chess.Parameters$1 extends java.lang.Object
{
    static final int[] $SwitchMap$chess$Parameters$Type;

    static void <clinit>()
    {
        chess.Parameters$Type[] $r0;
        chess.Parameters$Type $r1, $r7, $r11, $r15, $r19;
        java.lang.NoSuchFieldError r2, $r5, $r8, r9, $r12, r13, $r16, r17, $r20, r21;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r3, $r4, $r6, $r10, $r14, $r18;

        $r0 = staticinvoke <chess.Parameters$Type: chess.Parameters$Type[] values()>();
        $i0 = lengthof $r0;
        $r3 = newarray (int)[$i0];
        <chess.Parameters$1: int[] $SwitchMap$chess$Parameters$Type> = $r3;

     label0:
        $r4 = <chess.Parameters$1: int[] $SwitchMap$chess$Parameters$Type>;
        $r1 = <chess.Parameters$Type: chess.Parameters$Type CHECK>;
        $i1 = virtualinvoke $r1.<chess.Parameters$Type: int ordinal()>();
        $r4[$i1] = 1;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;

     label3:
        $r6 = <chess.Parameters$1: int[] $SwitchMap$chess$Parameters$Type>;
        $r7 = <chess.Parameters$Type: chess.Parameters$Type SPIN>;
        $i2 = virtualinvoke $r7.<chess.Parameters$Type: int ordinal()>();
        $r6[$i2] = 2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;

     label6:
        $r10 = <chess.Parameters$1: int[] $SwitchMap$chess$Parameters$Type>;
        $r11 = <chess.Parameters$Type: chess.Parameters$Type COMBO>;
        $i3 = virtualinvoke $r11.<chess.Parameters$Type: int ordinal()>();
        $r10[$i3] = 3;

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;
        r13 = $r12;

     label9:
        $r14 = <chess.Parameters$1: int[] $SwitchMap$chess$Parameters$Type>;
        $r15 = <chess.Parameters$Type: chess.Parameters$Type BUTTON>;
        $i4 = virtualinvoke $r15.<chess.Parameters$Type: int ordinal()>();
        $r14[$i4] = 4;

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;
        r17 = $r16;

     label12:
        $r18 = <chess.Parameters$1: int[] $SwitchMap$chess$Parameters$Type>;
        $r19 = <chess.Parameters$Type: chess.Parameters$Type STRING>;
        $i5 = virtualinvoke $r19.<chess.Parameters$Type: int ordinal()>();
        $r18[$i5] = 5;

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;
        r21 = $r20;

     label15:
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
    }
}
public final class chess.Parameters$ButtonParam extends chess.Parameters$ParamBase
{

    void <init>(java.lang.String, boolean)
    {
        chess.Parameters$ButtonParam r0;
        java.lang.String r1;
        boolean z0;
        chess.Parameters$Type $r2;

        r0 := @this: chess.Parameters$ButtonParam;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        specialinvoke r0.<chess.Parameters$ParamBase: void <init>()>();
        r0.<chess.Parameters$ButtonParam: java.lang.String name> = r1;
        $r2 = <chess.Parameters$Type: chess.Parameters$Type BUTTON>;
        r0.<chess.Parameters$ButtonParam: chess.Parameters$Type type> = $r2;
        r0.<chess.Parameters$ButtonParam: boolean visible> = z0;
        return;
    }
}
public final class chess.Parameters$CheckParam extends chess.Parameters$ParamBase
{
    public boolean value;
    public boolean defaultValue;

    void <init>(java.lang.String, boolean, boolean)
    {
        chess.Parameters$CheckParam r0;
        java.lang.String r1;
        boolean z0, z1;
        chess.Parameters$Type $r2;

        r0 := @this: chess.Parameters$CheckParam;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        z1 := @parameter2: boolean;
        specialinvoke r0.<chess.Parameters$ParamBase: void <init>()>();
        r0.<chess.Parameters$CheckParam: java.lang.String name> = r1;
        $r2 = <chess.Parameters$Type: chess.Parameters$Type CHECK>;
        r0.<chess.Parameters$CheckParam: chess.Parameters$Type type> = $r2;
        r0.<chess.Parameters$CheckParam: boolean visible> = z0;
        r0.<chess.Parameters$CheckParam: boolean value> = z1;
        r0.<chess.Parameters$CheckParam: boolean defaultValue> = z1;
        return;
    }
}
public final class chess.Parameters$ComboParam extends chess.Parameters$ParamBase
{
    public java.lang.String[] allowedValues;
    public java.lang.String value;
    public java.lang.String defaultValue;

    void <init>(java.lang.String, boolean, java.lang.String[], java.lang.String)
    {
        chess.Parameters$ComboParam r0;
        java.lang.String r1, r3;
        boolean z0;
        java.lang.String[] r2;
        chess.Parameters$Type $r4;

        r0 := @this: chess.Parameters$ComboParam;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r2 := @parameter2: java.lang.String[];
        r3 := @parameter3: java.lang.String;
        specialinvoke r0.<chess.Parameters$ParamBase: void <init>()>();
        r0.<chess.Parameters$ComboParam: java.lang.String name> = r1;
        $r4 = <chess.Parameters$Type: chess.Parameters$Type COMBO>;
        r0.<chess.Parameters$ComboParam: chess.Parameters$Type type> = $r4;
        r0.<chess.Parameters$ComboParam: boolean visible> = z0;
        r0.<chess.Parameters$ComboParam: java.lang.String[] allowedValues> = r2;
        r0.<chess.Parameters$ComboParam: java.lang.String value> = r3;
        r0.<chess.Parameters$ComboParam: java.lang.String defaultValue> = r3;
        return;
    }
}
public class chess.Parameters$ParamBase extends java.lang.Object
{
    public java.lang.String name;
    public chess.Parameters$Type type;
    public boolean visible;

    public void <init>()
    {
        chess.Parameters$ParamBase r0;

        r0 := @this: chess.Parameters$ParamBase;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class chess.Parameters$SpinParam extends chess.Parameters$ParamBase
{
    public int minValue;
    public int maxValue;
    public int value;
    public int defaultValue;

    void <init>(java.lang.String, boolean, int, int, int)
    {
        chess.Parameters$SpinParam r0;
        java.lang.String r1;
        boolean z0;
        int i0, i1, i2;
        chess.Parameters$Type $r2;

        r0 := @this: chess.Parameters$SpinParam;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        specialinvoke r0.<chess.Parameters$ParamBase: void <init>()>();
        r0.<chess.Parameters$SpinParam: java.lang.String name> = r1;
        $r2 = <chess.Parameters$Type: chess.Parameters$Type SPIN>;
        r0.<chess.Parameters$SpinParam: chess.Parameters$Type type> = $r2;
        r0.<chess.Parameters$SpinParam: boolean visible> = z0;
        r0.<chess.Parameters$SpinParam: int minValue> = i0;
        r0.<chess.Parameters$SpinParam: int maxValue> = i1;
        r0.<chess.Parameters$SpinParam: int value> = i2;
        r0.<chess.Parameters$SpinParam: int defaultValue> = i2;
        return;
    }
}
public final class chess.Parameters$StringParam extends chess.Parameters$ParamBase
{
    public java.lang.String value;
    public java.lang.String defaultValue;

    void <init>(java.lang.String, boolean, java.lang.String)
    {
        chess.Parameters$StringParam r0;
        java.lang.String r1, r2;
        boolean z0;
        chess.Parameters$Type $r3;

        r0 := @this: chess.Parameters$StringParam;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r2 := @parameter2: java.lang.String;
        specialinvoke r0.<chess.Parameters$ParamBase: void <init>()>();
        r0.<chess.Parameters$StringParam: java.lang.String name> = r1;
        $r3 = <chess.Parameters$Type: chess.Parameters$Type STRING>;
        r0.<chess.Parameters$StringParam: chess.Parameters$Type type> = $r3;
        r0.<chess.Parameters$StringParam: boolean visible> = z0;
        r0.<chess.Parameters$StringParam: java.lang.String value> = r2;
        r0.<chess.Parameters$StringParam: java.lang.String defaultValue> = r2;
        return;
    }
}
public final enum class chess.Parameters$Type extends java.lang.Enum
{
    public static final enum chess.Parameters$Type CHECK;
    public static final enum chess.Parameters$Type SPIN;
    public static final enum chess.Parameters$Type COMBO;
    public static final enum chess.Parameters$Type BUTTON;
    public static final enum chess.Parameters$Type STRING;
    private static final chess.Parameters$Type[] $VALUES;

    public static chess.Parameters$Type[] values()
    {
        chess.Parameters$Type[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <chess.Parameters$Type: chess.Parameters$Type[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (chess.Parameters$Type[]) $r1;
        return $r2;
    }

    public static chess.Parameters$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        chess.Parameters$Type $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "chess/Parameters$Type", r0);
        $r2 = (chess.Parameters$Type) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        chess.Parameters$Type r0;
        java.lang.String r1;
        int i0;

        r0 := @this: chess.Parameters$Type;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        chess.Parameters$Type $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        chess.Parameters$Type[] $r5;

        $r0 = new chess.Parameters$Type;
        specialinvoke $r0.<chess.Parameters$Type: void <init>(java.lang.String,int)>("CHECK", 0);
        <chess.Parameters$Type: chess.Parameters$Type CHECK> = $r0;
        $r1 = new chess.Parameters$Type;
        specialinvoke $r1.<chess.Parameters$Type: void <init>(java.lang.String,int)>("SPIN", 1);
        <chess.Parameters$Type: chess.Parameters$Type SPIN> = $r1;
        $r2 = new chess.Parameters$Type;
        specialinvoke $r2.<chess.Parameters$Type: void <init>(java.lang.String,int)>("COMBO", 2);
        <chess.Parameters$Type: chess.Parameters$Type COMBO> = $r2;
        $r3 = new chess.Parameters$Type;
        specialinvoke $r3.<chess.Parameters$Type: void <init>(java.lang.String,int)>("BUTTON", 3);
        <chess.Parameters$Type: chess.Parameters$Type BUTTON> = $r3;
        $r4 = new chess.Parameters$Type;
        specialinvoke $r4.<chess.Parameters$Type: void <init>(java.lang.String,int)>("STRING", 4);
        <chess.Parameters$Type: chess.Parameters$Type STRING> = $r4;
        $r5 = newarray (chess.Parameters$Type)[5];
        $r6 = <chess.Parameters$Type: chess.Parameters$Type CHECK>;
        $r5[0] = $r6;
        $r7 = <chess.Parameters$Type: chess.Parameters$Type SPIN>;
        $r5[1] = $r7;
        $r8 = <chess.Parameters$Type: chess.Parameters$Type COMBO>;
        $r5[2] = $r8;
        $r9 = <chess.Parameters$Type: chess.Parameters$Type BUTTON>;
        $r5[3] = $r9;
        $r10 = <chess.Parameters$Type: chess.Parameters$Type STRING>;
        $r5[4] = $r10;
        <chess.Parameters$Type: chess.Parameters$Type[] $VALUES> = $r5;
        return;
    }
}
public class chess.Parameters extends java.lang.Object
{
    private static final chess.Parameters inst;
    private java.util.Map params;

    public static chess.Parameters instance()
    {
        chess.Parameters $r0;

        $r0 = <chess.Parameters: chess.Parameters inst>;
        return $r0;
    }

    public final java.lang.String[] getParamNames()
    {
        chess.Parameters r0;
        java.util.ArrayList $r1, r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r10;
        chess.Parameters$ParamBase $r9;
        int $i0;
        java.lang.String[] $r11, $r13;
        java.lang.Object[] $r12;

        r0 := @this: chess.Parameters;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r5 = r0.<chess.Parameters: java.util.Map params>;
        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r7;
        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r9 = (chess.Parameters$ParamBase) $r8;
        $z1 = $r9.<chess.Parameters$ParamBase: boolean visible>;
        if $z1 == 0 goto label1;

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label1:
        goto label0;

     label2:
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        $r11 = newarray (java.lang.String)[$i0];
        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r11);
        $r13 = (java.lang.String[]) $r12;
        return $r13;
    }

    public final chess.Parameters$ParamBase getParam(java.lang.String)
    {
        chess.Parameters r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        chess.Parameters$ParamBase $r4;

        r0 := @this: chess.Parameters;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<chess.Parameters: java.util.Map params>;
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (chess.Parameters$ParamBase) $r3;
        return $r4;
    }

    private void <init>()
    {
        chess.Parameters r0;
        java.util.TreeMap $r1;
        chess.Parameters$SpinParam $r2, $r3, $r4, $r5, $r6;

        r0 := @this: chess.Parameters;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.TreeMap;
        specialinvoke $r1.<java.util.TreeMap: void <init>()>();
        r0.<chess.Parameters: java.util.Map params> = $r1;
        $r2 = new chess.Parameters$SpinParam;
        specialinvoke $r2.<chess.Parameters$SpinParam: void <init>(java.lang.String,boolean,int,int,int)>("qV", 0, -200, 200, 0);
        specialinvoke r0.<chess.Parameters: void addPar(chess.Parameters$ParamBase)>($r2);
        $r3 = new chess.Parameters$SpinParam;
        specialinvoke $r3.<chess.Parameters$SpinParam: void <init>(java.lang.String,boolean,int,int,int)>("rV", 0, -200, 200, 0);
        specialinvoke r0.<chess.Parameters: void addPar(chess.Parameters$ParamBase)>($r3);
        $r4 = new chess.Parameters$SpinParam;
        specialinvoke $r4.<chess.Parameters$SpinParam: void <init>(java.lang.String,boolean,int,int,int)>("bV", 0, -200, 200, 0);
        specialinvoke r0.<chess.Parameters: void addPar(chess.Parameters$ParamBase)>($r4);
        $r5 = new chess.Parameters$SpinParam;
        specialinvoke $r5.<chess.Parameters$SpinParam: void <init>(java.lang.String,boolean,int,int,int)>("nV", 0, -200, 200, 0);
        specialinvoke r0.<chess.Parameters: void addPar(chess.Parameters$ParamBase)>($r5);
        $r6 = new chess.Parameters$SpinParam;
        specialinvoke $r6.<chess.Parameters$SpinParam: void <init>(java.lang.String,boolean,int,int,int)>("pV", 0, -200, 200, 0);
        specialinvoke r0.<chess.Parameters: void addPar(chess.Parameters$ParamBase)>($r6);
        return;
    }

    private final void addPar(chess.Parameters$ParamBase)
    {
        chess.Parameters r0;
        chess.Parameters$ParamBase r1;
        java.util.Map $r2;
        java.lang.String $r3, $r4;

        r0 := @this: chess.Parameters;
        r1 := @parameter0: chess.Parameters$ParamBase;
        $r2 = r0.<chess.Parameters: java.util.Map params>;
        $r3 = r1.<chess.Parameters$ParamBase: java.lang.String name>;
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);
        return;
    }

    final boolean getBooleanPar(java.lang.String)
    {
        chess.Parameters r0;
        java.lang.String r1, $r3;
        java.util.Map $r2;
        java.lang.Object $r4;
        chess.Parameters$CheckParam $r5;
        boolean $z0;

        r0 := @this: chess.Parameters;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<chess.Parameters: java.util.Map params>;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);
        $r5 = (chess.Parameters$CheckParam) $r4;
        $z0 = $r5.<chess.Parameters$CheckParam: boolean value>;
        return $z0;
    }

    final int getIntPar(java.lang.String)
    {
        chess.Parameters r0;
        java.lang.String r1, $r3;
        int i0;
        java.util.Map $r2;
        java.lang.Object $r4;
        chess.Parameters$SpinParam $r5;

        r0 := @this: chess.Parameters;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<chess.Parameters: java.util.Map params>;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);
        $r5 = (chess.Parameters$SpinParam) $r4;
        i0 = $r5.<chess.Parameters$SpinParam: int value>;
        return i0;
    }

    final java.lang.String getStringPar(java.lang.String)
    {
        chess.Parameters r0;
        java.lang.String r1, $r3, $r6;
        java.util.Map $r2;
        java.lang.Object $r4;
        chess.Parameters$StringParam $r5;

        r0 := @this: chess.Parameters;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<chess.Parameters: java.util.Map params>;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);
        $r5 = (chess.Parameters$StringParam) $r4;
        $r6 = $r5.<chess.Parameters$StringParam: java.lang.String value>;
        return $r6;
    }

    public final void set(java.lang.String, java.lang.String)
    {
        chess.Parameters r0;
        java.lang.String r1, r2, r5, $r7, $r11, $r12, $r18, $r19;
        chess.Parameters$ParamBase r3;
        chess.Parameters$CheckParam r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.Map $r6;
        java.lang.Object $r8;
        int[] $r9;
        chess.Parameters$Type $r10;
        boolean $z0, $z1, $z2;
        chess.Parameters$SpinParam r13;
        java.lang.NumberFormatException $r14, r15;
        chess.Parameters$ComboParam r16;
        java.lang.String[] r17;
        chess.Parameters$StringParam r20;

        r0 := @this: chess.Parameters;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r6 = r0.<chess.Parameters: java.util.Map params>;
        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);
        r3 = (chess.Parameters$ParamBase) $r8;
        if r3 != null goto label0;

        return;

     label0:
        $r9 = <chess.Parameters$1: int[] $SwitchMap$chess$Parameters$Type>;
        $r10 = r3.<chess.Parameters$ParamBase: chess.Parameters$Type type>;
        $i3 = virtualinvoke $r10.<chess.Parameters$Type: int ordinal()>();
        $i4 = $r9[$i3];
        tableswitch($i4)
        {
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label7;
            case 4: goto label11;
            case 5: goto label12;
            default: goto label13;
        };

     label1:
        r4 = (chess.Parameters$CheckParam) r3;
        $r11 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("true");
        if $z0 == 0 goto label2;

        r4.<chess.Parameters$CheckParam: boolean value> = 1;
        goto label13;

     label2:
        $r12 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("false");
        if $z1 == 0 goto label13;

        r4.<chess.Parameters$CheckParam: boolean value> = 0;
        goto label13;

     label3:
        r13 = (chess.Parameters$SpinParam) r3;

     label4:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
        $i5 = r13.<chess.Parameters$SpinParam: int minValue>;
        if i0 < $i5 goto label5;

        $i6 = r13.<chess.Parameters$SpinParam: int maxValue>;
        if i0 > $i6 goto label5;

        r13.<chess.Parameters$SpinParam: int value> = i0;

     label5:
        goto label13;

     label6:
        $r14 := @caughtexception;
        r15 = $r14;
        goto label13;

     label7:
        r16 = (chess.Parameters$ComboParam) r3;
        r17 = r16.<chess.Parameters$ComboParam: java.lang.String[] allowedValues>;
        i1 = lengthof r17;
        i2 = 0;

     label8:
        if i2 >= i1 goto label10;

        r5 = r17[i2];
        $r18 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase()>();
        $r19 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);
        if $z2 == 0 goto label9;

        r16.<chess.Parameters$ComboParam: java.lang.String value> = r5;
        goto label10;

     label9:
        i2 = i2 + 1;
        goto label8;

     label10:
        goto label13;

     label11:
        goto label13;

     label12:
        r20 = (chess.Parameters$StringParam) r3;
        r20.<chess.Parameters$StringParam: java.lang.String value> = r2;
        goto label13;

     label13:
        return;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    static void <clinit>()
    {
        chess.Parameters $r0;

        $r0 = new chess.Parameters;
        specialinvoke $r0.<chess.Parameters: void <init>()>();
        <chess.Parameters: chess.Parameters inst> = $r0;
        return;
    }
}
public class chess.Piece extends java.lang.Object
{
    public static final int EMPTY;
    public static final int WKING;
    public static final int WQUEEN;
    public static final int WROOK;
    public static final int WBISHOP;
    public static final int WKNIGHT;
    public static final int WPAWN;
    public static final int BKING;
    public static final int BQUEEN;
    public static final int BROOK;
    public static final int BBISHOP;
    public static final int BKNIGHT;
    public static final int BPAWN;
    public static final int nPieceTypes;

    public void <init>()
    {
        chess.Piece r0;

        r0 := @this: chess.Piece;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static final boolean isWhite(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;
        if i0 >= 7 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static final int makeWhite(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;
        if i0 >= 7 goto label0;

        $i1 = i0;
        goto label1;

     label0:
        $i1 = i0 - 6;

     label1:
        return $i1;
    }

    public static final int makeBlack(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;
        if i0 <= 0 goto label0;

        if i0 >= 7 goto label0;

        $i1 = i0 + 6;
        goto label1;

     label0:
        $i1 = i0;

     label1:
        return $i1;
    }
}
public interface  chess.Player extends java.lang.Object
{

    public abstract java.lang.String getCommand(chess.Position, boolean, java.util.List);

    public abstract boolean isHumanPlayer();

    public abstract void useBook(boolean);

    public abstract void timeLimit(int, int, boolean);

    public abstract void clearTT();
}
public class chess.Position extends java.lang.Object
{
    public int[] squares;
    public long[] pieceTypeBB;
    public long whiteBB;
    public long blackBB;
    public short[] psScore1;
    public short[] psScore2;
    public boolean whiteMove;
    public static final int A1_CASTLE;
    public static final int H1_CASTLE;
    public static final int A8_CASTLE;
    public static final int H8_CASTLE;
    private int castleMask;
    private int epSquare;
    int halfMoveClock;
    public int fullMoveCounter;
    private long hashKey;
    private long pHashKey;
    public int wKingSq;
    public int bKingSq;
    public int wMtrl;
    public int bMtrl;
    public int wMtrlPawns;
    public int bMtrlPawns;
    static final long[][] psHashKeys;
    private static final long whiteHashKey;
    private static final long[] castleHashKeys;
    private static final long[] epHashKeys;
    private static final long[] moveCntKeys;

    public void <init>()
    {
        chess.Position r0;
        int i0, i2;
        long $l1, $l3;
        int[] $r1, $r2;
        long[] $r3, $r6;
        short[] $r4, $r5, $r7, $r8;
        byte $b4, $b6;
        short $s5;

        r0 := @this: chess.Position;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (int)[64];
        r0.<chess.Position: int[] squares> = $r1;
        i0 = 0;

     label0:
        if i0 >= 64 goto label1;

        $r2 = r0.<chess.Position: int[] squares>;
        $r2[i0] = 0;
        i0 = i0 + 1;
        goto label0;

     label1:
        $r3 = newarray (long)[13];
        r0.<chess.Position: long[] pieceTypeBB> = $r3;
        $r4 = newarray (short)[13];
        r0.<chess.Position: short[] psScore1> = $r4;
        $r5 = newarray (short)[13];
        r0.<chess.Position: short[] psScore2> = $r5;
        i2 = 0;

     label2:
        if i2 >= 13 goto label3;

        $r6 = r0.<chess.Position: long[] pieceTypeBB>;
        $r6[i2] = 0L;
        $r7 = r0.<chess.Position: short[] psScore1>;
        $r7[i2] = 0;
        $r8 = r0.<chess.Position: short[] psScore2>;
        $r8[i2] = 0;
        i2 = i2 + 1;
        goto label2;

     label3:
        $l1 = 0L;
        r0.<chess.Position: long blackBB> = $l1;
        r0.<chess.Position: long whiteBB> = $l1;
        r0.<chess.Position: boolean whiteMove> = 1;
        r0.<chess.Position: int castleMask> = 0;
        r0.<chess.Position: int epSquare> = -1;
        r0.<chess.Position: int halfMoveClock> = 0;
        r0.<chess.Position: int fullMoveCounter> = 1;
        $l3 = virtualinvoke r0.<chess.Position: long computeZobristHash()>();
        r0.<chess.Position: long hashKey> = $l3;
        $b4 = -1;
        r0.<chess.Position: int bKingSq> = $b4;
        r0.<chess.Position: int wKingSq> = $b4;
        $s5 = -9900;
        r0.<chess.Position: int bMtrl> = $s5;
        r0.<chess.Position: int wMtrl> = $s5;
        $b6 = 0;
        r0.<chess.Position: int bMtrlPawns> = $b6;
        r0.<chess.Position: int wMtrlPawns> = $b6;
        return;
    }

    public void <init>(chess.Position)
    {
        chess.Position r0, r1;
        int i0, $i1, i2, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19;
        int[] $r2, $r3, $r4;
        long[] $r5, $r8, $r9;
        short[] $r6, $r7, $r10, $r11, $r12, $r13;
        long $l3, $l6, $l7, $l12, $l13;
        short $s4, $s5;
        boolean $z0;

        r0 := @this: chess.Position;
        r1 := @parameter0: chess.Position;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = newarray (int)[64];
        r0.<chess.Position: int[] squares> = $r2;
        i0 = 0;

     label0:
        if i0 >= 64 goto label1;

        $r3 = r0.<chess.Position: int[] squares>;
        $r4 = r1.<chess.Position: int[] squares>;
        $i1 = $r4[i0];
        $r3[i0] = $i1;
        i0 = i0 + 1;
        goto label0;

     label1:
        $r5 = newarray (long)[13];
        r0.<chess.Position: long[] pieceTypeBB> = $r5;
        $r6 = newarray (short)[13];
        r0.<chess.Position: short[] psScore1> = $r6;
        $r7 = newarray (short)[13];
        r0.<chess.Position: short[] psScore2> = $r7;
        i2 = 0;

     label2:
        if i2 >= 13 goto label3;

        $r8 = r0.<chess.Position: long[] pieceTypeBB>;
        $r9 = r1.<chess.Position: long[] pieceTypeBB>;
        $l3 = $r9[i2];
        $r8[i2] = $l3;
        $r10 = r0.<chess.Position: short[] psScore1>;
        $r11 = r1.<chess.Position: short[] psScore1>;
        $s4 = $r11[i2];
        $r10[i2] = $s4;
        $r12 = r0.<chess.Position: short[] psScore2>;
        $r13 = r1.<chess.Position: short[] psScore2>;
        $s5 = $r13[i2];
        $r12[i2] = $s5;
        i2 = i2 + 1;
        goto label2;

     label3:
        $l6 = r1.<chess.Position: long whiteBB>;
        r0.<chess.Position: long whiteBB> = $l6;
        $l7 = r1.<chess.Position: long blackBB>;
        r0.<chess.Position: long blackBB> = $l7;
        $z0 = r1.<chess.Position: boolean whiteMove>;
        r0.<chess.Position: boolean whiteMove> = $z0;
        $i8 = r1.<chess.Position: int castleMask>;
        r0.<chess.Position: int castleMask> = $i8;
        $i9 = r1.<chess.Position: int epSquare>;
        r0.<chess.Position: int epSquare> = $i9;
        $i10 = r1.<chess.Position: int halfMoveClock>;
        r0.<chess.Position: int halfMoveClock> = $i10;
        $i11 = r1.<chess.Position: int fullMoveCounter>;
        r0.<chess.Position: int fullMoveCounter> = $i11;
        $l12 = r1.<chess.Position: long hashKey>;
        r0.<chess.Position: long hashKey> = $l12;
        $l13 = r1.<chess.Position: long pHashKey>;
        r0.<chess.Position: long pHashKey> = $l13;
        $i14 = r1.<chess.Position: int wKingSq>;
        r0.<chess.Position: int wKingSq> = $i14;
        $i15 = r1.<chess.Position: int bKingSq>;
        r0.<chess.Position: int bKingSq> = $i15;
        $i16 = r1.<chess.Position: int wMtrl>;
        r0.<chess.Position: int wMtrl> = $i16;
        $i17 = r1.<chess.Position: int bMtrl>;
        r0.<chess.Position: int bMtrl> = $i17;
        $i18 = r1.<chess.Position: int wMtrlPawns>;
        r0.<chess.Position: int wMtrlPawns> = $i18;
        $i19 = r1.<chess.Position: int bMtrlPawns>;
        r0.<chess.Position: int bMtrlPawns> = $i19;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        chess.Position r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        long $l4, $l5, $l7, $l8;
        byte $b6, $b9;

        r0 := @this: chess.Position;
        r1 := @parameter0: java.lang.Object;
        if r1 == null goto label0;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label1;

     label0:
        return 0;

     label1:
        r2 = (chess.Position) r1;
        $z0 = virtualinvoke r0.<chess.Position: boolean drawRuleEquals(chess.Position)>(r2);
        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = r0.<chess.Position: int halfMoveClock>;
        $i1 = r2.<chess.Position: int halfMoveClock>;
        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $i2 = r0.<chess.Position: int fullMoveCounter>;
        $i3 = r2.<chess.Position: int fullMoveCounter>;
        if $i2 == $i3 goto label4;

        return 0;

     label4:
        $l4 = r0.<chess.Position: long hashKey>;
        $l5 = r2.<chess.Position: long hashKey>;
        $b6 = $l4 cmp $l5;
        if $b6 == 0 goto label5;

        return 0;

     label5:
        $l7 = r0.<chess.Position: long pHashKey>;
        $l8 = r2.<chess.Position: long pHashKey>;
        $b9 = $l7 cmp $l8;
        if $b9 == 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        chess.Position r0;
        long $l0;
        int $i1;

        r0 := @this: chess.Position;
        $l0 = r0.<chess.Position: long hashKey>;
        $i1 = (int) $l0;
        return $i1;
    }

    public final long zobristHash()
    {
        chess.Position r0;
        long $l0;

        r0 := @this: chess.Position;
        $l0 = r0.<chess.Position: long hashKey>;
        return $l0;
    }

    public final long pawnZobristHash()
    {
        chess.Position r0;
        long $l0;

        r0 := @this: chess.Position;
        $l0 = r0.<chess.Position: long pHashKey>;
        return $l0;
    }

    public final long kingZobristHash()
    {
        chess.Position r0;
        long[][] $r1, $r2;
        long[] $r3, $r4;
        int $i0, $i2;
        long $l1, $l3, $l4;

        r0 := @this: chess.Position;
        $r1 = <chess.Position: long[][] psHashKeys>;
        $r3 = $r1[1];
        $i0 = r0.<chess.Position: int wKingSq>;
        $l1 = $r3[$i0];
        $r2 = <chess.Position: long[][] psHashKeys>;
        $r4 = $r2[7];
        $i2 = r0.<chess.Position: int bKingSq>;
        $l3 = $r4[$i2];
        $l4 = $l1 ^ $l3;
        return $l4;
    }

    public final long historyHash()
    {
        chess.Position r0;
        long l0, $l4;
        long[] $r1;
        int $i1, $i2, $i3;

        r0 := @this: chess.Position;
        l0 = r0.<chess.Position: long hashKey>;
        $i1 = r0.<chess.Position: int halfMoveClock>;
        if $i1 < 80 goto label0;

        $r1 = <chess.Position: long[] moveCntKeys>;
        $i2 = r0.<chess.Position: int halfMoveClock>;
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 100);
        $l4 = $r1[$i3];
        l0 = l0 ^ $l4;

     label0:
        return l0;
    }

    public final boolean drawRuleEquals(chess.Position)
    {
        chess.Position r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: chess.Position;
        r1 := @parameter0: chess.Position;
        i0 = 0;

     label0:
        if i0 >= 64 goto label2;

        $r2 = r0.<chess.Position: int[] squares>;
        $i1 = $r2[i0];
        $r3 = r1.<chess.Position: int[] squares>;
        $i2 = $r3[i0];
        if $i1 == $i2 goto label1;

        return 0;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        $z0 = r0.<chess.Position: boolean whiteMove>;
        $z1 = r1.<chess.Position: boolean whiteMove>;
        if $z0 == $z1 goto label3;

        return 0;

     label3:
        $i3 = r0.<chess.Position: int castleMask>;
        $i4 = r1.<chess.Position: int castleMask>;
        if $i3 == $i4 goto label4;

        return 0;

     label4:
        $i5 = r0.<chess.Position: int epSquare>;
        $i6 = r1.<chess.Position: int epSquare>;
        if $i5 == $i6 goto label5;

        return 0;

     label5:
        return 1;
    }

    public final void setWhiteMove(boolean)
    {
        chess.Position r0;
        boolean z0, $z1;
        long $l0, $l1, $l2;

        r0 := @this: chess.Position;
        z0 := @parameter0: boolean;
        $z1 = r0.<chess.Position: boolean whiteMove>;
        if z0 == $z1 goto label0;

        $l1 = r0.<chess.Position: long hashKey>;
        $l0 = <chess.Position: long whiteHashKey>;
        $l2 = $l1 ^ $l0;
        r0.<chess.Position: long hashKey> = $l2;
        r0.<chess.Position: boolean whiteMove> = z0;

     label0:
        return;
    }

    public static final int getSquare(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i2 = i1 * 8;
        $i3 = $i2 + i0;
        return $i3;
    }

    public static final int getX(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;
        $i1 = i0 & 7;
        return $i1;
    }

    public static final int getY(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;
        $i1 = i0 >> 3;
        return $i1;
    }

    public static final boolean darkSquare(int, int)
    {
        int i0, i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i2 = i0 & 1;
        $i3 = i1 & 1;
        if $i2 != $i3 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final int getPiece(int)
    {
        chess.Position r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: chess.Position;
        i0 := @parameter0: int;
        $r1 = r0.<chess.Position: int[] squares>;
        $i1 = $r1[i0];
        return $i1;
    }

    private final void movePieceNotPawn(int, int)
    {
        chess.Position r0;
        int i0, i1, i2, $i36, $i37, $i38, $i39, $i43, $i44, $i45, $i46;
        long[][] $r1, $r6, $r9, $r12;
        long l3, l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l18, $l19, $l20, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33;
        int[] $r2, $r14, $r15, $r24, $r26, $r29, $r31;
        long[] $r4, $r7, $r10, $r13, $r16, $r17;
        boolean $z0;
        short[] $r22, $r27;
        short $s35, $s40, $s42, $s47;
        int[][] $r23, $r25, $r28, $r30;

        r0 := @this: chess.Position;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r2 = r0.<chess.Position: int[] squares>;
        i2 = $r2[i0];
        $l5 = r0.<chess.Position: long hashKey>;
        $r1 = <chess.Position: long[][] psHashKeys>;
        $r4 = $r1[i2];
        $l6 = $r4[i0];
        $l7 = $l5 ^ $l6;
        r0.<chess.Position: long hashKey> = $l7;
        $l8 = r0.<chess.Position: long hashKey>;
        $r6 = <chess.Position: long[][] psHashKeys>;
        $r7 = $r6[i2];
        $l9 = $r7[i1];
        $l10 = $l8 ^ $l9;
        r0.<chess.Position: long hashKey> = $l10;
        $l11 = r0.<chess.Position: long hashKey>;
        $r9 = <chess.Position: long[][] psHashKeys>;
        $r10 = $r9[0];
        $l12 = $r10[i0];
        $l13 = $l11 ^ $l12;
        r0.<chess.Position: long hashKey> = $l13;
        $l14 = r0.<chess.Position: long hashKey>;
        $r12 = <chess.Position: long[][] psHashKeys>;
        $r13 = $r12[0];
        $l15 = $r13[i1];
        $l16 = $l14 ^ $l15;
        r0.<chess.Position: long hashKey> = $l16;
        $r14 = r0.<chess.Position: int[] squares>;
        $r14[i0] = 0;
        $r15 = r0.<chess.Position: int[] squares>;
        $r15[i1] = i2;
        l3 = 1L << i0;
        l4 = 1L << i1;
        $r16 = r0.<chess.Position: long[] pieceTypeBB>;
        $l18 = $r16[i2];
        $l19 = l3 ^ -1L;
        $l20 = $l18 & $l19;
        $r16[i2] = $l20;
        $r17 = r0.<chess.Position: long[] pieceTypeBB>;
        $l22 = $r17[i2];
        $l23 = $l22 | l4;
        $r17[i2] = $l23;
        $z0 = staticinvoke <chess.Piece: boolean isWhite(int)>(i2);
        if $z0 == 0 goto label0;

        $l24 = r0.<chess.Position: long whiteBB>;
        $l25 = l3 ^ -1L;
        $l26 = $l24 & $l25;
        r0.<chess.Position: long whiteBB> = $l26;
        $l27 = r0.<chess.Position: long whiteBB>;
        $l28 = $l27 | l4;
        r0.<chess.Position: long whiteBB> = $l28;
        if i2 != 1 goto label1;

        r0.<chess.Position: int wKingSq> = i1;
        goto label1;

     label0:
        $l29 = r0.<chess.Position: long blackBB>;
        $l30 = l3 ^ -1L;
        $l31 = $l29 & $l30;
        r0.<chess.Position: long blackBB> = $l31;
        $l32 = r0.<chess.Position: long blackBB>;
        $l33 = $l32 | l4;
        r0.<chess.Position: long blackBB> = $l33;
        if i2 != 7 goto label1;

        r0.<chess.Position: int bKingSq> = i1;

     label1:
        $r22 = r0.<chess.Position: short[] psScore1>;
        $s35 = $r22[i2];
        $r23 = <chess.Evaluate: int[][] psTab1>;
        $r24 = $r23[i2];
        $i36 = $r24[i1];
        $r25 = <chess.Evaluate: int[][] psTab1>;
        $r26 = $r25[i2];
        $i37 = $r26[i0];
        $i38 = $i36 - $i37;
        $i39 = $s35 + $i38;
        $s40 = (short) $i39;
        $r22[i2] = $s40;
        $r27 = r0.<chess.Position: short[] psScore2>;
        $s42 = $r27[i2];
        $r28 = <chess.Evaluate: int[][] psTab2>;
        $r29 = $r28[i2];
        $i43 = $r29[i1];
        $r30 = <chess.Evaluate: int[][] psTab2>;
        $r31 = $r30[i2];
        $i44 = $r31[i0];
        $i45 = $i43 - $i44;
        $i46 = $s42 + $i45;
        $s47 = (short) $i46;
        $r27[i2] = $s47;
        return;
    }

    public final void setPiece(int, int)
    {
        chess.Position r0;
        int i0, i1, i2, i4, $i18, $i19, $i23, $i24, $i28, $i29, $i33, $i34, i38, $i39, $i40, $i43, $i44, $i48, $i49, $i52, $i53, $i59, $i60, $i64, $i65, $i69, $i70, $i74, $i75;
        long[][] $r1, $r7, $r16, $r22, $r29, $r35;
        long l3, $l5, $l6, $l7, $l8, $l9, $l10, $l12, $l13, $l14, $l16, $l17, $l20, $l21, $l22, $l25, $l26, $l27, $l30, $l31, $l32, $l35, $l36, $l37, $l41, $l42, $l45, $l46, $l47, $l50, $l51, $l54, $l55, $l56;
        int[] $r2, $r3, $r11, $r24, $r39, $r42, $r45, $r48;
        long[] $r5, $r8, $r9, $r10, $r17, $r23, $r30, $r36;
        boolean $z0, $z1;
        short[] $r37, $r40, $r43, $r46;
        short $s58, $s61, $s63, $s66, $s68, $s71, $s73, $s76;
        int[][] $r38, $r41, $r44, $r47;

        r0 := @this: chess.Position;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r2 = r0.<chess.Position: int[] squares>;
        i2 = $r2[i0];
        $r3 = r0.<chess.Position: int[] squares>;
        $r3[i0] = i1;
        $l5 = r0.<chess.Position: long hashKey>;
        $r1 = <chess.Position: long[][] psHashKeys>;
        $r5 = $r1[i2];
        $l6 = $r5[i0];
        $l7 = $l5 ^ $l6;
        r0.<chess.Position: long hashKey> = $l7;
        $l8 = r0.<chess.Position: long hashKey>;
        $r7 = <chess.Position: long[][] psHashKeys>;
        $r8 = $r7[i1];
        $l9 = $r8[i0];
        $l10 = $l8 ^ $l9;
        r0.<chess.Position: long hashKey> = $l10;
        l3 = 1L << i0;
        $r9 = r0.<chess.Position: long[] pieceTypeBB>;
        $l12 = $r9[i2];
        $l13 = l3 ^ -1L;
        $l14 = $l12 & $l13;
        $r9[i2] = $l14;
        $r10 = r0.<chess.Position: long[] pieceTypeBB>;
        $l16 = $r10[i1];
        $l17 = $l16 | l3;
        $r10[i1] = $l17;
        if i2 == 0 goto label1;

        $r11 = <chess.Evaluate: int[] pieceValue>;
        i4 = $r11[i2];
        $z0 = staticinvoke <chess.Piece: boolean isWhite(int)>(i2);
        if $z0 == 0 goto label0;

        $i18 = r0.<chess.Position: int wMtrl>;
        $i19 = $i18 - i4;
        r0.<chess.Position: int wMtrl> = $i19;
        $l20 = r0.<chess.Position: long whiteBB>;
        $l21 = l3 ^ -1L;
        $l22 = $l20 & $l21;
        r0.<chess.Position: long whiteBB> = $l22;
        if i2 != 6 goto label1;

        $i23 = r0.<chess.Position: int wMtrlPawns>;
        $i24 = $i23 - i4;
        r0.<chess.Position: int wMtrlPawns> = $i24;
        $l25 = r0.<chess.Position: long pHashKey>;
        $r16 = <chess.Position: long[][] psHashKeys>;
        $r17 = $r16[6];
        $l26 = $r17[i0];
        $l27 = $l25 ^ $l26;
        r0.<chess.Position: long pHashKey> = $l27;
        goto label1;

     label0:
        $i28 = r0.<chess.Position: int bMtrl>;
        $i29 = $i28 - i4;
        r0.<chess.Position: int bMtrl> = $i29;
        $l30 = r0.<chess.Position: long blackBB>;
        $l31 = l3 ^ -1L;
        $l32 = $l30 & $l31;
        r0.<chess.Position: long blackBB> = $l32;
        if i2 != 12 goto label1;

        $i33 = r0.<chess.Position: int bMtrlPawns>;
        $i34 = $i33 - i4;
        r0.<chess.Position: int bMtrlPawns> = $i34;
        $l35 = r0.<chess.Position: long pHashKey>;
        $r22 = <chess.Position: long[][] psHashKeys>;
        $r23 = $r22[12];
        $l36 = $r23[i0];
        $l37 = $l35 ^ $l36;
        r0.<chess.Position: long pHashKey> = $l37;

     label1:
        if i1 == 0 goto label5;

        $r24 = <chess.Evaluate: int[] pieceValue>;
        i38 = $r24[i1];
        $z1 = staticinvoke <chess.Piece: boolean isWhite(int)>(i1);
        if $z1 == 0 goto label3;

        $i39 = r0.<chess.Position: int wMtrl>;
        $i40 = $i39 + i38;
        r0.<chess.Position: int wMtrl> = $i40;
        $l41 = r0.<chess.Position: long whiteBB>;
        $l42 = $l41 | l3;
        r0.<chess.Position: long whiteBB> = $l42;
        if i1 != 6 goto label2;

        $i43 = r0.<chess.Position: int wMtrlPawns>;
        $i44 = $i43 + i38;
        r0.<chess.Position: int wMtrlPawns> = $i44;
        $l45 = r0.<chess.Position: long pHashKey>;
        $r29 = <chess.Position: long[][] psHashKeys>;
        $r30 = $r29[6];
        $l46 = $r30[i0];
        $l47 = $l45 ^ $l46;
        r0.<chess.Position: long pHashKey> = $l47;

     label2:
        if i1 != 1 goto label5;

        r0.<chess.Position: int wKingSq> = i0;
        goto label5;

     label3:
        $i48 = r0.<chess.Position: int bMtrl>;
        $i49 = $i48 + i38;
        r0.<chess.Position: int bMtrl> = $i49;
        $l50 = r0.<chess.Position: long blackBB>;
        $l51 = $l50 | l3;
        r0.<chess.Position: long blackBB> = $l51;
        if i1 != 12 goto label4;

        $i52 = r0.<chess.Position: int bMtrlPawns>;
        $i53 = $i52 + i38;
        r0.<chess.Position: int bMtrlPawns> = $i53;
        $l54 = r0.<chess.Position: long pHashKey>;
        $r35 = <chess.Position: long[][] psHashKeys>;
        $r36 = $r35[12];
        $l55 = $r36[i0];
        $l56 = $l54 ^ $l55;
        r0.<chess.Position: long pHashKey> = $l56;

     label4:
        if i1 != 7 goto label5;

        r0.<chess.Position: int bKingSq> = i0;

     label5:
        $r37 = r0.<chess.Position: short[] psScore1>;
        $s58 = $r37[i2];
        $r38 = <chess.Evaluate: int[][] psTab1>;
        $r39 = $r38[i2];
        $i59 = $r39[i0];
        $i60 = $s58 - $i59;
        $s61 = (short) $i60;
        $r37[i2] = $s61;
        $r40 = r0.<chess.Position: short[] psScore2>;
        $s63 = $r40[i2];
        $r41 = <chess.Evaluate: int[][] psTab2>;
        $r42 = $r41[i2];
        $i64 = $r42[i0];
        $i65 = $s63 - $i64;
        $s66 = (short) $i65;
        $r40[i2] = $s66;
        $r43 = r0.<chess.Position: short[] psScore1>;
        $s68 = $r43[i1];
        $r44 = <chess.Evaluate: int[][] psTab1>;
        $r45 = $r44[i1];
        $i69 = $r45[i0];
        $i70 = $s68 + $i69;
        $s71 = (short) $i70;
        $r43[i1] = $s71;
        $r46 = r0.<chess.Position: short[] psScore2>;
        $s73 = $r46[i1];
        $r47 = <chess.Evaluate: int[][] psTab2>;
        $r48 = $r47[i1];
        $i74 = $r48[i0];
        $i75 = $s73 + $i74;
        $s76 = (short) $i75;
        $r46[i1] = $s76;
        return;
    }

    public final void setSEEPiece(int, int)
    {
        chess.Position r0;
        int i0, i1, i2;
        long l3, $l5, $l6, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20;
        int[] $r1, $r2;
        long[] $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: chess.Position;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r1 = r0.<chess.Position: int[] squares>;
        i2 = $r1[i0];
        $r2 = r0.<chess.Position: int[] squares>;
        $r2[i0] = i1;
        l3 = 1L << i0;
        $r3 = r0.<chess.Position: long[] pieceTypeBB>;
        $l5 = $r3[i2];
        $l6 = l3 ^ -1L;
        $l7 = $l5 & $l6;
        $r3[i2] = $l7;
        $r4 = r0.<chess.Position: long[] pieceTypeBB>;
        $l9 = $r4[i1];
        $l10 = $l9 | l3;
        $r4[i1] = $l10;
        if i2 == 0 goto label1;

        $z0 = staticinvoke <chess.Piece: boolean isWhite(int)>(i2);
        if $z0 == 0 goto label0;

        $l11 = r0.<chess.Position: long whiteBB>;
        $l12 = l3 ^ -1L;
        $l13 = $l11 & $l12;
        r0.<chess.Position: long whiteBB> = $l13;
        goto label1;

     label0:
        $l14 = r0.<chess.Position: long blackBB>;
        $l15 = l3 ^ -1L;
        $l16 = $l14 & $l15;
        r0.<chess.Position: long blackBB> = $l16;

     label1:
        if i1 == 0 goto label3;

        $z1 = staticinvoke <chess.Piece: boolean isWhite(int)>(i1);
        if $z1 == 0 goto label2;

        $l17 = r0.<chess.Position: long whiteBB>;
        $l18 = $l17 | l3;
        r0.<chess.Position: long whiteBB> = $l18;
        goto label3;

     label2:
        $l19 = r0.<chess.Position: long blackBB>;
        $l20 = $l19 | l3;
        r0.<chess.Position: long blackBB> = $l20;

     label3:
        return;
    }

    public final boolean a1Castle()
    {
        chess.Position r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: chess.Position;
        $i0 = r0.<chess.Position: int castleMask>;
        $i1 = $i0 & 1;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean h1Castle()
    {
        chess.Position r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: chess.Position;
        $i0 = r0.<chess.Position: int castleMask>;
        $i1 = $i0 & 2;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean a8Castle()
    {
        chess.Position r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: chess.Position;
        $i0 = r0.<chess.Position: int castleMask>;
        $i1 = $i0 & 4;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean h8Castle()
    {
        chess.Position r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: chess.Position;
        $i0 = r0.<chess.Position: int castleMask>;
        $i1 = $i0 & 8;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final int getCastleMask()
    {
        chess.Position r0;
        int $i0;

        r0 := @this: chess.Position;
        $i0 = r0.<chess.Position: int castleMask>;
        return $i0;
    }

    public final void setCastleMask(int)
    {
        chess.Position r0;
        int i0, $i2;
        long[] $r2, $r4;
        long $l1, $l3, $l4, $l5, $l6, $l7;

        r0 := @this: chess.Position;
        i0 := @parameter0: int;
        $l1 = r0.<chess.Position: long hashKey>;
        $r2 = <chess.Position: long[] castleHashKeys>;
        $i2 = r0.<chess.Position: int castleMask>;
        $l3 = $r2[$i2];
        $l4 = $l1 ^ $l3;
        r0.<chess.Position: long hashKey> = $l4;
        $l5 = r0.<chess.Position: long hashKey>;
        $r4 = <chess.Position: long[] castleHashKeys>;
        $l6 = $r4[i0];
        $l7 = $l5 ^ $l6;
        r0.<chess.Position: long hashKey> = $l7;
        r0.<chess.Position: int castleMask> = i0;
        return;
    }

    public final int getEpSquare()
    {
        chess.Position r0;
        int $i0;

        r0 := @this: chess.Position;
        $i0 = r0.<chess.Position: int epSquare>;
        return $i0;
    }

    public final void setEpSquare(int)
    {
        chess.Position r0;
        int i0, $i1, $i3, $i4, $i5, $i6, $i10, $i11;
        long[] $r1, $r4;
        long $l2, $l7, $l8, $l9, $l12, $l13;

        r0 := @this: chess.Position;
        i0 := @parameter0: int;
        $i1 = r0.<chess.Position: int epSquare>;
        if $i1 == i0 goto label4;

        $l2 = r0.<chess.Position: long hashKey>;
        $r1 = <chess.Position: long[] epHashKeys>;
        $i3 = r0.<chess.Position: int epSquare>;
        if $i3 < 0 goto label0;

        $i4 = r0.<chess.Position: int epSquare>;
        $i5 = staticinvoke <chess.Position: int getX(int)>($i4);
        $i6 = $i5 + 1;
        goto label1;

     label0:
        $i6 = 0;

     label1:
        $l7 = $r1[$i6];
        $l8 = $l2 ^ $l7;
        r0.<chess.Position: long hashKey> = $l8;
        $l9 = r0.<chess.Position: long hashKey>;
        $r4 = <chess.Position: long[] epHashKeys>;
        if i0 < 0 goto label2;

        $i10 = staticinvoke <chess.Position: int getX(int)>(i0);
        $i11 = $i10 + 1;
        goto label3;

     label2:
        $i11 = 0;

     label3:
        $l12 = $r4[$i11];
        $l13 = $l9 ^ $l12;
        r0.<chess.Position: long hashKey> = $l13;
        r0.<chess.Position: int epSquare> = i0;

     label4:
        return;
    }

    public final int getKingSq(boolean)
    {
        chess.Position r0;
        boolean z0;
        int $i0;

        r0 := @this: chess.Position;
        z0 := @parameter0: boolean;
        if z0 == 0 goto label0;

        $i0 = r0.<chess.Position: int wKingSq>;
        goto label1;

     label0:
        $i0 = r0.<chess.Position: int bKingSq>;

     label1:
        return $i0;
    }

    public final void makeMove(chess.Move, chess.UndoInfo)
    {
        chess.Position r0;
        chess.Move r1;
        chess.UndoInfo r2;
        boolean z0, $z1;
        int i0, i1, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i95, $i96, $i100, $i101, $i102, $i105, $i106, $i110;
        long l2, $l13, $l14, $l15, $l16, $l49, $l50, $l51, $l52, $l69, $l70, $l71, $l72, $l93, $l97, $l98, $l103, $l107, $l108, $l111, $l112, $l113;
        int[] $r3, $r4, $r5, $r8, $r9, $r10, $r11;
        long[] $r6, $r7, $r12, $r13, $r15, $r16;
        byte $b17, $b53, $b73, $b94, $b99, $b104, $b109;

        r0 := @this: chess.Position;
        r1 := @parameter0: chess.Move;
        r2 := @parameter1: chess.UndoInfo;
        $r3 = r0.<chess.Position: int[] squares>;
        $i5 = r1.<chess.Move: int 'to'>;
        $i6 = $r3[$i5];
        r2.<chess.UndoInfo: int capturedPiece> = $i6;
        $i7 = r0.<chess.Position: int castleMask>;
        r2.<chess.UndoInfo: int castleMask> = $i7;
        $i8 = r0.<chess.Position: int epSquare>;
        r2.<chess.UndoInfo: int epSquare> = $i8;
        $i9 = r0.<chess.Position: int halfMoveClock>;
        r2.<chess.UndoInfo: int halfMoveClock> = $i9;
        z0 = r0.<chess.Position: boolean whiteMove>;
        $r4 = r0.<chess.Position: int[] squares>;
        $i10 = r1.<chess.Move: int 'from'>;
        i0 = $r4[$i10];
        $r5 = r0.<chess.Position: int[] squares>;
        $i11 = r1.<chess.Move: int 'to'>;
        i1 = $r5[$i11];
        $i12 = r1.<chess.Move: int 'from'>;
        l2 = 1L << $i12;
        i3 = r0.<chess.Position: int epSquare>;
        virtualinvoke r0.<chess.Position: void setEpSquare(int)>(-1);
        if i1 != 0 goto label0;

        $r6 = r0.<chess.Position: long[] pieceTypeBB>;
        $l13 = $r6[6];
        $r7 = r0.<chess.Position: long[] pieceTypeBB>;
        $l14 = $r7[12];
        $l15 = $l13 | $l14;
        $l16 = $l15 & l2;
        $b17 = $l16 cmp 0L;
        if $b17 == 0 goto label14;

     label0:
        r0.<chess.Position: int halfMoveClock> = 0;
        if i0 != 6 goto label5;

        $i18 = r1.<chess.Move: int 'to'>;
        $i19 = r1.<chess.Move: int 'from'>;
        $i20 = $i18 - $i19;
        if $i20 != 16 goto label4;

        $i21 = r1.<chess.Move: int 'to'>;
        i4 = staticinvoke <chess.Position: int getX(int)>($i21);
        if i4 <= 0 goto label1;

        $r8 = r0.<chess.Position: int[] squares>;
        $i22 = r1.<chess.Move: int 'to'>;
        $i23 = $i22 - 1;
        $i24 = $r8[$i23];
        if $i24 == 12 goto label2;

     label1:
        if i4 >= 7 goto label3;

        $r9 = r0.<chess.Position: int[] squares>;
        $i25 = r1.<chess.Move: int 'to'>;
        $i26 = $i25 + 1;
        $i27 = $r9[$i26];
        if $i27 != 12 goto label3;

     label2:
        $i28 = r1.<chess.Move: int 'from'>;
        $i29 = $i28 + 8;
        virtualinvoke r0.<chess.Position: void setEpSquare(int)>($i29);

     label3:
        goto label10;

     label4:
        $i30 = r1.<chess.Move: int 'to'>;
        if $i30 != i3 goto label10;

        $i31 = r1.<chess.Move: int 'to'>;
        $i32 = $i31 - 8;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i32, 0);
        goto label10;

     label5:
        if i0 != 12 goto label10;

        $i33 = r1.<chess.Move: int 'to'>;
        $i34 = r1.<chess.Move: int 'from'>;
        $i35 = $i33 - $i34;
        if $i35 != -16 goto label9;

        $i36 = r1.<chess.Move: int 'to'>;
        i37 = staticinvoke <chess.Position: int getX(int)>($i36);
        if i37 <= 0 goto label6;

        $r10 = r0.<chess.Position: int[] squares>;
        $i38 = r1.<chess.Move: int 'to'>;
        $i39 = $i38 - 1;
        $i40 = $r10[$i39];
        if $i40 == 6 goto label7;

     label6:
        if i37 >= 7 goto label8;

        $r11 = r0.<chess.Position: int[] squares>;
        $i41 = r1.<chess.Move: int 'to'>;
        $i42 = $i41 + 1;
        $i43 = $r11[$i42];
        if $i43 != 6 goto label8;

     label7:
        $i44 = r1.<chess.Move: int 'from'>;
        $i45 = $i44 - 8;
        virtualinvoke r0.<chess.Position: void setEpSquare(int)>($i45);

     label8:
        goto label10;

     label9:
        $i46 = r1.<chess.Move: int 'to'>;
        if $i46 != i3 goto label10;

        $i47 = r1.<chess.Move: int 'to'>;
        $i48 = $i47 + 8;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i48, 0);

     label10:
        $r12 = r0.<chess.Position: long[] pieceTypeBB>;
        $l49 = $r12[1];
        $r13 = r0.<chess.Position: long[] pieceTypeBB>;
        $l50 = $r13[7];
        $l51 = $l49 | $l50;
        $l52 = $l51 & l2;
        $b53 = $l52 cmp 0L;
        if $b53 == 0 goto label12;

        if z0 == 0 goto label11;

        $i54 = r0.<chess.Position: int castleMask>;
        $i55 = $i54 & -2;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i55);
        $i56 = r0.<chess.Position: int castleMask>;
        $i57 = $i56 & -3;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i57);
        goto label12;

     label11:
        $i58 = r0.<chess.Position: int castleMask>;
        $i59 = $i58 & -5;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i59);
        $i60 = r0.<chess.Position: int castleMask>;
        $i61 = $i60 & -9;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i61);

     label12:
        $i62 = r1.<chess.Move: int 'from'>;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i62, 0);
        $i63 = r1.<chess.Move: int promoteTo>;
        if $i63 == 0 goto label13;

        $i64 = r1.<chess.Move: int 'to'>;
        $i65 = r1.<chess.Move: int promoteTo>;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i64, $i65);
        goto label19;

     label13:
        $i66 = r1.<chess.Move: int 'to'>;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i66, i0);
        goto label19;

     label14:
        $i67 = r0.<chess.Position: int halfMoveClock>;
        $i68 = $i67 + 1;
        r0.<chess.Position: int halfMoveClock> = $i68;
        $r15 = r0.<chess.Position: long[] pieceTypeBB>;
        $l69 = $r15[1];
        $r16 = r0.<chess.Position: long[] pieceTypeBB>;
        $l70 = $r16[7];
        $l71 = $l69 | $l70;
        $l72 = $l71 & l2;
        $b73 = $l72 cmp 0L;
        if $b73 == 0 goto label18;

        i74 = r1.<chess.Move: int 'from'>;
        $i75 = r1.<chess.Move: int 'to'>;
        $i76 = i74 + 2;
        if $i75 != $i76 goto label15;

        $i77 = i74 + 3;
        $i78 = i74 + 1;
        specialinvoke r0.<chess.Position: void movePieceNotPawn(int,int)>($i77, $i78);
        goto label16;

     label15:
        $i79 = r1.<chess.Move: int 'to'>;
        $i80 = i74 - 2;
        if $i79 != $i80 goto label16;

        $i81 = i74 - 4;
        $i82 = i74 - 1;
        specialinvoke r0.<chess.Position: void movePieceNotPawn(int,int)>($i81, $i82);

     label16:
        if z0 == 0 goto label17;

        $i83 = r0.<chess.Position: int castleMask>;
        $i84 = $i83 & -2;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i84);
        $i85 = r0.<chess.Position: int castleMask>;
        $i86 = $i85 & -3;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i86);
        goto label18;

     label17:
        $i87 = r0.<chess.Position: int castleMask>;
        $i88 = $i87 & -5;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i88);
        $i89 = r0.<chess.Position: int castleMask>;
        $i90 = $i89 & -9;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i90);

     label18:
        $i91 = r1.<chess.Move: int 'from'>;
        $i92 = r1.<chess.Move: int 'to'>;
        specialinvoke r0.<chess.Position: void movePieceNotPawn(int,int)>($i91, $i92);

     label19:
        if z0 == 0 goto label21;

        $l93 = -9151314442816847743L & l2;
        $b94 = $l93 cmp 0L;
        if $b94 == 0 goto label20;

        if i0 != 3 goto label20;

        $i95 = r1.<chess.Move: int 'from'>;
        specialinvoke r0.<chess.Position: void removeCastleRights(int)>($i95);

     label20:
        $i96 = r1.<chess.Move: int 'to'>;
        $l97 = 1L << $i96;
        $l98 = -9151314442816847743L & $l97;
        $b99 = $l98 cmp 0L;
        if $b99 == 0 goto label23;

        if i1 != 9 goto label23;

        $i100 = r1.<chess.Move: int 'to'>;
        specialinvoke r0.<chess.Position: void removeCastleRights(int)>($i100);
        goto label23;

     label21:
        $i101 = r0.<chess.Position: int fullMoveCounter>;
        $i102 = $i101 + 1;
        r0.<chess.Position: int fullMoveCounter> = $i102;
        $l103 = -9151314442816847743L & l2;
        $b104 = $l103 cmp 0L;
        if $b104 == 0 goto label22;

        if i0 != 9 goto label22;

        $i105 = r1.<chess.Move: int 'from'>;
        specialinvoke r0.<chess.Position: void removeCastleRights(int)>($i105);

     label22:
        $i106 = r1.<chess.Move: int 'to'>;
        $l107 = 1L << $i106;
        $l108 = -9151314442816847743L & $l107;
        $b109 = $l108 cmp 0L;
        if $b109 == 0 goto label23;

        if i1 != 3 goto label23;

        $i110 = r1.<chess.Move: int 'to'>;
        specialinvoke r0.<chess.Position: void removeCastleRights(int)>($i110);

     label23:
        $l111 = r0.<chess.Position: long hashKey>;
        $l112 = <chess.Position: long whiteHashKey>;
        $l113 = $l111 ^ $l112;
        r0.<chess.Position: long hashKey> = $l113;
        if z0 != 0 goto label24;

        $z1 = 1;
        goto label25;

     label24:
        $z1 = 0;

     label25:
        r0.<chess.Position: boolean whiteMove> = $z1;
        return;
    }

    public final void unMakeMove(chess.Move, chess.UndoInfo)
    {
        chess.Position r0;
        chess.Move r1;
        chess.UndoInfo r2;
        long $l0, $l4, $l5;
        int i1, i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        boolean z0, $z1, $z2;
        byte b2, $b14, $b18;
        int[] $r5;

        r0 := @this: chess.Position;
        r1 := @parameter0: chess.Move;
        r2 := @parameter1: chess.UndoInfo;
        $l4 = r0.<chess.Position: long hashKey>;
        $l0 = <chess.Position: long whiteHashKey>;
        $l5 = $l4 ^ $l0;
        r0.<chess.Position: long hashKey> = $l5;
        $z1 = r0.<chess.Position: boolean whiteMove>;
        if $z1 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        r0.<chess.Position: boolean whiteMove> = $z2;
        $r5 = r0.<chess.Position: int[] squares>;
        $i6 = r1.<chess.Move: int 'to'>;
        i1 = $r5[$i6];
        $i7 = r1.<chess.Move: int 'from'>;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i7, i1);
        $i8 = r1.<chess.Move: int 'to'>;
        $i9 = r2.<chess.UndoInfo: int capturedPiece>;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i8, $i9);
        $i10 = r2.<chess.UndoInfo: int castleMask>;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i10);
        $i11 = r2.<chess.UndoInfo: int epSquare>;
        virtualinvoke r0.<chess.Position: void setEpSquare(int)>($i11);
        $i12 = r2.<chess.UndoInfo: int halfMoveClock>;
        r0.<chess.Position: int halfMoveClock> = $i12;
        z0 = r0.<chess.Position: boolean whiteMove>;
        $i13 = r1.<chess.Move: int promoteTo>;
        if $i13 == 0 goto label4;

        if z0 == 0 goto label2;

        $b14 = 6;
        goto label3;

     label2:
        $b14 = 12;

     label3:
        i1 = $b14;
        $i15 = r1.<chess.Move: int 'from'>;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i15, i1);

     label4:
        if z0 != 0 goto label5;

        $i16 = r0.<chess.Position: int fullMoveCounter>;
        $i17 = $i16 - 1;
        r0.<chess.Position: int fullMoveCounter> = $i17;

     label5:
        if z0 == 0 goto label6;

        $b18 = 1;
        goto label7;

     label6:
        $b18 = 7;

     label7:
        b2 = $b18;
        if i1 != b2 goto label9;

        i3 = r1.<chess.Move: int 'from'>;
        $i19 = r1.<chess.Move: int 'to'>;
        $i20 = i3 + 2;
        if $i19 != $i20 goto label8;

        $i21 = i3 + 1;
        $i22 = i3 + 3;
        specialinvoke r0.<chess.Position: void movePieceNotPawn(int,int)>($i21, $i22);
        goto label9;

     label8:
        $i23 = r1.<chess.Move: int 'to'>;
        $i24 = i3 - 2;
        if $i23 != $i24 goto label9;

        $i25 = i3 - 1;
        $i26 = i3 - 4;
        specialinvoke r0.<chess.Position: void movePieceNotPawn(int,int)>($i25, $i26);

     label9:
        $i27 = r1.<chess.Move: int 'to'>;
        $i28 = r0.<chess.Position: int epSquare>;
        if $i27 != $i28 goto label11;

        if i1 != 6 goto label10;

        $i29 = r1.<chess.Move: int 'to'>;
        $i30 = $i29 - 8;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i30, 12);
        goto label11;

     label10:
        if i1 != 12 goto label11;

        $i31 = r1.<chess.Move: int 'to'>;
        $i32 = $i31 + 8;
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i32, 6);

     label11:
        return;
    }

    public final void makeSEEMove(chess.Move, chess.UndoInfo)
    {
        chess.Position r0;
        chess.Move r1;
        chess.UndoInfo r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: chess.Position;
        r1 := @parameter0: chess.Move;
        r2 := @parameter1: chess.UndoInfo;
        $r3 = r0.<chess.Position: int[] squares>;
        $i1 = r1.<chess.Move: int 'to'>;
        $i2 = $r3[$i1];
        r2.<chess.UndoInfo: int capturedPiece> = $i2;
        $r4 = r0.<chess.Position: int[] squares>;
        $i3 = r1.<chess.Move: int 'from'>;
        i0 = $r4[$i3];
        $i4 = r1.<chess.Move: int 'to'>;
        $i5 = r0.<chess.Position: int epSquare>;
        if $i4 != $i5 goto label1;

        if i0 != 6 goto label0;

        $i6 = r1.<chess.Move: int 'to'>;
        $i7 = $i6 - 8;
        virtualinvoke r0.<chess.Position: void setSEEPiece(int,int)>($i7, 0);
        goto label1;

     label0:
        if i0 != 12 goto label1;

        $i8 = r1.<chess.Move: int 'to'>;
        $i9 = $i8 + 8;
        virtualinvoke r0.<chess.Position: void setSEEPiece(int,int)>($i9, 0);

     label1:
        $i10 = r1.<chess.Move: int 'from'>;
        virtualinvoke r0.<chess.Position: void setSEEPiece(int,int)>($i10, 0);
        $i11 = r1.<chess.Move: int 'to'>;
        virtualinvoke r0.<chess.Position: void setSEEPiece(int,int)>($i11, i0);
        $z0 = r0.<chess.Position: boolean whiteMove>;
        if $z0 != 0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        r0.<chess.Position: boolean whiteMove> = $z1;
        return;
    }

    public final void unMakeSEEMove(chess.Move, chess.UndoInfo)
    {
        chess.Position r0;
        chess.Move r1;
        chess.UndoInfo r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1;
        int[] $r4;

        r0 := @this: chess.Position;
        r1 := @parameter0: chess.Move;
        r2 := @parameter1: chess.UndoInfo;
        $z0 = r0.<chess.Position: boolean whiteMove>;
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        r0.<chess.Position: boolean whiteMove> = $z1;
        $r4 = r0.<chess.Position: int[] squares>;
        $i1 = r1.<chess.Move: int 'to'>;
        i0 = $r4[$i1];
        $i2 = r1.<chess.Move: int 'from'>;
        virtualinvoke r0.<chess.Position: void setSEEPiece(int,int)>($i2, i0);
        $i3 = r1.<chess.Move: int 'to'>;
        $i4 = r2.<chess.UndoInfo: int capturedPiece>;
        virtualinvoke r0.<chess.Position: void setSEEPiece(int,int)>($i3, $i4);
        $i5 = r1.<chess.Move: int 'to'>;
        $i6 = r0.<chess.Position: int epSquare>;
        if $i5 != $i6 goto label3;

        if i0 != 6 goto label2;

        $i7 = r1.<chess.Move: int 'to'>;
        $i8 = $i7 - 8;
        virtualinvoke r0.<chess.Position: void setSEEPiece(int,int)>($i8, 12);
        goto label3;

     label2:
        if i0 != 12 goto label3;

        $i9 = r1.<chess.Move: int 'to'>;
        $i10 = $i9 + 8;
        virtualinvoke r0.<chess.Position: void setSEEPiece(int,int)>($i10, 6);

     label3:
        return;
    }

    private final void removeCastleRights(int)
    {
        chess.Position r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: chess.Position;
        i0 := @parameter0: int;
        $i1 = staticinvoke <chess.Position: int getSquare(int,int)>(0, 0);
        if i0 != $i1 goto label0;

        $i2 = r0.<chess.Position: int castleMask>;
        $i3 = $i2 & -2;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i3);
        goto label3;

     label0:
        $i4 = staticinvoke <chess.Position: int getSquare(int,int)>(7, 0);
        if i0 != $i4 goto label1;

        $i5 = r0.<chess.Position: int castleMask>;
        $i6 = $i5 & -3;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i6);
        goto label3;

     label1:
        $i7 = staticinvoke <chess.Position: int getSquare(int,int)>(0, 7);
        if i0 != $i7 goto label2;

        $i8 = r0.<chess.Position: int castleMask>;
        $i9 = $i8 & -5;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i9);
        goto label3;

     label2:
        $i10 = staticinvoke <chess.Position: int getSquare(int,int)>(7, 7);
        if i0 != $i10 goto label3;

        $i11 = r0.<chess.Position: int castleMask>;
        $i12 = $i11 & -9;
        virtualinvoke r0.<chess.Position: void setCastleMask(int)>($i12);

     label3:
        return;
    }

    final long computeZobristHash()
    {
        chess.Position r0;
        long l0, $l3, $l4, $l5, $l6, $l7, $l9, l10, $l16, l17;
        int i1, i2, $i8, $i12, $i13, $i14, $i15;
        long[][] $r1, $r5;
        int[] $r2;
        long[] $r3, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: chess.Position;
        l0 = 0L;
        i1 = 0;

     label0:
        if i1 >= 64 goto label3;

        $r2 = r0.<chess.Position: int[] squares>;
        i2 = $r2[i1];
        $r1 = <chess.Position: long[][] psHashKeys>;
        $r3 = $r1[i2];
        $l3 = $r3[i1];
        l0 = l0 ^ $l3;
        if i2 == 6 goto label1;

        if i2 != 12 goto label2;

     label1:
        $l4 = r0.<chess.Position: long pHashKey>;
        $r5 = <chess.Position: long[][] psHashKeys>;
        $r6 = $r5[i2];
        $l5 = $r6[i1];
        $l6 = $l4 ^ $l5;
        r0.<chess.Position: long pHashKey> = $l6;

     label2:
        i1 = i1 + 1;
        goto label0;

     label3:
        $z0 = r0.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label4;

        $l7 = <chess.Position: long whiteHashKey>;
        l0 = l0 ^ $l7;

     label4:
        $r7 = <chess.Position: long[] castleHashKeys>;
        $i8 = r0.<chess.Position: int castleMask>;
        $l9 = $r7[$i8];
        l10 = l0 ^ $l9;
        $r8 = <chess.Position: long[] epHashKeys>;
        $i12 = r0.<chess.Position: int epSquare>;
        if $i12 < 0 goto label5;

        $i13 = r0.<chess.Position: int epSquare>;
        $i14 = staticinvoke <chess.Position: int getX(int)>($i13);
        $i15 = $i14 + 1;
        goto label6;

     label5:
        $i15 = 0;

     label6:
        $l16 = $r8[$i15];
        l17 = l10 ^ $l16;
        return l17;
    }

    private static final long getRandomHashVal(int)
    {
        int i0, i1, i3, $i4, $i5, $i6, $i10;
        java.security.MessageDigest r0;
        byte[] r1, r2;
        long l2, $l9, $l11;
        byte $b7, $b8;
        java.security.NoSuchAlgorithmException $r3, r4;
        java.lang.UnsupportedOperationException $r5;

        i0 := @parameter0: int;

     label0:
        r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");
        r1 = newarray (byte)[4];
        i1 = 0;

     label1:
        if i1 >= 4 goto label2;

        $i4 = i1 * 8;
        $i5 = i0 >> $i4;
        $i6 = $i5 & 255;
        $b7 = (byte) $i6;
        r1[i1] = $b7;
        i1 = i1 + 1;
        goto label1;

     label2:
        r2 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest(byte[])>(r1);
        l2 = 0L;
        i3 = 0;

     label3:
        if i3 >= 8 goto label4;

        $b8 = r2[i3];
        $l9 = (long) $b8;
        $i10 = i3 * 8;
        $l11 = $l9 << $i10;
        l2 = l2 ^ $l11;
        i3 = i3 + 1;
        goto label3;

     label4:
        return l2;

     label5:
        $r3 := @caughtexception;
        r4 = $r3;
        $r5 = new java.lang.UnsupportedOperationException;
        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("SHA-1 not available");
        throw $r5;

        catch java.security.NoSuchAlgorithmException from label0 to label4 with label5;
    }

    public final java.lang.String toString()
    {
        chess.Position r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r8;
        java.lang.String $r2, $r4, $r6, $r9;
        boolean $z0;
        long $l0;

        r0 := @this: chess.Position;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = staticinvoke <chess.TextIO: java.lang.String asciiBoard(chess.Position)>(r0);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $z0 = r0.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label0;

        $r4 = "white\n";
        goto label1;

     label0:
        $r4 = "black\n";

     label1:
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $l0 = virtualinvoke r0.<chess.Position: long zobristHash()>();
        $r6 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r9;
    }

    static void <clinit>()
    {
        int i0, i1, i2, $i3, i5, i7, $i8, $i9, i11, $i12, $i13, i15, $i16, $i17;
        long[][] $r0, $r4;
        long[] $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        long $l4, $l6, $l10, $l14, $l18;

        $r0 = newmultiarray (long)[13][64];
        <chess.Position: long[][] psHashKeys> = $r0;
        $r1 = newarray (long)[16];
        <chess.Position: long[] castleHashKeys> = $r1;
        $r2 = newarray (long)[9];
        <chess.Position: long[] epHashKeys> = $r2;
        $r3 = newarray (long)[101];
        <chess.Position: long[] moveCntKeys> = $r3;
        i0 = 0;
        i1 = 0;

     label0:
        if i1 >= 13 goto label3;

        i2 = 0;

     label1:
        if i2 >= 64 goto label2;

        $r4 = <chess.Position: long[][] psHashKeys>;
        $r5 = $r4[i1];
        $i3 = i0;
        i0 = i0 + 1;
        $l4 = staticinvoke <chess.Position: long getRandomHashVal(int)>($i3);
        $r5[i2] = $l4;
        i2 = i2 + 1;
        goto label1;

     label2:
        i1 = i1 + 1;
        goto label0;

     label3:
        i5 = i0 + 1;
        $l6 = staticinvoke <chess.Position: long getRandomHashVal(int)>(i0);
        <chess.Position: long whiteHashKey> = $l6;
        i7 = 0;

     label4:
        $r6 = <chess.Position: long[] castleHashKeys>;
        $i8 = lengthof $r6;
        if i7 >= $i8 goto label5;

        $r7 = <chess.Position: long[] castleHashKeys>;
        $i9 = i5;
        i5 = i5 + 1;
        $l10 = staticinvoke <chess.Position: long getRandomHashVal(int)>($i9);
        $r7[i7] = $l10;
        i7 = i7 + 1;
        goto label4;

     label5:
        i11 = 0;

     label6:
        $r8 = <chess.Position: long[] epHashKeys>;
        $i12 = lengthof $r8;
        if i11 >= $i12 goto label7;

        $r9 = <chess.Position: long[] epHashKeys>;
        $i13 = i5;
        i5 = i5 + 1;
        $l14 = staticinvoke <chess.Position: long getRandomHashVal(int)>($i13);
        $r9[i11] = $l14;
        i11 = i11 + 1;
        goto label6;

     label7:
        i15 = 0;

     label8:
        $r10 = <chess.Position: long[] moveCntKeys>;
        $i16 = lengthof $r10;
        if i15 >= $i16 goto label9;

        $r11 = <chess.Position: long[] moveCntKeys>;
        $i17 = i5;
        i5 = i5 + 1;
        $l18 = staticinvoke <chess.Position: long getRandomHashVal(int)>($i17);
        $r11[i15] = $l18;
        i15 = i15 + 1;
        goto label8;

     label9:
        return;
    }
}
public interface  chess.Search$Listener extends java.lang.Object
{

    public abstract void notifyDepth(int);

    public abstract void notifyCurrMove(chess.Move, int);

    public abstract void notifyPV(int, int, int, long, int, boolean, boolean, boolean, java.util.ArrayList);

    public abstract void notifyStats(long, int, int);
}
public final class chess.Search$MoveInfo$SortByNodes extends java.lang.Object implements java.util.Comparator
{

    public void <init>()
    {
        chess.Search$MoveInfo$SortByNodes r0;

        r0 := @this: chess.Search$MoveInfo$SortByNodes;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public int compare(chess.Search$MoveInfo, chess.Search$MoveInfo)
    {
        chess.Search$MoveInfo$SortByNodes r0;
        chess.Search$MoveInfo r1, r2;
        long l0, $l1, $l2;
        byte $b3, $b4;

        r0 := @this: chess.Search$MoveInfo$SortByNodes;
        r1 := @parameter0: chess.Search$MoveInfo;
        r2 := @parameter1: chess.Search$MoveInfo;
        if r1 != null goto label0;

        if r2 != null goto label0;

        return 0;

     label0:
        if r1 != null goto label1;

        return 1;

     label1:
        if r2 != null goto label2;

        return -1;

     label2:
        $l1 = r2.<chess.Search$MoveInfo: long nodes>;
        $l2 = r1.<chess.Search$MoveInfo: long nodes>;
        l0 = $l1 - $l2;
        $b3 = l0 cmp 0L;
        if $b3 >= 0 goto label3;

        return -1;

     label3:
        $b4 = l0 cmp 0L;
        if $b4 <= 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        chess.Search$MoveInfo$SortByNodes r0;
        java.lang.Object r1, r2;
        chess.Search$MoveInfo $r3, $r4;
        int $i0;

        r0 := @this: chess.Search$MoveInfo$SortByNodes;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (chess.Search$MoveInfo) r1;
        $r4 = (chess.Search$MoveInfo) r2;
        $i0 = virtualinvoke r0.<chess.Search$MoveInfo$SortByNodes: int compare(chess.Search$MoveInfo,chess.Search$MoveInfo)>($r3, $r4);
        return $i0;
    }
}
public final class chess.Search$MoveInfo$SortByScore extends java.lang.Object implements java.util.Comparator
{

    public void <init>()
    {
        chess.Search$MoveInfo$SortByScore r0;

        r0 := @this: chess.Search$MoveInfo$SortByScore;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public int compare(chess.Search$MoveInfo, chess.Search$MoveInfo)
    {
        chess.Search$MoveInfo$SortByScore r0;
        chess.Search$MoveInfo r1, r2;
        chess.Move $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: chess.Search$MoveInfo$SortByScore;
        r1 := @parameter0: chess.Search$MoveInfo;
        r2 := @parameter1: chess.Search$MoveInfo;
        if r1 != null goto label0;

        if r2 != null goto label0;

        return 0;

     label0:
        if r1 != null goto label1;

        return 1;

     label1:
        if r2 != null goto label2;

        return -1;

     label2:
        $r3 = r2.<chess.Search$MoveInfo: chess.Move move>;
        $i0 = $r3.<chess.Move: int score>;
        $r4 = r1.<chess.Search$MoveInfo: chess.Move move>;
        $i1 = $r4.<chess.Move: int score>;
        $i2 = $i0 - $i1;
        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        chess.Search$MoveInfo$SortByScore r0;
        java.lang.Object r1, r2;
        chess.Search$MoveInfo $r3, $r4;
        int $i0;

        r0 := @this: chess.Search$MoveInfo$SortByScore;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (chess.Search$MoveInfo) r1;
        $r4 = (chess.Search$MoveInfo) r2;
        $i0 = virtualinvoke r0.<chess.Search$MoveInfo$SortByScore: int compare(chess.Search$MoveInfo,chess.Search$MoveInfo)>($r3, $r4);
        return $i0;
    }
}
final class chess.Search$MoveInfo extends java.lang.Object
{
    chess.Move move;
    long nodes;

    void <init>(chess.Move, int)
    {
        chess.Search$MoveInfo r0;
        chess.Move r1;
        int i0;
        long $l1;

        r0 := @this: chess.Search$MoveInfo;
        r1 := @parameter0: chess.Move;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.Search$MoveInfo: chess.Move move> = r1;
        $l1 = (long) i0;
        r0.<chess.Search$MoveInfo: long nodes> = $l1;
        return;
    }
}
final class chess.Search$SearchTreeInfo extends java.lang.Object
{
    chess.UndoInfo undoInfo;
    chess.Move hashMove;
    boolean allowNullMove;
    chess.Move bestMove;
    chess.Move currentMove;
    int lmr;
    long nodeIdx;

    void <init>()
    {
        chess.Search$SearchTreeInfo r0;
        chess.UndoInfo $r1;
        chess.Move $r2, $r3;

        r0 := @this: chess.Search$SearchTreeInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new chess.UndoInfo;
        specialinvoke $r1.<chess.UndoInfo: void <init>()>();
        r0.<chess.Search$SearchTreeInfo: chess.UndoInfo undoInfo> = $r1;
        $r2 = new chess.Move;
        specialinvoke $r2.<chess.Move: void <init>(int,int,int)>(0, 0, 0);
        r0.<chess.Search$SearchTreeInfo: chess.Move hashMove> = $r2;
        r0.<chess.Search$SearchTreeInfo: boolean allowNullMove> = 1;
        $r3 = new chess.Move;
        specialinvoke $r3.<chess.Move: void <init>(int,int,int)>(0, 0, 0);
        r0.<chess.Search$SearchTreeInfo: chess.Move bestMove> = $r3;
        return;
    }
}
final class chess.Search$StopSearch extends java.lang.Exception
{
    private static final long serialVersionUID;

    public void <init>()
    {
        chess.Search$StopSearch r0;

        r0 := @this: chess.Search$StopSearch;
        specialinvoke r0.<java.lang.Exception: void <init>()>();
        return;
    }

    public void <init>(java.lang.String)
    {
        chess.Search$StopSearch r0;
        java.lang.String r1;

        r0 := @this: chess.Search$StopSearch;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);
        return;
    }
}
public class chess.Search extends java.lang.Object
{
    static final int plyScale;
    chess.Position pos;
    chess.MoveGen moveGen;
    chess.Evaluate eval;
    chess.KillerTable kt;
    chess.History ht;
    long[] posHashList;
    int posHashListSize;
    int posHashFirstNew;
    chess.TranspositionTable tt;
    chess.TreeLogger log;
    chess.Search$SearchTreeInfo[] searchTreeInfo;
    long tStart;
    long minTimeMillis;
    long maxTimeMillis;
    boolean searchNeedMoreTime;
    private long maxNodes;
    int nodesToGo;
    public int nodesBetweenTimeCheck;
    private int strength;
    boolean weak;
    long randomSeed;
    long nodes;
    long qNodes;
    int[] nodesPlyVec;
    int[] nodesDepthVec;
    long totalNodes;
    long tLastStats;
    boolean verbose;
    public static final int MATE0;
    public static final int UNKNOWN_SCORE;
    int q0Eval;
    chess.Search$Listener listener;
    private static final chess.Move emptyMove;
    private int[] captures;
    private chess.UndoInfo seeUi;

    public void <init>(chess.Position, long[], int, chess.TranspositionTable, chess.History)
    {
        chess.Search r0;
        chess.Position r1, $r7;
        long[] r2;
        int i0, i2;
        chess.TranspositionTable r3;
        chess.History r4;
        short s1;
        int[] $r5;
        chess.UndoInfo $r6;
        chess.MoveGen $r8;
        chess.Evaluate $r9;
        chess.KillerTable $r10;
        chess.Search$SearchTreeInfo[] $r11, $r12;
        chess.Search$SearchTreeInfo $r13;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: long[];
        i0 := @parameter2: int;
        r3 := @parameter3: chess.TranspositionTable;
        r4 := @parameter4: chess.History;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.Search: chess.TreeLogger log> = null;
        r0.<chess.Search: int nodesBetweenTimeCheck> = 5000;
        r0.<chess.Search: int strength> = 1000;
        r0.<chess.Search: boolean weak> = 0;
        r0.<chess.Search: long randomSeed> = 0L;
        $r5 = newarray (int)[64];
        r0.<chess.Search: int[] captures> = $r5;
        $r6 = new chess.UndoInfo;
        specialinvoke $r6.<chess.UndoInfo: void <init>()>();
        r0.<chess.Search: chess.UndoInfo seeUi> = $r6;
        $r7 = new chess.Position;
        specialinvoke $r7.<chess.Position: void <init>(chess.Position)>(r1);
        r0.<chess.Search: chess.Position pos> = $r7;
        $r8 = new chess.MoveGen;
        specialinvoke $r8.<chess.MoveGen: void <init>()>();
        r0.<chess.Search: chess.MoveGen moveGen> = $r8;
        r0.<chess.Search: long[] posHashList> = r2;
        r0.<chess.Search: int posHashListSize> = i0;
        r0.<chess.Search: chess.TranspositionTable tt> = r3;
        r0.<chess.Search: chess.History ht> = r4;
        $r9 = new chess.Evaluate;
        specialinvoke $r9.<chess.Evaluate: void <init>()>();
        r0.<chess.Search: chess.Evaluate eval> = $r9;
        $r10 = new chess.KillerTable;
        specialinvoke $r10.<chess.KillerTable: void <init>()>();
        r0.<chess.Search: chess.KillerTable kt> = $r10;
        r0.<chess.Search: int posHashFirstNew> = i0;
        specialinvoke r0.<chess.Search: void initNodeStats()>();
        r0.<chess.Search: long minTimeMillis> = -1L;
        r0.<chess.Search: long maxTimeMillis> = -1L;
        r0.<chess.Search: boolean searchNeedMoreTime> = 0;
        r0.<chess.Search: long maxNodes> = -1L;
        s1 = 200;
        $r11 = newarray (chess.Search$SearchTreeInfo)[200];
        r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo> = $r11;
        i2 = 0;

     label0:
        if i2 >= 200 goto label1;

        $r12 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $r13 = new chess.Search$SearchTreeInfo;
        specialinvoke $r13.<chess.Search$SearchTreeInfo: void <init>()>();
        $r12[i2] = $r13;
        i2 = i2 + 1;
        goto label0;

     label1:
        return;
    }

    public void setListener(chess.Search$Listener)
    {
        chess.Search r0;
        chess.Search$Listener r1;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.Search$Listener;
        r0.<chess.Search: chess.Search$Listener listener> = r1;
        return;
    }

    public final void timeLimit(int, int)
    {
        chess.Search r0;
        int i0, i1;
        long $l2, $l3;

        r0 := @this: chess.Search;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $l2 = (long) i0;
        r0.<chess.Search: long minTimeMillis> = $l2;
        $l3 = (long) i1;
        r0.<chess.Search: long maxTimeMillis> = $l3;
        return;
    }

    public final void setStrength(int, long)
    {
        chess.Search r0;
        int i0;
        long l1;
        boolean $z0;

        r0 := @this: chess.Search;
        i0 := @parameter0: int;
        l1 := @parameter1: long;
        if i0 >= 0 goto label0;

        i0 = 0;

     label0:
        if i0 <= 1000 goto label1;

        i0 = 1000;

     label1:
        r0.<chess.Search: int strength> = i0;
        if i0 >= 1000 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        r0.<chess.Search: boolean weak> = $z0;
        r0.<chess.Search: long randomSeed> = l1;
        return;
    }

    public final chess.Move iterativeDeepening(chess.MoveGen$MoveList, int, long, boolean)
    {
        chess.Search r0;
        chess.MoveGen$MoveList r1;
        int i0, i4, i5, i7, i8, i10, i13, $i15, $i16, $i20, $i23, $i24, $i25, $i26, $i27, $i28, i33, i34, $i35, $i36, i37, i38, $i39, i40, $i41, $i42, $i44, $i45, i46, i47, $i48, $i53, $i55, $i56, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i74, $i75, i77, $i78, $i81, $i83, $i84, $i86, $i87, $i88, $i89, $i93, $i94, $i96, $i99, $i101, $i102, $i104, $i105, $i106, $i107, $i111, $i112, $i116, i117, $i118, $i125, $i126, i128, $i129, $i130, $i136, $i143, $i149, i150, $i151, $i152;
        long l1, $l2, l3, l11, l14, $l17, $l18, $l19, $l21, $l22, $l29, $l30, $l31, $l49, $l50, $l51, $l54, $l57, $l72, $l73, $l76, $l79, $l80, $l82, $l85, $l90, $l91, $l92, $l97, $l98, $l100, $l103, $l108, $l109, $l110, $l113, $l114, $l119, l120, $l122, $l123, l127, $l131, $l132, $l133, $l134, $l135, $l137, $l139, $l140, $l141, $l144, $l146, $l147;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13;
        boolean[] r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        chess.Search$MoveInfo[] r3;
        chess.Move r4, r5, r14, $r94;
        short s6, $s43;
        byte b9, b12, $b32, $b52, $b115, $b121, $b124, $b138, $b142, $b145, $b148;
        chess.Search$SearchTreeInfo r6, $r17;
        chess.Position $r7, $r10, $r11, r12, $r28, $r29, $r30, $r31, $r32, $r35, $r37, $r40, $r48, $r49, $r51, $r54, $r62, $r63, $r65, $r69, $r74, $r78, $r81, $r85;
        chess.Move[] $r8;
        chess.Search$MoveInfo $r9, $r13, $r23, $r93, $r95, r96, $r97, $r98, $r100;
        chess.Search$SearchTreeInfo[] $r15, $r16, $r33;
        chess.Search$Listener $r18, $r19, $r24, $r25, $r66;
        chess.UndoInfo $r20, r21;
        long[] $r26, $r46, $r60;
        chess.TranspositionTable $r36, $r77;
        java.io.PrintStream $r38, $r52, $r82, $r101, $r109;
        java.lang.Object[] $r39, $r53, $r84, $r102, $r110;
        java.lang.String $r41, $r55, r67, $r70, r73, $r79, $r83, $r86, $r91;
        java.lang.Integer $r42, $r56, $r87, $r103, $r105, $r107, $r113;
        java.lang.Long $r43, $r44, $r57, $r58, $r88, $r89;
        char c95;
        java.lang.StringBuilder $r68, $r71, $r72, $r75, $r76, $r80;
        chess.Search$MoveInfo$SortByScore $r99;
        int[] $r104, $r106;
        java.lang.Double $r111, $r112;
        chess.Search$MoveInfo$SortByNodes $r115;
        chess.Search$StopSearch $r116, r117;
        chess.TreeLogger $r118, $r119;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.MoveGen$MoveList;
        i0 := @parameter1: int;
        l1 := @parameter2: long;
        z0 := @parameter3: boolean;
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<chess.Search: long tStart> = $l2;
        r0.<chess.Search: long totalNodes> = 0L;
        $i15 = r1.<chess.MoveGen$MoveList: int size>;
        if $i15 > 0 goto label0;

        return null;

     label0:
        $i16 = r1.<chess.MoveGen$MoveList: int size>;
        r2 = newarray (boolean)[$i16];
        $r7 = r0.<chess.Search: chess.Position pos>;
        $l17 = virtualinvoke $r7.<chess.Position: long zobristHash()>();
        $l18 = r0.<chess.Search: long randomSeed>;
        l3 = $l17 ^ $l18;
        $l19 = staticinvoke <java.lang.Math: long abs(long)>(l3);
        $i20 = r1.<chess.MoveGen$MoveList: int size>;
        $l21 = (long) $i20;
        $l22 = $l19 % $l21;
        $i23 = (int) $l22;
        r2[$i23] = 1;
        i4 = 1;
        $i24 = r0.<chess.Search: int strength>;
        if $i24 >= 100 goto label1;

        $i25 = r0.<chess.Search: int strength>;
        $i26 = r0.<chess.Search: int strength>;
        $i27 = $i25 * $i26;
        $d2 = (double) $i27;
        $d3 = $d2 * 1.0E-4;
        goto label2;

     label1:
        $d3 = 1.0;

     label2:
        d0 = $d3;
        i5 = 0;

     label3:
        $i28 = r1.<chess.MoveGen$MoveList: int size>;
        if i5 >= $i28 goto label5;

        $l29 = 6364136223846793005L * l3;
        l3 = $l29 + 1442695040888963407L;
        $l30 = l3 & 9223372036854775807L;
        $l31 = $l30 % 1000000000L;
        $d4 = (double) $l31;
        d1 = $d4 / 1.0E9;
        $z6 = r2[i5];
        if $z6 != 0 goto label4;

        $b32 = d1 cmpg d0;
        if $b32 >= 0 goto label4;

        r2[i5] = 1;
        i4 = i4 + 1;

     label4:
        i5 = i5 + 1;
        goto label3;

     label5:
        r3 = newarray (chess.Search$MoveInfo)[i4];
        i33 = 0;
        i34 = 0;

     label6:
        $i35 = r1.<chess.MoveGen$MoveList: int size>;
        if i33 >= $i35 goto label8;

        $z7 = r2[i33];
        if $z7 == 0 goto label7;

        $r8 = r1.<chess.MoveGen$MoveList: chess.Move[] m>;
        r4 = $r8[i33];
        $i36 = i34;
        i34 = i34 + 1;
        $r9 = new chess.Search$MoveInfo;
        specialinvoke $r9.<chess.Search$MoveInfo: void <init>(chess.Move,int)>(r4, 0);
        r3[$i36] = $r9;

     label7:
        i33 = i33 + 1;
        goto label6;

     label8:
        r0.<chess.Search: long maxNodes> = l1;
        r0.<chess.Search: int nodesToGo> = 0;
        $r10 = new chess.Position;
        $r11 = r0.<chess.Search: chess.Position pos>;
        specialinvoke $r10.<chess.Position: void <init>(chess.Position)>($r11);
        r12 = $r10;
        i37 = 0;
        z1 = 1;
        $r13 = r3[0];
        r14 = $r13.<chess.Search$MoveInfo: chess.Move move>;
        r0.<chess.Search: boolean verbose> = z0;
        if i0 < 0 goto label9;

        if i0 <= 100 goto label10;

     label9:
        i0 = 100;

     label10:
        i38 = 0;

     label11:
        $r15 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $i39 = lengthof $r15;
        if i38 >= $i39 goto label12;

        $r16 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $r17 = $r16[i38];
        $r17.<chess.Search$SearchTreeInfo: boolean allowNullMove> = 1;
        i38 = i38 + 1;
        goto label11;

     label12:
        i40 = 8;

     label13:
        specialinvoke r0.<chess.Search: void initNodeStats()>();
        $r18 = r0.<chess.Search: chess.Search$Listener listener>;
        if $r18 == null goto label14;

        $r19 = r0.<chess.Search: chess.Search$Listener listener>;
        $i41 = i40 / 8;
        interfaceinvoke $r19.<chess.Search$Listener: void notifyDepth(int)>($i41);

     label14:
        $i42 = staticinvoke <java.lang.Math: int abs(int)>(i37);
        if $i42 > 16000 goto label15;

        $s43 = 20;
        goto label16;

     label15:
        $s43 = 1000;

     label16:
        s6 = $s43;
        if z1 == 0 goto label17;

        $i44 = -32000;
        goto label18;

     label17:
        $i45 = i37 - s6;
        $i44 = staticinvoke <java.lang.Math: int max(int,int)>($i45, -32000);

     label18:
        i46 = $i44;
        i47 = -32000;
        $r20 = new chess.UndoInfo;
        specialinvoke $r20.<chess.UndoInfo: void <init>()>();
        r21 = $r20;
        z2 = 0;
        i7 = 0;

     label19:
        $i48 = lengthof r3;
        if i7 >= $i48 goto label57;

        if i7 <= 0 goto label20;

        $z8 = 1;
        goto label21;

     label20:
        $z8 = 0;

     label21:
        r0.<chess.Search: boolean searchNeedMoreTime> = $z8;
        $r23 = r3[i7];
        r5 = $r23.<chess.Search$MoveInfo: chess.Move move>;
        $r24 = r0.<chess.Search: chess.Search$Listener listener>;
        if $r24 == null goto label22;

        $l49 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l50 = r0.<chess.Search: long tStart>;
        $l51 = $l49 - $l50;
        $b52 = $l51 cmp 1000L;
        if $b52 < 0 goto label22;

        $r25 = r0.<chess.Search: chess.Search$Listener listener>;
        $i53 = i7 + 1;
        interfaceinvoke $r25.<chess.Search$Listener: void notifyCurrMove(chess.Move,int)>(r5, $i53);

     label22:
        $l54 = 0L;
        r0.<chess.Search: long qNodes> = $l54;
        r0.<chess.Search: long nodes> = $l54;
        $r26 = r0.<chess.Search: long[] posHashList>;
        $i55 = r0.<chess.Search: int posHashListSize>;
        $i56 = $i55 + 1;
        r0.<chess.Search: int posHashListSize> = $i56;
        $r28 = r0.<chess.Search: chess.Position pos>;
        $l57 = virtualinvoke $r28.<chess.Position: long zobristHash()>();
        $r26[$i55] = $l57;
        $r29 = r0.<chess.Search: chess.Position pos>;
        z3 = staticinvoke <chess.MoveGen: boolean givesCheck(chess.Position,chess.Move)>($r29, r5);
        if z1 == 0 goto label23;

        i8 = 32000;
        goto label26;

     label23:
        if i7 != 0 goto label24;

        $i58 = i37 + s6;
        $i59 = staticinvoke <java.lang.Math: int min(int,int)>($i58, 32000);
        goto label25;

     label24:
        $i59 = i46 + 1;

     label25:
        i8 = $i59;

     label26:
        b9 = 0;
        $r30 = r0.<chess.Search: chess.Position pos>;
        $i60 = r5.<chess.Move: int 'to'>;
        $i61 = virtualinvoke $r30.<chess.Position: int getPiece(int)>($i60);
        if $i61 == 0 goto label27;

        $z9 = 1;
        goto label28;

     label27:
        $z9 = 0;

     label28:
        z4 = $z9;
        $i62 = r5.<chess.Move: int promoteTo>;
        if $i62 == 0 goto label29;

        $z10 = 1;
        goto label30;

     label29:
        $z10 = 0;

     label30:
        z5 = $z10;
        if i40 < 24 goto label31;

        if z4 != 0 goto label31;

        if z5 != 0 goto label31;

        if z3 != 0 goto label31;

        $r31 = r0.<chess.Search: chess.Position pos>;
        $z11 = staticinvoke <chess.Search: boolean passedPawnPush(chess.Position,chess.Move)>($r31, r5);
        if $z11 != 0 goto label31;

        if i7 < 3 goto label31;

        b9 = 8;

     label31:
        $r32 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r32.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r5, r21);
        $r33 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        r6 = $r33[0];
        r6.<chess.Search$SearchTreeInfo: chess.Move currentMove> = r5;
        r6.<chess.Search$SearchTreeInfo: int lmr> = b9;
        r6.<chess.Search$SearchTreeInfo: long nodeIdx> = -1L;
        $i63 = neg i8;
        $i64 = neg i46;
        $i65 = i40 - b9;
        $i66 = $i65 - 8;
        $i67 = virtualinvoke r0.<chess.Search: int negaScout(int,int,int,int,int,boolean)>($i63, $i64, 1, $i66, -1, z3);
        i10 = neg $i67;
        if b9 <= 0 goto label32;

        if i10 <= i46 goto label32;

        r6.<chess.Search$SearchTreeInfo: int lmr> = 0;
        $i68 = neg i8;
        $i69 = neg i46;
        $i70 = i40 - 8;
        $i71 = virtualinvoke r0.<chess.Search: int negaScout(int,int,int,int,int,boolean)>($i68, $i69, 1, $i70, -1, z3);
        i10 = neg $i71;

     label32:
        $l72 = r0.<chess.Search: long nodes>;
        $l73 = r0.<chess.Search: long qNodes>;
        l11 = $l72 + $l73;
        $i74 = r0.<chess.Search: int posHashListSize>;
        $i75 = $i74 - 1;
        r0.<chess.Search: int posHashListSize> = $i75;
        $r35 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r35.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r5, r21);
        b12 = 0;
        if i10 > i46 goto label33;

        b12 = 2;
        goto label34;

     label33:
        if i10 < i8 goto label34;

        b12 = 1;

     label34:
        r5.<chess.Move: int score> = i10;
        $r36 = r0.<chess.Search: chess.TranspositionTable tt>;
        $r37 = r0.<chess.Search: chess.Position pos>;
        $l76 = virtualinvoke $r37.<chess.Position: long historyHash()>();
        virtualinvoke $r36.<chess.TranspositionTable: void insert(long,chess.Move,int,int,int,int)>($l76, r5, b12, 0, i40, -32767);
        if i10 < i8 goto label39;

        i77 = s6 * 2;

     label35:
        if i10 < i8 goto label38;

        $i78 = i10 + i77;
        i8 = staticinvoke <java.lang.Math: int min(int,int)>($i78, 32000);
        i77 = 64000;
        if i7 == 0 goto label36;

        z2 = 1;

     label36:
        r14 = r5;
        if z0 == 0 goto label37;

        $r38 = <java.lang.System: java.io.PrintStream out>;
        $r39 = newarray (java.lang.Object)[4];
        $r40 = r0.<chess.Search: chess.Position pos>;
        $r41 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>($r40, r5, 0);
        $r39[0] = $r41;
        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);
        $r39[1] = $r42;
        $l79 = r0.<chess.Search: long nodes>;
        $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l79);
        $r39[2] = $r43;
        $l80 = r0.<chess.Search: long qNodes>;
        $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l80);
        $r39[3] = $r44;
        virtualinvoke $r38.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%-6s %6d %6d %6d >=\n", $r39);

     label37:
        $i81 = i40 / 8;
        specialinvoke r0.<chess.Search: void notifyPV(int,int,boolean,boolean,chess.Move)>($i81, i10, 0, 1, r5);
        $l82 = 0L;
        r0.<chess.Search: long qNodes> = $l82;
        r0.<chess.Search: long nodes> = $l82;
        $r46 = r0.<chess.Search: long[] posHashList>;
        $i83 = r0.<chess.Search: int posHashListSize>;
        $i84 = $i83 + 1;
        r0.<chess.Search: int posHashListSize> = $i84;
        $r48 = r0.<chess.Search: chess.Position pos>;
        $l85 = virtualinvoke $r48.<chess.Position: long zobristHash()>();
        $r46[$i83] = $l85;
        $r49 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r49.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r5, r21);
        $i86 = neg i8;
        $i87 = neg i10;
        $i88 = i40 - 8;
        $i89 = virtualinvoke r0.<chess.Search: int negaScout(int,int,int,int,int,boolean)>($i86, $i87, 1, $i88, -1, z3);
        i13 = neg $i89;
        i10 = staticinvoke <java.lang.Math: int max(int,int)>(i10, i13);
        $l90 = r0.<chess.Search: long nodes>;
        $l91 = r0.<chess.Search: long qNodes>;
        $l92 = $l90 + $l91;
        l11 = l11 + $l92;
        $i93 = r0.<chess.Search: int posHashListSize>;
        $i94 = $i93 - 1;
        r0.<chess.Search: int posHashListSize> = $i94;
        $r51 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r51.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r5, r21);
        goto label35;

     label38:
        goto label42;

     label39:
        if i7 != 0 goto label42;

        if i10 > i46 goto label42;

        c95 = 64000;

     label40:
        if i10 > i46 goto label42;

        $i96 = i10 - c95;
        i46 = staticinvoke <java.lang.Math: int max(int,int)>($i96, -32000);
        c95 = 64000;
        $z12 = 1;
        r0.<chess.Search: boolean searchNeedMoreTime> = $z12;
        z2 = $z12;
        if z0 == 0 goto label41;

        $r52 = <java.lang.System: java.io.PrintStream out>;
        $r53 = newarray (java.lang.Object)[4];
        $r54 = r0.<chess.Search: chess.Position pos>;
        $r55 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>($r54, r5, 0);
        $r53[0] = $r55;
        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);
        $r53[1] = $r56;
        $l97 = r0.<chess.Search: long nodes>;
        $r57 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l97);
        $r53[2] = $r57;
        $l98 = r0.<chess.Search: long qNodes>;
        $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l98);
        $r53[3] = $r58;
        virtualinvoke $r52.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%-6s %6d %6d %6d <=\n", $r53);

     label41:
        $i99 = i40 / 8;
        specialinvoke r0.<chess.Search: void notifyPV(int,int,boolean,boolean,chess.Move)>($i99, i10, 1, 0, r5);
        $l100 = 0L;
        r0.<chess.Search: long qNodes> = $l100;
        r0.<chess.Search: long nodes> = $l100;
        $r60 = r0.<chess.Search: long[] posHashList>;
        $i101 = r0.<chess.Search: int posHashListSize>;
        $i102 = $i101 + 1;
        r0.<chess.Search: int posHashListSize> = $i102;
        $r62 = r0.<chess.Search: chess.Position pos>;
        $l103 = virtualinvoke $r62.<chess.Position: long zobristHash()>();
        $r60[$i101] = $l103;
        $r63 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r63.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r5, r21);
        $i104 = neg i10;
        $i105 = neg i46;
        $i106 = i40 - 8;
        $i107 = virtualinvoke r0.<chess.Search: int negaScout(int,int,int,int,int,boolean)>($i104, $i105, 1, $i106, -1, z3);
        i10 = neg $i107;
        $l108 = r0.<chess.Search: long nodes>;
        $l109 = r0.<chess.Search: long qNodes>;
        $l110 = $l108 + $l109;
        l11 = l11 + $l110;
        $i111 = r0.<chess.Search: int posHashListSize>;
        $i112 = $i111 - 1;
        r0.<chess.Search: int posHashListSize> = $i112;
        $r65 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r65.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r5, r21);
        goto label40;

     label42:
        if z0 != 0 goto label43;

        $r66 = r0.<chess.Search: chess.Search$Listener listener>;
        if $r66 == null goto label49;

        if z1 != 0 goto label49;

     label43:
        z13 = 0;
        r67 = "";
        if i10 > i46 goto label44;

        if i7 != 0 goto label45;

     label44:
        z13 = 1;
        if z0 == 0 goto label45;

        $r68 = new java.lang.StringBuilder;
        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();
        $r69 = r0.<chess.Search: chess.Position pos>;
        $r70 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>($r69, r5, 0);
        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);
        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();
        $r74 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r74.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r5, r21);
        $r75 = new java.lang.StringBuilder;
        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();
        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);
        $r77 = r0.<chess.Search: chess.TranspositionTable tt>;
        $r78 = r0.<chess.Search: chess.Position pos>;
        $r79 = virtualinvoke $r77.<chess.TranspositionTable: java.lang.String extractPV(chess.Position)>($r78);
        $r80 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);
        r67 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();
        $r81 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r81.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r5, r21);

     label45:
        if z0 == 0 goto label48;

        $r82 = <java.lang.System: java.io.PrintStream out>;
        $r83 = "%-6s %6d %6d %6d%s %s\n";
        $r84 = newarray (java.lang.Object)[6];
        $r85 = r0.<chess.Search: chess.Position pos>;
        $r86 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>($r85, r5, 0);
        $r84[0] = $r86;
        $r87 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);
        $r84[1] = $r87;
        $l113 = r0.<chess.Search: long nodes>;
        $r88 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l113);
        $r84[2] = $r88;
        $l114 = r0.<chess.Search: long qNodes>;
        $r89 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l114);
        $r84[3] = $r89;
        $b115 = 4;
        if i10 <= i46 goto label46;

        $r91 = " *";
        goto label47;

     label46:
        $r91 = "";

     label47:
        $r84[$b115] = $r91;
        $r84[5] = r67;
        virtualinvoke $r82.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>($r83, $r84);

     label48:
        if z13 == 0 goto label49;

        if z1 != 0 goto label49;

        $i116 = i40 / 8;
        specialinvoke r0.<chess.Search: void notifyPV(int,int,boolean,boolean,chess.Move)>($i116, i10, 0, 0, r5);

     label49:
        $r93 = r3[i7];
        $r94 = $r93.<chess.Search$MoveInfo: chess.Move move>;
        $r94.<chess.Move: int score> = i10;
        $r95 = r3[i7];
        $r95.<chess.Search$MoveInfo: long nodes> = l11;
        i47 = staticinvoke <java.lang.Math: int max(int,int)>(i47, i10);
        if z1 != 0 goto label53;

        if i10 > i46 goto label50;

        if i7 != 0 goto label53;

     label50:
        i46 = i10;
        r96 = r3[i7];
        i117 = i7 - 1;

     label51:
        if i117 < 0 goto label52;

        $i118 = i117 + 1;
        $r97 = r3[i117];
        r3[$i118] = $r97;
        i117 = i117 + -1;
        goto label51;

     label52:
        r3[0] = r96;
        $r98 = r3[0];
        r14 = $r98.<chess.Search$MoveInfo: chess.Move move>;

     label53:
        if z1 != 0 goto label56;

        if z2 == 0 goto label54;

        $l119 = r0.<chess.Search: long maxTimeMillis>;
        goto label55;

     label54:
        $l119 = r0.<chess.Search: long minTimeMillis>;

     label55:
        l120 = $l119;
        $b121 = l120 cmp 0L;
        if $b121 < 0 goto label56;

        l14 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l122 = r0.<chess.Search: long tStart>;
        $l123 = l14 - $l122;
        $b124 = $l123 cmp l120;
        if $b124 < 0 goto label56;

        goto label57;

     label56:
        i7 = i7 + 1;
        goto label19;

     label57:
        if z1 == 0 goto label58;

        $r99 = new chess.Search$MoveInfo$SortByScore;
        specialinvoke $r99.<chess.Search$MoveInfo$SortByScore: void <init>()>();
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r3, $r99);
        $r100 = r3[0];
        r14 = $r100.<chess.Search$MoveInfo: chess.Move move>;
        $i125 = i40 / 8;
        $i126 = r14.<chess.Move: int score>;
        specialinvoke r0.<chess.Search: void notifyPV(int,int,boolean,boolean,chess.Move)>($i125, $i126, 0, 0, r14);

     label58:
        l127 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        if z0 == 0 goto label61;

        i128 = 0;

     label59:
        if i128 >= 20 goto label60;

        $r101 = <java.lang.System: java.io.PrintStream out>;
        $r102 = newarray (java.lang.Object)[3];
        $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i128);
        $r102[0] = $r103;
        $r104 = r0.<chess.Search: int[] nodesPlyVec>;
        $i129 = $r104[i128];
        $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i129);
        $r102[1] = $r105;
        $r106 = r0.<chess.Search: int[] nodesDepthVec>;
        $i130 = $r106[i128];
        $r107 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i130);
        $r102[2] = $r107;
        virtualinvoke $r101.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%2d %7d %7d\n", $r102);
        i128 = i128 + 1;
        goto label59;

     label60:
        $r109 = <java.lang.System: java.io.PrintStream out>;
        $r110 = newarray (java.lang.Object)[3];
        $l131 = r0.<chess.Search: long tStart>;
        $l132 = l127 - $l131;
        $d5 = (double) $l132;
        $d6 = $d5 * 0.001;
        $r111 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);
        $r110[0] = $r111;
        $d7 = (double) i40;
        $d8 = $d7 / 8.0;
        $r112 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);
        $r110[1] = $r112;
        $l133 = r0.<chess.Search: long totalNodes>;
        $d9 = (double) $l133;
        $l134 = r0.<chess.Search: long tStart>;
        $l135 = l127 - $l134;
        $d10 = (double) $l135;
        $d11 = $d10 * 0.001;
        $d12 = $d9 / $d11;
        $i136 = (int) $d12;
        $r113 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i136);
        $r110[2] = $r113;
        virtualinvoke $r109.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Time: %.3f depth:%.2f nps:%d\n", $r110);

     label61:
        $l137 = r0.<chess.Search: long maxTimeMillis>;
        $b138 = $l137 cmp 0L;
        if $b138 < 0 goto label62;

        $l139 = r0.<chess.Search: long tStart>;
        $l140 = l127 - $l139;
        $l141 = r0.<chess.Search: long minTimeMillis>;
        $b142 = $l140 cmp $l141;
        if $b142 < 0 goto label62;

        goto label67;

     label62:
        $i143 = i0 * 8;
        if i40 < $i143 goto label63;

        goto label67;

     label63:
        $l144 = r0.<chess.Search: long maxNodes>;
        $b145 = $l144 cmp 0L;
        if $b145 < 0 goto label64;

        $l146 = r0.<chess.Search: long totalNodes>;
        $l147 = r0.<chess.Search: long maxNodes>;
        $b148 = $l146 cmp $l147;
        if $b148 < 0 goto label64;

        goto label67;

     label64:
        $i149 = staticinvoke <java.lang.Math: int abs(int)>(i47);
        i150 = 32000 - $i149;
        $i151 = i150 * 8;
        if i40 < $i151 goto label65;

        goto label67;

     label65:
        i37 = i47;
        if z1 != 0 goto label66;

        $i152 = lengthof r3;
        $r115 = new chess.Search$MoveInfo$SortByNodes;
        specialinvoke $r115.<chess.Search$MoveInfo$SortByNodes: void <init>()>();
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],int,int,java.util.Comparator)>(r3, 1, $i152, $r115);

     label66:
        i40 = i40 + 8;
        z1 = 0;
        goto label13;

     label67:
        goto label69;

     label68:
        $r116 := @caughtexception;
        r117 = $r116;
        r0.<chess.Search: chess.Position pos> = r12;

     label69:
        specialinvoke r0.<chess.Search: void notifyStats()>();
        $r118 = r0.<chess.Search: chess.TreeLogger log>;
        if $r118 == null goto label70;

        $r119 = r0.<chess.Search: chess.TreeLogger log>;
        virtualinvoke $r119.<chess.TreeLogger: void close()>();
        r0.<chess.Search: chess.TreeLogger log> = null;

     label70:
        return r14;

        catch chess.Search$StopSearch from label12 to label67 with label68;
    }

    private final void notifyPV(int, int, boolean, boolean, chess.Move)
    {
        chess.Search r0;
        int i0, i1, i3, i4, $i5, $i6, $i7, $i8, $i12;
        boolean z0, z1, z2;
        chess.Move r1;
        long l2, $l9, $l10, $l11, $l13;
        java.util.ArrayList r2;
        chess.Search$Listener $r3, $r6;
        double $d0, $d1, $d2, $d3;
        chess.TranspositionTable $r4;
        chess.Position $r5;

        r0 := @this: chess.Search;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        r1 := @parameter4: chess.Move;
        $r3 = r0.<chess.Search: chess.Search$Listener listener>;
        if $r3 == null goto label4;

        z2 = 0;
        if i1 <= 16000 goto label0;

        z2 = 1;
        $i5 = 32000 - i1;
        i1 = $i5 / 2;
        goto label1;

     label0:
        if i1 >= -16000 goto label1;

        z2 = 1;
        $i6 = 32000 + i1;
        $i7 = $i6 - 1;
        $i8 = $i7 / 2;
        i1 = neg $i8;

     label1:
        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l9 = r0.<chess.Search: long tStart>;
        $l10 = l2 - $l9;
        i3 = (int) $l10;
        if i3 <= 0 goto label2;

        $l11 = r0.<chess.Search: long totalNodes>;
        $d0 = (double) $l11;
        $d1 = (double) i3;
        $d2 = $d1 / 1000.0;
        $d3 = $d0 / $d2;
        $i12 = (int) $d3;
        goto label3;

     label2:
        $i12 = 0;

     label3:
        i4 = $i12;
        $r4 = r0.<chess.Search: chess.TranspositionTable tt>;
        $r5 = r0.<chess.Search: chess.Position pos>;
        r2 = virtualinvoke $r4.<chess.TranspositionTable: java.util.ArrayList extractPVMoves(chess.Position,chess.Move)>($r5, r1);
        $r6 = r0.<chess.Search: chess.Search$Listener listener>;
        $l13 = r0.<chess.Search: long totalNodes>;
        interfaceinvoke $r6.<chess.Search$Listener: void notifyPV(int,int,int,long,int,boolean,boolean,boolean,java.util.ArrayList)>(i0, i1, i3, $l13, i4, z2, z0, z1, r2);

     label4:
        return;
    }

    private final void notifyStats()
    {
        chess.Search r0;
        long l0, $l3, $l4, $l5, $l7;
        int i1, i2, $i6;
        chess.Search$Listener $r1, $r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: chess.Search;
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r1 = r0.<chess.Search: chess.Search$Listener listener>;
        if $r1 == null goto label2;

        $l3 = r0.<chess.Search: long tStart>;
        $l4 = l0 - $l3;
        i1 = (int) $l4;
        if i1 <= 0 goto label0;

        $l5 = r0.<chess.Search: long totalNodes>;
        $d0 = (double) $l5;
        $d1 = (double) i1;
        $d2 = $d1 / 1000.0;
        $d3 = $d0 / $d2;
        $i6 = (int) $d3;
        goto label1;

     label0:
        $i6 = 0;

     label1:
        i2 = $i6;
        $r2 = r0.<chess.Search: chess.Search$Listener listener>;
        $l7 = r0.<chess.Search: long totalNodes>;
        interfaceinvoke $r2.<chess.Search$Listener: void notifyStats(long,int,int)>($l7, i2, i1);

     label2:
        r0.<chess.Search: long tLastStats> = l0;
        return;
    }

    public final int negaScout(int, int, int, int, int, boolean) throws chess.Search$StopSearch
    {
        chess.Search r0;
        int i0, i1, i2, i3, i4, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i23, i24, i25, i26, i27, i28, $i29, $i31, $i32, $i33, $i34, $i50, $i51, $i52, $i53, $i54, i56, $i59, $i60, $i61, $i66, $i67, i70, $i72, $i73, $i74, $i78, $i79, $i80, $i81, $i87, i88, $i90, $i92, $i94, $i95, $i97, $i98, $i99, i100, $i101, $i102, $i104, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i115, $i116, $i118, $i120, $i121, i122, $i125, $i126, $i127, $i128, $i129, $i130, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i144, $i145, $i146, $i147, i150, $i151, $i152, $i154, $i155, $i156, $i158, $i159, i160, $i163, $i164, $i165, $i166, $i167, i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, i201, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, i213, $i214, $i215, $i216, $i217, $i223, $i224, $i225, $i226, i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, i240, $i241, $i242, $i243;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15, $z16, $z17, $z18, $z19, z20, $z21, $z22, $z23, $z24, $z25, $z26, z27, $z28, z29, z30, z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41;
        chess.Search$SearchTreeInfo r1, r3, $r12, $r23, $r31, $r37, $r43, $r52, $r98, $r100, $r103, $r113, $r115, $r117;
        long l5, l6, $l30, l35, $l36, $l38, $l39, $l41, $l43, $l44, $l46, $l47, l55, $l57, $l62, $l64, $l68, $l82, $l91, $l103, $l117, $l123, $l142, $l148, l157, $l169, $l218, $l219, $l220, $l221, $l222, $l244, $l246, $l248, $l250;
        chess.Move r2, r4, r5, r6, $r10, $r53, $r54, $r56, $r61, $r63, $r75, $r77, $r80, $r101, $r107, $r109, $r168, $r169, $r170, r176, $r189, $r192, $r194;
        short s21, s96, s114, s153;
        byte b22, $b37, $b40, $b42, $b45, $b48, $b71, $b75, $b76, $b77, $b83, $b85, b86, b89, $b131, b132, $b162, $b168, b202;
        chess.TreeLogger $r7, $r9, $r20, $r21, $r28, $r29, $r34, $r35, $r40, $r41, $r49, $r50, $r57, $r58, $r64, $r65, $r78, $r79, $r82, $r83, $r110, $r111, $r118, $r119, $r134, $r135, $r182, $r183, $r185, $r186, $r190, $r191, $r195, $r196;
        chess.Search$SearchTreeInfo[] $r8, $r11, $r22, $r30, $r36, $r42, $r46, $r51, $r97, $r99, $r102, $r112, $r114, $r116;
        chess.Search$StopSearch $r14;
        int[] $r15, $r16, $r139, $r143, $r155, $r157;
        chess.Position $r17, $r18, $r19, $r25, $r27, $r38, $r47, $r60, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r74, $r81, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r92, $r93, $r94, $r95, $r96, $r104, $r105, $r106, $r121, $r125, $r128, $r131, $r132, $r136, $r137, $r138, $r140, $r141, $r142, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r156, $r158, $r161, $r162, $r166, $r167, $r171, $r174, $r177, $r179;
        chess.MoveGen $r24, $r32, $r33, $r124, $r127, $r133, $r181, $r184, $r197;
        chess.MoveGen$MoveList r26, r126;
        long[] $r39, $r159;
        chess.TranspositionTable $r44, $r55, $r62, $r76, $r108, $r122, $r180, $r187, $r193;
        chess.TranspositionTable$TTEntry r45, r123;
        chess.KillerTable $r48, $r172;
        chess.Evaluate $r59, $r73, $r91, $r120;
        chess.UndoInfo r129;
        chess.Move[] $r130, $r175, $r188;
        chess.History $r173, $r178;

        r0 := @this: chess.Search;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        z0 := @parameter5: boolean;
        $r7 = r0.<chess.Search: chess.TreeLogger log>;
        if $r7 == null goto label0;

        $r8 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $i29 = i2 - 1;
        r1 = $r8[$i29];
        $r9 = r0.<chess.Search: chess.TreeLogger log>;
        $l30 = r1.<chess.Search$SearchTreeInfo: long nodeIdx>;
        $r10 = r1.<chess.Search$SearchTreeInfo: chess.Move currentMove>;
        $i31 = i3 / 8;
        l5 = virtualinvoke $r9.<chess.TreeLogger: long logNodeStart(long,chess.Move,int,int,int,int)>($l30, $r10, i0, i1, i2, $i31);
        $r11 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $r12 = $r11[i2];
        $r12.<chess.Search$SearchTreeInfo: long nodeIdx> = l5;

     label0:
        $i32 = r0.<chess.Search: int nodesToGo>;
        $i33 = $i32 - 1;
        r0.<chess.Search: int nodesToGo> = $i33;
        if $i33 > 0 goto label6;

        $i34 = r0.<chess.Search: int nodesBetweenTimeCheck>;
        r0.<chess.Search: int nodesToGo> = $i34;
        l35 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $z7 = r0.<chess.Search: boolean searchNeedMoreTime>;
        if $z7 == 0 goto label1;

        $l36 = r0.<chess.Search: long maxTimeMillis>;
        goto label2;

     label1:
        $l36 = r0.<chess.Search: long minTimeMillis>;

     label2:
        l6 = $l36;
        $b37 = l6 cmp 0L;
        if $b37 < 0 goto label3;

        $l38 = r0.<chess.Search: long tStart>;
        $l39 = l35 - $l38;
        $b40 = $l39 cmp l6;
        if $b40 >= 0 goto label4;

     label3:
        $l41 = r0.<chess.Search: long maxNodes>;
        $b42 = $l41 cmp 0L;
        if $b42 < 0 goto label5;

        $l43 = r0.<chess.Search: long totalNodes>;
        $l44 = r0.<chess.Search: long maxNodes>;
        $b45 = $l43 cmp $l44;
        if $b45 < 0 goto label5;

     label4:
        $r14 = new chess.Search$StopSearch;
        specialinvoke $r14.<chess.Search$StopSearch: void <init>()>();
        throw $r14;

     label5:
        $l46 = r0.<chess.Search: long tLastStats>;
        $l47 = l35 - $l46;
        $b48 = $l47 cmp 1000L;
        if $b48 < 0 goto label6;

        specialinvoke r0.<chess.Search: void notifyStats()>();

     label6:
        $z8 = r0.<chess.Search: boolean verbose>;
        if $z8 == 0 goto label8;

        if i2 >= 20 goto label7;

        $r15 = r0.<chess.Search: int[] nodesPlyVec>;
        $i50 = $r15[i2];
        $i51 = $i50 + 1;
        $r15[i2] = $i51;

     label7:
        if i3 >= 160 goto label8;

        $r16 = r0.<chess.Search: int[] nodesDepthVec>;
        $i52 = i3 / 8;
        $i53 = $r16[$i52];
        $i54 = $i53 + 1;
        $r16[$i52] = $i54;

     label8:
        $r17 = r0.<chess.Search: chess.Position pos>;
        l55 = virtualinvoke $r17.<chess.Position: long historyHash()>();
        $r18 = r0.<chess.Search: chess.Position pos>;
        $z9 = staticinvoke <chess.Search: boolean canClaimDraw50(chess.Position)>($r18);
        if $z9 == 0 goto label15;

        $r19 = r0.<chess.Search: chess.Position pos>;
        $z10 = staticinvoke <chess.MoveGen: boolean canTakeKing(chess.Position)>($r19);
        if $z10 == 0 goto label10;

        i56 = 32000 - i2;
        $r20 = r0.<chess.Search: chess.TreeLogger log>;
        if $r20 == null goto label9;

        $r21 = r0.<chess.Search: chess.TreeLogger log>;
        $r22 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $r23 = $r22[i2];
        $l57 = $r23.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r21.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l57, i56, 0, -32767, l55);

     label9:
        return i56;

     label10:
        if z0 == 0 goto label13;

        $r24 = r0.<chess.Search: chess.MoveGen moveGen>;
        $r25 = r0.<chess.Search: chess.Position pos>;
        r26 = virtualinvoke $r24.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>($r25);
        $r27 = r0.<chess.Search: chess.Position pos>;
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>($r27, r26);
        $i59 = r26.<chess.MoveGen$MoveList: int size>;
        if $i59 != 0 goto label12;

        $i60 = i2 + 1;
        $i61 = 32000 - $i60;
        i7 = neg $i61;
        $r28 = r0.<chess.Search: chess.TreeLogger log>;
        if $r28 == null goto label11;

        $r29 = r0.<chess.Search: chess.TreeLogger log>;
        $r30 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $r31 = $r30[i2];
        $l62 = $r31.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r29.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l62, i7, 0, -32767, l55);

     label11:
        $r32 = r0.<chess.Search: chess.MoveGen moveGen>;
        virtualinvoke $r32.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r26);
        return i7;

     label12:
        $r33 = r0.<chess.Search: chess.MoveGen moveGen>;
        virtualinvoke $r33.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r26);

     label13:
        $r34 = r0.<chess.Search: chess.TreeLogger log>;
        if $r34 == null goto label14;

        $r35 = r0.<chess.Search: chess.TreeLogger log>;
        $r36 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $r37 = $r36[i2];
        $l64 = $r37.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r35.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l64, 0, 0, -32767, l55);

     label14:
        return 0;

     label15:
        $r38 = r0.<chess.Search: chess.Position pos>;
        $r39 = r0.<chess.Search: long[] posHashList>;
        $i66 = r0.<chess.Search: int posHashListSize>;
        $i67 = r0.<chess.Search: int posHashFirstNew>;
        $z11 = staticinvoke <chess.Search: boolean canClaimDrawRep(chess.Position,long[],int,int)>($r38, $r39, $i66, $i67);
        if $z11 == 0 goto label17;

        $r40 = r0.<chess.Search: chess.TreeLogger log>;
        if $r40 == null goto label16;

        $r41 = r0.<chess.Search: chess.TreeLogger log>;
        $r42 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $r43 = $r42[i2];
        $l68 = $r43.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r41.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l68, 0, 0, -32767, l55);

     label16:
        return 0;

     label17:
        i70 = -32767;
        $r44 = r0.<chess.Search: chess.TranspositionTable tt>;
        r45 = virtualinvoke $r44.<chess.TranspositionTable: chess.TranspositionTable$TTEntry probe(long)>(l55);
        r2 = null;
        $r46 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        r3 = $r46[i2];
        $b71 = r45.<chess.TranspositionTable$TTEntry: byte type>;
        if $b71 == 3 goto label23;

        i8 = virtualinvoke r45.<chess.TranspositionTable$TTEntry: int getScore(int)>(i2);
        i70 = r45.<chess.TranspositionTable$TTEntry: short evalScore>;
        $i72 = staticinvoke <java.lang.Math: int abs(int)>(i8);
        i9 = 32000 - $i72;
        i10 = virtualinvoke r45.<chess.TranspositionTable$TTEntry: int getDepth()>();
        r2 = r3.<chess.Search$SearchTreeInfo: chess.Move hashMove>;
        virtualinvoke r45.<chess.TranspositionTable$TTEntry: void getMove(chess.Move)>(r2);
        $i73 = i0 + 1;
        if i1 != $i73 goto label23;

        if i10 >= i3 goto label18;

        $i74 = i9 * 8;
        if i10 < $i74 goto label23;

     label18:
        $b75 = r45.<chess.TranspositionTable$TTEntry: byte type>;
        if $b75 == 0 goto label20;

        $b76 = r45.<chess.TranspositionTable$TTEntry: byte type>;
        if $b76 != 1 goto label19;

        if i8 >= i1 goto label20;

     label19:
        $b77 = r45.<chess.TranspositionTable$TTEntry: byte type>;
        if $b77 != 2 goto label23;

        if i8 > i0 goto label23;

     label20:
        if i8 < i1 goto label21;

        r2 = r3.<chess.Search$SearchTreeInfo: chess.Move hashMove>;
        if r2 == null goto label21;

        $i78 = r2.<chess.Move: int 'from'>;
        $i79 = r2.<chess.Move: int 'to'>;
        if $i78 == $i79 goto label21;

        $r47 = r0.<chess.Search: chess.Position pos>;
        $i80 = r2.<chess.Move: int 'to'>;
        $i81 = virtualinvoke $r47.<chess.Position: int getPiece(int)>($i80);
        if $i81 != 0 goto label21;

        $r48 = r0.<chess.Search: chess.KillerTable kt>;
        virtualinvoke $r48.<chess.KillerTable: void addKiller(int,chess.Move)>(i2, r2);

     label21:
        r3.<chess.Search$SearchTreeInfo: chess.Move bestMove> = r2;
        $r49 = r0.<chess.Search: chess.TreeLogger log>;
        if $r49 == null goto label22;

        $r50 = r0.<chess.Search: chess.TreeLogger log>;
        $r51 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $r52 = $r51[i2];
        $l82 = $r52.<chess.Search$SearchTreeInfo: long nodeIdx>;
        $b83 = r45.<chess.TranspositionTable$TTEntry: byte type>;
        virtualinvoke $r50.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l82, i8, $b83, i70, l55);

     label22:
        return i8;

     label23:
        if z0 == 0 goto label24;

        $b85 = 8;
        goto label25;

     label24:
        $b85 = 0;

     label25:
        b86 = $b85;
        $i87 = i3 + b86;
        if $i87 > 0 goto label29;

        r0.<chess.Search: int q0Eval> = i70;
        $r53 = r3.<chess.Search$SearchTreeInfo: chess.Move bestMove>;
        virtualinvoke $r53.<chess.Move: void clear()>();
        i88 = specialinvoke r0.<chess.Search: int quiesce(int,int,int,int,boolean)>(i0, i1, i2, 0, z0);
        b89 = 0;
        if i88 > i0 goto label26;

        b89 = 2;
        goto label27;

     label26:
        if i88 < i1 goto label27;

        b89 = 1;

     label27:
        $r54 = r3.<chess.Search$SearchTreeInfo: chess.Move bestMove>;
        $r54.<chess.Move: int score> = i88;
        $r55 = r0.<chess.Search: chess.TranspositionTable tt>;
        $r56 = r3.<chess.Search$SearchTreeInfo: chess.Move bestMove>;
        $i90 = r0.<chess.Search: int q0Eval>;
        virtualinvoke $r55.<chess.TranspositionTable: void insert(long,chess.Move,int,int,int,int)>(l55, $r56, b89, i2, i3, $i90);
        $r57 = r0.<chess.Search: chess.TreeLogger log>;
        if $r57 == null goto label28;

        $r58 = r0.<chess.Search: chess.TreeLogger log>;
        $l91 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        $i92 = r0.<chess.Search: int q0Eval>;
        virtualinvoke $r58.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l91, i88, b89, $i92, l55);

     label28:
        return i88;

     label29:
        $i94 = staticinvoke <java.lang.Math: int abs(int)>(i0);
        if $i94 > 16000 goto label32;

        if i3 >= 32 goto label32;

        $i95 = i0 + 1;
        if i1 != $i95 goto label32;

        if i70 != -32767 goto label30;

        $r59 = r0.<chess.Search: chess.Evaluate eval>;
        $r60 = r0.<chess.Search: chess.Position pos>;
        i70 = virtualinvoke $r59.<chess.Evaluate: int evalPos(chess.Position)>($r60);

     label30:
        s96 = 250;
        $i97 = i1 - 250;
        if i70 >= $i97 goto label32;

        r0.<chess.Search: int q0Eval> = i70;
        $i98 = i0 - 250;
        $i99 = i1 - 250;
        i100 = specialinvoke r0.<chess.Search: int quiesce(int,int,int,int,boolean)>($i98, $i99, i2, 0, z0);
        $i101 = i0 - 250;
        if i100 > $i101 goto label32;

        $r61 = <chess.Search: chess.Move emptyMove>;
        $r61.<chess.Move: int score> = i100;
        $r62 = r0.<chess.Search: chess.TranspositionTable tt>;
        $r63 = <chess.Search: chess.Move emptyMove>;
        $i102 = r0.<chess.Search: int q0Eval>;
        virtualinvoke $r62.<chess.TranspositionTable: void insert(long,chess.Move,int,int,int,int)>(l55, $r63, 2, i2, i3, $i102);
        $r64 = r0.<chess.Search: chess.TreeLogger log>;
        if $r64 == null goto label31;

        $r65 = r0.<chess.Search: chess.TreeLogger log>;
        $l103 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        $i104 = r0.<chess.Search: int q0Eval>;
        virtualinvoke $r65.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l103, i100, 2, $i104, l55);

     label31:
        return i100;

     label32:
        if z0 != 0 goto label45;

        if i3 >= 40 goto label45;

        if b86 != 0 goto label45;

        $i106 = staticinvoke <java.lang.Math: int abs(int)>(i0);
        if $i106 > 16000 goto label45;

        $i107 = staticinvoke <java.lang.Math: int abs(int)>(i1);
        if $i107 > 16000 goto label45;

        $r66 = r0.<chess.Search: chess.Position pos>;
        $z12 = $r66.<chess.Position: boolean whiteMove>;
        if $z12 == 0 goto label35;

        $r67 = r0.<chess.Search: chess.Position pos>;
        $i108 = $r67.<chess.Position: int wMtrl>;
        $r68 = r0.<chess.Search: chess.Position pos>;
        $i109 = $r68.<chess.Position: int wMtrlPawns>;
        if $i108 <= $i109 goto label33;

        $r69 = r0.<chess.Search: chess.Position pos>;
        $i110 = $r69.<chess.Position: int wMtrlPawns>;
        if $i110 <= 0 goto label33;

        $z13 = 1;
        goto label34;

     label33:
        $z13 = 0;

     label34:
        z14 = $z13;
        goto label38;

     label35:
        $r70 = r0.<chess.Search: chess.Position pos>;
        $i111 = $r70.<chess.Position: int bMtrl>;
        $r71 = r0.<chess.Search: chess.Position pos>;
        $i112 = $r71.<chess.Position: int bMtrlPawns>;
        if $i111 <= $i112 goto label36;

        $r72 = r0.<chess.Search: chess.Position pos>;
        $i113 = $r72.<chess.Position: int bMtrlPawns>;
        if $i113 <= 0 goto label36;

        $z15 = 1;
        goto label37;

     label36:
        $z15 = 0;

     label37:
        z14 = $z15;

     label38:
        if z14 == 0 goto label45;

        if i3 > 8 goto label39;

        s114 = 204;
        goto label42;

     label39:
        if i3 > 16 goto label40;

        s114 = 420;
        goto label42;

     label40:
        if i3 > 24 goto label41;

        s114 = 533;
        goto label42;

     label41:
        s114 = 788;

     label42:
        if i70 != -32767 goto label43;

        $r73 = r0.<chess.Search: chess.Evaluate eval>;
        $r74 = r0.<chess.Search: chess.Position pos>;
        i70 = virtualinvoke $r73.<chess.Evaluate: int evalPos(chess.Position)>($r74);

     label43:
        $i115 = i70 - s114;
        if $i115 < i1 goto label45;

        $r75 = <chess.Search: chess.Move emptyMove>;
        $i116 = i70 - s114;
        $r75.<chess.Move: int score> = $i116;
        $r76 = r0.<chess.Search: chess.TranspositionTable tt>;
        $r77 = <chess.Search: chess.Move emptyMove>;
        virtualinvoke $r76.<chess.TranspositionTable: void insert(long,chess.Move,int,int,int,int)>(l55, $r77, 1, i2, i3, i70);
        $r78 = r0.<chess.Search: chess.TreeLogger log>;
        if $r78 == null goto label44;

        $r79 = r0.<chess.Search: chess.TreeLogger log>;
        $l117 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        $i118 = i70 - s114;
        virtualinvoke $r79.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l117, $i118, 1, i70, l55);

     label44:
        $i120 = i70 - s114;
        return $i120;

     label45:
        $r80 = <chess.Search: chess.Move emptyMove>;
        r3.<chess.Search$SearchTreeInfo: chess.Move currentMove> = $r80;
        if i3 < 24 goto label66;

        if z0 != 0 goto label66;

        $z16 = r3.<chess.Search$SearchTreeInfo: boolean allowNullMove>;
        if $z16 == 0 goto label66;

        $i121 = staticinvoke <java.lang.Math: int abs(int)>(i1);
        if $i121 > 16000 goto label66;

        $r81 = r0.<chess.Search: chess.Position pos>;
        $z17 = staticinvoke <chess.MoveGen: boolean canTakeKing(chess.Position)>($r81);
        if $z17 == 0 goto label47;

        i122 = 32000 - i2;
        $r82 = r0.<chess.Search: chess.TreeLogger log>;
        if $r82 == null goto label46;

        $r83 = r0.<chess.Search: chess.TreeLogger log>;
        $l123 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r83.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l123, i122, 0, i70, l55);

     label46:
        return i122;

     label47:
        $r84 = r0.<chess.Search: chess.Position pos>;
        $z18 = $r84.<chess.Position: boolean whiteMove>;
        if $z18 == 0 goto label50;

        $r85 = r0.<chess.Search: chess.Position pos>;
        $i125 = $r85.<chess.Position: int wMtrl>;
        $r86 = r0.<chess.Search: chess.Position pos>;
        $i126 = $r86.<chess.Position: int wMtrlPawns>;
        if $i125 <= $i126 goto label48;

        $r87 = r0.<chess.Search: chess.Position pos>;
        $i127 = $r87.<chess.Position: int wMtrlPawns>;
        if $i127 <= 0 goto label48;

        $z19 = 1;
        goto label49;

     label48:
        $z19 = 0;

     label49:
        z20 = $z19;
        goto label53;

     label50:
        $r88 = r0.<chess.Search: chess.Position pos>;
        $i128 = $r88.<chess.Position: int bMtrl>;
        $r89 = r0.<chess.Search: chess.Position pos>;
        $i129 = $r89.<chess.Position: int bMtrlPawns>;
        if $i128 <= $i129 goto label51;

        $r90 = r0.<chess.Search: chess.Position pos>;
        $i130 = $r90.<chess.Position: int bMtrlPawns>;
        if $i130 <= 0 goto label51;

        $z21 = 1;
        goto label52;

     label51:
        $z21 = 0;

     label52:
        z20 = $z21;

     label53:
        if z20 == 0 goto label55;

        if i70 != -32767 goto label54;

        $r91 = r0.<chess.Search: chess.Evaluate eval>;
        $r92 = r0.<chess.Search: chess.Position pos>;
        i70 = virtualinvoke $r91.<chess.Evaluate: int evalPos(chess.Position)>($r92);

     label54:
        if i70 >= i1 goto label55;

        z20 = 0;

     label55:
        if z20 == 0 goto label66;

        if i3 <= 48 goto label56;

        $b131 = 32;
        goto label57;

     label56:
        $b131 = 24;

     label57:
        b132 = $b131;
        $r93 = r0.<chess.Search: chess.Position pos>;
        $r94 = r0.<chess.Search: chess.Position pos>;
        $z22 = $r94.<chess.Position: boolean whiteMove>;
        if $z22 != 0 goto label58;

        $z23 = 1;
        goto label59;

     label58:
        $z23 = 0;

     label59:
        virtualinvoke $r93.<chess.Position: void setWhiteMove(boolean)>($z23);
        $r95 = r0.<chess.Search: chess.Position pos>;
        i11 = virtualinvoke $r95.<chess.Position: int getEpSquare()>();
        $r96 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r96.<chess.Position: void setEpSquare(int)>(-1);
        $r97 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $i133 = i2 + 1;
        $r98 = $r97[$i133];
        $r98.<chess.Search$SearchTreeInfo: boolean allowNullMove> = 0;
        $r99 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $i134 = i2 + 1;
        $r100 = $r99[$i134];
        $r101 = $r100.<chess.Search$SearchTreeInfo: chess.Move bestMove>;
        virtualinvoke $r101.<chess.Move: void clear()>();
        $i135 = neg i1;
        $i136 = i1 - 1;
        $i137 = neg $i136;
        $i138 = i2 + 1;
        $i139 = i3 - b132;
        $i140 = virtualinvoke r0.<chess.Search: int negaScout(int,int,int,int,int,boolean)>($i135, $i137, $i138, $i139, -1, 0);
        i12 = neg $i140;
        $r102 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $i141 = i2 + 1;
        $r103 = $r102[$i141];
        $r103.<chess.Search$SearchTreeInfo: boolean allowNullMove> = 1;
        $r104 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r104.<chess.Position: void setEpSquare(int)>(i11);
        $r105 = r0.<chess.Search: chess.Position pos>;
        $r106 = r0.<chess.Search: chess.Position pos>;
        $z24 = $r106.<chess.Position: boolean whiteMove>;
        if $z24 != 0 goto label60;

        $z25 = 1;
        goto label61;

     label60:
        $z25 = 0;

     label61:
        virtualinvoke $r105.<chess.Position: void setWhiteMove(boolean)>($z25);
        if i12 < i1 goto label64;

        if i12 <= 16000 goto label62;

        i12 = i1;

     label62:
        $r107 = <chess.Search: chess.Move emptyMove>;
        $r107.<chess.Move: int score> = i12;
        $r108 = r0.<chess.Search: chess.TranspositionTable tt>;
        $r109 = <chess.Search: chess.Move emptyMove>;
        virtualinvoke $r108.<chess.TranspositionTable: void insert(long,chess.Move,int,int,int,int)>(l55, $r109, 1, i2, i3, i70);
        $r110 = r0.<chess.Search: chess.TreeLogger log>;
        if $r110 == null goto label63;

        $r111 = r0.<chess.Search: chess.TreeLogger log>;
        $l142 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r111.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l142, i12, 1, i70, l55);

     label63:
        return i12;

     label64:
        $r112 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $i144 = i2 - 1;
        $r113 = $r112[$i144];
        $i145 = $r113.<chess.Search$SearchTreeInfo: int lmr>;
        if $i145 <= 0 goto label66;

        if i3 >= 40 goto label66;

        $r114 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $i146 = i2 - 1;
        $r115 = $r114[$i146];
        r4 = $r115.<chess.Search$SearchTreeInfo: chess.Move currentMove>;
        $r116 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $i147 = i2 + 1;
        $r117 = $r116[$i147];
        r5 = $r117.<chess.Search$SearchTreeInfo: chess.Move bestMove>;
        $z26 = specialinvoke r0.<chess.Search: boolean relatedMoves(chess.Move,chess.Move)>(r4, r5);
        if $z26 == 0 goto label66;

        $r118 = r0.<chess.Search: chess.TreeLogger log>;
        if $r118 == null goto label65;

        $r119 = r0.<chess.Search: chess.TreeLogger log>;
        $l148 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r119.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l148, i0, 2, i70, l55);

     label65:
        return i0;

     label66:
        z27 = 0;
        i150 = i0;
        if z0 != 0 goto label72;

        if i3 >= 40 goto label72;

        if b86 != 0 goto label72;

        $i151 = staticinvoke <java.lang.Math: int abs(int)>(i0);
        if $i151 > 16000 goto label72;

        $i152 = staticinvoke <java.lang.Math: int abs(int)>(i1);
        if $i152 > 16000 goto label72;

        if i3 > 8 goto label67;

        s153 = 61;
        goto label70;

     label67:
        if i3 > 16 goto label68;

        s153 = 144;
        goto label70;

     label68:
        if i3 > 24 goto label69;

        s153 = 268;
        goto label70;

     label69:
        s153 = 334;

     label70:
        if i70 != -32767 goto label71;

        $r120 = r0.<chess.Search: chess.Evaluate eval>;
        $r121 = r0.<chess.Search: chess.Position pos>;
        i70 = virtualinvoke $r120.<chess.Evaluate: int evalPos(chess.Position)>($r121);

     label71:
        i150 = i70 + s153;
        if i150 > i0 goto label72;

        z27 = 1;

     label72:
        if i3 <= 32 goto label79;

        if r2 == null goto label73;

        $i154 = r2.<chess.Move: int 'from'>;
        $i155 = r2.<chess.Move: int 'to'>;
        if $i154 != $i155 goto label79;

     label73:
        $i156 = i0 + 1;
        if i1 <= $i156 goto label74;

        $z28 = 1;
        goto label75;

     label74:
        $z28 = 0;

     label75:
        z29 = $z28;
        if z29 != 0 goto label76;

        if i3 <= 64 goto label79;

     label76:
        l157 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        if z29 == 0 goto label77;

        $i158 = i3 - 16;
        goto label78;

     label77:
        $i159 = i3 * 3;
        $i158 = $i159 / 8;

     label78:
        i160 = $i158;
        virtualinvoke r0.<chess.Search: int negaScout(int,int,int,int,int,boolean)>(i0, i1, i2, i160, -1, z0);
        r3.<chess.Search$SearchTreeInfo: long nodeIdx> = l157;
        $r122 = r0.<chess.Search: chess.TranspositionTable tt>;
        r123 = virtualinvoke $r122.<chess.TranspositionTable: chess.TranspositionTable$TTEntry probe(long)>(l55);
        $b162 = r123.<chess.TranspositionTable$TTEntry: byte type>;
        if $b162 == 3 goto label79;

        r2 = r3.<chess.Search$SearchTreeInfo: chess.Move hashMove>;
        virtualinvoke r123.<chess.TranspositionTable$TTEntry: void getMove(chess.Move)>(r2);

     label79:
        if z0 == 0 goto label80;

        $r124 = r0.<chess.Search: chess.MoveGen moveGen>;
        $r125 = r0.<chess.Search: chess.Position pos>;
        r126 = virtualinvoke $r124.<chess.MoveGen: chess.MoveGen$MoveList checkEvasions(chess.Position)>($r125);
        goto label81;

     label80:
        $r127 = r0.<chess.Search: chess.MoveGen moveGen>;
        $r128 = r0.<chess.Search: chess.Position pos>;
        r126 = virtualinvoke $r127.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>($r128);

     label81:
        z30 = 0;
        z31 = 1;
        $z32 = staticinvoke <chess.Search: boolean selectHashMove(chess.MoveGen$MoveList,chess.Move)>(r126, r2);
        if $z32 != 0 goto label82;

        virtualinvoke r0.<chess.Search: void scoreMoveList(chess.MoveGen$MoveList,int)>(r126, i2);
        z30 = 1;
        z31 = 0;

     label82:
        r129 = r3.<chess.Search$SearchTreeInfo: chess.UndoInfo undoInfo>;
        z1 = 0;
        $i163 = i2 + 1;
        $i164 = 32000 - $i163;
        i13 = neg $i164;
        i14 = i1;
        i15 = i13;
        i16 = -1;
        i17 = 0;
        i18 = 0;

     label83:
        $i165 = r126.<chess.MoveGen$MoveList: int size>;
        if i18 >= $i165 goto label127;

        if i18 != 1 goto label84;

        if z30 != 0 goto label84;

        virtualinvoke r0.<chess.Search: void scoreMoveList(chess.MoveGen$MoveList,int,int)>(r126, i2, 1);
        z30 = 1;

     label84:
        if i18 > 0 goto label85;

        if z31 != 0 goto label86;

     label85:
        staticinvoke <chess.Search: void selectBest(chess.MoveGen$MoveList,int)>(r126, i18);

     label86:
        $r130 = r126.<chess.MoveGen$MoveList: chess.Move[] m>;
        r6 = $r130[i18];
        $r131 = r0.<chess.Search: chess.Position pos>;
        $i166 = r6.<chess.Move: int 'to'>;
        $i167 = virtualinvoke $r131.<chess.Position: int getPiece(int)>($i166);
        $r132 = r0.<chess.Search: chess.Position pos>;
        $z33 = $r132.<chess.Position: boolean whiteMove>;
        if $z33 == 0 goto label87;

        $b168 = 7;
        goto label88;

     label87:
        $b168 = 1;

     label88:
        if $i167 != $b168 goto label90;

        $r133 = r0.<chess.Search: chess.MoveGen moveGen>;
        virtualinvoke $r133.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r126);
        i19 = 32000 - i2;
        $r134 = r0.<chess.Search: chess.TreeLogger log>;
        if $r134 == null goto label89;

        $r135 = r0.<chess.Search: chess.TreeLogger log>;
        $l169 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r135.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l169, i19, 0, i70, l55);

     label89:
        return i19;

     label90:
        i171 = -1;
        $r136 = r0.<chess.Search: chess.Position pos>;
        $i172 = r6.<chess.Move: int 'to'>;
        $i173 = virtualinvoke $r136.<chess.Position: int getPiece(int)>($i172);
        if $i173 == 0 goto label91;

        $z34 = 1;
        goto label92;

     label91:
        $z34 = 0;

     label92:
        z2 = $z34;
        $i174 = r6.<chess.Move: int promoteTo>;
        if $i174 == 0 goto label93;

        $z35 = 1;
        goto label94;

     label93:
        $z35 = 0;

     label94:
        z3 = $z35;
        i20 = -2147483648;
        $i175 = r6.<chess.Move: int score>;
        if $i175 >= 53 goto label96;

        if z2 == 0 goto label95;

        $i176 = r6.<chess.Move: int score>;
        if $i176 >= 0 goto label96;

     label95:
        if z3 != 0 goto label96;

        $z36 = 1;
        goto label97;

     label96:
        $z36 = 0;

     label97:
        z4 = $z36;
        $r137 = r0.<chess.Search: chess.Position pos>;
        z5 = staticinvoke <chess.MoveGen: boolean givesCheck(chess.Position,chess.Move)>($r137, r6);
        z6 = 0;
        if z4 == 0 goto label104;

        if z1 == 0 goto label104;

        if z5 != 0 goto label104;

        $r138 = r0.<chess.Search: chess.Position pos>;
        $z37 = staticinvoke <chess.Search: boolean passedPawnPush(chess.Position,chess.Move)>($r138, r6);
        if $z37 != 0 goto label104;

        $i177 = staticinvoke <java.lang.Math: int abs(int)>(i0);
        if $i177 > 16000 goto label103;

        $i178 = staticinvoke <java.lang.Math: int abs(int)>(i1);
        if $i178 > 16000 goto label103;

        if i3 > 8 goto label98;

        s21 = 3;
        goto label102;

     label98:
        if i3 > 16 goto label99;

        s21 = 6;
        goto label102;

     label99:
        if i3 > 24 goto label100;

        s21 = 12;
        goto label102;

     label100:
        if i3 > 32 goto label101;

        s21 = 24;
        goto label102;

     label101:
        s21 = 256;

     label102:
        if i18 < s21 goto label103;

        goto label126;

     label103:
        if z27 == 0 goto label104;

        z6 = 1;

     label104:
        if z6 == 0 goto label105;

        i179 = i150;
        goto label117;

     label105:
        b22 = 0;
        if b86 != 0 goto label109;

        i23 = <chess.Evaluate: int pV>;
        $i180 = r6.<chess.Move: int 'to'>;
        if $i180 != i4 goto label107;

        if i20 != -2147483648 goto label106;

        i20 = virtualinvoke r0.<chess.Search: int SEE(chess.Move)>(r6);

     label106:
        $r139 = <chess.Evaluate: int[] pieceValue>;
        $r140 = r0.<chess.Search: chess.Position pos>;
        $i181 = r6.<chess.Move: int 'to'>;
        $i182 = virtualinvoke $r140.<chess.Position: int getPiece(int)>($i181);
        i24 = $r139[$i182];
        $i183 = i23 / 2;
        $i184 = i24 - $i183;
        if i20 <= $i184 goto label107;

        b22 = 8;

     label107:
        if b22 >= 8 goto label109;

        if z2 == 0 goto label109;

        $r141 = r0.<chess.Search: chess.Position pos>;
        $i185 = $r141.<chess.Position: int wMtrlPawns>;
        $r142 = r0.<chess.Search: chess.Position pos>;
        $i186 = $r142.<chess.Position: int bMtrlPawns>;
        $i187 = $i185 + $i186;
        if $i187 <= i23 goto label109;

        $r143 = <chess.Evaluate: int[] pieceValue>;
        $r144 = r0.<chess.Search: chess.Position pos>;
        $i188 = r6.<chess.Move: int 'to'>;
        $i189 = virtualinvoke $r144.<chess.Position: int getPiece(int)>($i188);
        i190 = $r143[$i189];
        $r145 = r0.<chess.Search: chess.Position pos>;
        $z38 = $r145.<chess.Position: boolean whiteMove>;
        if $z38 == 0 goto label108;

        $r146 = r0.<chess.Search: chess.Position pos>;
        $i191 = $r146.<chess.Position: int wMtrl>;
        $r147 = r0.<chess.Search: chess.Position pos>;
        $i192 = $r147.<chess.Position: int wMtrlPawns>;
        if $i191 != $i192 goto label109;

        $r148 = r0.<chess.Search: chess.Position pos>;
        $i193 = $r148.<chess.Position: int bMtrl>;
        $r149 = r0.<chess.Search: chess.Position pos>;
        $i194 = $r149.<chess.Position: int bMtrlPawns>;
        $i195 = $i193 - $i194;
        if $i195 != i190 goto label109;

        b22 = 8;
        goto label109;

     label108:
        $r150 = r0.<chess.Search: chess.Position pos>;
        $i196 = $r150.<chess.Position: int bMtrl>;
        $r151 = r0.<chess.Search: chess.Position pos>;
        $i197 = $r151.<chess.Position: int bMtrlPawns>;
        if $i196 != $i197 goto label109;

        $r152 = r0.<chess.Search: chess.Position pos>;
        $i198 = $r152.<chess.Position: int wMtrl>;
        $r153 = r0.<chess.Search: chess.Position pos>;
        $i199 = $r153.<chess.Position: int wMtrlPawns>;
        $i200 = $i198 - $i199;
        if $i200 != i190 goto label109;

        b22 = 8;

     label109:
        i201 = staticinvoke <java.lang.Math: int max(int,int)>(b86, b22);
        b202 = 0;
        if i3 < 24 goto label111;

        if z4 == 0 goto label111;

        if i201 != 0 goto label111;

        if z5 != 0 goto label111;

        $r154 = r0.<chess.Search: chess.Position pos>;
        $z39 = staticinvoke <chess.Search: boolean passedPawnPush(chess.Position,chess.Move)>($r154, r6);
        if $z39 != 0 goto label111;

        i17 = i17 + 1;
        if i17 <= 3 goto label110;

        if i3 <= 24 goto label110;

        if z2 != 0 goto label110;

        b202 = 16;
        goto label111;

     label110:
        b202 = 8;

     label111:
        $i203 = i3 - 8;
        $i204 = $i203 + i201;
        i25 = $i204 - b202;
        if z2 == 0 goto label113;

        if z5 != 0 goto label112;

        $i205 = i3 + i201;
        if $i205 <= 8 goto label113;

     label112:
        $r155 = <chess.Evaluate: int[] pieceValue>;
        $r156 = r0.<chess.Search: chess.Position pos>;
        $i206 = r6.<chess.Move: int 'from'>;
        $i207 = virtualinvoke $r156.<chess.Position: int getPiece(int)>($i206);
        i26 = $r155[$i207];
        $r157 = <chess.Evaluate: int[] pieceValue>;
        $r158 = r0.<chess.Search: chess.Position pos>;
        $i208 = r6.<chess.Move: int 'to'>;
        $i209 = virtualinvoke $r158.<chess.Position: int getPiece(int)>($i208);
        i27 = $r157[$i209];
        i28 = <chess.Evaluate: int pV>;
        $i210 = i27 - i26;
        $i211 = staticinvoke <java.lang.Math: int abs(int)>($i210);
        $i212 = i28 / 2;
        if $i211 >= $i212 goto label113;

        i213 = virtualinvoke r0.<chess.Search: int SEE(chess.Move)>(r6);
        $i214 = staticinvoke <java.lang.Math: int abs(int)>(i213);
        $i215 = i28 / 2;
        if $i214 >= $i215 goto label113;

        i171 = r6.<chess.Move: int 'to'>;

     label113:
        $r159 = r0.<chess.Search: long[] posHashList>;
        $i216 = r0.<chess.Search: int posHashListSize>;
        $i217 = $i216 + 1;
        r0.<chess.Search: int posHashListSize> = $i217;
        $r161 = r0.<chess.Search: chess.Position pos>;
        $l218 = virtualinvoke $r161.<chess.Position: long zobristHash()>();
        $r159[$i216] = $l218;
        $r162 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r162.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r6, r129);
        $l219 = r0.<chess.Search: long nodes>;
        $l220 = $l219 + 1L;
        r0.<chess.Search: long nodes> = $l220;
        $l221 = r0.<chess.Search: long totalNodes>;
        $l222 = $l221 + 1L;
        r0.<chess.Search: long totalNodes> = $l222;
        r3.<chess.Search$SearchTreeInfo: chess.Move currentMove> = r6;
        r3.<chess.Search$SearchTreeInfo: int lmr> = b202;
        $i223 = neg i14;
        $i224 = neg i0;
        $i225 = i2 + 1;
        $i226 = virtualinvoke r0.<chess.Search: int negaScout(int,int,int,int,int,boolean)>($i223, $i224, $i225, i25, i171, z5);
        i179 = neg $i226;
        if b202 <= 0 goto label114;

        if i179 > i0 goto label115;

     label114:
        if i179 <= i0 goto label116;

        if i179 >= i1 goto label116;

        if i14 == i1 goto label116;

        if i179 == i13 goto label116;

     label115:
        r3.<chess.Search$SearchTreeInfo: int lmr> = 0;
        i227 = i25 + b202;
        $i228 = neg i1;
        $i229 = neg i0;
        $i230 = i2 + 1;
        $i231 = virtualinvoke r0.<chess.Search: int negaScout(int,int,int,int,int,boolean)>($i228, $i229, $i230, i227, i171, z5);
        i179 = neg $i231;

     label116:
        $i232 = r0.<chess.Search: int posHashListSize>;
        $i233 = $i232 - 1;
        r0.<chess.Search: int posHashListSize> = $i233;
        $r166 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r166.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r6, r129);

     label117:
        $z40 = r0.<chess.Search: boolean weak>;
        if $z40 == 0 goto label118;

        if z1 == 0 goto label118;

        $r167 = r0.<chess.Search: chess.Position pos>;
        $z41 = specialinvoke r0.<chess.Search: boolean weakPlaySkipMove(chess.Position,chess.Move,int)>($r167, r6, i2);
        if $z41 == 0 goto label118;

        i179 = i13;

     label118:
        r6.<chess.Move: int score> = i179;
        if i179 == i13 goto label119;

        z1 = 1;

     label119:
        i15 = staticinvoke <java.lang.Math: int max(int,int)>(i15, i179);
        if i179 <= i0 goto label120;

        i0 = i179;
        i16 = i18;
        $r168 = r3.<chess.Search$SearchTreeInfo: chess.Move bestMove>;
        $i234 = r6.<chess.Move: int 'from'>;
        $r168.<chess.Move: int 'from'> = $i234;
        $r169 = r3.<chess.Search$SearchTreeInfo: chess.Move bestMove>;
        $i235 = r6.<chess.Move: int 'to'>;
        $r169.<chess.Move: int 'to'> = $i235;
        $r170 = r3.<chess.Search$SearchTreeInfo: chess.Move bestMove>;
        $i236 = r6.<chess.Move: int promoteTo>;
        $r170.<chess.Move: int promoteTo> = $i236;

     label120:
        if i0 < i1 goto label125;

        $r171 = r0.<chess.Search: chess.Position pos>;
        $i237 = r6.<chess.Move: int 'to'>;
        $i238 = virtualinvoke $r171.<chess.Position: int getPiece(int)>($i237);
        if $i238 != 0 goto label123;

        $r172 = r0.<chess.Search: chess.KillerTable kt>;
        virtualinvoke $r172.<chess.KillerTable: void addKiller(int,chess.Move)>(i2, r6);
        $r173 = r0.<chess.Search: chess.History ht>;
        $r174 = r0.<chess.Search: chess.Position pos>;
        $i239 = i3 / 8;
        virtualinvoke $r173.<chess.History: void addSuccess(chess.Position,chess.Move,int)>($r174, r6, $i239);
        i240 = i18 - 1;

     label121:
        if i240 < 0 goto label123;

        $r175 = r126.<chess.MoveGen$MoveList: chess.Move[] m>;
        r176 = $r175[i240];
        $r177 = r0.<chess.Search: chess.Position pos>;
        $i241 = r176.<chess.Move: int 'to'>;
        $i242 = virtualinvoke $r177.<chess.Position: int getPiece(int)>($i241);
        if $i242 != 0 goto label122;

        $r178 = r0.<chess.Search: chess.History ht>;
        $r179 = r0.<chess.Search: chess.Position pos>;
        $i243 = i3 / 8;
        virtualinvoke $r178.<chess.History: void addFail(chess.Position,chess.Move,int)>($r179, r176, $i243);

     label122:
        i240 = i240 + -1;
        goto label121;

     label123:
        $r180 = r0.<chess.Search: chess.TranspositionTable tt>;
        virtualinvoke $r180.<chess.TranspositionTable: void insert(long,chess.Move,int,int,int,int)>(l55, r6, 1, i2, i3, i70);
        $r181 = r0.<chess.Search: chess.MoveGen moveGen>;
        virtualinvoke $r181.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r126);
        $r182 = r0.<chess.Search: chess.TreeLogger log>;
        if $r182 == null goto label124;

        $r183 = r0.<chess.Search: chess.TreeLogger log>;
        $l244 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r183.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l244, i0, 1, i70, l55);

     label124:
        return i0;

     label125:
        i14 = i0 + 1;

     label126:
        i18 = i18 + 1;
        goto label83;

     label127:
        if z1 != 0 goto label129;

        if z0 != 0 goto label129;

        $r184 = r0.<chess.Search: chess.MoveGen moveGen>;
        virtualinvoke $r184.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r126);
        $r185 = r0.<chess.Search: chess.TreeLogger log>;
        if $r185 == null goto label128;

        $r186 = r0.<chess.Search: chess.TreeLogger log>;
        $l246 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r186.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l246, 0, 0, i70, l55);

     label128:
        return 0;

     label129:
        if i16 < 0 goto label130;

        $r187 = r0.<chess.Search: chess.TranspositionTable tt>;
        $r188 = r126.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r189 = $r188[i16];
        virtualinvoke $r187.<chess.TranspositionTable: void insert(long,chess.Move,int,int,int,int)>(l55, $r189, 0, i2, i3, i70);
        $r190 = r0.<chess.Search: chess.TreeLogger log>;
        if $r190 == null goto label131;

        $r191 = r0.<chess.Search: chess.TreeLogger log>;
        $l248 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r191.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l248, i15, 0, i70, l55);
        goto label131;

     label130:
        $r192 = <chess.Search: chess.Move emptyMove>;
        $r192.<chess.Move: int score> = i15;
        $r193 = r0.<chess.Search: chess.TranspositionTable tt>;
        $r194 = <chess.Search: chess.Move emptyMove>;
        virtualinvoke $r193.<chess.TranspositionTable: void insert(long,chess.Move,int,int,int,int)>(l55, $r194, 2, i2, i3, i70);
        $r195 = r0.<chess.Search: chess.TreeLogger log>;
        if $r195 == null goto label131;

        $r196 = r0.<chess.Search: chess.TreeLogger log>;
        $l250 = r3.<chess.Search$SearchTreeInfo: long nodeIdx>;
        virtualinvoke $r196.<chess.TreeLogger: long logNodeEnd(long,int,int,int,long)>($l250, i15, 2, i70, l55);

     label131:
        $r197 = r0.<chess.Search: chess.MoveGen moveGen>;
        virtualinvoke $r197.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r126);
        return i15;
    }

    private final boolean relatedMoves(chess.Move, chess.Move)
    {
        chess.Search r0;
        chess.Move r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        long[][] $r3;
        long[] $r4;
        long $l10, $l12, $l13;
        byte $b14;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.Move;
        r2 := @parameter1: chess.Move;
        $i0 = r1.<chess.Move: int 'from'>;
        $i1 = r1.<chess.Move: int 'to'>;
        if $i0 == $i1 goto label0;

        $i2 = r2.<chess.Move: int 'from'>;
        $i3 = r2.<chess.Move: int 'to'>;
        if $i2 != $i3 goto label1;

     label0:
        return 0;

     label1:
        $i4 = r1.<chess.Move: int 'to'>;
        $i5 = r2.<chess.Move: int 'from'>;
        if $i4 == $i5 goto label2;

        $i6 = r1.<chess.Move: int 'from'>;
        $i7 = r2.<chess.Move: int 'to'>;
        if $i6 == $i7 goto label2;

        $r3 = <chess.BitBoard: long[][] squaresBetween>;
        $i8 = r2.<chess.Move: int 'from'>;
        $r4 = $r3[$i8];
        $i9 = r2.<chess.Move: int 'to'>;
        $l10 = $r4[$i9];
        $i11 = r1.<chess.Move: int 'from'>;
        $l12 = 1L << $i11;
        $l13 = $l10 & $l12;
        $b14 = $l13 cmp 0L;
        if $b14 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private final boolean weakPlaySkipMove(chess.Position, chess.Move, int)
    {
        chess.Search r0;
        chess.Position r1;
        chess.Move r2, $r9;
        int i0, $i3, $i6, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        long[][] $r3, $r5;
        long l1, $l2, $l4, $l5, $l7, $l8, $l9, $l10, $l11;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        boolean z0, $z1;
        long[] $r4, $r6;
        chess.Search$SearchTreeInfo[] $r7;
        chess.Search$SearchTreeInfo $r8;
        byte $b25;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: chess.Move;
        i0 := @parameter2: int;
        $l2 = virtualinvoke r1.<chess.Position: long zobristHash()>();
        $r3 = <chess.Position: long[][] psHashKeys>;
        $r4 = $r3[0];
        $i3 = r2.<chess.Move: int 'from'>;
        $l4 = $r4[$i3];
        $l5 = $l2 ^ $l4;
        $r5 = <chess.Position: long[][] psHashKeys>;
        $r6 = $r5[0];
        $i6 = r2.<chess.Move: int 'to'>;
        $l7 = $r6[$i6];
        $l8 = $l5 ^ $l7;
        $l9 = r0.<chess.Search: long randomSeed>;
        l1 = $l8 ^ $l9;
        $l10 = l1 & 9223372036854775807L;
        $l11 = $l10 % 1000000000L;
        $d6 = (double) $l11;
        d0 = $d6 / 1.0E9;
        $i12 = r0.<chess.Search: int strength>;
        $d7 = (double) $i12;
        d1 = $d7 * 0.001;
        $d8 = 50.0 * d1;
        $d9 = 17.0 - $d8;
        d2 = $d9 / 3.0;
        $i13 = r1.<chess.Position: int wMtrl>;
        $i14 = r1.<chess.Position: int bMtrl>;
        $i15 = $i13 + $i14;
        $i16 = <chess.Evaluate: int qV>;
        $i17 = $i16 * 4;
        $i18 = staticinvoke <chess.Evaluate: int interpolate(int,int,int,int,int)>($i15, 0, 30, $i17, 100);
        $i19 = i0 * $i18;
        $d10 = (double) $i19;
        d3 = $d10 * 0.01;
        d4 = d3 + d2;
        $d11 = staticinvoke <java.lang.Math: double exp(double)>(d4);
        $d12 = 1.0 + $d11;
        d5 = 1.0 / $d12;
        $i20 = r2.<chess.Move: int 'to'>;
        $i21 = virtualinvoke r1.<chess.Position: int getPiece(int)>($i20);
        if $i21 != 0 goto label0;

        if i0 < 2 goto label0;

        $r7 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $i22 = i0 - 2;
        $r8 = $r7[$i22];
        $r9 = $r8.<chess.Search$SearchTreeInfo: chess.Move currentMove>;
        $i23 = $r9.<chess.Move: int 'to'>;
        $i24 = r2.<chess.Move: int 'from'>;
        if $i23 != $i24 goto label1;

     label0:
        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;
        if z0 == 0 goto label3;

        $d13 = 1.0 - d5;
        $d14 = 1.0 - d5;
        $d15 = $d13 * $d14;
        d5 = 1.0 - $d15;

     label3:
        $b25 = d0 cmpl d5;
        if $b25 <= 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private static final boolean passedPawnPush(chess.Position, chess.Move)
    {
        chess.Position r0;
        chess.Move r1;
        int i0, $i1, $i2, $i7, $i8, $i13;
        boolean $z0, $z1, $z2;
        long[] $r2, $r3, $r4, $r5;
        long $l3, $l4, $l5, $l9, $l10, $l11;
        byte $b6, $b12;

        r0 := @parameter0: chess.Position;
        r1 := @parameter1: chess.Move;
        $i1 = r1.<chess.Move: int 'from'>;
        i0 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i1);
        $z0 = r0.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label4;

        if i0 == 6 goto label0;

        return 0;

     label0:
        $r2 = <chess.BitBoard: long[] wPawnBlockerMask>;
        $i2 = r1.<chess.Move: int 'to'>;
        $l3 = $r2[$i2];
        $r3 = r0.<chess.Position: long[] pieceTypeBB>;
        $l4 = $r3[12];
        $l5 = $l3 & $l4;
        $b6 = $l5 cmp 0L;
        if $b6 == 0 goto label1;

        return 0;

     label1:
        $i7 = r1.<chess.Move: int 'to'>;
        if $i7 < 40 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        if i0 == 12 goto label5;

        return 0;

     label5:
        $r4 = <chess.BitBoard: long[] bPawnBlockerMask>;
        $i8 = r1.<chess.Move: int 'to'>;
        $l9 = $r4[$i8];
        $r5 = r0.<chess.Position: long[] pieceTypeBB>;
        $l10 = $r5[6];
        $l11 = $l9 & $l10;
        $b12 = $l11 cmp 0L;
        if $b12 == 0 goto label6;

        return 0;

     label6:
        $i13 = r1.<chess.Move: int 'to'>;
        if $i13 > 23 goto label7;

        $z2 = 1;
        goto label8;

     label7:
        $z2 = 0;

     label8:
        return $z2;
    }

    private final int quiesce(int, int, int, int, boolean)
    {
        chess.Search r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i43, $i44, $i45, $i46, $i47, i48, $i49, $i50, $i51;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        chess.MoveGen$MoveList r1;
        chess.UndoInfo r2;
        chess.Move r3, $r38;
        chess.Evaluate $r4;
        chess.Position $r5, $r6, $r8, $r10, $r12, $r16, $r17, $r19, $r20, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r35;
        chess.MoveGen $r7, $r9, $r11, $r18, $r39, $r40;
        chess.Search$SearchTreeInfo[] $r13, $r36;
        chess.Search$SearchTreeInfo $r14, r37;
        chess.Move[] $r15;
        byte $b18;
        int[] $r21, $r23;
        long $l39, $l40, $l41, $l42;

        r0 := @this: chess.Search;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        z0 := @parameter4: boolean;
        if z0 == 0 goto label0;

        $i11 = i2 + 1;
        $i12 = 32000 - $i11;
        i4 = neg $i12;
        goto label2;

     label0:
        if i3 != 0 goto label1;

        $i13 = r0.<chess.Search: int q0Eval>;
        if $i13 == -32767 goto label1;

        i4 = r0.<chess.Search: int q0Eval>;
        goto label2;

     label1:
        $r4 = r0.<chess.Search: chess.Evaluate eval>;
        $r5 = r0.<chess.Search: chess.Position pos>;
        i4 = virtualinvoke $r4.<chess.Evaluate: int evalPos(chess.Position)>($r5);
        if i3 != 0 goto label2;

        r0.<chess.Search: int q0Eval> = i4;

     label2:
        if i4 < i1 goto label4;

        if i3 != 0 goto label3;

        $i14 = 32000 - i2;
        if i4 >= $i14 goto label3;

        $r6 = r0.<chess.Search: chess.Position pos>;
        $z4 = staticinvoke <chess.MoveGen: boolean canTakeKing(chess.Position)>($r6);
        if $z4 == 0 goto label3;

        i4 = 32000 - i2;

     label3:
        return i4;

     label4:
        i5 = i4;
        if i4 <= i0 goto label5;

        i0 = i4;

     label5:
        i6 = i4;
        if i3 <= -1 goto label6;

        $z5 = 1;
        goto label7;

     label6:
        $z5 = 0;

     label7:
        z1 = $z5;
        if z0 == 0 goto label8;

        $r7 = r0.<chess.Search: chess.MoveGen moveGen>;
        $r8 = r0.<chess.Search: chess.Position pos>;
        r1 = virtualinvoke $r7.<chess.MoveGen: chess.MoveGen$MoveList checkEvasions(chess.Position)>($r8);
        goto label10;

     label8:
        if z1 == 0 goto label9;

        $r9 = r0.<chess.Search: chess.MoveGen moveGen>;
        $r10 = r0.<chess.Search: chess.Position pos>;
        r1 = virtualinvoke $r9.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalCapturesAndChecks(chess.Position)>($r10);
        goto label10;

     label9:
        $r11 = r0.<chess.Search: chess.MoveGen moveGen>;
        $r12 = r0.<chess.Search: chess.Position pos>;
        r1 = virtualinvoke $r11.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalCaptures(chess.Position)>($r12);

     label10:
        specialinvoke r0.<chess.Search: void scoreMoveListMvvLva(chess.MoveGen$MoveList)>(r1);
        $r13 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        $r14 = $r13[i2];
        r2 = $r14.<chess.Search$SearchTreeInfo: chess.UndoInfo undoInfo>;
        i7 = 0;

     label11:
        $i15 = r1.<chess.MoveGen$MoveList: int size>;
        if i7 >= $i15 goto label28;

        if i7 >= 8 goto label12;

        staticinvoke <chess.Search: void selectBest(chess.MoveGen$MoveList,int)>(r1, i7);

     label12:
        $r15 = r1.<chess.MoveGen$MoveList: chess.Move[] m>;
        r3 = $r15[i7];
        $r16 = r0.<chess.Search: chess.Position pos>;
        $i16 = r3.<chess.Move: int 'to'>;
        $i17 = virtualinvoke $r16.<chess.Position: int getPiece(int)>($i16);
        $r17 = r0.<chess.Search: chess.Position pos>;
        $z6 = $r17.<chess.Position: boolean whiteMove>;
        if $z6 == 0 goto label13;

        $b18 = 7;
        goto label14;

     label13:
        $b18 = 1;

     label14:
        if $i17 != $b18 goto label15;

        $r18 = r0.<chess.Search: chess.MoveGen moveGen>;
        virtualinvoke $r18.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r1);
        $i19 = 32000 - i2;
        return $i19;

     label15:
        z2 = 0;
        z3 = 0;
        if z0 == 0 goto label16;

        goto label22;

     label16:
        $r19 = r0.<chess.Search: chess.Position pos>;
        $i20 = r3.<chess.Move: int 'to'>;
        $i21 = virtualinvoke $r19.<chess.Position: int getPiece(int)>($i20);
        if $i21 != 0 goto label19;

        $i22 = r3.<chess.Move: int promoteTo>;
        if $i22 != 0 goto label19;

        if z1 != 0 goto label17;

        goto label27;

     label17:
        $r20 = r0.<chess.Search: chess.Position pos>;
        z2 = staticinvoke <chess.MoveGen: boolean givesCheck(chess.Position,chess.Move)>($r20, r3);
        z3 = 1;
        if z2 != 0 goto label18;

        goto label27;

     label18:
        $z7 = virtualinvoke r0.<chess.Search: boolean negSEE(chess.Move)>(r3);
        if $z7 == 0 goto label22;

        goto label27;

     label19:
        $z8 = virtualinvoke r0.<chess.Search: boolean negSEE(chess.Move)>(r3);
        if $z8 == 0 goto label20;

        goto label27;

     label20:
        $r21 = <chess.Evaluate: int[] pieceValue>;
        $r22 = r0.<chess.Search: chess.Position pos>;
        $i23 = r3.<chess.Move: int 'to'>;
        $i24 = virtualinvoke $r22.<chess.Position: int getPiece(int)>($i23);
        i8 = $r21[$i24];
        $r23 = <chess.Evaluate: int[] pieceValue>;
        $i25 = r3.<chess.Move: int promoteTo>;
        i9 = $r23[$i25];
        $i26 = i5 + i8;
        $i27 = $i26 + i9;
        i10 = $i27 + 200;
        if i10 >= i0 goto label22;

        $r24 = r0.<chess.Search: chess.Position pos>;
        $i28 = $r24.<chess.Position: int wMtrlPawns>;
        if $i28 <= 0 goto label22;

        $r25 = r0.<chess.Search: chess.Position pos>;
        $i29 = $r25.<chess.Position: int wMtrl>;
        $r26 = r0.<chess.Search: chess.Position pos>;
        $i30 = $r26.<chess.Position: int wMtrlPawns>;
        $i31 = i8 + $i30;
        if $i29 <= $i31 goto label22;

        $r27 = r0.<chess.Search: chess.Position pos>;
        $i32 = $r27.<chess.Position: int bMtrlPawns>;
        if $i32 <= 0 goto label22;

        $r28 = r0.<chess.Search: chess.Position pos>;
        $i33 = $r28.<chess.Position: int bMtrl>;
        $r29 = r0.<chess.Search: chess.Position pos>;
        $i34 = $r29.<chess.Position: int bMtrlPawns>;
        $i35 = i8 + $i34;
        if $i33 <= $i35 goto label22;

        $i36 = i3 - 1;
        if $i36 <= -2 goto label21;

        $r30 = r0.<chess.Search: chess.Position pos>;
        z2 = staticinvoke <chess.MoveGen: boolean givesCheck(chess.Position,chess.Move)>($r30, r3);
        z3 = 1;

     label21:
        if z2 != 0 goto label22;

        if i10 <= i6 goto label27;

        i6 = i10;
        goto label27;

     label22:
        if z3 != 0 goto label23;

        $i37 = i3 - 1;
        if $i37 <= -2 goto label23;

        $r31 = r0.<chess.Search: chess.Position pos>;
        z2 = staticinvoke <chess.MoveGen: boolean givesCheck(chess.Position,chess.Move)>($r31, r3);

     label23:
        $i38 = i3 - 1;
        if $i38 <= -2 goto label24;

        $z9 = z2;
        goto label25;

     label24:
        $z9 = 0;

     label25:
        z10 = $z9;
        $r32 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r32.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r3, r2);
        $l39 = r0.<chess.Search: long qNodes>;
        $l40 = $l39 + 1L;
        r0.<chess.Search: long qNodes> = $l40;
        $l41 = r0.<chess.Search: long totalNodes>;
        $l42 = $l41 + 1L;
        r0.<chess.Search: long totalNodes> = $l42;
        $i43 = neg i1;
        $i44 = neg i0;
        $i45 = i2 + 1;
        $i46 = i3 - 1;
        $i47 = specialinvoke r0.<chess.Search: int quiesce(int,int,int,int,boolean)>($i43, $i44, $i45, $i46, z10);
        i48 = neg $i47;
        $r35 = r0.<chess.Search: chess.Position pos>;
        virtualinvoke $r35.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r3, r2);
        if i48 <= i6 goto label27;

        i6 = i48;
        if i48 <= i0 goto label27;

        if i3 != 0 goto label26;

        $r36 = r0.<chess.Search: chess.Search$SearchTreeInfo[] searchTreeInfo>;
        r37 = $r36[i2];
        $r38 = r37.<chess.Search$SearchTreeInfo: chess.Move bestMove>;
        $i49 = r3.<chess.Move: int 'from'>;
        $i50 = r3.<chess.Move: int 'to'>;
        $i51 = r3.<chess.Move: int promoteTo>;
        virtualinvoke $r38.<chess.Move: void setMove(int,int,int,int)>($i49, $i50, $i51, i48);

     label26:
        i0 = i48;
        if i0 < i1 goto label27;

        $r39 = r0.<chess.Search: chess.MoveGen moveGen>;
        virtualinvoke $r39.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r1);
        return i0;

     label27:
        i7 = i7 + 1;
        goto label11;

     label28:
        $r40 = r0.<chess.Search: chess.MoveGen moveGen>;
        virtualinvoke $r40.<chess.MoveGen: void returnMoveList(chess.MoveGen$MoveList)>(r1);
        return i6;
    }

    public final int signSEE(chess.Move)
    {
        chess.Search r0;
        chess.Move r1;
        int[] $r2, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        chess.Position $r3, $r5;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.Move;
        $r2 = <chess.Evaluate: int[] pieceValue>;
        $r3 = r0.<chess.Search: chess.Position pos>;
        $i2 = r1.<chess.Move: int 'from'>;
        $i3 = virtualinvoke $r3.<chess.Position: int getPiece(int)>($i2);
        i0 = $r2[$i3];
        $r4 = <chess.Evaluate: int[] pieceValue>;
        $r5 = r0.<chess.Search: chess.Position pos>;
        $i4 = r1.<chess.Move: int 'to'>;
        $i5 = virtualinvoke $r5.<chess.Position: int getPiece(int)>($i4);
        i1 = $r4[$i5];
        if i0 >= i1 goto label0;

        return 1;

     label0:
        $i6 = virtualinvoke r0.<chess.Search: int SEE(chess.Move)>(r1);
        return $i6;
    }

    public final boolean negSEE(chess.Move)
    {
        chess.Search r0;
        chess.Move r1;
        int[] $r2, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        chess.Position $r3, $r5;
        boolean $z0;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.Move;
        $r2 = <chess.Evaluate: int[] pieceValue>;
        $r3 = r0.<chess.Search: chess.Position pos>;
        $i2 = r1.<chess.Move: int 'from'>;
        $i3 = virtualinvoke $r3.<chess.Position: int getPiece(int)>($i2);
        i0 = $r2[$i3];
        $r4 = <chess.Evaluate: int[] pieceValue>;
        $r5 = r0.<chess.Search: chess.Position pos>;
        $i4 = r1.<chess.Move: int 'to'>;
        $i5 = virtualinvoke $r5.<chess.Position: int getPiece(int)>($i4);
        i1 = $r4[$i5];
        if i1 < i0 goto label0;

        return 0;

     label0:
        $i6 = virtualinvoke r0.<chess.Search: int SEE(chess.Move)>(r1);
        if $i6 >= 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int SEE(chess.Move)
    {
        chess.Search r0;
        chess.Move r1;
        short s0;
        int i1, $i2, i3, i4, i6, $i10, $i11, $i12, $i13, $i14, i21, $i62, i66, i67, $i68, $i69, $i70, $i71;
        boolean z0, $z1;
        long l5, l7, l8, l9, $l15, $l16, $l17, $l18, $l19, $l22, $l23, $l24, $l26, $l27, $l29, $l30, $l32, $l33, $l35, $l36, $l37, $l39, $l40, $l41, $l43, $l44, $l45, $l47, l48, $l49, $l51, l52, $l53, $l55, $l56, $l58, $l59, $l60, $l63, $l64, $l65;
        chess.Position $r2, $r6, $r8, $r10, $r12, $r13, $r14, $r16, $r19, $r21, $r23, $r25, $r28, $r31, $r34, $r36, $r38, $r40, $r43, $r46;
        int[] $r3, $r4, $r5, $r7, $r11, $r45, $r48, $r49;
        chess.UndoInfo $r9, $r47;
        long[] $r15, $r17, $r18, $r20, $r22, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r37, $r39, $r41, $r42, $r44;
        byte $b20, $b25, $b28, $b31, $b34, $b38, $b42, $b46, $b50, $b54, $b57, $b61;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.Move;
        s0 = 9900;
        i1 = r1.<chess.Move: int 'to'>;
        $r2 = r0.<chess.Search: chess.Position pos>;
        $i10 = virtualinvoke $r2.<chess.Position: int getEpSquare()>();
        if i1 != $i10 goto label0;

        $r3 = r0.<chess.Search: int[] captures>;
        $i2 = <chess.Evaluate: int pV>;
        $r3[0] = $i2;
        goto label1;

     label0:
        $r4 = r0.<chess.Search: int[] captures>;
        $r5 = <chess.Evaluate: int[] pieceValue>;
        $r6 = r0.<chess.Search: chess.Position pos>;
        $i11 = virtualinvoke $r6.<chess.Position: int getPiece(int)>(i1);
        $i12 = $r5[$i11];
        $r4[0] = $i12;
        $r7 = r0.<chess.Search: int[] captures>;
        $i13 = $r7[0];
        if $i13 != 9900 goto label1;

        return 9900;

     label1:
        i3 = 1;
        $r8 = r0.<chess.Search: chess.Position pos>;
        $r9 = r0.<chess.Search: chess.UndoInfo seeUi>;
        virtualinvoke $r8.<chess.Position: void makeSEEMove(chess.Move,chess.UndoInfo)>(r1, $r9);
        $r10 = r0.<chess.Search: chess.Position pos>;
        z0 = $r10.<chess.Position: boolean whiteMove>;
        $r11 = <chess.Evaluate: int[] pieceValue>;
        $r12 = r0.<chess.Search: chess.Position pos>;
        $i14 = virtualinvoke $r12.<chess.Position: int getPiece(int)>(i1);
        i4 = $r11[$i14];
        $r13 = r0.<chess.Search: chess.Position pos>;
        $l15 = $r13.<chess.Position: long whiteBB>;
        $r14 = r0.<chess.Search: chess.Position pos>;
        $l16 = $r14.<chess.Position: long blackBB>;
        l5 = $l15 | $l16;

     label2:
        i6 = 2147483647;
        if z0 == 0 goto label9;

        $r15 = <chess.BitBoard: long[] bPawnAttacks>;
        $l17 = $r15[i1];
        $r16 = r0.<chess.Search: chess.Position pos>;
        $r17 = $r16.<chess.Position: long[] pieceTypeBB>;
        $l18 = $r17[6];
        $l19 = $l17 & $l18;
        l7 = $l19 & l5;
        $b20 = l7 cmp 0L;
        if $b20 == 0 goto label3;

        i21 = <chess.Evaluate: int pV>;
        goto label15;

     label3:
        $r18 = <chess.BitBoard: long[] knightAttacks>;
        $l22 = $r18[i1];
        $r19 = r0.<chess.Search: chess.Position pos>;
        $r20 = $r19.<chess.Position: long[] pieceTypeBB>;
        $l23 = $r20[5];
        $l24 = $l22 & $l23;
        l7 = $l24 & l5;
        $b25 = l7 cmp 0L;
        if $b25 == 0 goto label4;

        i21 = <chess.Evaluate: int nV>;
        goto label15;

     label4:
        $l26 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i1, l5);
        l8 = $l26 & l5;
        $r21 = r0.<chess.Search: chess.Position pos>;
        $r22 = $r21.<chess.Position: long[] pieceTypeBB>;
        $l27 = $r22[4];
        l7 = l8 & $l27;
        $b28 = l7 cmp 0L;
        if $b28 == 0 goto label5;

        i21 = <chess.Evaluate: int bV>;
        goto label8;

     label5:
        $l29 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i1, l5);
        l9 = $l29 & l5;
        $r23 = r0.<chess.Search: chess.Position pos>;
        $r24 = $r23.<chess.Position: long[] pieceTypeBB>;
        $l30 = $r24[3];
        l7 = l9 & $l30;
        $b31 = l7 cmp 0L;
        if $b31 == 0 goto label6;

        i21 = <chess.Evaluate: int rV>;
        goto label8;

     label6:
        $l32 = l8 | l9;
        $r25 = r0.<chess.Search: chess.Position pos>;
        $r26 = $r25.<chess.Position: long[] pieceTypeBB>;
        $l33 = $r26[2];
        l7 = $l32 & $l33;
        $b34 = l7 cmp 0L;
        if $b34 == 0 goto label7;

        i21 = <chess.Evaluate: int qV>;
        goto label8;

     label7:
        $r27 = <chess.BitBoard: long[] kingAttacks>;
        $l35 = $r27[i1];
        $r28 = r0.<chess.Search: chess.Position pos>;
        $r29 = $r28.<chess.Position: long[] pieceTypeBB>;
        $l36 = $r29[1];
        $l37 = $l35 & $l36;
        l7 = $l37 & l5;
        $b38 = l7 cmp 0L;
        if $b38 == 0 goto label19;

        i21 = 9900;

     label8:
        goto label15;

     label9:
        $r30 = <chess.BitBoard: long[] wPawnAttacks>;
        $l39 = $r30[i1];
        $r31 = r0.<chess.Search: chess.Position pos>;
        $r32 = $r31.<chess.Position: long[] pieceTypeBB>;
        $l40 = $r32[12];
        $l41 = $l39 & $l40;
        l7 = $l41 & l5;
        $b42 = l7 cmp 0L;
        if $b42 == 0 goto label10;

        i21 = <chess.Evaluate: int pV>;
        goto label15;

     label10:
        $r33 = <chess.BitBoard: long[] knightAttacks>;
        $l43 = $r33[i1];
        $r34 = r0.<chess.Search: chess.Position pos>;
        $r35 = $r34.<chess.Position: long[] pieceTypeBB>;
        $l44 = $r35[11];
        $l45 = $l43 & $l44;
        l7 = $l45 & l5;
        $b46 = l7 cmp 0L;
        if $b46 == 0 goto label11;

        i21 = <chess.Evaluate: int nV>;
        goto label15;

     label11:
        $l47 = staticinvoke <chess.BitBoard: long bishopAttacks(int,long)>(i1, l5);
        l48 = $l47 & l5;
        $r36 = r0.<chess.Search: chess.Position pos>;
        $r37 = $r36.<chess.Position: long[] pieceTypeBB>;
        $l49 = $r37[10];
        l7 = l48 & $l49;
        $b50 = l7 cmp 0L;
        if $b50 == 0 goto label12;

        i21 = <chess.Evaluate: int bV>;
        goto label15;

     label12:
        $l51 = staticinvoke <chess.BitBoard: long rookAttacks(int,long)>(i1, l5);
        l52 = $l51 & l5;
        $r38 = r0.<chess.Search: chess.Position pos>;
        $r39 = $r38.<chess.Position: long[] pieceTypeBB>;
        $l53 = $r39[9];
        l7 = l52 & $l53;
        $b54 = l7 cmp 0L;
        if $b54 == 0 goto label13;

        i21 = <chess.Evaluate: int rV>;
        goto label15;

     label13:
        $l55 = l48 | l52;
        $r40 = r0.<chess.Search: chess.Position pos>;
        $r41 = $r40.<chess.Position: long[] pieceTypeBB>;
        $l56 = $r41[8];
        l7 = $l55 & $l56;
        $b57 = l7 cmp 0L;
        if $b57 == 0 goto label14;

        i21 = <chess.Evaluate: int qV>;
        goto label15;

     label14:
        $r42 = <chess.BitBoard: long[] kingAttacks>;
        $l58 = $r42[i1];
        $r43 = r0.<chess.Search: chess.Position pos>;
        $r44 = $r43.<chess.Position: long[] pieceTypeBB>;
        $l59 = $r44[7];
        $l60 = $l58 & $l59;
        l7 = $l60 & l5;
        $b61 = l7 cmp 0L;
        if $b61 == 0 goto label19;

        i21 = 9900;

     label15:
        $r45 = r0.<chess.Search: int[] captures>;
        $i62 = i3;
        i3 = i3 + 1;
        $r45[$i62] = i4;
        if i4 != 9900 goto label16;

        goto label19;

     label16:
        i4 = i21;
        $l63 = neg l7;
        $l64 = l7 & $l63;
        $l65 = $l64 ^ -1L;
        l5 = l5 & $l65;
        if z0 != 0 goto label17;

        $z1 = 1;
        goto label18;

     label17:
        $z1 = 0;

     label18:
        z0 = $z1;
        goto label2;

     label19:
        $r46 = r0.<chess.Search: chess.Position pos>;
        $r47 = r0.<chess.Search: chess.UndoInfo seeUi>;
        virtualinvoke $r46.<chess.Position: void unMakeSEEMove(chess.Move,chess.UndoInfo)>(r1, $r47);
        i66 = 0;
        i67 = i3 - 1;

     label20:
        if i67 <= 0 goto label21;

        $r48 = r0.<chess.Search: int[] captures>;
        $i68 = $r48[i67];
        $i69 = $i68 - i66;
        i66 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i69);
        i67 = i67 + -1;
        goto label20;

     label21:
        $r49 = r0.<chess.Search: int[] captures>;
        $i70 = $r49[0];
        $i71 = $i70 - i66;
        return $i71;
    }

    final void scoreMoveList(chess.MoveGen$MoveList, int)
    {
        chess.Search r0;
        chess.MoveGen$MoveList r1;
        int i0;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.MoveGen$MoveList;
        i0 := @parameter1: int;
        virtualinvoke r0.<chess.Search: void scoreMoveList(chess.MoveGen$MoveList,int,int)>(r1, i0, 0);
        return;
    }

    final void scoreMoveList(chess.MoveGen$MoveList, int, int)
    {
        chess.Search r0;
        chess.MoveGen$MoveList r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, $i22, i23, i24;
        chess.Move r2;
        boolean z0, $z1;
        chess.Move[] $r3;
        chess.Position $r4, $r5, $r6, $r11;
        int[] $r7, $r8;
        chess.KillerTable $r9;
        chess.History $r10;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.MoveGen$MoveList;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = i1;

     label0:
        $i7 = r1.<chess.MoveGen$MoveList: int size>;
        if i2 >= $i7 goto label12;

        $r3 = r1.<chess.MoveGen$MoveList: chess.Move[] m>;
        r2 = $r3[i2];
        $r4 = r0.<chess.Search: chess.Position pos>;
        $i8 = r2.<chess.Move: int 'to'>;
        $i9 = virtualinvoke $r4.<chess.Position: int getPiece(int)>($i8);
        if $i9 != 0 goto label1;

        $i10 = r2.<chess.Move: int promoteTo>;
        if $i10 == 0 goto label2;

     label1:
        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;
        i3 = 0;
        if z0 == 0 goto label9;

        if z0 == 0 goto label4;

        $i11 = virtualinvoke r0.<chess.Search: int signSEE(chess.Move)>(r2);
        goto label5;

     label4:
        $i11 = 0;

     label5:
        i4 = $i11;
        $r5 = r0.<chess.Search: chess.Position pos>;
        $i12 = r2.<chess.Move: int 'to'>;
        i5 = virtualinvoke $r5.<chess.Position: int getPiece(int)>($i12);
        $r6 = r0.<chess.Search: chess.Position pos>;
        $i13 = r2.<chess.Move: int 'from'>;
        i6 = virtualinvoke $r6.<chess.Position: int getPiece(int)>($i13);
        $r7 = <chess.Evaluate: int[] pieceValue>;
        $i14 = $r7[i5];
        $i15 = $i14 / 10;
        $i16 = $i15 * 1000;
        $r8 = <chess.Evaluate: int[] pieceValue>;
        $i17 = $r8[i6];
        $i18 = $i17 / 10;
        i19 = $i16 - $i18;
        if i4 <= 0 goto label6;

        i20 = i19 + 2000000;
        goto label8;

     label6:
        if i4 != 0 goto label7;

        i20 = i19 + 1000000;
        goto label8;

     label7:
        i20 = i19 - 1000000;

     label8:
        i3 = i20 * 100;

     label9:
        $r9 = r0.<chess.Search: chess.KillerTable kt>;
        i21 = virtualinvoke $r9.<chess.KillerTable: int getKillerScore(int,chess.Move)>(i0, r2);
        if i21 <= 0 goto label10;

        $i22 = i21 + 50;
        i23 = i3 + $i22;
        goto label11;

     label10:
        $r10 = r0.<chess.Search: chess.History ht>;
        $r11 = r0.<chess.Search: chess.Position pos>;
        i24 = virtualinvoke $r10.<chess.History: int getHistScore(chess.Position,chess.Move)>($r11, r2);
        i23 = i3 + i24;

     label11:
        r2.<chess.Move: int score> = i23;
        i2 = i2 + 1;
        goto label0;

     label12:
        return;
    }

    private final void scoreMoveListMvvLva(chess.MoveGen$MoveList)
    {
        chess.Search r0;
        chess.MoveGen$MoveList r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        chess.Move r2;
        chess.Move[] $r3;
        chess.Position $r4, $r5;
        int[] $r6, $r7;

        r0 := @this: chess.Search;
        r1 := @parameter0: chess.MoveGen$MoveList;
        i0 = 0;

     label0:
        $i3 = r1.<chess.MoveGen$MoveList: int size>;
        if i0 >= $i3 goto label1;

        $r3 = r1.<chess.MoveGen$MoveList: chess.Move[] m>;
        r2 = $r3[i0];
        $r4 = r0.<chess.Search: chess.Position pos>;
        $i4 = r2.<chess.Move: int 'to'>;
        i1 = virtualinvoke $r4.<chess.Position: int getPiece(int)>($i4);
        $r5 = r0.<chess.Search: chess.Position pos>;
        $i5 = r2.<chess.Move: int 'from'>;
        i2 = virtualinvoke $r5.<chess.Position: int getPiece(int)>($i5);
        $r6 = <chess.Evaluate: int[] pieceValue>;
        $i6 = $r6[i1];
        $i7 = $i6 * 10000;
        $r7 = <chess.Evaluate: int[] pieceValue>;
        $i8 = $r7[i2];
        $i9 = $i7 - $i8;
        r2.<chess.Move: int score> = $i9;
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }

    static final void selectBest(chess.MoveGen$MoveList, int)
    {
        chess.MoveGen$MoveList r0;
        int i0, i1, i2, i3, i4, $i5;
        chess.Move[] $r1, $r3, $r5, $r7, $r8, $r10;
        chess.Move $r2, $r4, r6, $r9;

        r0 := @parameter0: chess.MoveGen$MoveList;
        i0 := @parameter1: int;
        i1 = i0;
        $r1 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r2 = $r1[i1];
        i2 = $r2.<chess.Move: int score>;
        i3 = i0 + 1;

     label0:
        $i5 = r0.<chess.MoveGen$MoveList: int size>;
        if i3 >= $i5 goto label2;

        $r3 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r4 = $r3[i3];
        i4 = $r4.<chess.Move: int score>;
        if i4 <= i2 goto label1;

        i1 = i3;
        i2 = i4;

     label1:
        i3 = i3 + 1;
        goto label0;

     label2:
        if i1 == i0 goto label3;

        $r5 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        r6 = $r5[i0];
        $r7 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r8 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r9 = $r8[i1];
        $r7[i0] = $r9;
        $r10 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r10[i1] = r6;

     label3:
        return;
    }

    static final boolean selectHashMove(chess.MoveGen$MoveList, chess.Move)
    {
        chess.MoveGen$MoveList r0;
        chess.Move r1, r2, $r6;
        int i0, $i1;
        chess.Move[] $r3, $r4, $r5, $r7;
        boolean $z0;

        r0 := @parameter0: chess.MoveGen$MoveList;
        r1 := @parameter1: chess.Move;
        if r1 != null goto label0;

        return 0;

     label0:
        i0 = 0;

     label1:
        $i1 = r0.<chess.MoveGen$MoveList: int size>;
        if i0 >= $i1 goto label3;

        $r3 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        r2 = $r3[i0];
        $z0 = virtualinvoke r2.<chess.Move: boolean equals(java.lang.Object)>(r1);
        if $z0 == 0 goto label2;

        $r4 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r5 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r6 = $r5[0];
        $r4[i0] = $r6;
        $r7 = r0.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r7[0] = r2;
        r2.<chess.Move: int score> = 10000;
        return 1;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        return 0;
    }

    public static final boolean canClaimDraw50(chess.Position)
    {
        chess.Position r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: chess.Position;
        $i0 = r0.<chess.Position: int halfMoveClock>;
        if $i0 < 100 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static final boolean canClaimDrawRep(chess.Position, long[], int, int)
    {
        chess.Position r0;
        long[] r1;
        int i0, i1, i2, i3;
        long $l4, $l5;
        byte $b6;
        boolean $z0;

        r0 := @parameter0: chess.Position;
        r1 := @parameter1: long[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        i2 = 0;
        i3 = i0 - 4;

     label0:
        if i3 < 0 goto label2;

        $l4 = virtualinvoke r0.<chess.Position: long zobristHash()>();
        $l5 = r1[i3];
        $b6 = $l4 cmp $l5;
        if $b6 != 0 goto label1;

        i2 = i2 + 1;
        if i3 < i1 goto label1;

        i2 = i2 + 1;
        goto label2;

     label1:
        i3 = i3 + -2;
        goto label0;

     label2:
        if i2 < 2 goto label3;

        $z0 = 1;
        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private final void initNodeStats()
    {
        chess.Search r0;
        long $l0;
        int i1;
        int[] $r1, $r2, $r3, $r4;

        r0 := @this: chess.Search;
        $l0 = 0L;
        r0.<chess.Search: long qNodes> = $l0;
        r0.<chess.Search: long nodes> = $l0;
        $r1 = newarray (int)[20];
        r0.<chess.Search: int[] nodesPlyVec> = $r1;
        $r2 = newarray (int)[20];
        r0.<chess.Search: int[] nodesDepthVec> = $r2;
        i1 = 0;

     label0:
        if i1 >= 20 goto label1;

        $r3 = r0.<chess.Search: int[] nodesPlyVec>;
        $r3[i1] = 0;
        $r4 = r0.<chess.Search: int[] nodesDepthVec>;
        $r4[i1] = 0;
        i1 = i1 + 1;
        goto label0;

     label1:
        return;
    }

    static void <clinit>()
    {
        chess.Move $r0;

        $r0 = new chess.Move;
        specialinvoke $r0.<chess.Move: void <init>(int,int,int,int)>(0, 0, 0, 0);
        <chess.Search: chess.Move emptyMove> = $r0;
        return;
    }
}
public class chess.TextIO extends java.lang.Object
{
    public static final java.lang.String startPosFEN;

    public void <init>()
    {
        chess.TextIO r0;

        r0 := @this: chess.TextIO;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static final chess.Position readFEN(java.lang.String) throws chess.ChessParseError
    {
        java.lang.String r0, $r5, $r6, $r8, $r11, $r12, $r13, r15, $r17, $r18;
        chess.Position $r1, r2, $r23, r24;
        java.lang.String[] r3;
        int i0, i1, i2, i5, i6, i7, $i8, $i9, $i10, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, $i25;
        char c3, c4, $c11;
        chess.ChessParseError $r4, $r7, $r9, $r14, $r16, $r21, $r22, $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b12;
        java.lang.NumberFormatException $r19, r20;

        r0 := @parameter0: java.lang.String;
        $r1 = new chess.Position;
        specialinvoke $r1.<chess.Position: void <init>()>();
        r2 = $r1;
        r3 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        $i8 = lengthof r3;
        if $i8 >= 2 goto label0;

        $r4 = new chess.ChessParseError;
        specialinvoke $r4.<chess.ChessParseError: void <init>(java.lang.String)>("Too few spaces");
        throw $r4;

     label0:
        i0 = 7;
        i1 = 0;
        i2 = 0;

     label1:
        $r5 = r3[0];
        $i9 = virtualinvoke $r5.<java.lang.String: int length()>();
        if i2 >= $i9 goto label25;

        $r6 = r3[0];
        c3 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(i2);
        tableswitch(c3)
        {
            case 47: goto label10;
            case 48: goto label23;
            case 49: goto label2;
            case 50: goto label3;
            case 51: goto label4;
            case 52: goto label5;
            case 53: goto label6;
            case 54: goto label7;
            case 55: goto label8;
            case 56: goto label9;
            case 57: goto label23;
            case 58: goto label23;
            case 59: goto label23;
            case 60: goto label23;
            case 61: goto label23;
            case 62: goto label23;
            case 63: goto label23;
            case 64: goto label23;
            case 65: goto label23;
            case 66: goto label13;
            case 67: goto label23;
            case 68: goto label23;
            case 69: goto label23;
            case 70: goto label23;
            case 71: goto label23;
            case 72: goto label23;
            case 73: goto label23;
            case 74: goto label23;
            case 75: goto label16;
            case 76: goto label23;
            case 77: goto label23;
            case 78: goto label12;
            case 79: goto label23;
            case 80: goto label11;
            case 81: goto label15;
            case 82: goto label14;
            case 83: goto label23;
            case 84: goto label23;
            case 85: goto label23;
            case 86: goto label23;
            case 87: goto label23;
            case 88: goto label23;
            case 89: goto label23;
            case 90: goto label23;
            case 91: goto label23;
            case 92: goto label23;
            case 93: goto label23;
            case 94: goto label23;
            case 95: goto label23;
            case 96: goto label23;
            case 97: goto label23;
            case 98: goto label19;
            case 99: goto label23;
            case 100: goto label23;
            case 101: goto label23;
            case 102: goto label23;
            case 103: goto label23;
            case 104: goto label23;
            case 105: goto label23;
            case 106: goto label23;
            case 107: goto label22;
            case 108: goto label23;
            case 109: goto label23;
            case 110: goto label18;
            case 111: goto label23;
            case 112: goto label17;
            case 113: goto label21;
            case 114: goto label20;
            default: goto label23;
        };

     label2:
        i1 = i1 + 1;
        goto label24;

     label3:
        i1 = i1 + 2;
        goto label24;

     label4:
        i1 = i1 + 3;
        goto label24;

     label5:
        i1 = i1 + 4;
        goto label24;

     label6:
        i1 = i1 + 5;
        goto label24;

     label7:
        i1 = i1 + 6;
        goto label24;

     label8:
        i1 = i1 + 7;
        goto label24;

     label9:
        i1 = i1 + 8;
        goto label24;

     label10:
        i0 = i0 + -1;
        i1 = 0;
        goto label24;

     label11:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 6);
        i1 = i1 + 1;
        goto label24;

     label12:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 5);
        i1 = i1 + 1;
        goto label24;

     label13:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 4);
        i1 = i1 + 1;
        goto label24;

     label14:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 3);
        i1 = i1 + 1;
        goto label24;

     label15:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 2);
        i1 = i1 + 1;
        goto label24;

     label16:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 1);
        i1 = i1 + 1;
        goto label24;

     label17:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 12);
        i1 = i1 + 1;
        goto label24;

     label18:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 11);
        i1 = i1 + 1;
        goto label24;

     label19:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 10);
        i1 = i1 + 1;
        goto label24;

     label20:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 9);
        i1 = i1 + 1;
        goto label24;

     label21:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 8);
        i1 = i1 + 1;
        goto label24;

     label22:
        staticinvoke <chess.TextIO: void safeSetPiece(chess.Position,int,int,int)>(r2, i1, i0, 7);
        i1 = i1 + 1;
        goto label24;

     label23:
        $r7 = new chess.ChessParseError;
        specialinvoke $r7.<chess.ChessParseError: void <init>(java.lang.String)>("Invalid piece");
        throw $r7;

     label24:
        i2 = i2 + 1;
        goto label1;

     label25:
        $r8 = r3[1];
        $i10 = virtualinvoke $r8.<java.lang.String: int length()>();
        if $i10 != 0 goto label26;

        $r9 = new chess.ChessParseError;
        specialinvoke $r9.<chess.ChessParseError: void <init>(java.lang.String)>("Invalid side");
        throw $r9;

     label26:
        $r11 = r3[1];
        $c11 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(0);
        if $c11 != 119 goto label27;

        $z0 = 1;
        goto label28;

     label27:
        $z0 = 0;

     label28:
        virtualinvoke r2.<chess.Position: void setWhiteMove(boolean)>($z0);
        b12 = 0;
        $i13 = lengthof r3;
        if $i13 <= 2 goto label37;

        i14 = 0;

     label29:
        $r12 = r3[2];
        $i15 = virtualinvoke $r12.<java.lang.String: int length()>();
        if i14 >= $i15 goto label37;

        $r13 = r3[2];
        c4 = virtualinvoke $r13.<java.lang.String: char charAt(int)>(i14);
        lookupswitch(c4)
        {
            case 45: goto label34;
            case 75: goto label30;
            case 81: goto label31;
            case 107: goto label32;
            case 113: goto label33;
            default: goto label35;
        };

     label30:
        b12 = b12 | 2;
        goto label36;

     label31:
        b12 = b12 | 1;
        goto label36;

     label32:
        b12 = b12 | 8;
        goto label36;

     label33:
        b12 = b12 | 4;
        goto label36;

     label34:
        goto label36;

     label35:
        $r14 = new chess.ChessParseError;
        specialinvoke $r14.<chess.ChessParseError: void <init>(java.lang.String)>("Invalid castling flags");
        throw $r14;

     label36:
        i14 = i14 + 1;
        goto label29;

     label37:
        virtualinvoke r2.<chess.Position: void setCastleMask(int)>(b12);
        $i16 = lengthof r3;
        if $i16 <= 3 goto label39;

        r15 = r3[3];
        $z1 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("-");
        if $z1 != 0 goto label39;

        $i17 = virtualinvoke r15.<java.lang.String: int length()>();
        if $i17 >= 2 goto label38;

        $r16 = new chess.ChessParseError;
        specialinvoke $r16.<chess.ChessParseError: void <init>(java.lang.String)>("Invalid en passant square");
        throw $r16;

     label38:
        $i18 = staticinvoke <chess.TextIO: int getSquare(java.lang.String)>(r15);
        virtualinvoke r2.<chess.Position: void setEpSquare(int)>($i18);

     label39:
        $i19 = lengthof r3;
        if $i19 <= 4 goto label40;

        $r17 = r3[4];
        $i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);
        r2.<chess.Position: int halfMoveClock> = $i20;

     label40:
        $i21 = lengthof r3;
        if $i21 <= 5 goto label41;

        $r18 = r3[5];
        $i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18);
        r2.<chess.Position: int fullMoveCounter> = $i22;

     label41:
        goto label43;

     label42:
        $r19 := @caughtexception;
        r20 = $r19;

     label43:
        i23 = 0;
        i24 = 0;
        i5 = 0;

     label44:
        if i5 >= 8 goto label49;

        i6 = 0;

     label45:
        if i6 >= 8 goto label48;

        $i25 = staticinvoke <chess.Position: int getSquare(int,int)>(i5, i6);
        i7 = virtualinvoke r2.<chess.Position: int getPiece(int)>($i25);
        if i7 != 1 goto label46;

        i23 = i23 + 1;
        goto label47;

     label46:
        if i7 != 7 goto label47;

        i24 = i24 + 1;

     label47:
        i6 = i6 + 1;
        goto label45;

     label48:
        i5 = i5 + 1;
        goto label44;

     label49:
        if i23 == 1 goto label50;

        $r21 = new chess.ChessParseError;
        specialinvoke $r21.<chess.ChessParseError: void <init>(java.lang.String)>("White must have exactly one king");
        throw $r21;

     label50:
        if i24 == 1 goto label51;

        $r22 = new chess.ChessParseError;
        specialinvoke $r22.<chess.ChessParseError: void <init>(java.lang.String)>("Black must have exactly one king");
        throw $r22;

     label51:
        $r23 = new chess.Position;
        specialinvoke $r23.<chess.Position: void <init>(chess.Position)>(r2);
        r24 = $r23;
        $z2 = r2.<chess.Position: boolean whiteMove>;
        if $z2 != 0 goto label52;

        $z3 = 1;
        goto label53;

     label52:
        $z3 = 0;

     label53:
        virtualinvoke r24.<chess.Position: void setWhiteMove(boolean)>($z3);
        $z4 = staticinvoke <chess.MoveGen: boolean inCheck(chess.Position)>(r24);
        if $z4 == 0 goto label54;

        $r26 = new chess.ChessParseError;
        specialinvoke $r26.<chess.ChessParseError: void <init>(java.lang.String)>("King capture possible");
        throw $r26;

     label54:
        staticinvoke <chess.TextIO: void fixupEPSquare(chess.Position)>(r2);
        return r2;

        catch java.lang.NumberFormatException from label39 to label41 with label42;
    }

    public static final void fixupEPSquare(chess.Position)
    {
        chess.Position r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        chess.MoveGen$MoveList r1;
        boolean z0, $z1;
        chess.Move r2;
        chess.MoveGen $r3;
        chess.Move[] $r4;
        byte $b6;

        r0 := @parameter0: chess.Position;
        i0 = virtualinvoke r0.<chess.Position: int getEpSquare()>();
        if i0 < 0 goto label5;

        $r3 = <chess.MoveGen: chess.MoveGen instance>;
        r1 = virtualinvoke $r3.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r0);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r0, r1);
        z0 = 0;
        i1 = 0;

     label0:
        $i2 = r1.<chess.MoveGen$MoveList: int size>;
        if i1 >= $i2 goto label4;

        $r4 = r1.<chess.MoveGen$MoveList: chess.Move[] m>;
        r2 = $r4[i1];
        $i3 = r2.<chess.Move: int 'to'>;
        if $i3 != i0 goto label3;

        $i4 = r2.<chess.Move: int 'from'>;
        $i5 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i4);
        $z1 = r0.<chess.Position: boolean whiteMove>;
        if $z1 == 0 goto label1;

        $b6 = 6;
        goto label2;

     label1:
        $b6 = 12;

     label2:
        if $i5 != $b6 goto label3;

        z0 = 1;
        goto label4;

     label3:
        i1 = i1 + 1;
        goto label0;

     label4:
        if z0 != 0 goto label5;

        virtualinvoke r0.<chess.Position: void setEpSquare(int)>(-1);

     label5:
        return;
    }

    private static final void safeSetPiece(chess.Position, int, int, int) throws chess.ChessParseError
    {
        chess.Position r0;
        int i0, i1, i2, $i3;
        chess.ChessParseError $r1, $r2, $r3;

        r0 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        if i1 >= 0 goto label0;

        $r1 = new chess.ChessParseError;
        specialinvoke $r1.<chess.ChessParseError: void <init>(java.lang.String)>("Too many rows");
        throw $r1;

     label0:
        if i0 <= 7 goto label1;

        $r2 = new chess.ChessParseError;
        specialinvoke $r2.<chess.ChessParseError: void <init>(java.lang.String)>("Too many columns");
        throw $r2;

     label1:
        if i2 == 6 goto label2;

        if i2 != 12 goto label4;

     label2:
        if i1 == 0 goto label3;

        if i1 != 7 goto label4;

     label3:
        $r3 = new chess.ChessParseError;
        specialinvoke $r3.<chess.ChessParseError: void <init>(java.lang.String)>("Pawn on first/last rank");
        throw $r3;

     label4:
        $i3 = staticinvoke <chess.Position: int getSquare(int,int)>(i0, i1);
        virtualinvoke r0.<chess.Position: void setPiece(int,int)>($i3, i2);
        return;
    }

    public static final java.lang.String toFEN(chess.Position)
    {
        chess.Position r0;
        java.lang.StringBuilder $r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7, $i8, i9, $i10, $i12, $i14, $i15;
        java.lang.RuntimeException $r16;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        java.lang.String $r20, $r35;
        char $c11, $c13;

        r0 := @parameter0: chess.Position;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        i0 = 7;

     label0:
        if i0 < 0 goto label21;

        i1 = 0;
        i2 = 0;

     label1:
        if i2 >= 8 goto label18;

        $i4 = staticinvoke <chess.Position: int getSquare(int,int)>(i2, i0);
        i3 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i4);
        if i3 != 0 goto label2;

        i1 = i1 + 1;
        goto label17;

     label2:
        if i1 <= 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        i1 = 0;

     label3:
        tableswitch(i3)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label8;
            case 6: goto label9;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label14;
            case 12: goto label15;
            default: goto label16;
        };

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(75);
        goto label17;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(81);
        goto label17;

     label6:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(82);
        goto label17;

     label7:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(66);
        goto label17;

     label8:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(78);
        goto label17;

     label9:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(80);
        goto label17;

     label10:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(107);
        goto label17;

     label11:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(113);
        goto label17;

     label12:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(114);
        goto label17;

     label13:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(98);
        goto label17;

     label14:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(110);
        goto label17;

     label15:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(112);
        goto label17;

     label16:
        $r16 = new java.lang.RuntimeException;
        specialinvoke $r16.<java.lang.RuntimeException: void <init>()>();
        throw $r16;

     label17:
        i2 = i2 + 1;
        goto label1;

     label18:
        if i1 <= 0 goto label19;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

     label19:
        if i0 <= 0 goto label20;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label20:
        i0 = i0 + -1;
        goto label0;

     label21:
        $z0 = r0.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label22;

        $r20 = " w ";
        goto label23;

     label22:
        $r20 = " b ";

     label23:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        z1 = 0;
        $z2 = virtualinvoke r0.<chess.Position: boolean h1Castle()>();
        if $z2 == 0 goto label24;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(75);
        z1 = 1;

     label24:
        $z3 = virtualinvoke r0.<chess.Position: boolean a1Castle()>();
        if $z3 == 0 goto label25;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(81);
        z1 = 1;

     label25:
        $z4 = virtualinvoke r0.<chess.Position: boolean h8Castle()>();
        if $z4 == 0 goto label26;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(107);
        z1 = 1;

     label26:
        $z5 = virtualinvoke r0.<chess.Position: boolean a8Castle()>();
        if $z5 == 0 goto label27;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(113);
        z1 = 1;

     label27:
        if z1 != 0 goto label28;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label28:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $i5 = virtualinvoke r0.<chess.Position: int getEpSquare()>();
        if $i5 < 0 goto label29;

        $i6 = virtualinvoke r0.<chess.Position: int getEpSquare()>();
        i7 = staticinvoke <chess.Position: int getX(int)>($i6);
        $i8 = virtualinvoke r0.<chess.Position: int getEpSquare()>();
        i9 = staticinvoke <chess.Position: int getY(int)>($i8);
        $i10 = i7 + 97;
        $c11 = (char) $i10;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11);
        $i12 = i9 + 49;
        $c13 = (char) $i12;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c13);
        goto label30;

     label29:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label30:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $i14 = r0.<chess.Position: int halfMoveClock>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $i15 = r0.<chess.Position: int fullMoveCounter>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);
        $r35 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r35;
    }

    public static final java.lang.String moveToString(chess.Position, chess.Move, boolean)
    {
        chess.Position r0;
        chess.Move r1;
        boolean z0;
        chess.MoveGen $r2;
        chess.MoveGen$MoveList r3;
        java.lang.String $r4;

        r0 := @parameter0: chess.Position;
        r1 := @parameter1: chess.Move;
        z0 := @parameter2: boolean;
        $r2 = <chess.MoveGen: chess.MoveGen instance>;
        r3 = virtualinvoke $r2.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r0);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r0, r3);
        $r4 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean,chess.MoveGen$MoveList)>(r0, r1, z0, r3);
        return $r4;
    }

    private static final java.lang.String moveToString(chess.Position, chess.Move, boolean, chess.MoveGen$MoveList)
    {
        chess.Position r0;
        chess.Move r1, r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        chess.MoveGen$MoveList r2, r30;
        java.lang.StringBuilder $r3, r4;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i51, $i53, $i55, $i57, $i59, $i60, $i61;
        java.lang.String $r10, $r25, $r33;
        char $c30, $c32, $c33, $c37, $c48, $c50, $c52, $c54, $c56, $c58;
        byte $b35;
        chess.Move[] $r17;
        chess.UndoInfo $r27, r28;
        chess.MoveGen $r29;

        r0 := @parameter0: chess.Position;
        r1 := @parameter1: chess.Move;
        z0 := @parameter2: boolean;
        r2 := @parameter3: chess.MoveGen$MoveList;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        r4 = $r3;
        i0 = staticinvoke <chess.Position: int getSquare(int,int)>(4, 0);
        i1 = staticinvoke <chess.Position: int getSquare(int,int)>(4, 7);
        $i11 = r1.<chess.Move: int 'from'>;
        if $i11 != i0 goto label1;

        $i12 = virtualinvoke r0.<chess.Position: int getPiece(int)>(i0);
        if $i12 != 1 goto label1;

        $i13 = r1.<chess.Move: int 'to'>;
        $i14 = staticinvoke <chess.Position: int getSquare(int,int)>(6, 0);
        if $i13 != $i14 goto label0;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O-O");
        goto label3;

     label0:
        $i15 = r1.<chess.Move: int 'to'>;
        $i16 = staticinvoke <chess.Position: int getSquare(int,int)>(2, 0);
        if $i15 != $i16 goto label3;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O-O-O");
        goto label3;

     label1:
        $i17 = r1.<chess.Move: int 'from'>;
        if $i17 != i1 goto label3;

        $i18 = virtualinvoke r0.<chess.Position: int getPiece(int)>(i1);
        if $i18 != 7 goto label3;

        $i19 = r1.<chess.Move: int 'to'>;
        $i20 = staticinvoke <chess.Position: int getSquare(int,int)>(6, 7);
        if $i19 != $i20 goto label2;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O-O");
        goto label3;

     label2:
        $i21 = r1.<chess.Move: int 'to'>;
        $i22 = staticinvoke <chess.Position: int getSquare(int,int)>(2, 7);
        if $i21 != $i22 goto label3;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O-O-O");

     label3:
        $i23 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();
        if $i23 != 0 goto label20;

        $i24 = r1.<chess.Move: int 'from'>;
        i2 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i24);
        $r10 = staticinvoke <chess.TextIO: java.lang.String pieceToChar(int)>(i2);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $i25 = r1.<chess.Move: int 'from'>;
        i3 = staticinvoke <chess.Position: int getX(int)>($i25);
        $i26 = r1.<chess.Move: int 'from'>;
        i4 = staticinvoke <chess.Position: int getY(int)>($i26);
        $i27 = r1.<chess.Move: int 'to'>;
        i5 = staticinvoke <chess.Position: int getX(int)>($i27);
        $i28 = r1.<chess.Move: int 'to'>;
        i6 = staticinvoke <chess.Position: int getY(int)>($i28);
        if z0 == 0 goto label6;

        $i29 = i3 + 97;
        $c30 = (char) $i29;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c30);
        $i31 = i4 + 49;
        $c32 = (char) $i31;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c32);
        $z1 = staticinvoke <chess.TextIO: boolean isCapture(chess.Position,chess.Move)>(r0, r1);
        if $z1 == 0 goto label4;

        $c33 = 120;
        goto label5;

     label4:
        $c33 = 45;

     label5:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c33);
        goto label19;

     label6:
        $z2 = r0.<chess.Position: boolean whiteMove>;
        if $z2 == 0 goto label7;

        $b35 = 6;
        goto label8;

     label7:
        $b35 = 12;

     label8:
        if i2 != $b35 goto label9;

        $z3 = staticinvoke <chess.TextIO: boolean isCapture(chess.Position,chess.Move)>(r0, r1);
        if $z3 == 0 goto label18;

        $i36 = i3 + 97;
        $c37 = (char) $i36;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c37);
        goto label18;

     label9:
        i7 = 0;
        i8 = 0;
        i9 = 0;
        i10 = 0;

     label10:
        $i38 = r2.<chess.MoveGen$MoveList: int size>;
        if i10 >= $i38 goto label14;

        $r17 = r2.<chess.MoveGen$MoveList: chess.Move[] m>;
        r5 = $r17[i10];
        if r5 != null goto label11;

        goto label14;

     label11:
        $i39 = r5.<chess.Move: int 'from'>;
        $i40 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i39);
        if $i40 != i2 goto label13;

        $i41 = r5.<chess.Move: int 'to'>;
        $i42 = r1.<chess.Move: int 'to'>;
        if $i41 != $i42 goto label13;

        i7 = i7 + 1;
        $i43 = r5.<chess.Move: int 'from'>;
        $i44 = staticinvoke <chess.Position: int getX(int)>($i43);
        if $i44 != i3 goto label12;

        i8 = i8 + 1;

     label12:
        $i45 = r5.<chess.Move: int 'from'>;
        $i46 = staticinvoke <chess.Position: int getY(int)>($i45);
        if $i46 != i4 goto label13;

        i9 = i9 + 1;

     label13:
        i10 = i10 + 1;
        goto label10;

     label14:
        if i7 >= 2 goto label15;

        goto label18;

     label15:
        if i8 >= 2 goto label16;

        $i47 = i3 + 97;
        $c48 = (char) $i47;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c48);
        goto label18;

     label16:
        if i9 >= 2 goto label17;

        $i49 = i4 + 49;
        $c50 = (char) $i49;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c50);
        goto label18;

     label17:
        $i51 = i3 + 97;
        $c52 = (char) $i51;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c52);
        $i53 = i4 + 49;
        $c54 = (char) $i53;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c54);

     label18:
        $z4 = staticinvoke <chess.TextIO: boolean isCapture(chess.Position,chess.Move)>(r0, r1);
        if $z4 == 0 goto label19;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(120);

     label19:
        $i55 = i5 + 97;
        $c56 = (char) $i55;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c56);
        $i57 = i6 + 49;
        $c58 = (char) $i57;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c58);
        $i59 = r1.<chess.Move: int promoteTo>;
        if $i59 == 0 goto label20;

        $i60 = r1.<chess.Move: int promoteTo>;
        $r25 = staticinvoke <chess.TextIO: java.lang.String pieceToChar(int)>($i60);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label20:
        $r27 = new chess.UndoInfo;
        specialinvoke $r27.<chess.UndoInfo: void <init>()>();
        r28 = $r27;
        $z5 = staticinvoke <chess.MoveGen: boolean givesCheck(chess.Position,chess.Move)>(r0, r1);
        if $z5 == 0 goto label23;

        virtualinvoke r0.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r1, r28);
        $r29 = <chess.MoveGen: chess.MoveGen instance>;
        r30 = virtualinvoke $r29.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r0);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r0, r30);
        $i61 = r30.<chess.MoveGen$MoveList: int size>;
        if $i61 != 0 goto label21;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);
        goto label22;

     label21:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label22:
        virtualinvoke r0.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r1, r28);

     label23:
        $r33 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r33;
    }

    public static final java.lang.String moveToUCIString(chess.Move)
    {
        chess.Move r0;
        java.lang.String r1, $r4, r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @parameter0: chess.Move;
        $i0 = r0.<chess.Move: int 'from'>;
        r1 = staticinvoke <chess.TextIO: java.lang.String squareToString(int)>($i0);
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $i1 = r0.<chess.Move: int 'to'>;
        $r4 = staticinvoke <chess.TextIO: java.lang.String squareToString(int)>($i1);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $i2 = r0.<chess.Move: int promoteTo>;
        tableswitch($i2)
        {
            case 2: goto label0;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label0;
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label3;
            default: goto label4;
        };

     label0:
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("q");
        r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label4;

     label1:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("r");
        r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label4;

     label2:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");
        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label4;

     label3:
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n");
        r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label4;

     label4:
        return r6;
    }

    public static final chess.Move uciStringToMove(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        null_type n0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8;
        char c2;
        boolean z0;
        byte b3, $b9, $b10, $b11, $b12;
        chess.Move $r3, r4;

        r0 := @parameter0: java.lang.String;
        n0 = null;
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i4 < 4 goto label0;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i5 <= 5 goto label1;

     label0:
        return n0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);
        i0 = staticinvoke <chess.TextIO: int getSquare(java.lang.String)>($r1);
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, 4);
        i1 = staticinvoke <chess.TextIO: int getSquare(java.lang.String)>($r2);
        if i0 < 0 goto label2;

        if i1 >= 0 goto label3;

     label2:
        return n0;

     label3:
        c2 = 32;
        z0 = 1;
        $i6 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i6 != 5 goto label6;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);
        $i7 = staticinvoke <chess.Position: int getY(int)>(i1);
        if $i7 != 7 goto label4;

        z0 = 1;
        goto label6;

     label4:
        $i8 = staticinvoke <chess.Position: int getY(int)>(i1);
        if $i8 != 0 goto label5;

        z0 = 0;
        goto label6;

     label5:
        return n0;

     label6:
        lookupswitch(c2)
        {
            case 32: goto label7;
            case 98: goto label14;
            case 110: goto label17;
            case 113: goto label8;
            case 114: goto label11;
            default: goto label20;
        };

     label7:
        b3 = 0;
        goto label21;

     label8:
        if z0 == 0 goto label9;

        $b9 = 2;
        goto label10;

     label9:
        $b9 = 8;

     label10:
        b3 = $b9;
        goto label21;

     label11:
        if z0 == 0 goto label12;

        $b10 = 3;
        goto label13;

     label12:
        $b10 = 9;

     label13:
        b3 = $b10;
        goto label21;

     label14:
        if z0 == 0 goto label15;

        $b11 = 4;
        goto label16;

     label15:
        $b11 = 10;

     label16:
        b3 = $b11;
        goto label21;

     label17:
        if z0 == 0 goto label18;

        $b12 = 5;
        goto label19;

     label18:
        $b12 = 11;

     label19:
        b3 = $b12;
        goto label21;

     label20:
        return n0;

     label21:
        $r3 = new chess.Move;
        specialinvoke $r3.<chess.Move: void <init>(int,int,int)>(i0, i1, b3);
        r4 = $r3;
        return r4;
    }

    private static final boolean isCapture(chess.Position, chess.Move)
    {
        chess.Position r0;
        chess.Move r1;
        int i0, $i1, $i2, $i3, $i6, $i7;
        boolean $z0;
        byte $b5;

        r0 := @parameter0: chess.Position;
        r1 := @parameter1: chess.Move;
        $i1 = r1.<chess.Move: int 'to'>;
        $i2 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i1);
        if $i2 != 0 goto label3;

        $i3 = r1.<chess.Move: int 'from'>;
        i0 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i3);
        $z0 = r0.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label0;

        $b5 = 6;
        goto label1;

     label0:
        $b5 = 12;

     label1:
        if i0 != $b5 goto label2;

        $i6 = r1.<chess.Move: int 'to'>;
        $i7 = virtualinvoke r0.<chess.Position: int getEpSquare()>();
        if $i6 != $i7 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 1;
    }

    public static final chess.Move stringToMove(chess.Position, java.lang.String)
    {
        chess.Position r0;
        java.lang.String r1, r6, r7, $r14, r15, $r16, r17, $r18, $r19, $r20, $r21, $r24, r25, $r26, r27, $r28, $r29, $r30, $r31;
        chess.Move r2, r5, r13, r23;
        chess.MoveGen$MoveList r3, r4, $r9;
        char c0, $c9;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, i11, i12, $i13, i14, i15, $i16;
        chess.MoveGen $r8;
        chess.Move[] $r10, $r11, $r12, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, $z10;

        r0 := @parameter0: chess.Position;
        r1 := @parameter1: java.lang.String;
        r7 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("=", "");
        r2 = null;
        $i3 = virtualinvoke r7.<java.lang.String: int length()>();
        if $i3 != 0 goto label0;

        return r2;

     label0:
        $r8 = <chess.MoveGen: chess.MoveGen instance>;
        r3 = virtualinvoke $r8.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r0);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r0, r3);
        $i4 = virtualinvoke r7.<java.lang.String: int length()>();
        $i5 = $i4 - 1;
        c0 = virtualinvoke r7.<java.lang.String: char charAt(int)>($i5);
        if c0 == 35 goto label1;

        if c0 != 43 goto label5;

     label1:
        $r9 = new chess.MoveGen$MoveList;
        specialinvoke $r9.<chess.MoveGen$MoveList: void <init>()>();
        r4 = $r9;
        i1 = 0;
        i2 = 0;

     label2:
        $i6 = r3.<chess.MoveGen$MoveList: int size>;
        if i2 >= $i6 goto label4;

        $r10 = r3.<chess.MoveGen$MoveList: chess.Move[] m>;
        r5 = $r10[i2];
        r6 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean,chess.MoveGen$MoveList)>(r0, r5, 1, r3);
        $i7 = virtualinvoke r6.<java.lang.String: int length()>();
        $i8 = $i7 - 1;
        $c9 = virtualinvoke r6.<java.lang.String: char charAt(int)>($i8);
        if $c9 != c0 goto label3;

        $r11 = r4.<chess.MoveGen$MoveList: chess.Move[] m>;
        $i10 = i1;
        i1 = i1 + 1;
        $r11[$i10] = r5;

     label3:
        i2 = i2 + 1;
        goto label2;

     label4:
        r4.<chess.MoveGen$MoveList: int size> = i1;
        r3 = r4;
        r7 = staticinvoke <chess.TextIO: java.lang.String normalizeMoveString(java.lang.String)>(r7);

     label5:
        i11 = 0;

     label6:
        if i11 >= 2 goto label13;

        i12 = 0;

     label7:
        $i13 = r3.<chess.MoveGen$MoveList: int size>;
        if i12 >= $i13 goto label12;

        $r12 = r3.<chess.MoveGen$MoveList: chess.Move[] m>;
        r13 = $r12[i12];
        $r14 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean,chess.MoveGen$MoveList)>(r0, r13, 1, r3);
        r15 = staticinvoke <chess.TextIO: java.lang.String normalizeMoveString(java.lang.String)>($r14);
        $r16 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean,chess.MoveGen$MoveList)>(r0, r13, 0, r3);
        r17 = staticinvoke <chess.TextIO: java.lang.String normalizeMoveString(java.lang.String)>($r16);
        if i11 != 0 goto label9;

        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r15);
        if $z0 != 0 goto label8;

        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(r17);
        if $z1 == 0 goto label11;

     label8:
        return r13;

     label9:
        $r18 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>();
        $r19 = virtualinvoke r15.<java.lang.String: java.lang.String toLowerCase()>();
        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);
        if $z2 != 0 goto label10;

        $r20 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>();
        $r21 = virtualinvoke r17.<java.lang.String: java.lang.String toLowerCase()>();
        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21);
        if $z3 == 0 goto label11;

     label10:
        return r13;

     label11:
        i12 = i12 + 1;
        goto label7;

     label12:
        i11 = i11 + 1;
        goto label6;

     label13:
        i14 = 0;

     label14:
        if i14 >= 2 goto label28;

        i15 = 0;

     label15:
        $i16 = r3.<chess.MoveGen$MoveList: int size>;
        if i15 >= $i16 goto label26;

        $r22 = r3.<chess.MoveGen$MoveList: chess.Move[] m>;
        r23 = $r22[i15];
        $r24 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r0, r23, 1);
        r25 = staticinvoke <chess.TextIO: java.lang.String normalizeMoveString(java.lang.String)>($r24);
        $r26 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r0, r23, 0);
        r27 = staticinvoke <chess.TextIO: java.lang.String normalizeMoveString(java.lang.String)>($r26);
        if i14 != 0 goto label19;

        $z4 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>(r7);
        if $z4 != 0 goto label16;

        $z5 = virtualinvoke r27.<java.lang.String: boolean startsWith(java.lang.String)>(r7);
        if $z5 == 0 goto label17;

     label16:
        $z6 = 1;
        goto label18;

     label17:
        $z6 = 0;

     label18:
        z7 = $z6;
        goto label23;

     label19:
        $r28 = virtualinvoke r25.<java.lang.String: java.lang.String toLowerCase()>();
        $r29 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>();
        $z8 = virtualinvoke $r28.<java.lang.String: boolean startsWith(java.lang.String)>($r29);
        if $z8 != 0 goto label20;

        $r30 = virtualinvoke r27.<java.lang.String: java.lang.String toLowerCase()>();
        $r31 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>();
        $z9 = virtualinvoke $r30.<java.lang.String: boolean startsWith(java.lang.String)>($r31);
        if $z9 == 0 goto label21;

     label20:
        $z10 = 1;
        goto label22;

     label21:
        $z10 = 0;

     label22:
        z7 = $z10;

     label23:
        if z7 == 0 goto label25;

        if r2 == null goto label24;

        return null;

     label24:
        r2 = r23;

     label25:
        i15 = i15 + 1;
        goto label15;

     label26:
        if r2 == null goto label27;

        return r2;

     label27:
        i14 = i14 + 1;
        goto label14;

     label28:
        return r2;
    }

    public static final int getSquare(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i4;
        char $c2, $c3;

        r0 := @parameter0: java.lang.String;
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
        i0 = $c2 - 97;
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
        i1 = $c3 - 49;
        if i0 < 0 goto label0;

        if i0 > 7 goto label0;

        if i1 < 0 goto label0;

        if i1 <= 7 goto label1;

     label0:
        return -1;

     label1:
        $i4 = staticinvoke <chess.Position: int getSquare(int,int)>(i0, i1);
        return $i4;
    }

    public static final java.lang.String squareToString(int)
    {
        int i0, i1, i2, $i3, $i5;
        java.lang.StringBuilder $r0, r1;
        char $c4, $c6;
        java.lang.String $r4;

        i0 := @parameter0: int;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
        r1 = $r0;
        i1 = staticinvoke <chess.Position: int getX(int)>(i0);
        i2 = staticinvoke <chess.Position: int getY(int)>(i0);
        $i3 = i1 + 97;
        $c4 = (char) $i3;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);
        $i5 = i2 + 49;
        $c6 = (char) $i5;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r4;
    }

    public static final java.lang.String asciiBoard(chess.Position)
    {
        chess.Position r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String r3, $r10, r14, $r20;
        int i0, i1, i2, $i3, $i5;
        boolean z0, $z1;
        java.lang.Object[] $r4;
        char $c4;

        r0 := @parameter0: chess.Position;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(400);
        r2 = $r1;
        $r4 = newarray (java.lang.Object)[0];
        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%n", $r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    +----+----+----+----+----+----+----+----+");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        i0 = 7;

     label0:
        if i0 < 0 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    |");
        i1 = 0;

     label1:
        if i1 >= 8 goto label9;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $i3 = staticinvoke <chess.Position: int getSquare(int,int)>(i1, i0);
        i2 = virtualinvoke r0.<chess.Position: int getPiece(int)>($i3);
        if i2 != 0 goto label4;

        z0 = staticinvoke <chess.Position: boolean darkSquare(int,int)>(i1, i0);
        if z0 == 0 goto label2;

        $r10 = ".. |";
        goto label3;

     label2:
        $r10 = "   |";

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        goto label8;

     label4:
        $z1 = staticinvoke <chess.Piece: boolean isWhite(int)>(i2);
        if $z1 == 0 goto label5;

        $c4 = 32;
        goto label6;

     label5:
        $c4 = 42;

     label6:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);
        r14 = staticinvoke <chess.TextIO: java.lang.String pieceToChar(int)>(i2);
        $i5 = virtualinvoke r14.<java.lang.String: int length()>();
        if $i5 != 0 goto label7;

        r14 = "P";

     label7:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |");

     label8:
        i1 = i1 + 1;
        goto label1;

     label9:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    +----+----+----+----+----+----+----+----+");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        i0 = i0 + -1;
        goto label0;

     label10:
        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r20;
    }

    private static final java.lang.String normalizeMoveString(java.lang.String)
    {
        java.lang.String r0;
        char c0;
        int $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: java.lang.String;
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 <= 0 goto label1;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        $i3 = $i2 - 1;
        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);
        if c0 == 35 goto label0;

        if c0 != 43 goto label1;

     label0:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();
        $i5 = $i4 - 1;
        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

     label1:
        return r0;
    }

    private static final java.lang.String pieceToChar(int)
    {
        int i0;

        i0 := @parameter0: int;
        tableswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label0;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label5;
            case 7: goto label4;
            case 8: goto label0;
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label3;
            default: goto label5;
        };

     label0:
        return "Q";

     label1:
        return "R";

     label2:
        return "B";

     label3:
        return "N";

     label4:
        return "K";

     label5:
        return "";
    }
}
public final class chess.TranspositionTable$TTEntry extends java.lang.Object
{
    long key;
    private short move;
    private short score;
    private short depthSlot;
    byte generation;
    public byte type;
    short evalScore;
    public static final int T_EXACT;
    public static final int T_GE;
    public static final int T_LE;
    public static final int T_EMPTY;

    public void <init>()
    {
        chess.TranspositionTable$TTEntry r0;

        r0 := @this: chess.TranspositionTable$TTEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public final boolean betterThan(chess.TranspositionTable$TTEntry, int)
    {
        chess.TranspositionTable$TTEntry r0, r1;
        int i0, $i7, $i8, $i9, $i10;
        byte $b1, $b2, $b3, $b4, $b5, $b6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: chess.TranspositionTable$TTEntry;
        r1 := @parameter0: chess.TranspositionTable$TTEntry;
        i0 := @parameter1: int;
        $b1 = r0.<chess.TranspositionTable$TTEntry: byte generation>;
        if $b1 != i0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        $b2 = r1.<chess.TranspositionTable$TTEntry: byte generation>;
        if $b2 != i0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z0 == $z1 goto label6;

        $b3 = r0.<chess.TranspositionTable$TTEntry: byte generation>;
        if $b3 != i0 goto label4;

        $z2 = 1;
        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;

     label6:
        $b4 = r0.<chess.TranspositionTable$TTEntry: byte type>;
        if $b4 != 0 goto label7;

        $z3 = 1;
        goto label8;

     label7:
        $z3 = 0;

     label8:
        $b5 = r1.<chess.TranspositionTable$TTEntry: byte type>;
        if $b5 != 0 goto label9;

        $z4 = 1;
        goto label10;

     label9:
        $z4 = 0;

     label10:
        if $z3 == $z4 goto label13;

        $b6 = r0.<chess.TranspositionTable$TTEntry: byte type>;
        if $b6 != 0 goto label11;

        $z5 = 1;
        goto label12;

     label11:
        $z5 = 0;

     label12:
        return $z5;

     label13:
        $i7 = virtualinvoke r0.<chess.TranspositionTable$TTEntry: int getDepth()>();
        $i8 = virtualinvoke r1.<chess.TranspositionTable$TTEntry: int getDepth()>();
        if $i7 == $i8 goto label16;

        $i9 = virtualinvoke r0.<chess.TranspositionTable$TTEntry: int getDepth()>();
        $i10 = virtualinvoke r1.<chess.TranspositionTable$TTEntry: int getDepth()>();
        if $i9 <= $i10 goto label14;

        $z6 = 1;
        goto label15;

     label14:
        $z6 = 0;

     label15:
        return $z6;

     label16:
        return 0;
    }

    public final boolean valuable(int)
    {
        chess.TranspositionTable$TTEntry r0;
        int i0, $i3;
        byte $b1, $b2;
        boolean $z0;

        r0 := @this: chess.TranspositionTable$TTEntry;
        i0 := @parameter0: int;
        $b1 = r0.<chess.TranspositionTable$TTEntry: byte generation>;
        if $b1 == i0 goto label0;

        return 0;

     label0:
        $b2 = r0.<chess.TranspositionTable$TTEntry: byte type>;
        if $b2 == 0 goto label1;

        $i3 = virtualinvoke r0.<chess.TranspositionTable$TTEntry: int getDepth()>();
        if $i3 <= 24 goto label2;

     label1:
        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final void getMove(chess.Move)
    {
        chess.TranspositionTable$TTEntry r0;
        chess.Move r1;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7;

        r0 := @this: chess.TranspositionTable$TTEntry;
        r1 := @parameter0: chess.Move;
        $s0 = r0.<chess.TranspositionTable$TTEntry: short move>;
        $s1 = $s0 & 63;
        r1.<chess.Move: int 'from'> = $s1;
        $s2 = r0.<chess.TranspositionTable$TTEntry: short move>;
        $s3 = $s2 >> 6;
        $s4 = $s3 & 63;
        r1.<chess.Move: int 'to'> = $s4;
        $s5 = r0.<chess.TranspositionTable$TTEntry: short move>;
        $s6 = $s5 >> 12;
        $s7 = $s6 & 15;
        r1.<chess.Move: int promoteTo> = $s7;
        return;
    }

    public final void setMove(chess.Move)
    {
        chess.TranspositionTable$TTEntry r0;
        chess.Move r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        short $s7;

        r0 := @this: chess.TranspositionTable$TTEntry;
        r1 := @parameter0: chess.Move;
        $i0 = r1.<chess.Move: int 'from'>;
        $i1 = r1.<chess.Move: int 'to'>;
        $i2 = $i1 << 6;
        $i3 = $i0 + $i2;
        $i4 = r1.<chess.Move: int promoteTo>;
        $i5 = $i4 << 12;
        $i6 = $i3 + $i5;
        $s7 = (short) $i6;
        r0.<chess.TranspositionTable$TTEntry: short move> = $s7;
        return;
    }

    public final int getScore(int)
    {
        chess.TranspositionTable$TTEntry r0;
        int i0, i1;

        r0 := @this: chess.TranspositionTable$TTEntry;
        i0 := @parameter0: int;
        i1 = r0.<chess.TranspositionTable$TTEntry: short score>;
        if i1 <= 31000 goto label0;

        i1 = i1 - i0;
        goto label1;

     label0:
        if i1 >= -31000 goto label1;

        i1 = i1 + i0;

     label1:
        return i1;
    }

    public final void setScore(int, int)
    {
        chess.TranspositionTable$TTEntry r0;
        int i0, i1;
        short $s2;

        r0 := @this: chess.TranspositionTable$TTEntry;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 <= 31000 goto label0;

        i0 = i0 + i1;
        goto label1;

     label0:
        if i0 >= -31000 goto label1;

        i0 = i0 - i1;

     label1:
        $s2 = (short) i0;
        r0.<chess.TranspositionTable$TTEntry: short score> = $s2;
        return;
    }

    public final int getDepth()
    {
        chess.TranspositionTable$TTEntry r0;
        short $s0, $s1;

        r0 := @this: chess.TranspositionTable$TTEntry;
        $s0 = r0.<chess.TranspositionTable$TTEntry: short depthSlot>;
        $s1 = $s0 & 32767;
        return $s1;
    }

    public final void setDepth(int)
    {
        chess.TranspositionTable$TTEntry r0;
        int i0, $i2;
        short $s1, $s3, $s4, $s5, $s6, $s7, $s8;

        r0 := @this: chess.TranspositionTable$TTEntry;
        i0 := @parameter0: int;
        $s1 = r0.<chess.TranspositionTable$TTEntry: short depthSlot>;
        $i2 = $s1 & 32768;
        $s3 = (short) $i2;
        r0.<chess.TranspositionTable$TTEntry: short depthSlot> = $s3;
        $s4 = r0.<chess.TranspositionTable$TTEntry: short depthSlot>;
        $s5 = (short) i0;
        $s6 = $s5 & 32767;
        $s7 = $s4 | $s6;
        $s8 = (short) $s7;
        r0.<chess.TranspositionTable$TTEntry: short depthSlot> = $s8;
        return;
    }

    final int getHashSlot()
    {
        chess.TranspositionTable$TTEntry r0;
        short $s0, $s1;

        r0 := @this: chess.TranspositionTable$TTEntry;
        $s0 = r0.<chess.TranspositionTable$TTEntry: short depthSlot>;
        $s1 = $s0 >>> 15;
        return $s1;
    }

    public final void setHashSlot(int)
    {
        chess.TranspositionTable$TTEntry r0;
        int i0, $i5, $i6;
        short $s1, $s2, $s3, $s4, $s7;

        r0 := @this: chess.TranspositionTable$TTEntry;
        i0 := @parameter0: int;
        $s1 = r0.<chess.TranspositionTable$TTEntry: short depthSlot>;
        $s2 = $s1 & 32767;
        $s3 = (short) $s2;
        r0.<chess.TranspositionTable$TTEntry: short depthSlot> = $s3;
        $s4 = r0.<chess.TranspositionTable$TTEntry: short depthSlot>;
        $i5 = i0 << 15;
        $i6 = $s4 | $i5;
        $s7 = (short) $i6;
        r0.<chess.TranspositionTable$TTEntry: short depthSlot> = $s7;
        return;
    }

    static short access$002(chess.TranspositionTable$TTEntry, short)
    {
        chess.TranspositionTable$TTEntry r0;
        short s0;

        r0 := @parameter0: chess.TranspositionTable$TTEntry;
        s0 := @parameter1: short;
        r0.<chess.TranspositionTable$TTEntry: short depthSlot> = s0;
        return s0;
    }

    static short access$102(chess.TranspositionTable$TTEntry, short)
    {
        chess.TranspositionTable$TTEntry r0;
        short s0;

        r0 := @parameter0: chess.TranspositionTable$TTEntry;
        s0 := @parameter1: short;
        r0.<chess.TranspositionTable$TTEntry: short move> = s0;
        return s0;
    }

    static short access$100(chess.TranspositionTable$TTEntry)
    {
        chess.TranspositionTable$TTEntry r0;
        short $s0;

        r0 := @parameter0: chess.TranspositionTable$TTEntry;
        $s0 = r0.<chess.TranspositionTable$TTEntry: short move>;
        return $s0;
    }

    static short access$202(chess.TranspositionTable$TTEntry, short)
    {
        chess.TranspositionTable$TTEntry r0;
        short s0;

        r0 := @parameter0: chess.TranspositionTable$TTEntry;
        s0 := @parameter1: short;
        r0.<chess.TranspositionTable$TTEntry: short score> = s0;
        return s0;
    }

    static short access$200(chess.TranspositionTable$TTEntry)
    {
        chess.TranspositionTable$TTEntry r0;
        short $s0;

        r0 := @parameter0: chess.TranspositionTable$TTEntry;
        $s0 = r0.<chess.TranspositionTable$TTEntry: short score>;
        return $s0;
    }

    static short access$000(chess.TranspositionTable$TTEntry)
    {
        chess.TranspositionTable$TTEntry r0;
        short $s0;

        r0 := @parameter0: chess.TranspositionTable$TTEntry;
        $s0 = r0.<chess.TranspositionTable$TTEntry: short depthSlot>;
        return $s0;
    }
}
public class chess.TranspositionTable extends java.lang.Object
{
    chess.TranspositionTable$TTEntry[] table;
    chess.TranspositionTable$TTEntry emptySlot;
    byte generation;

    public void <init>(int)
    {
        chess.TranspositionTable r0;
        int i0, i1, i2;
        chess.TranspositionTable$TTEntry r1, $r3, $r5, $r6;
        chess.TranspositionTable$TTEntry[] $r2, $r4;

        r0 := @this: chess.TranspositionTable;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        i1 = 1 << i0;
        $r2 = newarray (chess.TranspositionTable$TTEntry)[i1];
        r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table> = $r2;
        i2 = 0;

     label0:
        if i2 >= i1 goto label1;

        $r3 = new chess.TranspositionTable$TTEntry;
        specialinvoke $r3.<chess.TranspositionTable$TTEntry: void <init>()>();
        r1 = $r3;
        r1.<chess.TranspositionTable$TTEntry: long key> = 0L;
        staticinvoke <chess.TranspositionTable$TTEntry: short access$002(chess.TranspositionTable$TTEntry,short)>(r1, 0);
        r1.<chess.TranspositionTable$TTEntry: byte type> = 3;
        $r4 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        $r4[i2] = r1;
        i2 = i2 + 1;
        goto label0;

     label1:
        $r5 = new chess.TranspositionTable$TTEntry;
        specialinvoke $r5.<chess.TranspositionTable$TTEntry: void <init>()>();
        r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry emptySlot> = $r5;
        $r6 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry emptySlot>;
        $r6.<chess.TranspositionTable$TTEntry: byte type> = 3;
        r0.<chess.TranspositionTable: byte generation> = 0;
        return;
    }

    public final void insert(long, chess.Move, int, int, int, int)
    {
        chess.TranspositionTable r0;
        long l0, $l9, $l11, $l16, $l18, $l20, $l32, $l40;
        chess.Move r1;
        int i1, i2, i3, i4, i5, i6, i8, $i15, $i17, $i29, $i30, $i34, $i36, $i37, $i38, $i39, $i42, $i43, $i44;
        chess.TranspositionTable$TTEntry r2, r3, $r7, $r9, $r12;
        byte b7, $b10, $b12, $b13, $b14, $b19, $b27, $b28, $b33, $b35, $b41, $b45, $b46;
        chess.TranspositionTable$TTEntry[] $r4, $r5, $r6, $r8, $r10, $r11, $r13;
        boolean $z0, $z1, $z2, z3;
        short $s21, $s23, $s25, $s31, $s47;

        r0 := @this: chess.TranspositionTable;
        l0 := @parameter0: long;
        r1 := @parameter1: chess.Move;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        i3 := @parameter4: int;
        i4 := @parameter5: int;
        if i3 >= 0 goto label0;

        i3 = 0;

     label0:
        i5 = specialinvoke r0.<chess.TranspositionTable: int h0(long)>(l0);
        i6 = specialinvoke r0.<chess.TranspositionTable: int h1(long)>(l0);
        $r4 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        r2 = $r4[i5];
        b7 = 0;
        $l9 = r2.<chess.TranspositionTable$TTEntry: long key>;
        $b10 = $l9 cmp l0;
        if $b10 == 0 goto label1;

        $r5 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        r2 = $r5[i6];
        b7 = 1;

     label1:
        $l11 = r2.<chess.TranspositionTable$TTEntry: long key>;
        $b12 = $l11 cmp l0;
        if $b12 == 0 goto label5;

        $r6 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        $r7 = $r6[i6];
        $r8 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        $r9 = $r8[i5];
        $b13 = r0.<chess.TranspositionTable: byte generation>;
        $z0 = virtualinvoke $r7.<chess.TranspositionTable$TTEntry: boolean betterThan(chess.TranspositionTable$TTEntry,int)>($r9, $b13);
        if $z0 == 0 goto label2;

        $r10 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        r2 = $r10[i5];
        b7 = 0;

     label2:
        $b14 = r0.<chess.TranspositionTable: byte generation>;
        $z1 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: boolean valuable(int)>($b14);
        if $z1 == 0 goto label5;

        $i15 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: int getHashSlot()>();
        if $i15 != 0 goto label3;

        $l16 = r2.<chess.TranspositionTable$TTEntry: long key>;
        $i17 = specialinvoke r0.<chess.TranspositionTable: int h1(long)>($l16);
        goto label4;

     label3:
        $l18 = r2.<chess.TranspositionTable$TTEntry: long key>;
        $i17 = specialinvoke r0.<chess.TranspositionTable: int h0(long)>($l18);

     label4:
        i8 = $i17;
        $r11 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        $r12 = $r11[i8];
        $b19 = r0.<chess.TranspositionTable: byte generation>;
        $z2 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: boolean betterThan(chess.TranspositionTable$TTEntry,int)>($r12, $b19);
        if $z2 == 0 goto label5;

        $r13 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        r3 = $r13[i8];
        $l20 = r2.<chess.TranspositionTable$TTEntry: long key>;
        r3.<chess.TranspositionTable$TTEntry: long key> = $l20;
        $s21 = staticinvoke <chess.TranspositionTable$TTEntry: short access$100(chess.TranspositionTable$TTEntry)>(r2);
        staticinvoke <chess.TranspositionTable$TTEntry: short access$102(chess.TranspositionTable$TTEntry,short)>(r3, $s21);
        $s23 = staticinvoke <chess.TranspositionTable$TTEntry: short access$200(chess.TranspositionTable$TTEntry)>(r2);
        staticinvoke <chess.TranspositionTable$TTEntry: short access$202(chess.TranspositionTable$TTEntry,short)>(r3, $s23);
        $s25 = staticinvoke <chess.TranspositionTable$TTEntry: short access$000(chess.TranspositionTable$TTEntry)>(r2);
        staticinvoke <chess.TranspositionTable$TTEntry: short access$002(chess.TranspositionTable$TTEntry,short)>(r3, $s25);
        $b27 = r2.<chess.TranspositionTable$TTEntry: byte generation>;
        r3.<chess.TranspositionTable$TTEntry: byte generation> = $b27;
        $b28 = r2.<chess.TranspositionTable$TTEntry: byte type>;
        r3.<chess.TranspositionTable$TTEntry: byte type> = $b28;
        $i29 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: int getHashSlot()>();
        $i30 = 1 - $i29;
        virtualinvoke r3.<chess.TranspositionTable$TTEntry: void setHashSlot(int)>($i30);
        $s31 = r2.<chess.TranspositionTable$TTEntry: short evalScore>;
        r3.<chess.TranspositionTable$TTEntry: short evalScore> = $s31;

     label5:
        z3 = 1;
        $l32 = r2.<chess.TranspositionTable$TTEntry: long key>;
        $b33 = $l32 cmp l0;
        if $b33 != 0 goto label8;

        $i34 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: int getDepth()>();
        if $i34 <= i3 goto label8;

        $b35 = r2.<chess.TranspositionTable$TTEntry: byte type>;
        if $b35 != i1 goto label8;

        if i1 != 0 goto label6;

        z3 = 0;
        goto label8;

     label6:
        if i1 != 1 goto label7;

        $i36 = r1.<chess.Move: int score>;
        $i37 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: int getScore(int)>(i2);
        if $i36 > $i37 goto label7;

        z3 = 0;
        goto label8;

     label7:
        if i1 != 2 goto label8;

        $i38 = r1.<chess.Move: int score>;
        $i39 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: int getScore(int)>(i2);
        if $i38 < $i39 goto label8;

        z3 = 0;

     label8:
        if z3 == 0 goto label11;

        $l40 = r2.<chess.TranspositionTable$TTEntry: long key>;
        $b41 = $l40 cmp l0;
        if $b41 != 0 goto label9;

        $i42 = r1.<chess.Move: int 'from'>;
        $i43 = r1.<chess.Move: int 'to'>;
        if $i42 == $i43 goto label10;

     label9:
        virtualinvoke r2.<chess.TranspositionTable$TTEntry: void setMove(chess.Move)>(r1);

     label10:
        r2.<chess.TranspositionTable$TTEntry: long key> = l0;
        $i44 = r1.<chess.Move: int score>;
        virtualinvoke r2.<chess.TranspositionTable$TTEntry: void setScore(int,int)>($i44, i2);
        virtualinvoke r2.<chess.TranspositionTable$TTEntry: void setDepth(int)>(i3);
        $b45 = r0.<chess.TranspositionTable: byte generation>;
        r2.<chess.TranspositionTable$TTEntry: byte generation> = $b45;
        $b46 = (byte) i1;
        r2.<chess.TranspositionTable$TTEntry: byte type> = $b46;
        virtualinvoke r2.<chess.TranspositionTable$TTEntry: void setHashSlot(int)>(b7);
        $s47 = (short) i4;
        r2.<chess.TranspositionTable$TTEntry: short evalScore> = $s47;

     label11:
        return;
    }

    public final chess.TranspositionTable$TTEntry probe(long)
    {
        chess.TranspositionTable r0;
        long l0, $l3, $l6;
        int i1, i2;
        chess.TranspositionTable$TTEntry r1, r4, $r5;
        chess.TranspositionTable$TTEntry[] $r2, $r3;
        byte $b4, $b5, $b7, $b8;

        r0 := @this: chess.TranspositionTable;
        l0 := @parameter0: long;
        i1 = specialinvoke r0.<chess.TranspositionTable: int h0(long)>(l0);
        $r2 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        r1 = $r2[i1];
        $l3 = r1.<chess.TranspositionTable$TTEntry: long key>;
        $b4 = $l3 cmp l0;
        if $b4 != 0 goto label0;

        $b5 = r0.<chess.TranspositionTable: byte generation>;
        r1.<chess.TranspositionTable$TTEntry: byte generation> = $b5;
        return r1;

     label0:
        i2 = specialinvoke r0.<chess.TranspositionTable: int h1(long)>(l0);
        $r3 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        r4 = $r3[i2];
        $l6 = r4.<chess.TranspositionTable$TTEntry: long key>;
        $b7 = $l6 cmp l0;
        if $b7 != 0 goto label1;

        $b8 = r0.<chess.TranspositionTable: byte generation>;
        r4.<chess.TranspositionTable$TTEntry: byte generation> = $b8;
        return r4;

     label1:
        $r5 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry emptySlot>;
        return $r5;
    }

    public final void nextGeneration()
    {
        chess.TranspositionTable r0;
        byte $b0, $b2;
        int $i1;

        r0 := @this: chess.TranspositionTable;
        $b0 = r0.<chess.TranspositionTable: byte generation>;
        $i1 = $b0 + 1;
        $b2 = (byte) $i1;
        r0.<chess.TranspositionTable: byte generation> = $b2;
        return;
    }

    public final void clear()
    {
        chess.TranspositionTable r0;
        chess.TranspositionTable$TTEntry[] r1;
        int i0, i1;
        chess.TranspositionTable$TTEntry r2;

        r0 := @this: chess.TranspositionTable;
        r1 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        i0 = lengthof r1;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        r2 = r1[i1];
        r2.<chess.TranspositionTable$TTEntry: byte type> = 3;
        i1 = i1 + 1;
        goto label0;

     label1:
        return;
    }

    public final java.util.ArrayList extractPVMoves(chess.Position, chess.Move)
    {
        chess.TranspositionTable r0;
        chess.Position r1, $r3, r4;
        chess.Move r2, $r11, r12, $r19, $r21;
        java.util.ArrayList r5, r7, $r13, $r15;
        chess.UndoInfo r6, $r14;
        chess.MoveGen r8, $r16;
        chess.TranspositionTable$TTEntry r9;
        chess.MoveGen$MoveList r10;
        boolean z0, $z2, $z4;
        int i0, $i5;
        long $l1, $l2, $l3;
        java.lang.Long $r17, $r18;
        byte $b4;
        chess.Move[] $r20;

        r0 := @this: chess.TranspositionTable;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: chess.Move;
        $r3 = new chess.Position;
        specialinvoke $r3.<chess.Position: void <init>(chess.Position)>(r1);
        r4 = $r3;
        $r11 = new chess.Move;
        specialinvoke $r11.<chess.Move: void <init>(chess.Move)>(r2);
        r12 = $r11;
        $r13 = new java.util.ArrayList;
        specialinvoke $r13.<java.util.ArrayList: void <init>()>();
        r5 = $r13;
        $r14 = new chess.UndoInfo;
        specialinvoke $r14.<chess.UndoInfo: void <init>()>();
        r6 = $r14;
        $r15 = new java.util.ArrayList;
        specialinvoke $r15.<java.util.ArrayList: void <init>()>();
        r7 = $r15;
        $r16 = new chess.MoveGen;
        specialinvoke $r16.<chess.MoveGen: void <init>()>();
        r8 = $r16;

     label0:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);
        virtualinvoke r4.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r12, r6);
        $l1 = virtualinvoke r4.<chess.Position: long zobristHash()>();
        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
        $z2 = interfaceinvoke r7.<java.util.List: boolean contains(java.lang.Object)>($r17);
        if $z2 == 0 goto label1;

        goto label7;

     label1:
        $l2 = virtualinvoke r4.<chess.Position: long zobristHash()>();
        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r18);
        $l3 = virtualinvoke r4.<chess.Position: long historyHash()>();
        r9 = virtualinvoke r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry probe(long)>($l3);
        $b4 = r9.<chess.TranspositionTable$TTEntry: byte type>;
        if $b4 != 3 goto label2;

        goto label7;

     label2:
        $r19 = new chess.Move;
        specialinvoke $r19.<chess.Move: void <init>(int,int,int)>(0, 0, 0);
        r12 = $r19;
        virtualinvoke r9.<chess.TranspositionTable$TTEntry: void getMove(chess.Move)>(r12);
        r10 = virtualinvoke r8.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r4);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r4, r10);
        z0 = 0;
        i0 = 0;

     label3:
        $i5 = r10.<chess.MoveGen$MoveList: int size>;
        if i0 >= $i5 goto label5;

        $r20 = r10.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r21 = $r20[i0];
        $z4 = virtualinvoke $r21.<chess.Move: boolean equals(java.lang.Object)>(r12);
        if $z4 == 0 goto label4;

        z0 = 1;
        goto label5;

     label4:
        i0 = i0 + 1;
        goto label3;

     label5:
        if z0 != 0 goto label6;

        goto label7;

     label6:
        goto label0;

     label7:
        return r5;
    }

    public final java.lang.String extractPV(chess.Position)
    {
        chess.TranspositionTable r0;
        chess.Position r1, $r11, r12;
        java.lang.StringBuilder $r2, r3;
        boolean z0, z1, z2, $z3, $z4;
        chess.TranspositionTable$TTEntry r4;
        chess.UndoInfo r5, $r13;
        java.util.ArrayList r6, $r14;
        chess.MoveGen r7;
        java.lang.String r8, r18, $r24;
        chess.Move r9, $r15, $r17;
        chess.MoveGen$MoveList r10;
        int i0, $i5;
        long $l1, $l6, $l7, $l8;
        byte $b2, $b3, $b4;
        chess.Move[] $r16;
        java.lang.Long $r22, $r23;

        r0 := @this: chess.TranspositionTable;
        r1 := @parameter0: chess.Position;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(100);
        r3 = $r2;
        $r11 = new chess.Position;
        specialinvoke $r11.<chess.Position: void <init>(chess.Position)>(r1);
        r12 = $r11;
        z0 = 1;
        $l1 = virtualinvoke r12.<chess.Position: long historyHash()>();
        r4 = virtualinvoke r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry probe(long)>($l1);
        $r13 = new chess.UndoInfo;
        specialinvoke $r13.<chess.UndoInfo: void <init>()>();
        r5 = $r13;
        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r6 = $r14;
        z1 = 0;
        r7 = <chess.MoveGen: chess.MoveGen instance>;

     label0:
        $b2 = r4.<chess.TranspositionTable$TTEntry: byte type>;
        if $b2 == 3 goto label10;

        r8 = "";
        $b3 = r4.<chess.TranspositionTable$TTEntry: byte type>;
        if $b3 != 2 goto label1;

        r8 = "<";
        goto label2;

     label1:
        $b4 = r4.<chess.TranspositionTable$TTEntry: byte type>;
        if $b4 != 1 goto label2;

        r8 = ">";

     label2:
        $r15 = new chess.Move;
        specialinvoke $r15.<chess.Move: void <init>(int,int,int)>(0, 0, 0);
        r9 = $r15;
        virtualinvoke r4.<chess.TranspositionTable$TTEntry: void getMove(chess.Move)>(r9);
        r10 = virtualinvoke r7.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r12);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r12, r10);
        z2 = 0;
        i0 = 0;

     label3:
        $i5 = r10.<chess.MoveGen$MoveList: int size>;
        if i0 >= $i5 goto label5;

        $r16 = r10.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r17 = $r16[i0];
        $z3 = virtualinvoke $r17.<chess.Move: boolean equals(java.lang.Object)>(r9);
        if $z3 == 0 goto label4;

        z2 = 1;
        goto label5;

     label4:
        i0 = i0 + 1;
        goto label3;

     label5:
        if z2 != 0 goto label6;

        goto label10;

     label6:
        r18 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r12, r9, 0);
        if z1 == 0 goto label7;

        goto label10;

     label7:
        if z0 != 0 goto label8;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label8:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);
        virtualinvoke r12.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r9, r5);
        $l6 = virtualinvoke r12.<chess.Position: long zobristHash()>();
        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
        $z4 = virtualinvoke r6.<java.util.ArrayList: boolean contains(java.lang.Object)>($r22);
        if $z4 == 0 goto label9;

        z1 = 1;

     label9:
        $l7 = virtualinvoke r12.<chess.Position: long zobristHash()>();
        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);
        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);
        $l8 = virtualinvoke r12.<chess.Position: long historyHash()>();
        r4 = virtualinvoke r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry probe(long)>($l8);
        z0 = 0;
        goto label0;

     label10:
        $r24 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r24;
    }

    public final void printStats()
    {
        chess.TranspositionTable r0;
        int i0, i1, i3, i4, i5, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        java.util.ArrayList r1, $r3;
        short s2;
        chess.TranspositionTable$TTEntry r2;
        java.lang.Integer $r4, $r7, $r8, $r14, $r15, $r17, $r21, $r24, $r25;
        chess.TranspositionTable$TTEntry[] r5, $r10, $r13;
        byte $b6, $b7, $b8;
        java.lang.Object $r6, $r20;
        double $d0, d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.io.PrintStream $r11, $r22;
        java.lang.Object[] $r12, $r23;
        java.lang.Double $r16, $r18, $r26;

        r0 := @this: chess.TranspositionTable;
        i0 = 0;
        i1 = 0;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r1 = $r3;
        s2 = 160;
        i3 = 0;

     label0:
        if i3 >= 160 goto label1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);
        i3 = i3 + 1;
        goto label0;

     label1:
        r5 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        i4 = lengthof r5;
        i5 = 0;

     label2:
        if i5 >= i4 goto label6;

        r2 = r5[i5];
        $b6 = r2.<chess.TranspositionTable$TTEntry: byte type>;
        if $b6 != 3 goto label3;

        i0 = i0 + 1;
        goto label5;

     label3:
        $b7 = r2.<chess.TranspositionTable$TTEntry: byte generation>;
        $b8 = r0.<chess.TranspositionTable: byte generation>;
        if $b7 != $b8 goto label4;

        i1 = i1 + 1;

     label4:
        $i9 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: int getDepth()>();
        if $i9 >= 160 goto label5;

        $i10 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: int getDepth()>();
        $i11 = virtualinvoke r2.<chess.TranspositionTable$TTEntry: int getDepth()>();
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i11);
        $r7 = (java.lang.Integer) $r6;
        $i12 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
        $i13 = $i12 + 1;
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);
        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i10, $r8);

     label5:
        i5 = i5 + 1;
        goto label2;

     label6:
        $r10 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        $i14 = lengthof $r10;
        $d0 = (double) $i14;
        d1 = 100.0 / $d0;
        $r11 = <java.lang.System: java.io.PrintStream out>;
        $r12 = newarray (java.lang.Object)[5];
        $r13 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        $i15 = lengthof $r13;
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);
        $r12[0] = $r14;
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r12[1] = $r15;
        $d2 = (double) i0;
        $d3 = $d2 * d1;
        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);
        $r12[2] = $r16;
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r12[3] = $r17;
        $d4 = (double) i1;
        $d5 = $d4 * d1;
        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);
        $r12[4] = $r18;
        virtualinvoke $r11.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Hash stats: size:%d unused:%d (%.2f%%) thisGen:%d (%.2f%%)\n", $r12);
        i16 = 0;

     label7:
        if i16 >= 160 goto label9;

        $r20 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i16);
        $r21 = (java.lang.Integer) $r20;
        i17 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
        if i17 <= 0 goto label8;

        $r22 = <java.lang.System: java.io.PrintStream out>;
        $r23 = newarray (java.lang.Object)[3];
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16);
        $r23[0] = $r24;
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i17);
        $r23[1] = $r25;
        $d6 = (double) i17;
        $d7 = $d6 * d1;
        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);
        $r23[2] = $r26;
        virtualinvoke $r22.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%3d %8d (%6.2f%%)\n", $r23);

     label8:
        i16 = i16 + 1;
        goto label7;

     label9:
        return;
    }

    private final int h0(long)
    {
        chess.TranspositionTable r0;
        long l0, $l3, $l4;
        chess.TranspositionTable$TTEntry[] $r1;
        int $i1, $i2, $i5;

        r0 := @this: chess.TranspositionTable;
        l0 := @parameter0: long;
        $r1 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        $i1 = lengthof $r1;
        $i2 = $i1 - 1;
        $l3 = (long) $i2;
        $l4 = l0 & $l3;
        $i5 = (int) $l4;
        return $i5;
    }

    private final int h1(long)
    {
        chess.TranspositionTable r0;
        long l0, $l1, $l4, $l5;
        chess.TranspositionTable$TTEntry[] $r1;
        int $i2, $i3, $i6;

        r0 := @this: chess.TranspositionTable;
        l0 := @parameter0: long;
        $l1 = l0 >> 32;
        $r1 = r0.<chess.TranspositionTable: chess.TranspositionTable$TTEntry[] table>;
        $i2 = lengthof $r1;
        $i3 = $i2 - 1;
        $l4 = (long) $i3;
        $l5 = $l1 & $l4;
        $i6 = (int) $l5;
        return $i6;
    }
}
final class chess.TreeLogger$EndEntry extends java.lang.Object
{
    int startIndex;
    short score;
    short scoreType;
    short evalScore;
    long hashKey;

    void <init>()
    {
        chess.TreeLogger$EndEntry r0;

        r0 := @this: chess.TreeLogger$EndEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
final class chess.TreeLogger$StartEntry extends java.lang.Object
{
    int endIndex;
    int parentIndex;
    chess.Move move;
    short alpha;
    short beta;
    byte ply;
    byte depth;

    void <init>()
    {
        chess.TreeLogger$StartEntry r0;

        r0 := @this: chess.TreeLogger$StartEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public final class chess.TreeLogger extends java.lang.Object
{
    private byte[] entryBuffer;
    private java.nio.ByteBuffer bb;
    private java.io.FileOutputStream os;
    private java.io.BufferedOutputStream bos;
    private long nextIndex;
    private java.nio.MappedByteBuffer mapBuf;
    private java.nio.channels.FileChannel fc;
    private int numEntries;

    private void <init>()
    {
        chess.TreeLogger r0;
        byte[] $r1, $r2;
        java.nio.ByteBuffer $r3;

        r0 := @this: chess.TreeLogger;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (byte)[16];
        r0.<chess.TreeLogger: byte[] entryBuffer> = $r1;
        $r2 = r0.<chess.TreeLogger: byte[] entryBuffer>;
        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);
        r0.<chess.TreeLogger: java.nio.ByteBuffer bb> = $r3;
        r0.<chess.TreeLogger: java.io.FileOutputStream os> = null;
        r0.<chess.TreeLogger: java.io.BufferedOutputStream bos> = null;
        r0.<chess.TreeLogger: long nextIndex> = 0L;
        r0.<chess.TreeLogger: java.nio.MappedByteBuffer mapBuf> = null;
        r0.<chess.TreeLogger: java.nio.channels.FileChannel fc> = null;
        r0.<chess.TreeLogger: int numEntries> = 0;
        return;
    }

    public static final chess.TreeLogger getWriter(java.lang.String, chess.Position)
    {
        java.lang.String r0;
        chess.Position r1;
        chess.TreeLogger $r2, r3;
        java.io.FileOutputStream $r4, $r6;
        java.io.BufferedOutputStream $r5;
        java.io.FileNotFoundException $r8, r9;
        java.lang.RuntimeException $r10;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: chess.Position;

     label0:
        $r2 = new chess.TreeLogger;
        specialinvoke $r2.<chess.TreeLogger: void <init>()>();
        r3 = $r2;
        $r4 = new java.io.FileOutputStream;
        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.lang.String)>(r0);
        r3.<chess.TreeLogger: java.io.FileOutputStream os> = $r4;
        $r5 = new java.io.BufferedOutputStream;
        $r6 = r3.<chess.TreeLogger: java.io.FileOutputStream os>;
        specialinvoke $r5.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>($r6, 65536);
        r3.<chess.TreeLogger: java.io.BufferedOutputStream bos> = $r5;
        specialinvoke r3.<chess.TreeLogger: void writeHeader(chess.Position)>(r1);
        r3.<chess.TreeLogger: long nextIndex> = 0L;

     label1:
        return r3;

     label2:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.RuntimeException;
        specialinvoke $r10.<java.lang.RuntimeException: void <init>()>();
        throw $r10;

        catch java.io.FileNotFoundException from label0 to label1 with label2;
    }

    private final void writeHeader(chess.Position)
    {
        chess.TreeLogger r0;
        chess.Position r1;
        byte[] r2, r3;
        int i0, $i1, $i3, $i4, $i5;
        java.lang.String $r4;
        java.io.BufferedOutputStream $r5, $r6, $r7;
        byte $b2;
        java.io.IOException $r8, r9;
        java.lang.RuntimeException $r10;

        r0 := @this: chess.TreeLogger;
        r1 := @parameter0: chess.Position;

     label0:
        $r4 = staticinvoke <chess.TextIO: java.lang.String toFEN(chess.Position)>(r1);
        r2 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();
        $r5 = r0.<chess.TreeLogger: java.io.BufferedOutputStream bos>;
        $i1 = lengthof r2;
        $b2 = (byte) $i1;
        virtualinvoke $r5.<java.io.BufferedOutputStream: void write(int)>($b2);
        $r6 = r0.<chess.TreeLogger: java.io.BufferedOutputStream bos>;
        virtualinvoke $r6.<java.io.BufferedOutputStream: void write(byte[])>(r2);
        $i3 = lengthof r2;
        $i4 = 127 - $i3;
        r3 = newarray (byte)[$i4];
        i0 = 0;

     label1:
        $i5 = lengthof r3;
        if i0 >= $i5 goto label2;

        r3[i0] = 0;
        i0 = i0 + 1;
        goto label1;

     label2:
        $r7 = r0.<chess.TreeLogger: java.io.BufferedOutputStream bos>;
        virtualinvoke $r7.<java.io.BufferedOutputStream: void write(byte[])>(r3);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.RuntimeException;
        specialinvoke $r10.<java.lang.RuntimeException: void <init>()>();
        throw $r10;

     label5:
        return;

        catch java.io.IOException from label0 to label3 with label4;
    }

    public static final chess.TreeLogger getAnalyzer(java.lang.String)
    {
        java.lang.String r0;
        chess.TreeLogger $r1, r2;
        java.io.RandomAccessFile r3, $r4;
        long l0, $l1, $l2;
        java.nio.channels.FileChannel $r5, $r6;
        int $i3;
        java.nio.channels.FileChannel$MapMode $r7;
        java.nio.MappedByteBuffer $r8;
        java.io.FileNotFoundException $r10, r11;
        java.lang.RuntimeException $r12, $r15;
        java.io.IOException $r13, r14;

        r0 := @parameter0: java.lang.String;

     label0:
        $r1 = new chess.TreeLogger;
        specialinvoke $r1.<chess.TreeLogger: void <init>()>();
        r2 = $r1;
        $r4 = new java.io.RandomAccessFile;
        specialinvoke $r4.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r0, "rw");
        r3 = $r4;
        $r5 = virtualinvoke r3.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();
        r2.<chess.TreeLogger: java.nio.channels.FileChannel fc> = $r5;
        l0 = virtualinvoke r3.<java.io.RandomAccessFile: long length()>();
        $l1 = l0 - 128L;
        $l2 = $l1 / 16L;
        $i3 = (int) $l2;
        r2.<chess.TreeLogger: int numEntries> = $i3;
        $r6 = r2.<chess.TreeLogger: java.nio.channels.FileChannel fc>;
        $r7 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_WRITE>;
        $r8 = virtualinvoke $r6.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r7, 0L, l0);
        r2.<chess.TreeLogger: java.nio.MappedByteBuffer mapBuf> = $r8;
        specialinvoke r2.<chess.TreeLogger: void computeForwardPointers()>();

     label1:
        return r2;

     label2:
        $r10 := @caughtexception;
        r11 = $r10;
        $r12 = new java.lang.RuntimeException;
        specialinvoke $r12.<java.lang.RuntimeException: void <init>()>();
        throw $r12;

     label3:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = new java.lang.RuntimeException;
        specialinvoke $r15.<java.lang.RuntimeException: void <init>()>();
        throw $r15;

        catch java.io.FileNotFoundException from label0 to label1 with label2;
        catch java.io.IOException from label0 to label1 with label3;
    }

    public final void close()
    {
        chess.TreeLogger r0;
        java.io.IOException r1, $r6;
        java.io.BufferedOutputStream $r2, $r3;
        java.nio.channels.FileChannel $r4, $r5;

        r0 := @this: chess.TreeLogger;

     label0:
        $r2 = r0.<chess.TreeLogger: java.io.BufferedOutputStream bos>;
        if $r2 == null goto label1;

        $r3 = r0.<chess.TreeLogger: java.io.BufferedOutputStream bos>;
        virtualinvoke $r3.<java.io.BufferedOutputStream: void close()>();

     label1:
        $r4 = r0.<chess.TreeLogger: java.nio.channels.FileChannel fc>;
        if $r4 == null goto label2;

        $r5 = r0.<chess.TreeLogger: java.nio.channels.FileChannel fc>;
        virtualinvoke $r5.<java.nio.channels.FileChannel: void close()>();

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r1 = $r6;

     label4:
        return;

        catch java.io.IOException from label0 to label2 with label3;
    }

    final long logNodeStart(long, chess.Move, int, int, int, int)
    {
        chess.TreeLogger r0;
        long l0, $l18, $l19;
        chess.Move r1;
        int i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.io.IOException r2, $r20;
        java.nio.ByteBuffer $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r18;
        short $s13, $s14, $s15;
        byte $b16, $b17;
        java.io.BufferedOutputStream $r17;
        byte[] $r19;
        java.lang.RuntimeException $r21;

        r0 := @this: chess.TreeLogger;
        l0 := @parameter0: long;
        r1 := @parameter1: chess.Move;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        i3 := @parameter4: int;
        i4 := @parameter5: int;
        $r3 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(0, -1);
        $r5 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $i5 = (int) l0;
        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(4, $i5);
        $r7 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $i6 = r1.<chess.Move: int 'from'>;
        $i7 = r1.<chess.Move: int 'to'>;
        $i8 = $i7 << 6;
        $i9 = $i6 + $i8;
        $i10 = r1.<chess.Move: int promoteTo>;
        $i11 = $i10 << 12;
        $i12 = $i9 + $i11;
        $s13 = (short) $i12;
        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(8, $s13);
        $r9 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s14 = (short) i1;
        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(10, $s14);
        $r11 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s15 = (short) i2;
        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(12, $s15);
        $r13 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $b16 = (byte) i3;
        virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(14, $b16);
        $r15 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $b17 = (byte) i4;
        virtualinvoke $r15.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(15, $b17);

     label0:
        $r17 = r0.<chess.TreeLogger: java.io.BufferedOutputStream bos>;
        $r18 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $r19 = virtualinvoke $r18.<java.nio.ByteBuffer: byte[] array()>();
        virtualinvoke $r17.<java.io.BufferedOutputStream: void write(byte[])>($r19);

     label1:
        goto label3;

     label2:
        $r20 := @caughtexception;
        r2 = $r20;
        $r21 = new java.lang.RuntimeException;
        specialinvoke $r21.<java.lang.RuntimeException: void <init>()>();
        throw $r21;

     label3:
        $l18 = r0.<chess.TreeLogger: long nextIndex>;
        $l19 = $l18 + 1L;
        r0.<chess.TreeLogger: long nextIndex> = $l19;
        return $l18;

        catch java.io.IOException from label0 to label1 with label2;
    }

    final long logNodeEnd(long, int, int, int, long)
    {
        chess.TreeLogger r0;
        long l0, l4, $l5, $l10;
        int i1, i2, i3, $i6;
        java.io.IOException r1, $r15;
        java.nio.ByteBuffer $r2, $r4, $r6, $r8, $r10, $r13;
        short $s7, $s8, $s9;
        java.io.BufferedOutputStream $r12;
        byte[] $r14;
        java.lang.RuntimeException $r16;

        r0 := @this: chess.TreeLogger;
        l0 := @parameter0: long;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        l4 := @parameter4: long;
        $r2 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $i6 = (int) l0;
        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>(0, $i6);
        $r4 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s7 = (short) i1;
        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(4, $s7);
        $r6 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s8 = (short) i2;
        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(6, $s8);
        $r8 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(int,long)>(8, l4);
        $r10 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s9 = (short) i3;
        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>(8, $s9);

     label0:
        $r12 = r0.<chess.TreeLogger: java.io.BufferedOutputStream bos>;
        $r13 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $r14 = virtualinvoke $r13.<java.nio.ByteBuffer: byte[] array()>();
        virtualinvoke $r12.<java.io.BufferedOutputStream: void write(byte[])>($r14);

     label1:
        goto label3;

     label2:
        $r15 := @caughtexception;
        r1 = $r15;
        $r16 = new java.lang.RuntimeException;
        specialinvoke $r16.<java.lang.RuntimeException: void <init>()>();
        throw $r16;

     label3:
        $l5 = r0.<chess.TreeLogger: long nextIndex>;
        $l10 = $l5 + 1L;
        r0.<chess.TreeLogger: long nextIndex> = $l10;
        return $l5;

        catch java.io.IOException from label0 to label1 with label2;
    }

    private static final int indexToFileOffs(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;
        $i1 = i0 * 16;
        $i2 = 128 + $i1;
        return $i2;
    }

    private final void computeForwardPointers()
    {
        chess.TreeLogger r0;
        chess.TreeLogger$StartEntry r1, $r7;
        chess.TreeLogger$EndEntry r2, $r8;
        int i0, i1, $i4, $i5;
        boolean z0;
        java.nio.MappedByteBuffer $r3, $r9, $r11, $r13;
        byte $b2;
        short $s3;
        java.io.PrintStream $r4, $r15;
        java.lang.Object[] $r5, $r16;

        r0 := @this: chess.TreeLogger;
        $r3 = r0.<chess.TreeLogger: java.nio.MappedByteBuffer mapBuf>;
        $b2 = virtualinvoke $r3.<java.nio.MappedByteBuffer: byte get(int)>(127);
        $s3 = $b2 & 128;
        if $s3 == 0 goto label0;

        return;

     label0:
        $r4 = <java.lang.System: java.io.PrintStream out>;
        $r5 = newarray (java.lang.Object)[0];
        virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Computing forward pointers...\n", $r5);
        $r7 = new chess.TreeLogger$StartEntry;
        specialinvoke $r7.<chess.TreeLogger$StartEntry: void <init>()>();
        r1 = $r7;
        $r8 = new chess.TreeLogger$EndEntry;
        specialinvoke $r8.<chess.TreeLogger$EndEntry: void <init>()>();
        r2 = $r8;
        i0 = 0;

     label1:
        $i4 = r0.<chess.TreeLogger: int numEntries>;
        if i0 >= $i4 goto label3;

        z0 = specialinvoke r0.<chess.TreeLogger: boolean readEntry(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>(i0, r1, r2);
        if z0 != 0 goto label2;

        $i5 = r2.<chess.TreeLogger$EndEntry: int startIndex>;
        i1 = staticinvoke <chess.TreeLogger: int indexToFileOffs(int)>($i5);
        $r9 = r0.<chess.TreeLogger: java.nio.MappedByteBuffer mapBuf>;
        virtualinvoke $r9.<java.nio.MappedByteBuffer: java.nio.ByteBuffer putInt(int,int)>(i1, i0);

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        $r11 = r0.<chess.TreeLogger: java.nio.MappedByteBuffer mapBuf>;
        virtualinvoke $r11.<java.nio.MappedByteBuffer: java.nio.ByteBuffer put(int,byte)>(127, -128);
        $r13 = r0.<chess.TreeLogger: java.nio.MappedByteBuffer mapBuf>;
        virtualinvoke $r13.<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer force()>();
        $r15 = <java.lang.System: java.io.PrintStream out>;
        $r16 = newarray (java.lang.Object)[0];
        virtualinvoke $r15.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Computing forward pointers... done\n", $r16);
        return;
    }

    private final java.lang.String getRootNodeFEN()
    {
        chess.TreeLogger r0;
        byte b0, $b3;
        byte[] r1;
        int i1, $i2;
        java.nio.MappedByteBuffer $r2, $r3;
        java.lang.String $r4, r5;

        r0 := @this: chess.TreeLogger;
        $r2 = r0.<chess.TreeLogger: java.nio.MappedByteBuffer mapBuf>;
        b0 = virtualinvoke $r2.<java.nio.MappedByteBuffer: byte get(int)>(0);
        r1 = newarray (byte)[b0];
        i1 = 0;

     label0:
        if i1 >= b0 goto label1;

        $r3 = r0.<chess.TreeLogger: java.nio.MappedByteBuffer mapBuf>;
        $i2 = 1 + i1;
        $b3 = virtualinvoke $r3.<java.nio.MappedByteBuffer: byte get(int)>($i2);
        r1[i1] = $b3;
        i1 = i1 + 1;
        goto label0;

     label1:
        $r4 = new java.lang.String;
        specialinvoke $r4.<java.lang.String: void <init>(byte[])>(r1);
        r5 = $r4;
        return r5;
    }

    private final boolean readEntry(int, chess.TreeLogger$StartEntry, chess.TreeLogger$EndEntry)
    {
        chess.TreeLogger r0;
        int i0, i1, i2, $i4, i6, $i7;
        chess.TreeLogger$StartEntry r1;
        chess.TreeLogger$EndEntry r2;
        boolean z0, $z1;
        short s3, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s17, $s18, $s19;
        java.nio.ByteBuffer $r3, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.nio.MappedByteBuffer $r4;
        byte $b5, $b15, $b16;
        chess.Move $r9;
        long $l20, $l21;

        r0 := @this: chess.TreeLogger;
        i0 := @parameter0: int;
        r1 := @parameter1: chess.TreeLogger$StartEntry;
        r2 := @parameter2: chess.TreeLogger$EndEntry;
        i1 = staticinvoke <chess.TreeLogger: int indexToFileOffs(int)>(i0);
        i2 = 0;

     label0:
        if i2 >= 16 goto label1;

        $r3 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $r4 = r0.<chess.TreeLogger: java.nio.MappedByteBuffer mapBuf>;
        $i4 = i1 + i2;
        $b5 = virtualinvoke $r4.<java.nio.MappedByteBuffer: byte get(int)>($i4);
        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i2, $b5);
        i2 = i2 + 1;
        goto label0;

     label1:
        $r6 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        i6 = virtualinvoke $r6.<java.nio.ByteBuffer: int getInt(int)>(0);
        if i6 == -1 goto label2;

        if i6 <= i0 goto label3;

     label2:
        $z1 = 1;
        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;
        if z0 == 0 goto label5;

        r1.<chess.TreeLogger$StartEntry: int endIndex> = i6;
        $r7 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $i7 = virtualinvoke $r7.<java.nio.ByteBuffer: int getInt(int)>(4);
        r1.<chess.TreeLogger$StartEntry: int parentIndex> = $i7;
        $r8 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        s3 = virtualinvoke $r8.<java.nio.ByteBuffer: short getShort(int)>(8);
        $r9 = new chess.Move;
        $s8 = s3 & 63;
        $s9 = s3 >> 6;
        $s10 = $s9 & 63;
        $s11 = s3 >> 12;
        $s12 = $s11 & 15;
        specialinvoke $r9.<chess.Move: void <init>(int,int,int)>($s8, $s10, $s12);
        r1.<chess.TreeLogger$StartEntry: chess.Move move> = $r9;
        $r10 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s13 = virtualinvoke $r10.<java.nio.ByteBuffer: short getShort(int)>(10);
        r1.<chess.TreeLogger$StartEntry: short alpha> = $s13;
        $r11 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s14 = virtualinvoke $r11.<java.nio.ByteBuffer: short getShort(int)>(12);
        r1.<chess.TreeLogger$StartEntry: short beta> = $s14;
        $r12 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $b15 = virtualinvoke $r12.<java.nio.ByteBuffer: byte get(int)>(14);
        r1.<chess.TreeLogger$StartEntry: byte ply> = $b15;
        $r13 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $b16 = virtualinvoke $r13.<java.nio.ByteBuffer: byte get(int)>(15);
        r1.<chess.TreeLogger$StartEntry: byte depth> = $b16;
        goto label6;

     label5:
        r2.<chess.TreeLogger$EndEntry: int startIndex> = i6;
        $r14 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s17 = virtualinvoke $r14.<java.nio.ByteBuffer: short getShort(int)>(4);
        r2.<chess.TreeLogger$EndEntry: short score> = $s17;
        $r15 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s18 = virtualinvoke $r15.<java.nio.ByteBuffer: short getShort(int)>(6);
        r2.<chess.TreeLogger$EndEntry: short scoreType> = $s18;
        $r16 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $s19 = virtualinvoke $r16.<java.nio.ByteBuffer: short getShort(int)>(8);
        r2.<chess.TreeLogger$EndEntry: short evalScore> = $s19;
        $r17 = r0.<chess.TreeLogger: java.nio.ByteBuffer bb>;
        $l20 = virtualinvoke $r17.<java.nio.ByteBuffer: long getLong(int)>(8);
        $l21 = $l20 & 281474976710655L;
        r2.<chess.TreeLogger$EndEntry: long hashKey> = $l21;

     label6:
        return z0;
    }

    public static final void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        chess.TreeLogger r1;
        chess.Position r2;
        int $i0;
        java.io.PrintStream $r3;
        java.lang.Object[] $r4;
        java.lang.String $r6, $r7;
        chess.ChessParseError $r8, r9;
        java.lang.RuntimeException $r10;

        r0 := @parameter0: java.lang.String[];
        $i0 = lengthof r0;
        if $i0 == 1 goto label0;

        $r3 = <java.lang.System: java.io.PrintStream out>;
        $r4 = newarray (java.lang.Object)[0];
        virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Usage: progname filename\n", $r4);
        staticinvoke <java.lang.System: void exit(int)>(1);

     label0:
        $r6 = r0[0];
        r1 = staticinvoke <chess.TreeLogger: chess.TreeLogger getAnalyzer(java.lang.String)>($r6);

     label1:
        $r7 = specialinvoke r1.<chess.TreeLogger: java.lang.String getRootNodeFEN()>();
        r2 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>($r7);
        specialinvoke r1.<chess.TreeLogger: void mainLoop(chess.Position)>(r2);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.RuntimeException;
        specialinvoke $r10.<java.lang.RuntimeException: void <init>()>();
        throw $r10;

     label4:
        virtualinvoke r1.<chess.TreeLogger: void close()>();
        return;

        catch chess.ChessParseError from label1 to label2 with label3;
    }

    private final void mainLoop(chess.Position) throws java.io.IOException
    {
        chess.TreeLogger r0;
        chess.Position r1, r23, $r88;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, i11, i12, $i13, i16, i17, $i18;
        java.io.InputStreamReader $r2;
        java.io.InputStream $r3;
        java.io.BufferedReader r4, $r14;
        java.lang.String r5, $r18, $r25, $r28, r39, r41, $r49, r62, $r83;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        java.util.ArrayList r6, r11, r34, r40, $r46, r61, r66, r70, r74, r77, r89;
        java.util.Iterator r7, r9, r12, r56, r63, r67, r71, r78, r90;
        chess.Move r8, $r48, r80;
        java.lang.Integer r10, r13, r58, $r60, r65, $r69, $r73, $r76, $r92;
        java.lang.Object $r15, $r35, $r47, $r57, $r59, $r64, $r68, $r72, $r75, $r79, $r91;
        java.io.PrintStream $r16, $r20, $r24, $r26, $r30, $r36, $r50, $r53, $r81, $r85;
        java.lang.Object[] $r17, $r21, $r27, $r31, $r37, $r51, $r54, $r82, $r86;
        long $l1, l14, l15;
        java.lang.Long $r32;
        chess.TreeLogger$StartEntry $r42, r43;
        chess.TreeLogger$EndEntry $r44, r45;
        java.lang.NumberFormatException $r93, r94;

        r0 := @this: chess.TreeLogger;
        r1 := @parameter0: chess.Position;
        i0 = -1;
        $r14 = new java.io.BufferedReader;
        $r2 = new java.io.InputStreamReader;
        $r3 = <java.lang.System: java.io.InputStream in>;
        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);
        specialinvoke $r14.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);
        r4 = $r14;
        r5 = "";
        z0 = 1;

     label0:
        if z0 == 0 goto label4;

        r6 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList getMoveSequence(int)>(i0);
        r7 = virtualinvoke r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label2;

        $r15 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r8 = (chess.Move) $r15;
        $r16 = <java.lang.System: java.io.PrintStream out>;
        $r17 = newarray (java.lang.Object)[1];
        $r18 = staticinvoke <chess.TextIO: java.lang.String moveToUCIString(chess.Move)>(r8);
        $r17[0] = $r18;
        virtualinvoke $r16.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" %s", $r17);
        goto label1;

     label2:
        $r20 = <java.lang.System: java.io.PrintStream out>;
        $r21 = newarray (java.lang.Object)[0];
        virtualinvoke $r20.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("\n", $r21);
        specialinvoke r0.<chess.TreeLogger: void printNodeInfo(chess.Position,int)>(r1, i0);
        r23 = specialinvoke r0.<chess.TreeLogger: chess.Position getPosition(chess.Position,int)>(r1, i0);
        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = staticinvoke <chess.TextIO: java.lang.String asciiBoard(chess.Position)>(r23);
        virtualinvoke $r24.<java.io.PrintStream: void print(java.lang.String)>($r25);
        $r26 = <java.lang.System: java.io.PrintStream out>;
        $r27 = newarray (java.lang.Object)[1];
        $r28 = staticinvoke <chess.TextIO: java.lang.String toFEN(chess.Position)>(r23);
        $r27[0] = $r28;
        virtualinvoke $r26.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%s\n", $r27);
        $r30 = <java.lang.System: java.io.PrintStream out>;
        $r31 = newarray (java.lang.Object)[1];
        $l1 = virtualinvoke r23.<chess.Position: long historyHash()>();
        $r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
        $r31[0] = $r32;
        virtualinvoke $r30.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%16x\n", $r31);
        if i0 < 0 goto label4;

        r34 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList findChildren(int)>(i0);
        r9 = virtualinvoke r34.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label4;

        $r35 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();
        r10 = (java.lang.Integer) $r35;
        $i2 = virtualinvoke r10.<java.lang.Integer: int intValue()>();
        specialinvoke r0.<chess.TreeLogger: void printNodeInfo(chess.Position,int)>(r1, $i2);
        goto label3;

     label4:
        z0 = 1;
        $r36 = <java.lang.System: java.io.PrintStream out>;
        $r37 = newarray (java.lang.Object)[0];
        virtualinvoke $r36.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Command:", $r37);
        r39 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();
        if r39 != null goto label5;

        return;

     label5:
        $i3 = virtualinvoke r39.<java.lang.String: int length()>();
        if $i3 != 0 goto label6;

        r39 = r5;

     label6:
        $z3 = virtualinvoke r39.<java.lang.String: boolean startsWith(java.lang.String)>("q");
        if $z3 == 0 goto label7;

        return;

     label7:
        $z4 = virtualinvoke r39.<java.lang.String: boolean startsWith(java.lang.String)>("?");
        if $z4 == 0 goto label8;

        specialinvoke r0.<chess.TreeLogger: void printHelp()>();
        z0 = 0;
        goto label38;

     label8:
        $z5 = specialinvoke r0.<chess.TreeLogger: boolean isMove(java.lang.String)>(r39);
        if $z5 == 0 goto label17;

        r40 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList findChildren(int)>(i0);
        r41 = r39;
        $r42 = new chess.TreeLogger$StartEntry;
        specialinvoke $r42.<chess.TreeLogger$StartEntry: void <init>()>();
        r43 = $r42;
        $r44 = new chess.TreeLogger$EndEntry;
        specialinvoke $r44.<chess.TreeLogger$EndEntry: void <init>()>();
        r45 = $r44;
        $r46 = new java.util.ArrayList;
        specialinvoke $r46.<java.util.ArrayList: void <init>()>();
        r11 = $r46;
        r12 = virtualinvoke r40.<java.util.ArrayList: java.util.Iterator iterator()>();

     label9:
        $z6 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();
        if $z6 == 0 goto label11;

        $r47 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();
        r13 = (java.lang.Integer) $r47;
        $i4 = virtualinvoke r13.<java.lang.Integer: int intValue()>();
        specialinvoke r0.<chess.TreeLogger: boolean readEntries(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>($i4, r43, r45);
        $r48 = r43.<chess.TreeLogger$StartEntry: chess.Move move>;
        $r49 = staticinvoke <chess.TextIO: java.lang.String moveToUCIString(chess.Move)>($r48);
        $z8 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>(r41);
        if $z8 == 0 goto label10;

        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

     label10:
        goto label9;

     label11:
        $i5 = virtualinvoke r11.<java.util.ArrayList: int size()>();
        if $i5 != 0 goto label12;

        $r50 = <java.lang.System: java.io.PrintStream out>;
        $r51 = newarray (java.lang.Object)[0];
        virtualinvoke $r50.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("No such move\n", $r51);
        z0 = 0;
        goto label16;

     label12:
        $i6 = virtualinvoke r11.<java.util.ArrayList: int size()>();
        if $i6 <= 1 goto label15;

        $r53 = <java.lang.System: java.io.PrintStream out>;
        $r54 = newarray (java.lang.Object)[0];
        virtualinvoke $r53.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Ambiguous move\n", $r54);
        r56 = virtualinvoke r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z10 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();
        if $z10 == 0 goto label14;

        $r57 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();
        r58 = (java.lang.Integer) $r57;
        $i7 = virtualinvoke r58.<java.lang.Integer: int intValue()>();
        specialinvoke r0.<chess.TreeLogger: void printNodeInfo(chess.Position,int)>(r1, $i7);
        goto label13;

     label14:
        z0 = 0;
        goto label16;

     label15:
        $r59 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r60 = (java.lang.Integer) $r59;
        i0 = virtualinvoke $r60.<java.lang.Integer: int intValue()>();

     label16:
        goto label38;

     label17:
        $z11 = virtualinvoke r39.<java.lang.String: boolean startsWith(java.lang.String)>("u");
        if $z11 == 0 goto label20;

        i8 = staticinvoke <chess.TreeLogger: int getArg(java.lang.String,int)>(r39, 1);
        i9 = 0;

     label18:
        if i9 >= i8 goto label19;

        i0 = specialinvoke r0.<chess.TreeLogger: int findParent(int)>(i0);
        i9 = i9 + 1;
        goto label18;

     label19:
        goto label38;

     label20:
        $z12 = virtualinvoke r39.<java.lang.String: boolean startsWith(java.lang.String)>("l");
        if $z12 == 0 goto label23;

        r61 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList findChildren(int)>(i0);
        r62 = staticinvoke <chess.TreeLogger: java.lang.String getArgStr(java.lang.String,java.lang.String)>(r39, "");
        r63 = virtualinvoke r61.<java.util.ArrayList: java.util.Iterator iterator()>();

     label21:
        $z13 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>();
        if $z13 == 0 goto label22;

        $r64 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>();
        r65 = (java.lang.Integer) $r64;
        $i10 = virtualinvoke r65.<java.lang.Integer: int intValue()>();
        specialinvoke r0.<chess.TreeLogger: void printNodeInfo(chess.Position,int,java.lang.String)>(r1, $i10, r62);
        goto label21;

     label22:
        z0 = 0;
        goto label38;

     label23:
        $z14 = virtualinvoke r39.<java.lang.String: boolean startsWith(java.lang.String)>("n");
        if $z14 == 0 goto label26;

        r66 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList getNodeSequence(int)>(i0);
        r67 = virtualinvoke r66.<java.util.ArrayList: java.util.Iterator iterator()>();

     label24:
        $z15 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>();
        if $z15 == 0 goto label25;

        $r68 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>();
        $r69 = (java.lang.Integer) $r68;
        i11 = virtualinvoke $r69.<java.lang.Integer: int intValue()>();
        specialinvoke r0.<chess.TreeLogger: void printNodeInfo(chess.Position,int)>(r1, i11);
        goto label24;

     label25:
        z0 = 0;
        goto label38;

     label26:
        $z16 = virtualinvoke r39.<java.lang.String: boolean startsWith(java.lang.String)>("d");
        if $z16 == 0 goto label29;

        r70 = virtualinvoke r0.<chess.TreeLogger: java.util.ArrayList getArgs(java.lang.String,int)>(r39, 0);
        r71 = virtualinvoke r70.<java.util.ArrayList: java.util.Iterator iterator()>();

     label27:
        $z17 = interfaceinvoke r71.<java.util.Iterator: boolean hasNext()>();
        if $z17 == 0 goto label28;

        $r72 = interfaceinvoke r71.<java.util.Iterator: java.lang.Object next()>();
        $r73 = (java.lang.Integer) $r72;
        i12 = virtualinvoke $r73.<java.lang.Integer: int intValue()>();
        r74 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList findChildren(int)>(i0);
        if i12 < 0 goto label28;

        $i13 = virtualinvoke r74.<java.util.ArrayList: int size()>();
        if i12 >= $i13 goto label28;

        $r75 = virtualinvoke r74.<java.util.ArrayList: java.lang.Object get(int)>(i12);
        $r76 = (java.lang.Integer) $r75;
        i0 = virtualinvoke $r76.<java.lang.Integer: int intValue()>();
        goto label27;

     label28:
        goto label38;

     label29:
        $z18 = virtualinvoke r39.<java.lang.String: boolean startsWith(java.lang.String)>("p");
        if $z18 == 0 goto label32;

        r77 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList getMoveSequence(int)>(i0);
        r78 = virtualinvoke r77.<java.util.ArrayList: java.util.Iterator iterator()>();

     label30:
        $z19 = interfaceinvoke r78.<java.util.Iterator: boolean hasNext()>();
        if $z19 == 0 goto label31;

        $r79 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();
        r80 = (chess.Move) $r79;
        $r81 = <java.lang.System: java.io.PrintStream out>;
        $r82 = newarray (java.lang.Object)[1];
        $r83 = staticinvoke <chess.TextIO: java.lang.String moveToUCIString(chess.Move)>(r80);
        $r82[0] = $r83;
        virtualinvoke $r81.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" %s", $r82);
        goto label30;

     label31:
        $r85 = <java.lang.System: java.io.PrintStream out>;
        $r86 = newarray (java.lang.Object)[0];
        virtualinvoke $r85.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("\n", $r86);
        z0 = 0;
        goto label38;

     label32:
        $z20 = virtualinvoke r39.<java.lang.String: boolean startsWith(java.lang.String)>("h");
        if $z20 == 0 goto label35;

        $r88 = specialinvoke r0.<chess.TreeLogger: chess.Position getPosition(chess.Position,int)>(r1, i0);
        l14 = virtualinvoke $r88.<chess.Position: long historyHash()>();
        l15 = specialinvoke r0.<chess.TreeLogger: long getHashKey(java.lang.String,long)>(r39, l14);
        r89 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList getNodeForHashKey(long)>(l15);
        r90 = virtualinvoke r89.<java.util.ArrayList: java.util.Iterator iterator()>();

     label33:
        $z21 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();
        if $z21 == 0 goto label34;

        $r91 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();
        $r92 = (java.lang.Integer) $r91;
        i16 = virtualinvoke $r92.<java.lang.Integer: int intValue()>();
        specialinvoke r0.<chess.TreeLogger: void printNodeInfo(chess.Position,int)>(r1, i16);
        goto label33;

     label34:
        z0 = 0;
        goto label38;

     label35:
        i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r39);
        if i17 < -1 goto label36;

        $i18 = r0.<chess.TreeLogger: int numEntries>;
        if i17 >= $i18 goto label36;

        i0 = i17;

     label36:
        goto label38;

     label37:
        $r93 := @caughtexception;
        r94 = $r93;

     label38:
        r5 = r39;
        goto label0;

        catch java.lang.NumberFormatException from label35 to label36 with label37;
    }

    private final boolean isMove(java.lang.String)
    {
        chess.TreeLogger r0;
        java.lang.String r1, r2;
        int i0, $i2;
        char c1;

        r0 := @this: chess.TreeLogger;
        r1 := @parameter0: java.lang.String;
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i2 == 4 goto label0;

        return 0;

     label0:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        i0 = 0;

     label1:
        if i0 >= 4 goto label7;

        c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);
        if i0 == 0 goto label2;

        if i0 != 2 goto label4;

     label2:
        if c1 < 97 goto label3;

        if c1 <= 104 goto label6;

     label3:
        return 0;

     label4:
        if c1 < 49 goto label5;

        if c1 <= 56 goto label6;

     label5:
        return 0;

     label6:
        i0 = i0 + 1;
        goto label1;

     label7:
        return 1;
    }

    private final java.util.ArrayList getNodeForHashKey(long)
    {
        chess.TreeLogger r0;
        long l0, l3, $l5;
        java.util.ArrayList r1, $r4;
        chess.TreeLogger$StartEntry r2, $r5;
        chess.TreeLogger$EndEntry r3, $r6;
        int i1, i2, $i4;
        boolean z0;
        byte $b6;
        java.lang.Integer $r7;

        r0 := @this: chess.TreeLogger;
        l0 := @parameter0: long;
        l3 = l0 & 281474976710655L;
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r1 = $r4;
        $r5 = new chess.TreeLogger$StartEntry;
        specialinvoke $r5.<chess.TreeLogger$StartEntry: void <init>()>();
        r2 = $r5;
        $r6 = new chess.TreeLogger$EndEntry;
        specialinvoke $r6.<chess.TreeLogger$EndEntry: void <init>()>();
        r3 = $r6;
        i1 = 0;

     label0:
        $i4 = r0.<chess.TreeLogger: int numEntries>;
        if i1 >= $i4 goto label2;

        z0 = specialinvoke r0.<chess.TreeLogger: boolean readEntry(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>(i1, r2, r3);
        if z0 != 0 goto label1;

        $l5 = r3.<chess.TreeLogger$EndEntry: long hashKey>;
        $b6 = $l5 cmp l3;
        if $b6 != 0 goto label1;

        i2 = r3.<chess.TreeLogger$EndEntry: int startIndex>;
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r1);
        return r1;
    }

    private final long getHashKey(java.lang.String, long)
    {
        chess.TreeLogger r0;
        java.lang.String r1, r3;
        long l0, l1;
        int i2, $i3;
        java.lang.NumberFormatException r2, $r4;
        boolean $z0;

        r0 := @this: chess.TreeLogger;
        r1 := @parameter0: java.lang.String;
        l0 := @parameter1: long;
        l1 = l0;
        i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(32);
        if i2 <= 0 goto label3;

        $i3 = i2 + 1;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i3);
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("0x");
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(2);

     label0:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r3, 16);

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;

     label3:
        return l1;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    private static final int getArg(java.lang.String, int)
    {
        java.lang.String r0, $r1;
        int i0, i1, $i2, $i3;
        java.lang.NumberFormatException $r2, r3;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;

     label0:
        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(32);
        if i1 <= 0 goto label2;

        $i2 = i1 + 1;
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label1:
        return $i3;

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;
        r3 = $r2;

     label4:
        return i0;

        catch java.lang.NumberFormatException from label0 to label1 with label3;
    }

    final java.util.ArrayList getArgs(java.lang.String, int)
    {
        chess.TreeLogger r0;
        java.lang.String r1, $r5;
        int i0, i1, $i2, $i3, $i4;
        java.util.ArrayList $r2, r3;
        java.lang.String[] r4;
        java.lang.Integer $r6, $r9;
        java.lang.NumberFormatException $r7, r8;

        r0 := @this: chess.TreeLogger;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        r4 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

     label0:
        i1 = 1;

     label1:
        $i2 = lengthof r4;
        if i1 >= $i2 goto label2;

        $r5 = r4[i1];
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);
        i1 = i1 + 1;
        goto label1;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        r8 = $r7;
        virtualinvoke r3.<java.util.ArrayList: void clear()>();

     label4:
        $i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        if $i4 != 0 goto label5;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label5:
        return r3;

        catch java.lang.NumberFormatException from label0 to label2 with label3;
    }

    private static final java.lang.String getArgStr(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(32);
        if i0 <= 0 goto label0;

        $i1 = i0 + 1;
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);
        return $r2;

     label0:
        return r1;
    }

    private final void printHelp()
    {
        chess.TreeLogger r0;
        java.io.PrintStream $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28;
        java.lang.Object[] $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29;

        r0 := @this: chess.TreeLogger;
        $r1 = <java.lang.System: java.io.PrintStream out>;
        $r2 = newarray (java.lang.Object)[0];
        virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  p              - Print move sequence\n", $r2);
        $r4 = <java.lang.System: java.io.PrintStream out>;
        $r5 = newarray (java.lang.Object)[0];
        virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  n              - Print node info corresponding to move sequence\n", $r5);
        $r7 = <java.lang.System: java.io.PrintStream out>;
        $r8 = newarray (java.lang.Object)[0];
        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  l [move]       - List child nodes, optionally only for one move\n", $r8);
        $r10 = <java.lang.System: java.io.PrintStream out>;
        $r11 = newarray (java.lang.Object)[0];
        virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  d [n1 [n2...]] - Go to child \"n\"\n", $r11);
        $r13 = <java.lang.System: java.io.PrintStream out>;
        $r14 = newarray (java.lang.Object)[0];
        virtualinvoke $r13.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  move           - Go to child \"move\", if unique\n", $r14);
        $r16 = <java.lang.System: java.io.PrintStream out>;
        $r17 = newarray (java.lang.Object)[0];
        virtualinvoke $r16.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  u [levels]     - Move up\n", $r17);
        $r19 = <java.lang.System: java.io.PrintStream out>;
        $r20 = newarray (java.lang.Object)[0];
        virtualinvoke $r19.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  h [key]        - Find nodes with current (or given) hash key\n", $r20);
        $r22 = <java.lang.System: java.io.PrintStream out>;
        $r23 = newarray (java.lang.Object)[0];
        virtualinvoke $r22.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  num            - Go to node \"num\"\n", $r23);
        $r25 = <java.lang.System: java.io.PrintStream out>;
        $r26 = newarray (java.lang.Object)[0];
        virtualinvoke $r25.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  q              - Quit\n", $r26);
        $r28 = <java.lang.System: java.io.PrintStream out>;
        $r29 = newarray (java.lang.Object)[0];
        virtualinvoke $r28.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("  ?              - Print this help\n", $r29);
        return;
    }

    private final boolean readEntries(int, chess.TreeLogger$StartEntry, chess.TreeLogger$EndEntry)
    {
        chess.TreeLogger r0;
        int i0, i1, i2;
        chess.TreeLogger$StartEntry r1;
        chess.TreeLogger$EndEntry r2;
        boolean z0;

        r0 := @this: chess.TreeLogger;
        i0 := @parameter0: int;
        r1 := @parameter1: chess.TreeLogger$StartEntry;
        r2 := @parameter2: chess.TreeLogger$EndEntry;
        z0 = specialinvoke r0.<chess.TreeLogger: boolean readEntry(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>(i0, r1, r2);
        if z0 == 0 goto label2;

        i1 = r1.<chess.TreeLogger$StartEntry: int endIndex>;
        if i1 < 0 goto label0;

        specialinvoke r0.<chess.TreeLogger: boolean readEntry(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>(i1, null, r2);
        goto label1;

     label0:
        return 0;

     label1:
        goto label3;

     label2:
        i2 = r2.<chess.TreeLogger$EndEntry: int startIndex>;
        specialinvoke r0.<chess.TreeLogger: boolean readEntry(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>(i2, r1, null);

     label3:
        return 1;
    }

    private final int findParent(int)
    {
        chess.TreeLogger r0;
        int i0;
        chess.TreeLogger$StartEntry r1, $r3;
        chess.TreeLogger$EndEntry r2, $r4;

        r0 := @this: chess.TreeLogger;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $r3 = new chess.TreeLogger$StartEntry;
        specialinvoke $r3.<chess.TreeLogger$StartEntry: void <init>()>();
        r1 = $r3;
        $r4 = new chess.TreeLogger$EndEntry;
        specialinvoke $r4.<chess.TreeLogger$EndEntry: void <init>()>();
        r2 = $r4;
        specialinvoke r0.<chess.TreeLogger: boolean readEntries(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>(i0, r1, r2);
        i0 = r1.<chess.TreeLogger$StartEntry: int parentIndex>;

     label0:
        return i0;
    }

    private final java.util.ArrayList findChildren(int)
    {
        chess.TreeLogger r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList $r1, r2;
        chess.TreeLogger$StartEntry r3, $r5;
        chess.TreeLogger$EndEntry r4, $r6;
        boolean z0;
        java.lang.Integer $r7;

        r0 := @this: chess.TreeLogger;
        i0 := @parameter0: int;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r5 = new chess.TreeLogger$StartEntry;
        specialinvoke $r5.<chess.TreeLogger$StartEntry: void <init>()>();
        r3 = $r5;
        $r6 = new chess.TreeLogger$EndEntry;
        specialinvoke $r6.<chess.TreeLogger$EndEntry: void <init>()>();
        r4 = $r6;
        i1 = i0 + 1;

     label0:
        if i1 < 0 goto label4;

        $i2 = r0.<chess.TreeLogger: int numEntries>;
        if i1 >= $i2 goto label4;

        z0 = specialinvoke r0.<chess.TreeLogger: boolean readEntries(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>(i1, r3, r4);
        $i3 = r3.<chess.TreeLogger$StartEntry: int parentIndex>;
        if $i3 != i0 goto label1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label1:
        if z0 != 0 goto label2;

        goto label4;

     label2:
        $i4 = r4.<chess.TreeLogger$EndEntry: int startIndex>;
        if i1 == $i4 goto label3;

        goto label4;

     label3:
        $i5 = r3.<chess.TreeLogger$StartEntry: int endIndex>;
        i1 = $i5 + 1;
        goto label0;

     label4:
        return r2;
    }

    private final int getChildNo(int)
    {
        chess.TreeLogger r0;
        int i0, i1, $i2, $i3, $i4;
        java.util.ArrayList r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        r0 := @this: chess.TreeLogger;
        i0 := @parameter0: int;
        $i2 = specialinvoke r0.<chess.TreeLogger: int findParent(int)>(i0);
        r1 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList findChildren(int)>($i2);
        i1 = 0;

     label0:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();
        if i1 >= $i3 goto label2;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        $r3 = (java.lang.Integer) $r2;
        $i4 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        if $i4 != i0 goto label1;

        return i1;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return -1;
    }

    private final java.util.ArrayList getNodeSequence(int)
    {
        chess.TreeLogger r0;
        int i0;
        java.util.ArrayList $r1, r2;
        java.lang.Integer $r3, $r4;

        r0 := @this: chess.TreeLogger;
        i0 := @parameter0: int;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label0:
        if i0 < 0 goto label1;

        i0 = specialinvoke r0.<chess.TreeLogger: int findParent(int)>(i0);
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);
        goto label0;

     label1:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r2);
        return r2;
    }

    private final java.util.ArrayList getMoveSequence(int)
    {
        chess.TreeLogger r0;
        int i0;
        java.util.ArrayList $r1, r2;
        chess.TreeLogger$StartEntry r3, $r5;
        chess.TreeLogger$EndEntry r4, $r6;
        chess.Move $r7;

        r0 := @this: chess.TreeLogger;
        i0 := @parameter0: int;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r5 = new chess.TreeLogger$StartEntry;
        specialinvoke $r5.<chess.TreeLogger$StartEntry: void <init>()>();
        r3 = $r5;
        $r6 = new chess.TreeLogger$EndEntry;
        specialinvoke $r6.<chess.TreeLogger$EndEntry: void <init>()>();
        r4 = $r6;

     label0:
        if i0 < 0 goto label1;

        specialinvoke r0.<chess.TreeLogger: boolean readEntries(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>(i0, r3, r4);
        $r7 = r3.<chess.TreeLogger$StartEntry: chess.Move move>;
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);
        i0 = specialinvoke r0.<chess.TreeLogger: int findParent(int)>(i0);
        goto label0;

     label1:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r2);
        return r2;
    }

    private final chess.Position getPosition(chess.Position, int)
    {
        chess.TreeLogger r0;
        chess.Position r1, r3, $r7;
        int i0;
        java.util.ArrayList r2;
        chess.UndoInfo r4, $r8;
        java.util.Iterator r5;
        chess.Move r6;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: chess.TreeLogger;
        r1 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        r2 = specialinvoke r0.<chess.TreeLogger: java.util.ArrayList getMoveSequence(int)>(i0);
        $r7 = new chess.Position;
        specialinvoke $r7.<chess.Position: void <init>(chess.Position)>(r1);
        r3 = $r7;
        $r8 = new chess.UndoInfo;
        specialinvoke $r8.<chess.UndoInfo: void <init>()>();
        r4 = $r8;
        r5 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (chess.Move) $r9;
        virtualinvoke r3.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r6, r4);
        goto label0;

     label1:
        return r3;
    }

    private final void printNodeInfo(chess.Position, int)
    {
        chess.TreeLogger r0;
        chess.Position r1;
        int i0;

        r0 := @this: chess.TreeLogger;
        r1 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        specialinvoke r0.<chess.TreeLogger: void printNodeInfo(chess.Position,int,java.lang.String)>(r1, i0, "");
        return;
    }

    private final void printNodeInfo(chess.Position, int, java.lang.String)
    {
        chess.TreeLogger r0;
        chess.Position r1;
        int i0, i1, $i2, $i3, $i4, $i9, $i10, $i11, $i12;
        java.lang.String r2, r5, r6;
        chess.TreeLogger$StartEntry r3, $r12;
        chess.TreeLogger$EndEntry r4, $r13;
        boolean z0, $z1;
        java.io.PrintStream $r7, $r15, $r24, $r30;
        java.lang.Object[] $r8, $r16, $r25, $r31;
        java.lang.Integer $r9, $r10, $r17, $r18, $r28;
        chess.Move $r14;
        short $s5, $s6, $s13, $s14, $s15;
        java.lang.Short $r19, $r20, $r26, $r27;
        byte $b7, $b8;
        java.lang.Byte $r21, $r22;

        r0 := @this: chess.TreeLogger;
        r1 := @parameter0: chess.Position;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        if i0 >= 0 goto label0;

        $r7 = <java.lang.System: java.io.PrintStream out>;
        $r8 = newarray (java.lang.Object)[2];
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r8[0] = $r9;
        $i2 = r0.<chess.TreeLogger: int numEntries>;
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        $r8[1] = $r10;
        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%8d entries:%d\n", $r8);
        goto label8;

     label0:
        $r12 = new chess.TreeLogger$StartEntry;
        specialinvoke $r12.<chess.TreeLogger$StartEntry: void <init>()>();
        r3 = $r12;
        $r13 = new chess.TreeLogger$EndEntry;
        specialinvoke $r13.<chess.TreeLogger$EndEntry: void <init>()>();
        r4 = $r13;
        z0 = specialinvoke r0.<chess.TreeLogger: boolean readEntries(int,chess.TreeLogger$StartEntry,chess.TreeLogger$EndEntry)>(i0, r3, r4);
        $r14 = r3.<chess.TreeLogger$StartEntry: chess.Move move>;
        r5 = staticinvoke <chess.TextIO: java.lang.String moveToUCIString(chess.Move)>($r14);
        $i3 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i3 <= 0 goto label1;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z1 != 0 goto label1;

        return;

     label1:
        $r15 = <java.lang.System: java.io.PrintStream out>;
        $r16 = newarray (java.lang.Object)[7];
        $i4 = specialinvoke r0.<chess.TreeLogger: int getChildNo(int)>(i0);
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        $r16[0] = $r17;
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r16[1] = $r18;
        $r16[2] = r5;
        $s5 = r3.<chess.TreeLogger$StartEntry: short alpha>;
        $r19 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s5);
        $r16[3] = $r19;
        $s6 = r3.<chess.TreeLogger$StartEntry: short beta>;
        $r20 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s6);
        $r16[4] = $r20;
        $b7 = r3.<chess.TreeLogger$StartEntry: byte ply>;
        $r21 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b7);
        $r16[5] = $r21;
        $b8 = r3.<chess.TreeLogger$StartEntry: byte depth>;
        $r22 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b8);
        $r16[6] = $r22;
        virtualinvoke $r15.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%3d %8d %s a:%6d b:%6d p:%2d d:%2d", $r16);
        if z0 == 0 goto label7;

        $i9 = r3.<chess.TreeLogger$StartEntry: int endIndex>;
        $i10 = r4.<chess.TreeLogger$EndEntry: int startIndex>;
        $i11 = $i9 - $i10;
        $i12 = $i11 - 1;
        i1 = $i12 / 2;
        $s13 = r4.<chess.TreeLogger$EndEntry: short scoreType>;
        tableswitch($s13)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label2:
        r6 = "= ";
        goto label6;

     label3:
        r6 = ">=";
        goto label6;

     label4:
        r6 = "<=";
        goto label6;

     label5:
        r6 = "  ";

     label6:
        $r24 = <java.lang.System: java.io.PrintStream out>;
        $r25 = newarray (java.lang.Object)[4];
        $r25[0] = r6;
        $s14 = r4.<chess.TreeLogger$EndEntry: short score>;
        $r26 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s14);
        $r25[1] = $r26;
        $s15 = r4.<chess.TreeLogger$EndEntry: short evalScore>;
        $r27 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s15);
        $r25[2] = $r27;
        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r25[3] = $r28;
        virtualinvoke $r24.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" s:%s%6d e:%6d sub:%d", $r25);

     label7:
        $r30 = <java.lang.System: java.io.PrintStream out>;
        $r31 = newarray (java.lang.Object)[0];
        virtualinvoke $r30.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("\n", $r31);

     label8:
        return;
    }
}
public final class chess.TwoReturnValues extends java.lang.Object
{
    public final java.lang.Object first;
    public final java.lang.Object second;

    void <init>(java.lang.Object, java.lang.Object)
    {
        chess.TwoReturnValues r0;
        java.lang.Object r1, r2;

        r0 := @this: chess.TwoReturnValues;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<chess.TwoReturnValues: java.lang.Object first> = r1;
        r0.<chess.TwoReturnValues: java.lang.Object second> = r2;
        return;
    }
}
public class chess.UndoInfo extends java.lang.Object
{
    int capturedPiece;
    int castleMask;
    int epSquare;
    int halfMoveClock;

    public void <init>()
    {
        chess.UndoInfo r0;

        r0 := @this: chess.UndoInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class com.larvalabs.svgandroid.ParserHelper extends java.lang.Object
{
    private char current;
    private java.lang.CharSequence s;
    public int pos;
    private int n;
    private static final double[] pow10;

    public void <init>(java.lang.CharSequence, int)
    {
        com.larvalabs.svgandroid.ParserHelper r0;
        java.lang.CharSequence r1;
        int i0, $i1;
        char $c2;

        r0 := @this: com.larvalabs.svgandroid.ParserHelper;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: java.lang.CharSequence s> = r1;
        r0.<com.larvalabs.svgandroid.ParserHelper: int pos> = i0;
        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: int n> = $i1;
        $c2 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i0);
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c2;
        return;
    }

    private char read()
    {
        com.larvalabs.svgandroid.ParserHelper r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.CharSequence $r2;
        char $c7;

        r0 := @this: com.larvalabs.svgandroid.ParserHelper;
        $i0 = r0.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        $i1 = r0.<com.larvalabs.svgandroid.ParserHelper: int n>;
        if $i0 >= $i1 goto label0;

        $i2 = r0.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        $i3 = $i2 + 1;
        r0.<com.larvalabs.svgandroid.ParserHelper: int pos> = $i3;

     label0:
        $i4 = r0.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        $i5 = r0.<com.larvalabs.svgandroid.ParserHelper: int n>;
        if $i4 != $i5 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.larvalabs.svgandroid.ParserHelper: java.lang.CharSequence s>;
        $i6 = r0.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        $c7 = interfaceinvoke $r2.<java.lang.CharSequence: char charAt(int)>($i6);
        return $c7;
    }

    public void skipWhitespace()
    {
        com.larvalabs.svgandroid.ParserHelper r0;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r1;
        char $c3;
        boolean $z0;

        r0 := @this: com.larvalabs.svgandroid.ParserHelper;

     label0:
        $i0 = r0.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        $i1 = r0.<com.larvalabs.svgandroid.ParserHelper: int n>;
        if $i0 >= $i1 goto label1;

        $r1 = r0.<com.larvalabs.svgandroid.ParserHelper: java.lang.CharSequence s>;
        $i2 = r0.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);
        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.larvalabs.svgandroid.ParserHelper: void advance()>();
        goto label0;

     label1:
        return;
    }

    public void skipNumberSeparator()
    {
        com.larvalabs.svgandroid.ParserHelper r0;
        char c0;
        int $i1, $i2, $i3;
        java.lang.CharSequence $r1;

        r0 := @this: com.larvalabs.svgandroid.ParserHelper;

     label0:
        $i1 = r0.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        $i2 = r0.<com.larvalabs.svgandroid.ParserHelper: int n>;
        if $i1 >= $i2 goto label4;

        $r1 = r0.<com.larvalabs.svgandroid.ParserHelper: java.lang.CharSequence s>;
        $i3 = r0.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        c0 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i3);
        lookupswitch(c0)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 32: goto label1;
            case 44: goto label1;
            default: goto label2;
        };

     label1:
        virtualinvoke r0.<com.larvalabs.svgandroid.ParserHelper: void advance()>();
        goto label3;

     label2:
        return;

     label3:
        goto label0;

     label4:
        return;
    }

    public void advance()
    {
        com.larvalabs.svgandroid.ParserHelper r0;
        char $c0;

        r0 := @this: com.larvalabs.svgandroid.ParserHelper;
        $c0 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c0;
        return;
    }

    public float parseFloat()
    {
        com.larvalabs.svgandroid.ParserHelper r0;
        int i0, i1, i2, i3, i4, $i10, $i12, $i21, $i23, $i36, $i38, i41;
        boolean z0, z1, z2;
        char $c5, $c6, $c7, $c8, $c9, $c11, $c13, $c14, $c15, $c16, $c17, $c18, $c19, $c20, $c22, $c24, $c25, $c26, $c27, $c28, $c29, $c30, $c31, $c32, $c33, $c34, $c35, $c37, $c39, $c40;
        float $f0;

        r0 := @this: com.larvalabs.svgandroid.ParserHelper;
        i0 = 0;
        i1 = 0;
        z0 = 1;
        z1 = 0;
        i2 = 0;
        i3 = 0;
        i4 = 0;
        z2 = 1;
        $c5 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        lookupswitch($c5)
        {
            case 43: goto label1;
            case 45: goto label0;
            default: goto label2;
        };

     label0:
        z0 = 0;

     label1:
        $c6 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c6;

     label2:
        $c7 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        tableswitch($c7)
        {
            case 46: goto label4;
            case 47: goto label3;
            case 48: goto label5;
            case 49: goto label11;
            case 50: goto label11;
            case 51: goto label11;
            case 52: goto label11;
            case 53: goto label11;
            case 54: goto label11;
            case 55: goto label11;
            case 56: goto label11;
            case 57: goto label11;
            default: goto label3;
        };

     label3:
        return #NaNF;

     label4:
        goto label17;

     label5:
        z1 = 1;

     label6:
        $c8 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c8;
        $c9 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        lookupswitch($c9)
        {
            case 46: goto label8;
            case 48: goto label10;
            case 49: goto label7;
            case 50: goto label7;
            case 51: goto label7;
            case 52: goto label7;
            case 53: goto label7;
            case 54: goto label7;
            case 55: goto label7;
            case 56: goto label7;
            case 57: goto label7;
            case 69: goto label8;
            case 101: goto label8;
            default: goto label9;
        };

     label7:
        goto label11;

     label8:
        goto label17;

     label9:
        return 0.0F;

     label10:
        goto label6;

     label11:
        z1 = 1;

     label12:
        if i1 >= 9 goto label13;

        i1 = i1 + 1;
        $i10 = i0 * 10;
        $c11 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        $i12 = $c11 - 48;
        i0 = $i10 + $i12;
        goto label14;

     label13:
        i4 = i4 + 1;

     label14:
        $c13 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c13;
        $c14 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        tableswitch($c14)
        {
            case 48: goto label16;
            case 49: goto label16;
            case 50: goto label16;
            case 51: goto label16;
            case 52: goto label16;
            case 53: goto label16;
            case 54: goto label16;
            case 55: goto label16;
            case 56: goto label16;
            case 57: goto label16;
            default: goto label15;
        };

     label15:
        goto label17;

     label16:
        goto label12;

     label17:
        $c15 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        if $c15 != 46 goto label28;

        $c16 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c16;
        $c17 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        lookupswitch($c17)
        {
            case 48: goto label19;
            case 49: goto label24;
            case 50: goto label24;
            case 51: goto label24;
            case 52: goto label24;
            case 53: goto label24;
            case 54: goto label24;
            case 55: goto label24;
            case 56: goto label24;
            case 57: goto label24;
            case 69: goto label18;
            case 101: goto label18;
            default: goto label18;
        };

     label18:
        if z1 != 0 goto label28;

        $c18 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: void reportUnexpectedCharacterError(char)>($c18);
        return 0.0F;

     label19:
        if i1 != 0 goto label24;

     label20:
        $c19 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c19;
        i4 = i4 + -1;
        $c20 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        tableswitch($c20)
        {
            case 48: goto label23;
            case 49: goto label21;
            case 50: goto label21;
            case 51: goto label21;
            case 52: goto label21;
            case 53: goto label21;
            case 54: goto label21;
            case 55: goto label21;
            case 56: goto label21;
            case 57: goto label21;
            default: goto label22;
        };

     label21:
        goto label24;

     label22:
        if z1 != 0 goto label28;

        return 0.0F;

     label23:
        goto label20;

     label24:
        if i1 >= 9 goto label25;

        i1 = i1 + 1;
        $i21 = i0 * 10;
        $c22 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        $i23 = $c22 - 48;
        i0 = $i21 + $i23;
        i4 = i4 + -1;

     label25:
        $c24 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c24;
        $c25 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        tableswitch($c25)
        {
            case 48: goto label27;
            case 49: goto label27;
            case 50: goto label27;
            case 51: goto label27;
            case 52: goto label27;
            case 53: goto label27;
            case 54: goto label27;
            case 55: goto label27;
            case 56: goto label27;
            case 57: goto label27;
            default: goto label26;
        };

     label26:
        goto label28;

     label27:
        goto label24;

     label28:
        $c26 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        lookupswitch($c26)
        {
            case 69: goto label29;
            case 101: goto label29;
            default: goto label43;
        };

     label29:
        $c27 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c27;
        $c28 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        tableswitch($c28)
        {
            case 43: goto label32;
            case 44: goto label30;
            case 45: goto label31;
            case 46: goto label30;
            case 47: goto label30;
            case 48: goto label34;
            case 49: goto label34;
            case 50: goto label34;
            case 51: goto label34;
            case 52: goto label34;
            case 53: goto label34;
            case 54: goto label34;
            case 55: goto label34;
            case 56: goto label34;
            case 57: goto label34;
            default: goto label30;
        };

     label30:
        $c29 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: void reportUnexpectedCharacterError(char)>($c29);
        return 0.0F;

     label31:
        z2 = 0;

     label32:
        $c30 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c30;
        $c31 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        tableswitch($c31)
        {
            case 48: goto label34;
            case 49: goto label34;
            case 50: goto label34;
            case 51: goto label34;
            case 52: goto label34;
            case 53: goto label34;
            case 54: goto label34;
            case 55: goto label34;
            case 56: goto label34;
            case 57: goto label34;
            default: goto label33;
        };

     label33:
        $c32 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: void reportUnexpectedCharacterError(char)>($c32);
        return 0.0F;

     label34:
        $c33 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        tableswitch($c33)
        {
            case 48: goto label35;
            case 49: goto label39;
            case 50: goto label39;
            case 51: goto label39;
            case 52: goto label39;
            case 53: goto label39;
            case 54: goto label39;
            case 55: goto label39;
            case 56: goto label39;
            case 57: goto label39;
            default: goto label43;
        };

     label35:
        $c34 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c34;
        $c35 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        tableswitch($c35)
        {
            case 48: goto label38;
            case 49: goto label36;
            case 50: goto label36;
            case 51: goto label36;
            case 52: goto label36;
            case 53: goto label36;
            case 54: goto label36;
            case 55: goto label36;
            case 56: goto label36;
            case 57: goto label36;
            default: goto label37;
        };

     label36:
        goto label39;

     label37:
        goto label43;

     label38:
        goto label35;

     label39:
        if i3 >= 3 goto label40;

        i3 = i3 + 1;
        $i36 = i2 * 10;
        $c37 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        $i38 = $c37 - 48;
        i2 = $i36 + $i38;

     label40:
        $c39 = specialinvoke r0.<com.larvalabs.svgandroid.ParserHelper: char read()>();
        r0.<com.larvalabs.svgandroid.ParserHelper: char current> = $c39;
        $c40 = r0.<com.larvalabs.svgandroid.ParserHelper: char current>;
        tableswitch($c40)
        {
            case 48: goto label42;
            case 49: goto label42;
            case 50: goto label42;
            case 51: goto label42;
            case 52: goto label42;
            case 53: goto label42;
            case 54: goto label42;
            case 55: goto label42;
            case 56: goto label42;
            case 57: goto label42;
            default: goto label41;
        };

     label41:
        goto label43;

     label42:
        goto label39;

     label43:
        if z2 != 0 goto label44;

        i2 = neg i2;

     label44:
        i41 = i2 + i4;
        if z0 != 0 goto label45;

        i0 = neg i0;

     label45:
        $f0 = staticinvoke <com.larvalabs.svgandroid.ParserHelper: float buildFloat(int,int)>(i0, i41);
        return $f0;
    }

    private void reportUnexpectedCharacterError(char)
    {
        com.larvalabs.svgandroid.ParserHelper r0;
        char c0;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.larvalabs.svgandroid.ParserHelper;
        c0 := @parameter0: char;
        $r1 = new java.lang.RuntimeException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected char \'");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r1;
    }

    public static float buildFloat(int, int)
    {
        int i0, i1, $i2;
        double[] $r0, $r1;
        float $f0, $f1, $f2;
        double $d0, $d1, $d2, $d3, $d4;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i1 < -125 goto label0;

        if i0 != 0 goto label1;

     label0:
        return 0.0F;

     label1:
        if i1 < 128 goto label4;

        if i0 <= 0 goto label2;

        $f0 = #InfinityF;
        goto label3;

     label2:
        $f0 = #-InfinityF;

     label3:
        return $f0;

     label4:
        if i1 != 0 goto label5;

        $f1 = (float) i0;
        return $f1;

     label5:
        if i0 < 67108864 goto label6;

        i0 = i0 + 1;

     label6:
        if i1 <= 0 goto label7;

        $d0 = (double) i0;
        $r0 = <com.larvalabs.svgandroid.ParserHelper: double[] pow10>;
        $d1 = $r0[i1];
        $d2 = $d0 * $d1;
        goto label8;

     label7:
        $d3 = (double) i0;
        $r1 = <com.larvalabs.svgandroid.ParserHelper: double[] pow10>;
        $i2 = neg i1;
        $d4 = $r1[$i2];
        $d2 = $d3 / $d4;

     label8:
        $f2 = (float) $d2;
        return $f2;
    }

    public float nextFloat()
    {
        com.larvalabs.svgandroid.ParserHelper r0;
        float f0;

        r0 := @this: com.larvalabs.svgandroid.ParserHelper;
        virtualinvoke r0.<com.larvalabs.svgandroid.ParserHelper: void skipWhitespace()>();
        f0 = virtualinvoke r0.<com.larvalabs.svgandroid.ParserHelper: float parseFloat()>();
        virtualinvoke r0.<com.larvalabs.svgandroid.ParserHelper: void skipNumberSeparator()>();
        return f0;
    }

    static void <clinit>()
    {
        int i0, $i1;
        double[] $r0, $r1, $r2;
        double $d0, $d1;

        $r1 = newarray (double)[128];
        <com.larvalabs.svgandroid.ParserHelper: double[] pow10> = $r1;
        i0 = 0;

     label0:
        $r0 = <com.larvalabs.svgandroid.ParserHelper: double[] pow10>;
        $i1 = lengthof $r0;
        if i0 >= $i1 goto label1;

        $r2 = <com.larvalabs.svgandroid.ParserHelper: double[] pow10>;
        $d0 = (double) i0;
        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d0);
        $r2[i0] = $d1;
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }
}
public class com.larvalabs.svgandroid.SVG extends java.lang.Object
{
    private android.graphics.Picture picture;
    private android.graphics.RectF bounds;
    private android.graphics.RectF limits;

    void <init>(android.graphics.Picture, android.graphics.RectF)
    {
        com.larvalabs.svgandroid.SVG r0;
        android.graphics.Picture r1;
        android.graphics.RectF r2;

        r0 := @this: com.larvalabs.svgandroid.SVG;
        r1 := @parameter0: android.graphics.Picture;
        r2 := @parameter1: android.graphics.RectF;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVG: android.graphics.RectF limits> = null;
        r0.<com.larvalabs.svgandroid.SVG: android.graphics.Picture picture> = r1;
        r0.<com.larvalabs.svgandroid.SVG: android.graphics.RectF bounds> = r2;
        return;
    }

    void setLimits(android.graphics.RectF)
    {
        com.larvalabs.svgandroid.SVG r0;
        android.graphics.RectF r1;

        r0 := @this: com.larvalabs.svgandroid.SVG;
        r1 := @parameter0: android.graphics.RectF;
        r0.<com.larvalabs.svgandroid.SVG: android.graphics.RectF limits> = r1;
        return;
    }

    public android.graphics.drawable.PictureDrawable createPictureDrawable()
    {
        com.larvalabs.svgandroid.SVG r0;
        android.graphics.drawable.PictureDrawable $r1;
        android.graphics.Picture $r2;

        r0 := @this: com.larvalabs.svgandroid.SVG;
        $r1 = new android.graphics.drawable.PictureDrawable;
        $r2 = r0.<com.larvalabs.svgandroid.SVG: android.graphics.Picture picture>;
        specialinvoke $r1.<android.graphics.drawable.PictureDrawable: void <init>(android.graphics.Picture)>($r2);
        return $r1;
    }

    public android.graphics.Picture getPicture()
    {
        com.larvalabs.svgandroid.SVG r0;
        android.graphics.Picture $r1;

        r0 := @this: com.larvalabs.svgandroid.SVG;
        $r1 = r0.<com.larvalabs.svgandroid.SVG: android.graphics.Picture picture>;
        return $r1;
    }

    public android.graphics.RectF getBounds()
    {
        com.larvalabs.svgandroid.SVG r0;
        android.graphics.RectF $r1;

        r0 := @this: com.larvalabs.svgandroid.SVG;
        $r1 = r0.<com.larvalabs.svgandroid.SVG: android.graphics.RectF bounds>;
        return $r1;
    }

    public android.graphics.RectF getLimits()
    {
        com.larvalabs.svgandroid.SVG r0;
        android.graphics.RectF $r1;

        r0 := @this: com.larvalabs.svgandroid.SVG;
        $r1 = r0.<com.larvalabs.svgandroid.SVG: android.graphics.RectF limits>;
        return $r1;
    }
}
public class com.larvalabs.svgandroid.SVGParseException extends java.lang.RuntimeException
{
    private static final long serialVersionUID;

    public void <init>(java.lang.String)
    {
        com.larvalabs.svgandroid.SVGParseException r0;
        java.lang.String r1;

        r0 := @this: com.larvalabs.svgandroid.SVGParseException;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        com.larvalabs.svgandroid.SVGParseException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: com.larvalabs.svgandroid.SVGParseException;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Throwable;
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);
        return;
    }

    public void <init>(java.lang.Throwable)
    {
        com.larvalabs.svgandroid.SVGParseException r0;
        java.lang.Throwable r1;

        r0 := @this: com.larvalabs.svgandroid.SVGParseException;
        r1 := @parameter0: java.lang.Throwable;
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);
        return;
    }
}
class com.larvalabs.svgandroid.SVGParser$1 extends java.lang.Object
{
}
class com.larvalabs.svgandroid.SVGParser$Gradient extends java.lang.Object
{
    java.lang.String id;
    java.lang.String xlink;
    boolean isLinear;
    float x1;
    float y1;
    float x2;
    float y2;
    float x;
    float y;
    float radius;
    java.util.ArrayList positions;
    java.util.ArrayList colors;
    android.graphics.Matrix matrix;

    private void <init>()
    {
        com.larvalabs.svgandroid.SVGParser$Gradient r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$Gradient;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList positions> = $r1;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList colors> = $r2;
        r0.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix> = null;
        return;
    }

    public com.larvalabs.svgandroid.SVGParser$Gradient createChild(com.larvalabs.svgandroid.SVGParser$Gradient)
    {
        com.larvalabs.svgandroid.SVGParser$Gradient r0, r1, $r2, r3;
        android.graphics.Matrix r4, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r5, $r6;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.util.ArrayList $r7, $r8;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$Gradient;
        r1 := @parameter0: com.larvalabs.svgandroid.SVGParser$Gradient;
        $r2 = new com.larvalabs.svgandroid.SVGParser$Gradient;
        specialinvoke $r2.<com.larvalabs.svgandroid.SVGParser$Gradient: void <init>()>();
        r3 = $r2;
        $r5 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id> = $r5;
        $r6 = r0.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String xlink> = $r6;
        $z0 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: boolean isLinear>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: boolean isLinear> = $z0;
        $f0 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: float x1>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float x1> = $f0;
        $f1 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: float x2>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float x2> = $f1;
        $f2 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: float y1>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float y1> = $f2;
        $f3 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: float y2>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float y2> = $f3;
        $f4 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: float x>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float x> = $f4;
        $f5 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: float y>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float y> = $f5;
        $f6 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: float radius>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float radius> = $f6;
        $r7 = r0.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList positions>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList positions> = $r7;
        $r8 = r0.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList colors>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList colors> = $r8;
        $r9 = r0.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix> = $r9;
        $r10 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        if $r10 == null goto label1;

        $r11 = r0.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        if $r11 != null goto label0;

        $r12 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix> = $r12;
        goto label1;

     label0:
        $r13 = new android.graphics.Matrix;
        $r14 = r0.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        specialinvoke $r13.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r14);
        r4 = $r13;
        $r15 = r1.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        virtualinvoke r4.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r15);
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix> = r4;

     label1:
        return r3;
    }

    void <init>(com.larvalabs.svgandroid.SVGParser$1)
    {
        com.larvalabs.svgandroid.SVGParser$Gradient r0;
        com.larvalabs.svgandroid.SVGParser$1 r1;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$Gradient;
        r1 := @parameter0: com.larvalabs.svgandroid.SVGParser$1;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$Gradient: void <init>()>();
        return;
    }
}
class com.larvalabs.svgandroid.SVGParser$NumberParse extends java.lang.Object
{
    private java.util.ArrayList numbers;

    public void <init>(java.util.ArrayList, int)
    {
        com.larvalabs.svgandroid.SVGParser$NumberParse r0;
        java.util.ArrayList r1;
        int i0;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$NumberParse;
        r1 := @parameter0: java.util.ArrayList;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList numbers> = r1;
        return;
    }

    static java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)
    {
        com.larvalabs.svgandroid.SVGParser$NumberParse r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.larvalabs.svgandroid.SVGParser$NumberParse;
        $r1 = r0.<com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList numbers>;
        return $r1;
    }
}
class com.larvalabs.svgandroid.SVGParser$Properties extends java.lang.Object
{
    com.larvalabs.svgandroid.SVGParser$StyleSet styles;
    org.xml.sax.Attributes atts;

    private void <init>(org.xml.sax.Attributes)
    {
        com.larvalabs.svgandroid.SVGParser$Properties r0;
        org.xml.sax.Attributes r1;
        java.lang.String r2;
        com.larvalabs.svgandroid.SVGParser$StyleSet $r3;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$Properties;
        r1 := @parameter0: org.xml.sax.Attributes;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVGParser$Properties: com.larvalabs.svgandroid.SVGParser$StyleSet styles> = null;
        r0.<com.larvalabs.svgandroid.SVGParser$Properties: org.xml.sax.Attributes atts> = r1;
        r2 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>("style", r1);
        if r2 == null goto label0;

        $r3 = new com.larvalabs.svgandroid.SVGParser$StyleSet;
        specialinvoke $r3.<com.larvalabs.svgandroid.SVGParser$StyleSet: void <init>(java.lang.String,com.larvalabs.svgandroid.SVGParser$1)>(r2, null);
        r0.<com.larvalabs.svgandroid.SVGParser$Properties: com.larvalabs.svgandroid.SVGParser$StyleSet styles> = $r3;

     label0:
        return;
    }

    public java.lang.String getAttr(java.lang.String)
    {
        com.larvalabs.svgandroid.SVGParser$Properties r0;
        java.lang.String r1, r2;
        com.larvalabs.svgandroid.SVGParser$StyleSet $r3, $r4;
        org.xml.sax.Attributes $r5;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$Properties;
        r1 := @parameter0: java.lang.String;
        r2 = null;
        $r3 = r0.<com.larvalabs.svgandroid.SVGParser$Properties: com.larvalabs.svgandroid.SVGParser$StyleSet styles>;
        if $r3 == null goto label0;

        $r4 = r0.<com.larvalabs.svgandroid.SVGParser$Properties: com.larvalabs.svgandroid.SVGParser$StyleSet styles>;
        r2 = virtualinvoke $r4.<com.larvalabs.svgandroid.SVGParser$StyleSet: java.lang.String getStyle(java.lang.String)>(r1);

     label0:
        if r2 != null goto label1;

        $r5 = r0.<com.larvalabs.svgandroid.SVGParser$Properties: org.xml.sax.Attributes atts>;
        r2 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>(r1, $r5);

     label1:
        return r2;
    }

    public java.lang.String getString(java.lang.String)
    {
        com.larvalabs.svgandroid.SVGParser$Properties r0;
        java.lang.String r1, $r2;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$Properties;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getAttr(java.lang.String)>(r1);
        return $r2;
    }

    public java.lang.Integer getHex(java.lang.String)
    {
        com.larvalabs.svgandroid.SVGParser$Properties r0;
        java.lang.String r1, r2, $r4;
        java.lang.NumberFormatException r3, $r6;
        boolean $z0;
        int $i0;
        java.lang.Integer $r5;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$Properties;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getAttr(java.lang.String)>(r1);
        if r2 == null goto label0;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z0 != 0 goto label1;

     label0:
        return null;

     label1:
        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r4, 16);
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;
        r3 = $r6;
        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.Float getFloat(java.lang.String, boolean)
    {
        com.larvalabs.svgandroid.SVGParser$Properties r0;
        java.lang.String r1, r2;
        boolean z0, $z1, $z2;
        java.lang.NumberFormatException r3, $r5;
        int $i0, $i1;
        float $f0;
        java.lang.Float $r4;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$Properties;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        r2 = virtualinvoke r0.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getAttr(java.lang.String)>(r1);
        if r2 != null goto label0;

        return null;

     label0:
        if z0 == 0 goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("px");
        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("pt");
        if $z2 == 0 goto label2;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();
        $i1 = $i0 - 2;
        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;
        r3 = $r5;
        return null;

        catch java.lang.NumberFormatException from label0 to label3 with label4;
    }

    void <init>(org.xml.sax.Attributes, com.larvalabs.svgandroid.SVGParser$1)
    {
        com.larvalabs.svgandroid.SVGParser$Properties r0;
        org.xml.sax.Attributes r1;
        com.larvalabs.svgandroid.SVGParser$1 r2;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$Properties;
        r1 := @parameter0: org.xml.sax.Attributes;
        r2 := @parameter1: com.larvalabs.svgandroid.SVGParser$1;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$Properties: void <init>(org.xml.sax.Attributes)>(r1);
        return;
    }
}
class com.larvalabs.svgandroid.SVGParser$SVGHandler extends org.xml.sax.helpers.DefaultHandler
{
    android.graphics.Picture picture;
    android.graphics.Canvas canvas;
    android.graphics.Paint paint;
    android.graphics.RectF rect;
    android.graphics.RectF bounds;
    android.graphics.RectF limits;
    java.lang.Integer searchColor;
    java.lang.Integer replaceColor;
    boolean whiteMode;
    java.util.HashMap gradientMap;
    java.util.HashMap gradientRefMap;
    com.larvalabs.svgandroid.SVGParser$Gradient gradient;
    private boolean hidden;
    private int hiddenLevel;
    private boolean boundsMode;

    private void <init>(android.graphics.Picture)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        android.graphics.Picture r1;
        android.graphics.RectF $r2, $r3;
        java.util.HashMap $r4, $r5;
        android.graphics.Paint $r6, $r7;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: android.graphics.Picture;
        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();
        $r2 = new android.graphics.RectF;
        specialinvoke $r2.<android.graphics.RectF: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF rect> = $r2;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF bounds> = null;
        $r3 = new android.graphics.RectF;
        specialinvoke $r3.<android.graphics.RectF: void <init>(float,float,float,float)>(#InfinityF, #InfinityF, #-InfinityF, #-InfinityF);
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits> = $r3;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.lang.Integer searchColor> = null;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.lang.Integer replaceColor> = null;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean whiteMode> = 0;
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap> = $r4;
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientRefMap> = $r5;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient> = null;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden> = 0;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: int hiddenLevel> = 0;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean boundsMode> = 0;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Picture picture> = r1;
        $r6 = new android.graphics.Paint;
        specialinvoke $r6.<android.graphics.Paint: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint> = $r6;
        $r7 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r7.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        return;
    }

    public void setColorSwap(java.lang.Integer, java.lang.Integer)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        java.lang.Integer r1, r2;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: java.lang.Integer;
        r2 := @parameter1: java.lang.Integer;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.lang.Integer searchColor> = r1;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.lang.Integer replaceColor> = r2;
        return;
    }

    public void setWhiteMode(boolean)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        boolean z0;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        z0 := @parameter0: boolean;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean whiteMode> = z0;
        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        return;
    }

    private boolean doFill(com.larvalabs.svgandroid.SVGParser$Properties, java.util.HashMap)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        com.larvalabs.svgandroid.SVGParser$Properties r1;
        java.util.HashMap r2;
        java.lang.String $r3, r4, r5, $r7, $r11, $r22, $r23;
        android.graphics.Shader r6;
        boolean $z0, $z1, $z2;
        android.graphics.Paint $r8, $r10, $r13, $r15, $r17, $r20, $r24, $r26;
        android.graphics.Paint$Style $r9, $r16, $r21, $r25;
        int $i0, $i1, $i2;
        java.lang.Object $r12;
        java.lang.Integer r19;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: com.larvalabs.svgandroid.SVGParser$Properties;
        r2 := @parameter1: java.util.HashMap;
        $r3 = "none";
        $r7 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getString(java.lang.String)>("display");
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $z1 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean whiteMode>;
        if $z1 == 0 goto label1;

        $r8 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r9 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke $r8.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r9);
        $r10 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>(-1);
        return 1;

     label1:
        r4 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getString(java.lang.String)>("fill");
        if r4 == null goto label3;

        $z2 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("url(#");
        if $z2 == 0 goto label3;

        $r11 = "url(#";
        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();
        $i1 = virtualinvoke r4.<java.lang.String: int length()>();
        $i2 = $i1 - 1;
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);
        $r12 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);
        r6 = (android.graphics.Shader) $r12;
        if r6 == null goto label2;

        $r13 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r13.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r6);
        $r15 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r16 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke $r15.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r16);
        return 1;

     label2:
        return 0;

     label3:
        $r17 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r17.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);
        r19 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.Integer getHex(java.lang.String)>("fill");
        if r19 == null goto label4;

        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doColor(com.larvalabs.svgandroid.SVGParser$Properties,java.lang.Integer,boolean)>(r1, r19, 1);
        $r20 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r21 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke $r20.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r21);
        return 1;

     label4:
        $r22 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getString(java.lang.String)>("fill");
        if $r22 != null goto label5;

        $r23 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getString(java.lang.String)>("stroke");
        if $r23 != null goto label5;

        $r24 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r25 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke $r24.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r25);
        $r26 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r26.<android.graphics.Paint: void setColor(int)>(-16777216);
        return 1;

     label5:
        return 0;
    }

    private boolean doStroke(com.larvalabs.svgandroid.SVGParser$Properties, java.util.HashMap)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        com.larvalabs.svgandroid.SVGParser$Properties r1;
        java.util.HashMap r2;
        java.lang.String r3, r4, r6, $r7, $r8, $r9, r18, $r19, $r22, $r25, $r28, $r31, $r34;
        android.graphics.Shader r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int $i0, $i1, $i2;
        java.lang.Object $r10;
        android.graphics.Paint $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r37;
        java.lang.Integer r13;
        java.lang.Float r16;
        float $f0;
        android.graphics.Paint$Cap $r21, $r24, $r27;
        android.graphics.Paint$Join $r30, $r33, $r36;
        android.graphics.Paint$Style $r38;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: com.larvalabs.svgandroid.SVGParser$Properties;
        r2 := @parameter1: java.util.HashMap;
        $z0 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean whiteMode>;
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $r7 = "none";
        $r8 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getString(java.lang.String)>("display");
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z1 == 0 goto label1;

        return 0;

     label1:
        r3 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getString(java.lang.String)>("stroke");
        if r3 != null goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("url(#");
        if $z2 == 0 goto label4;

        $r9 = "url(#";
        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();
        $i1 = virtualinvoke r3.<java.lang.String: int length()>();
        $i2 = $i1 - 1;
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);
        $r10 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);
        r5 = (android.graphics.Shader) $r10;
        if r5 != null goto label3;

        return 0;

     label3:
        $r11 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r11.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r5);
        goto label6;

     label4:
        r13 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.Integer getHex(java.lang.String)>("stroke");
        if r13 != null goto label5;

        return 0;

     label5:
        $r14 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r14.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doColor(com.larvalabs.svgandroid.SVGParser$Properties,java.lang.Integer,boolean)>(r1, r13, 0);

     label6:
        r16 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.Float getFloat(java.lang.String,boolean)>("stroke-width", 1);
        if r16 == null goto label7;

        $r17 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $f0 = virtualinvoke r16.<java.lang.Float: float floatValue()>();
        virtualinvoke $r17.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

     label7:
        r18 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getString(java.lang.String)>("stroke-linecap");
        $r19 = "round";
        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r18);
        if $z3 == 0 goto label8;

        $r20 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r21 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;
        virtualinvoke $r20.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r21);
        goto label10;

     label8:
        $r22 = "square";
        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r18);
        if $z4 == 0 goto label9;

        $r23 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r24 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;
        virtualinvoke $r23.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r24);
        goto label10;

     label9:
        $r25 = "butt";
        $z5 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r18);
        if $z5 == 0 goto label10;

        $r26 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r27 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;
        virtualinvoke $r26.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r27);

     label10:
        r6 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.String getString(java.lang.String)>("stroke-linejoin");
        $r28 = "miter";
        $z6 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r6);
        if $z6 == 0 goto label11;

        $r29 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r30 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;
        virtualinvoke $r29.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r30);
        goto label13;

     label11:
        $r31 = "round";
        $z7 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>(r6);
        if $z7 == 0 goto label12;

        $r32 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r33 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;
        virtualinvoke $r32.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r33);
        goto label13;

     label12:
        $r34 = "bevel";
        $z8 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>(r6);
        if $z8 == 0 goto label13;

        $r35 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r36 = <android.graphics.Paint$Join: android.graphics.Paint$Join BEVEL>;
        virtualinvoke $r35.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r36);

     label13:
        $r37 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $r38 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke $r37.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r38);
        return 1;
    }

    private com.larvalabs.svgandroid.SVGParser$Gradient doGradient(boolean, org.xml.sax.Attributes)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        boolean z0, $z1;
        org.xml.sax.Attributes r1;
        com.larvalabs.svgandroid.SVGParser$Gradient $r2, r3;
        java.lang.String r4, r5, $r6;
        java.lang.Float $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Matrix $r21;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        z0 := @parameter0: boolean;
        r1 := @parameter1: org.xml.sax.Attributes;
        $r2 = new com.larvalabs.svgandroid.SVGParser$Gradient;
        specialinvoke $r2.<com.larvalabs.svgandroid.SVGParser$Gradient: void <init>(com.larvalabs.svgandroid.SVGParser$1)>(null);
        r3 = $r2;
        $r6 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>("id", r1);
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id> = $r6;
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: boolean isLinear> = z0;
        if z0 == 0 goto label0;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
        $r8 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$500(java.lang.String,org.xml.sax.Attributes,java.lang.Float)>("x1", r1, $r7);
        $f0 = virtualinvoke $r8.<java.lang.Float: float floatValue()>();
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float x1> = $f0;
        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
        $r10 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$500(java.lang.String,org.xml.sax.Attributes,java.lang.Float)>("x2", r1, $r9);
        $f1 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float x2> = $f1;
        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
        $r12 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$500(java.lang.String,org.xml.sax.Attributes,java.lang.Float)>("y1", r1, $r11);
        $f2 = virtualinvoke $r12.<java.lang.Float: float floatValue()>();
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float y1> = $f2;
        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
        $r14 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$500(java.lang.String,org.xml.sax.Attributes,java.lang.Float)>("y2", r1, $r13);
        $f3 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float y2> = $f3;
        goto label1;

     label0:
        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
        $r16 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$500(java.lang.String,org.xml.sax.Attributes,java.lang.Float)>("cx", r1, $r15);
        $f4 = virtualinvoke $r16.<java.lang.Float: float floatValue()>();
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float x> = $f4;
        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
        $r18 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$500(java.lang.String,org.xml.sax.Attributes,java.lang.Float)>("cy", r1, $r17);
        $f5 = virtualinvoke $r18.<java.lang.Float: float floatValue()>();
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float y> = $f5;
        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
        $r20 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$500(java.lang.String,org.xml.sax.Attributes,java.lang.Float)>("r", r1, $r19);
        $f6 = virtualinvoke $r20.<java.lang.Float: float floatValue()>();
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: float radius> = $f6;

     label1:
        r4 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>("gradientTransform", r1);
        if r4 == null goto label2;

        $r21 = staticinvoke <com.larvalabs.svgandroid.SVGParser: android.graphics.Matrix access$600(java.lang.String)>(r4);
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix> = $r21;

     label2:
        r5 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>("href", r1);
        if r5 == null goto label4;

        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z1 == 0 goto label3;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(1);

     label3:
        r3.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String xlink> = r5;

     label4:
        return r3;
    }

    private void doColor(com.larvalabs.svgandroid.SVGParser$Properties, java.lang.Integer, boolean)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        com.larvalabs.svgandroid.SVGParser$Properties r1;
        java.lang.Integer r2, $r4, $r5, $r6;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Float r3;
        android.graphics.Paint $r7, $r10, $r11;
        java.lang.String $r9;
        float $f0, $f1;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: com.larvalabs.svgandroid.SVGParser$Properties;
        r2 := @parameter1: java.lang.Integer;
        z0 := @parameter2: boolean;
        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();
        $i2 = 16777215 & $i1;
        i0 = $i2 | -16777216;
        $r4 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.lang.Integer searchColor>;
        if $r4 == null goto label0;

        $r5 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.lang.Integer searchColor>;
        $i3 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
        if $i3 != i0 goto label0;

        $r6 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.lang.Integer replaceColor>;
        i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label0:
        $r7 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>(i0);
        r3 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.Float getFloat(java.lang.String,boolean)>("opacity", 0);
        if r3 != null goto label3;

        if z0 == 0 goto label1;

        $r9 = "fill-opacity";
        goto label2;

     label1:
        $r9 = "stroke-opacity";

     label2:
        r3 = virtualinvoke r1.<com.larvalabs.svgandroid.SVGParser$Properties: java.lang.Float getFloat(java.lang.String,boolean)>($r9, 0);

     label3:
        if r3 != null goto label4;

        $r10 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r10.<android.graphics.Paint: void setAlpha(int)>(255);
        goto label5;

     label4:
        $r11 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        $f0 = virtualinvoke r3.<java.lang.Float: float floatValue()>();
        $f1 = 255.0F * $f0;
        $i4 = (int) $f1;
        virtualinvoke $r11.<android.graphics.Paint: void setAlpha(int)>($i4);

     label5:
        return;
    }

    private void doLimits(float, float)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        android.graphics.RectF $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        f0 := @parameter0: float;
        f1 := @parameter1: float;
        $r1 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        $f2 = $r1.<android.graphics.RectF: float left>;
        $b0 = f0 cmpg $f2;
        if $b0 >= 0 goto label0;

        $r2 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        $r2.<android.graphics.RectF: float left> = f0;

     label0:
        $r3 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        $f3 = $r3.<android.graphics.RectF: float right>;
        $b1 = f0 cmpl $f3;
        if $b1 <= 0 goto label1;

        $r4 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        $r4.<android.graphics.RectF: float right> = f0;

     label1:
        $r5 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        $f4 = $r5.<android.graphics.RectF: float top>;
        $b2 = f1 cmpg $f4;
        if $b2 >= 0 goto label2;

        $r6 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        $r6.<android.graphics.RectF: float top> = f1;

     label2:
        $r7 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        $f5 = $r7.<android.graphics.RectF: float bottom>;
        $b3 = f1 cmpl $f5;
        if $b3 <= 0 goto label3;

        $r8 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        $r8.<android.graphics.RectF: float bottom> = f1;

     label3:
        return;
    }

    private void doLimits(float, float, float, float)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        float f0, f1, f2, f3, $f4, $f5;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        f0 := @parameter0: float;
        f1 := @parameter1: float;
        f2 := @parameter2: float;
        f3 := @parameter3: float;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>(f0, f1);
        $f4 = f0 + f2;
        $f5 = f1 + f3;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>($f4, $f5);
        return;
    }

    private void doLimits(android.graphics.Path)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        android.graphics.Path r1;
        android.graphics.RectF $r2, $r3, $r4, $r5, $r6;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: android.graphics.Path;
        $r2 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF rect>;
        virtualinvoke r1.<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>($r2, 0);
        $r3 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF rect>;
        $f0 = $r3.<android.graphics.RectF: float left>;
        $r4 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF rect>;
        $f1 = $r4.<android.graphics.RectF: float top>;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>($f0, $f1);
        $r5 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF rect>;
        $f2 = $r5.<android.graphics.RectF: float right>;
        $r6 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF rect>;
        $f3 = $r6.<android.graphics.RectF: float bottom>;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>($f2, $f3);
        return;
    }

    private void pushTransform(org.xml.sax.Attributes)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        org.xml.sax.Attributes r1;
        java.lang.String r2;
        android.graphics.Matrix r3;
        android.graphics.Canvas $r4, $r5;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: org.xml.sax.Attributes;
        r2 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>("transform", r1);
        $r4 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        virtualinvoke $r4.<android.graphics.Canvas: int save()>();
        if r2 == null goto label0;

        r3 = staticinvoke <com.larvalabs.svgandroid.SVGParser: android.graphics.Matrix access$600(java.lang.String)>(r2);
        $r5 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        virtualinvoke $r5.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r3);

     label0:
        return;
    }

    private void popTransform()
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        android.graphics.Canvas $r1;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        $r1 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        java.lang.String r1, r2, r3, r9, r20, r23, $r24, $r31, $r32, $r34, $r35, $r112;
        org.xml.sax.Attributes r4;
        java.lang.Float r5, r6, r7, r8, $r12, $r13, $r19, $r27, r36, r37, r38, r39, r40, r41, $r42, r57, r58, r59, r60, r66, r67, r68, r77, r78, r79, r80, $r99, $r101, $r103, $r105;
        int i0, i1, i2, i3, $i4, i5, $i6, $i7, $i14, i15, $i16, $i17;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, $f86, $f87, $f88, $f89, $f90, $f91, $f92, $f93, $f94, $f95, $f96, $f97, $f98, $f99, $f100, $f101, $f102, $f103, $f104, $f105, $f106, $f107, $f108, $f109, $f110, $f111, $f112, $f113, $f114, $f115, $f116, $f117, $f118, $f119, $f120, f121, f122;
        android.graphics.Paint $r10, $r48, $r50, $r54, $r56, $r65, $r73, $r76, $r87, $r91, $r108, $r111, $r118, $r121;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40;
        android.graphics.RectF $r11, $r47, $r53, $r83, $r86, $r90;
        android.graphics.Picture $r14;
        android.graphics.Canvas $r15, $r46, $r49, $r52, $r55, $r64, $r72, $r75, $r85, $r89, $r107, $r110, $r117, $r120;
        com.larvalabs.svgandroid.SVGParser$Gradient $r16, $r17, $r18, $r25, $r28;
        com.larvalabs.svgandroid.SVGParser$StyleSet $r21, r22;
        java.util.ArrayList $r26, $r29, r95;
        java.lang.Integer $r30;
        byte $b8, $b9, $b10, $b11, $b12, $b13;
        com.larvalabs.svgandroid.SVGParser$Properties $r43, r44, $r61, r62, $r69, r70, $r81, r82, $r96, r97, $r114, r115;
        java.util.HashMap $r45, $r51, $r63, $r71, $r74, $r84, $r88, $r106, $r109, $r116, $r119;
        com.larvalabs.svgandroid.SVGParser$NumberParse r92;
        android.graphics.Path $r93, r94, r113;
        java.lang.Object $r98, $r100, $r102, $r104;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: org.xml.sax.Attributes;
        $r10 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r10.<android.graphics.Paint: void setAlpha(int)>(255);
        $z0 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean boundsMode>;
        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rect");
        if $z1 == 0 goto label2;

        r5 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("x", r4);
        if r5 != null goto label0;

        r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

     label0:
        r6 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("y", r4);
        if r6 != null goto label1;

        r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

     label1:
        r7 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("width", r4);
        r8 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("height", r4);
        $r11 = new android.graphics.RectF;
        $f1 = virtualinvoke r5.<java.lang.Float: float floatValue()>();
        $f2 = virtualinvoke r6.<java.lang.Float: float floatValue()>();
        $f3 = virtualinvoke r5.<java.lang.Float: float floatValue()>();
        $f4 = virtualinvoke r7.<java.lang.Float: float floatValue()>();
        $f5 = $f3 + $f4;
        $f6 = virtualinvoke r6.<java.lang.Float: float floatValue()>();
        $f7 = virtualinvoke r8.<java.lang.Float: float floatValue()>();
        $f8 = $f6 + $f7;
        specialinvoke $r11.<android.graphics.RectF: void <init>(float,float,float,float)>($f1, $f2, $f5, $f8);
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF bounds> = $r11;

     label2:
        return;

     label3:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("svg");
        if $z2 == 0 goto label4;

        $r12 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("width", r4);
        $f9 = virtualinvoke $r12.<java.lang.Float: float floatValue()>();
        $f10 = staticinvoke <android.util.FloatMath: float ceil(float)>($f9);
        i2 = (int) $f10;
        $r13 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("height", r4);
        $f11 = virtualinvoke $r13.<java.lang.Float: float floatValue()>();
        $f12 = staticinvoke <android.util.FloatMath: float ceil(float)>($f11);
        i3 = (int) $f12;
        $r14 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Picture picture>;
        $r15 = virtualinvoke $r14.<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>(i2, i3);
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas> = $r15;
        goto label50;

     label4:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("defs");
        if $z3 == 0 goto label5;

        goto label50;

     label5:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("linearGradient");
        if $z4 == 0 goto label6;

        $r16 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient doGradient(boolean,org.xml.sax.Attributes)>(1, r4);
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient> = $r16;
        goto label50;

     label6:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("radialGradient");
        if $z5 == 0 goto label7;

        $r17 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient doGradient(boolean,org.xml.sax.Attributes)>(0, r4);
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient> = $r17;
        goto label50;

     label7:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("stop");
        if $z6 == 0 goto label12;

        $r18 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        if $r18 == null goto label50;

        $r19 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("offset", r4);
        f13 = virtualinvoke $r19.<java.lang.Float: float floatValue()>();
        r20 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>("style", r4);
        $r21 = new com.larvalabs.svgandroid.SVGParser$StyleSet;
        specialinvoke $r21.<com.larvalabs.svgandroid.SVGParser$StyleSet: void <init>(java.lang.String,com.larvalabs.svgandroid.SVGParser$1)>(r20, null);
        r22 = $r21;
        r23 = virtualinvoke r22.<com.larvalabs.svgandroid.SVGParser$StyleSet: java.lang.String getStyle(java.lang.String)>("stop-color");
        i0 = -16777216;
        if r23 == null goto label9;

        $z7 = virtualinvoke r23.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z7 == 0 goto label8;

        $r24 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>(1);
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r24, 16);
        goto label9;

     label8:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r23, 16);

     label9:
        r9 = virtualinvoke r22.<com.larvalabs.svgandroid.SVGParser$StyleSet: java.lang.String getStyle(java.lang.String)>("stop-opacity");
        if r9 == null goto label10;

        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r9);
        $f14 = 255.0F * f0;
        i1 = staticinvoke <java.lang.Math: int round(float)>($f14);
        $i4 = i1 << 24;
        i5 = i0 | $i4;
        goto label11;

     label10:
        i5 = i0 | -16777216;

     label11:
        $r25 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r26 = $r25.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList positions>;
        $r27 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f13);
        virtualinvoke $r26.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);
        $r28 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r29 = $r28.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList colors>;
        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);
        virtualinvoke $r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r30);
        goto label50;

     label12:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("g");
        if $z10 == 0 goto label16;

        $r31 = "bounds";
        $r32 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>("id", r4);
        $z11 = virtualinvoke $r31.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r32);
        if $z11 == 0 goto label13;

        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean boundsMode> = 1;

     label13:
        $z12 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z12 == 0 goto label14;

        $i6 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: int hiddenLevel>;
        $i7 = $i6 + 1;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: int hiddenLevel> = $i7;

     label14:
        $r34 = "none";
        $r35 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>("display", r4);
        $z13 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r35);
        if $z13 == 0 goto label15;

        $z14 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z14 != 0 goto label15;

        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden> = 1;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: int hiddenLevel> = 1;

     label15:
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void pushTransform(org.xml.sax.Attributes)>(r4);
        goto label50;

     label16:
        $z15 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z15 != 0 goto label28;

        $z16 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rect");
        if $z16 == 0 goto label28;

        r36 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("x", r4);
        if r36 != null goto label17;

        r36 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

     label17:
        r37 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("y", r4);
        if r37 != null goto label18;

        r37 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

     label18:
        r38 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("width", r4);
        r39 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("height", r4);
        r40 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("rx", r4);
        r41 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("ry", r4);
        if r40 != null goto label20;

        if r41 != null goto label19;

        $r42 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
        r41 = $r42;
        r40 = $r42;
        goto label21;

     label19:
        r40 = r41;
        goto label21;

     label20:
        if r41 != null goto label21;

        r41 = r40;

     label21:
        $f15 = virtualinvoke r40.<java.lang.Float: float floatValue()>();
        $f16 = virtualinvoke r38.<java.lang.Float: float floatValue()>();
        $f17 = $f16 / 2.0F;
        $b8 = $f15 cmpl $f17;
        if $b8 <= 0 goto label22;

        $f18 = virtualinvoke r38.<java.lang.Float: float floatValue()>();
        $f19 = $f18 * 0.5F;
        r40 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f19);

     label22:
        $f20 = virtualinvoke r41.<java.lang.Float: float floatValue()>();
        $f21 = virtualinvoke r39.<java.lang.Float: float floatValue()>();
        $f22 = $f21 / 2.0F;
        $b9 = $f20 cmpl $f22;
        if $b9 <= 0 goto label23;

        $f23 = virtualinvoke r39.<java.lang.Float: float floatValue()>();
        $f24 = $f23 * 0.5F;
        r41 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f24);

     label23:
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void pushTransform(org.xml.sax.Attributes)>(r4);
        $r43 = new com.larvalabs.svgandroid.SVGParser$Properties;
        specialinvoke $r43.<com.larvalabs.svgandroid.SVGParser$Properties: void <init>(org.xml.sax.Attributes,com.larvalabs.svgandroid.SVGParser$1)>(r4, null);
        r44 = $r43;
        $r45 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z17 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doFill(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r44, $r45);
        if $z17 == 0 goto label25;

        $f25 = virtualinvoke r36.<java.lang.Float: float floatValue()>();
        $f26 = virtualinvoke r37.<java.lang.Float: float floatValue()>();
        $f27 = virtualinvoke r38.<java.lang.Float: float floatValue()>();
        $f28 = virtualinvoke r39.<java.lang.Float: float floatValue()>();
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float,float,float)>($f25, $f26, $f27, $f28);
        $f29 = virtualinvoke r40.<java.lang.Float: float floatValue()>();
        $b10 = $f29 cmpl 0.0F;
        if $b10 <= 0 goto label24;

        $f30 = virtualinvoke r41.<java.lang.Float: float floatValue()>();
        $b11 = $f30 cmpl 0.0F;
        if $b11 <= 0 goto label24;

        $r46 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $r47 = new android.graphics.RectF;
        $f31 = virtualinvoke r36.<java.lang.Float: float floatValue()>();
        $f32 = virtualinvoke r37.<java.lang.Float: float floatValue()>();
        $f33 = virtualinvoke r36.<java.lang.Float: float floatValue()>();
        $f34 = virtualinvoke r38.<java.lang.Float: float floatValue()>();
        $f35 = $f33 + $f34;
        $f36 = virtualinvoke r37.<java.lang.Float: float floatValue()>();
        $f37 = virtualinvoke r39.<java.lang.Float: float floatValue()>();
        $f38 = $f36 + $f37;
        specialinvoke $r47.<android.graphics.RectF: void <init>(float,float,float,float)>($f31, $f32, $f35, $f38);
        $f39 = virtualinvoke r40.<java.lang.Float: float floatValue()>();
        $f40 = virtualinvoke r41.<java.lang.Float: float floatValue()>();
        $r48 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r46.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r47, $f39, $f40, $r48);
        goto label25;

     label24:
        $r49 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $f41 = virtualinvoke r36.<java.lang.Float: float floatValue()>();
        $f42 = virtualinvoke r37.<java.lang.Float: float floatValue()>();
        $f43 = virtualinvoke r36.<java.lang.Float: float floatValue()>();
        $f44 = virtualinvoke r38.<java.lang.Float: float floatValue()>();
        $f45 = $f43 + $f44;
        $f46 = virtualinvoke r37.<java.lang.Float: float floatValue()>();
        $f47 = virtualinvoke r39.<java.lang.Float: float floatValue()>();
        $f48 = $f46 + $f47;
        $r50 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r49.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f41, $f42, $f45, $f48, $r50);

     label25:
        $r51 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z18 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doStroke(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r44, $r51);
        if $z18 == 0 goto label27;

        $f49 = virtualinvoke r40.<java.lang.Float: float floatValue()>();
        $b12 = $f49 cmpl 0.0F;
        if $b12 <= 0 goto label26;

        $f50 = virtualinvoke r41.<java.lang.Float: float floatValue()>();
        $b13 = $f50 cmpl 0.0F;
        if $b13 <= 0 goto label26;

        $r52 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $r53 = new android.graphics.RectF;
        $f51 = virtualinvoke r36.<java.lang.Float: float floatValue()>();
        $f52 = virtualinvoke r37.<java.lang.Float: float floatValue()>();
        $f53 = virtualinvoke r36.<java.lang.Float: float floatValue()>();
        $f54 = virtualinvoke r38.<java.lang.Float: float floatValue()>();
        $f55 = $f53 + $f54;
        $f56 = virtualinvoke r37.<java.lang.Float: float floatValue()>();
        $f57 = virtualinvoke r39.<java.lang.Float: float floatValue()>();
        $f58 = $f56 + $f57;
        specialinvoke $r53.<android.graphics.RectF: void <init>(float,float,float,float)>($f51, $f52, $f55, $f58);
        $f59 = virtualinvoke r40.<java.lang.Float: float floatValue()>();
        $f60 = virtualinvoke r41.<java.lang.Float: float floatValue()>();
        $r54 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r52.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r53, $f59, $f60, $r54);
        goto label27;

     label26:
        $r55 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $f61 = virtualinvoke r36.<java.lang.Float: float floatValue()>();
        $f62 = virtualinvoke r37.<java.lang.Float: float floatValue()>();
        $f63 = virtualinvoke r36.<java.lang.Float: float floatValue()>();
        $f64 = virtualinvoke r38.<java.lang.Float: float floatValue()>();
        $f65 = $f63 + $f64;
        $f66 = virtualinvoke r37.<java.lang.Float: float floatValue()>();
        $f67 = virtualinvoke r39.<java.lang.Float: float floatValue()>();
        $f68 = $f66 + $f67;
        $r56 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r55.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f61, $f62, $f65, $f68, $r56);

     label27:
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void popTransform()>();
        goto label50;

     label28:
        $z19 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z19 != 0 goto label30;

        $z20 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("line");
        if $z20 == 0 goto label30;

        r57 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("x1", r4);
        r58 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("x2", r4);
        r59 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("y1", r4);
        r60 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("y2", r4);
        $r61 = new com.larvalabs.svgandroid.SVGParser$Properties;
        specialinvoke $r61.<com.larvalabs.svgandroid.SVGParser$Properties: void <init>(org.xml.sax.Attributes,com.larvalabs.svgandroid.SVGParser$1)>(r4, null);
        r62 = $r61;
        $r63 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z21 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doStroke(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r62, $r63);
        if $z21 == 0 goto label29;

        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void pushTransform(org.xml.sax.Attributes)>(r4);
        $f69 = virtualinvoke r57.<java.lang.Float: float floatValue()>();
        $f70 = virtualinvoke r59.<java.lang.Float: float floatValue()>();
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>($f69, $f70);
        $f71 = virtualinvoke r58.<java.lang.Float: float floatValue()>();
        $f72 = virtualinvoke r60.<java.lang.Float: float floatValue()>();
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>($f71, $f72);
        $r64 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $f73 = virtualinvoke r57.<java.lang.Float: float floatValue()>();
        $f74 = virtualinvoke r59.<java.lang.Float: float floatValue()>();
        $f75 = virtualinvoke r58.<java.lang.Float: float floatValue()>();
        $f76 = virtualinvoke r60.<java.lang.Float: float floatValue()>();
        $r65 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r64.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f73, $f74, $f75, $f76, $r65);
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void popTransform()>();

     label29:
        goto label50;

     label30:
        $z22 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z22 != 0 goto label34;

        $z23 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("circle");
        if $z23 == 0 goto label34;

        r66 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("cx", r4);
        r67 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("cy", r4);
        r68 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("r", r4);
        if r66 == null goto label33;

        if r67 == null goto label33;

        if r68 == null goto label33;

        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void pushTransform(org.xml.sax.Attributes)>(r4);
        $r69 = new com.larvalabs.svgandroid.SVGParser$Properties;
        specialinvoke $r69.<com.larvalabs.svgandroid.SVGParser$Properties: void <init>(org.xml.sax.Attributes,com.larvalabs.svgandroid.SVGParser$1)>(r4, null);
        r70 = $r69;
        $r71 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z24 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doFill(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r70, $r71);
        if $z24 == 0 goto label31;

        $f77 = virtualinvoke r66.<java.lang.Float: float floatValue()>();
        $f78 = virtualinvoke r68.<java.lang.Float: float floatValue()>();
        $f79 = $f77 - $f78;
        $f80 = virtualinvoke r67.<java.lang.Float: float floatValue()>();
        $f81 = virtualinvoke r68.<java.lang.Float: float floatValue()>();
        $f82 = $f80 - $f81;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>($f79, $f82);
        $f83 = virtualinvoke r66.<java.lang.Float: float floatValue()>();
        $f84 = virtualinvoke r68.<java.lang.Float: float floatValue()>();
        $f85 = $f83 + $f84;
        $f86 = virtualinvoke r67.<java.lang.Float: float floatValue()>();
        $f87 = virtualinvoke r68.<java.lang.Float: float floatValue()>();
        $f88 = $f86 + $f87;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>($f85, $f88);
        $r72 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $f89 = virtualinvoke r66.<java.lang.Float: float floatValue()>();
        $f90 = virtualinvoke r67.<java.lang.Float: float floatValue()>();
        $f91 = virtualinvoke r68.<java.lang.Float: float floatValue()>();
        $r73 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r72.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f89, $f90, $f91, $r73);

     label31:
        $r74 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z25 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doStroke(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r70, $r74);
        if $z25 == 0 goto label32;

        $r75 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $f92 = virtualinvoke r66.<java.lang.Float: float floatValue()>();
        $f93 = virtualinvoke r67.<java.lang.Float: float floatValue()>();
        $f94 = virtualinvoke r68.<java.lang.Float: float floatValue()>();
        $r76 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r75.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f92, $f93, $f94, $r76);

     label32:
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void popTransform()>();

     label33:
        goto label50;

     label34:
        $z26 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z26 != 0 goto label38;

        $z27 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ellipse");
        if $z27 == 0 goto label38;

        r77 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("cx", r4);
        r78 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("cy", r4);
        r79 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("rx", r4);
        r80 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float access$700(java.lang.String,org.xml.sax.Attributes)>("ry", r4);
        if r77 == null goto label37;

        if r78 == null goto label37;

        if r79 == null goto label37;

        if r80 == null goto label37;

        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void pushTransform(org.xml.sax.Attributes)>(r4);
        $r81 = new com.larvalabs.svgandroid.SVGParser$Properties;
        specialinvoke $r81.<com.larvalabs.svgandroid.SVGParser$Properties: void <init>(org.xml.sax.Attributes,com.larvalabs.svgandroid.SVGParser$1)>(r4, null);
        r82 = $r81;
        $r83 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF rect>;
        $f95 = virtualinvoke r77.<java.lang.Float: float floatValue()>();
        $f96 = virtualinvoke r79.<java.lang.Float: float floatValue()>();
        $f97 = $f95 - $f96;
        $f98 = virtualinvoke r78.<java.lang.Float: float floatValue()>();
        $f99 = virtualinvoke r80.<java.lang.Float: float floatValue()>();
        $f100 = $f98 - $f99;
        $f101 = virtualinvoke r77.<java.lang.Float: float floatValue()>();
        $f102 = virtualinvoke r79.<java.lang.Float: float floatValue()>();
        $f103 = $f101 + $f102;
        $f104 = virtualinvoke r78.<java.lang.Float: float floatValue()>();
        $f105 = virtualinvoke r80.<java.lang.Float: float floatValue()>();
        $f106 = $f104 + $f105;
        virtualinvoke $r83.<android.graphics.RectF: void set(float,float,float,float)>($f97, $f100, $f103, $f106);
        $r84 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z28 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doFill(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r82, $r84);
        if $z28 == 0 goto label35;

        $f107 = virtualinvoke r77.<java.lang.Float: float floatValue()>();
        $f108 = virtualinvoke r79.<java.lang.Float: float floatValue()>();
        $f109 = $f107 - $f108;
        $f110 = virtualinvoke r78.<java.lang.Float: float floatValue()>();
        $f111 = virtualinvoke r80.<java.lang.Float: float floatValue()>();
        $f112 = $f110 - $f111;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>($f109, $f112);
        $f113 = virtualinvoke r77.<java.lang.Float: float floatValue()>();
        $f114 = virtualinvoke r79.<java.lang.Float: float floatValue()>();
        $f115 = $f113 + $f114;
        $f116 = virtualinvoke r78.<java.lang.Float: float floatValue()>();
        $f117 = virtualinvoke r80.<java.lang.Float: float floatValue()>();
        $f118 = $f116 + $f117;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(float,float)>($f115, $f118);
        $r85 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $r86 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF rect>;
        $r87 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r85.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r86, $r87);

     label35:
        $r88 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z29 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doStroke(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r82, $r88);
        if $z29 == 0 goto label36;

        $r89 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $r90 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF rect>;
        $r91 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r89.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r90, $r91);

     label36:
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void popTransform()>();

     label37:
        goto label50;

     label38:
        $z30 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z30 != 0 goto label46;

        $z31 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("polygon");
        if $z31 != 0 goto label39;

        $z32 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("polyline");
        if $z32 == 0 goto label46;

     label39:
        r92 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVGParser$NumberParse access$900(java.lang.String,org.xml.sax.Attributes)>("points", r4);
        if r92 == null goto label45;

        $r93 = new android.graphics.Path;
        specialinvoke $r93.<android.graphics.Path: void <init>()>();
        r94 = $r93;
        r95 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r92);
        $i14 = virtualinvoke r95.<java.util.ArrayList: int size()>();
        if $i14 <= 1 goto label45;

        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void pushTransform(org.xml.sax.Attributes)>(r4);
        $r96 = new com.larvalabs.svgandroid.SVGParser$Properties;
        specialinvoke $r96.<com.larvalabs.svgandroid.SVGParser$Properties: void <init>(org.xml.sax.Attributes,com.larvalabs.svgandroid.SVGParser$1)>(r4, null);
        r97 = $r96;
        $r98 = virtualinvoke r95.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r99 = (java.lang.Float) $r98;
        $f119 = virtualinvoke $r99.<java.lang.Float: float floatValue()>();
        $r100 = virtualinvoke r95.<java.util.ArrayList: java.lang.Object get(int)>(1);
        $r101 = (java.lang.Float) $r100;
        $f120 = virtualinvoke $r101.<java.lang.Float: float floatValue()>();
        virtualinvoke r94.<android.graphics.Path: void moveTo(float,float)>($f119, $f120);
        i15 = 2;

     label40:
        $i16 = virtualinvoke r95.<java.util.ArrayList: int size()>();
        if i15 >= $i16 goto label41;

        $r102 = virtualinvoke r95.<java.util.ArrayList: java.lang.Object get(int)>(i15);
        $r103 = (java.lang.Float) $r102;
        f121 = virtualinvoke $r103.<java.lang.Float: float floatValue()>();
        $i17 = i15 + 1;
        $r104 = virtualinvoke r95.<java.util.ArrayList: java.lang.Object get(int)>($i17);
        $r105 = (java.lang.Float) $r104;
        f122 = virtualinvoke $r105.<java.lang.Float: float floatValue()>();
        virtualinvoke r94.<android.graphics.Path: void lineTo(float,float)>(f121, f122);
        i15 = i15 + 2;
        goto label40;

     label41:
        $z33 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("polygon");
        if $z33 == 0 goto label42;

        virtualinvoke r94.<android.graphics.Path: void close()>();

     label42:
        $r106 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z34 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doFill(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r97, $r106);
        if $z34 == 0 goto label43;

        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(android.graphics.Path)>(r94);
        $r107 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $r108 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r107.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r94, $r108);

     label43:
        $r109 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z35 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doStroke(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r97, $r109);
        if $z35 == 0 goto label44;

        $r110 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $r111 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r110.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r94, $r111);

     label44:
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void popTransform()>();

     label45:
        goto label50;

     label46:
        $z36 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z36 != 0 goto label49;

        $z37 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("path");
        if $z37 == 0 goto label49;

        $r112 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String access$200(java.lang.String,org.xml.sax.Attributes)>("d", r4);
        r113 = staticinvoke <com.larvalabs.svgandroid.SVGParser: android.graphics.Path access$1000(java.lang.String)>($r112);
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void pushTransform(org.xml.sax.Attributes)>(r4);
        $r114 = new com.larvalabs.svgandroid.SVGParser$Properties;
        specialinvoke $r114.<com.larvalabs.svgandroid.SVGParser$Properties: void <init>(org.xml.sax.Attributes,com.larvalabs.svgandroid.SVGParser$1)>(r4, null);
        r115 = $r114;
        $r116 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z38 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doFill(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r115, $r116);
        if $z38 == 0 goto label47;

        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void doLimits(android.graphics.Path)>(r113);
        $r117 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $r118 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r117.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r113, $r118);

     label47:
        $r119 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $z39 = specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean doStroke(com.larvalabs.svgandroid.SVGParser$Properties,java.util.HashMap)>(r115, $r119);
        if $z39 == 0 goto label48;

        $r120 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Canvas canvas>;
        $r121 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Paint paint>;
        virtualinvoke $r120.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r113, $r121);

     label48:
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void popTransform()>();
        goto label50;

     label49:
        $z40 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z40 != 0 goto label50;

     label50:
        return;
    }

    public void characters(char[], int, int)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        char[] r1;
        int i0, i1;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: char[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        java.lang.String r1, r2, r3, $r8, $r10, $r13, $r43, $r47, $r51, $r53, $r56, $r76, $r79, $r96, $r100;
        com.larvalabs.svgandroid.SVGParser$Gradient r4, $r7, $r9, $r12, $r15, $r16, $r17, $r20, $r24, $r27, $r32, $r33, $r34, $r35, $r37, $r39, $r42, $r46, $r48, $r50, $r52, $r55, r58, $r59, $r60, $r61, $r64, $r68, $r71, $r75, $r78, r81, $r82, $r83, $r85, $r86, $r87, $r90, $r92, $r95, $r99, $r101;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16;
        android.graphics.Shader$TileMode $r5, $r88;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.graphics.Picture $r6;
        java.util.HashMap $r11, $r41, $r45, $r54, $r77, $r94, $r98, $r104;
        java.lang.Object $r14, $r22, $r29, $r57, $r66, $r73, $r80;
        java.util.ArrayList $r18, $r21, $r25, $r28, $r62, $r65, $r69, $r72;
        int[] r19, r63;
        java.lang.Integer $r23, $r67;
        float[] r26, r70;
        java.lang.Float $r30, $r74;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.graphics.LinearGradient $r31, r36;
        android.graphics.Matrix $r38, $r40, $r91, $r93;
        android.graphics.RadialGradient $r84, r89;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("svg");
        if $z0 == 0 goto label0;

        $r6 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.Picture picture>;
        virtualinvoke $r6.<android.graphics.Picture: void endRecording()>();
        goto label18;

     label0:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("linearGradient");
        if $z1 == 0 goto label7;

        $r7 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r8 = $r7.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id>;
        if $r8 == null goto label18;

        $r9 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r10 = $r9.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String xlink>;
        if $r10 == null goto label1;

        $r11 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientRefMap>;
        $r12 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r13 = $r12.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String xlink>;
        $r14 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);
        r4 = (com.larvalabs.svgandroid.SVGParser$Gradient) $r14;
        if r4 == null goto label1;

        $r15 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r16 = virtualinvoke r4.<com.larvalabs.svgandroid.SVGParser$Gradient: com.larvalabs.svgandroid.SVGParser$Gradient createChild(com.larvalabs.svgandroid.SVGParser$Gradient)>($r15);
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient> = $r16;

     label1:
        $r17 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r18 = $r17.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList colors>;
        $i2 = virtualinvoke $r18.<java.util.ArrayList: int size()>();
        r19 = newarray (int)[$i2];
        i0 = 0;

     label2:
        $i3 = lengthof r19;
        if i0 >= $i3 goto label3;

        $r20 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r21 = $r20.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList colors>;
        $r22 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        $r23 = (java.lang.Integer) $r22;
        $i4 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();
        r19[i0] = $i4;
        i0 = i0 + 1;
        goto label2;

     label3:
        $r24 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r25 = $r24.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList positions>;
        $i5 = virtualinvoke $r25.<java.util.ArrayList: int size()>();
        r26 = newarray (float)[$i5];
        i1 = 0;

     label4:
        $i6 = lengthof r26;
        if i1 >= $i6 goto label5;

        $r27 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r28 = $r27.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList positions>;
        $r29 = virtualinvoke $r28.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        $r30 = (java.lang.Float) $r29;
        $f0 = virtualinvoke $r30.<java.lang.Float: float floatValue()>();
        r26[i1] = $f0;
        i1 = i1 + 1;
        goto label4;

     label5:
        $r31 = new android.graphics.LinearGradient;
        $r32 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $f1 = $r32.<com.larvalabs.svgandroid.SVGParser$Gradient: float x1>;
        $r33 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $f2 = $r33.<com.larvalabs.svgandroid.SVGParser$Gradient: float y1>;
        $r34 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $f3 = $r34.<com.larvalabs.svgandroid.SVGParser$Gradient: float x2>;
        $r35 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $f4 = $r35.<com.larvalabs.svgandroid.SVGParser$Gradient: float y2>;
        $r5 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;
        specialinvoke $r31.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f1, $f2, $f3, $f4, r19, r26, $r5);
        r36 = $r31;
        $r37 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r38 = $r37.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        if $r38 == null goto label6;

        $r39 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r40 = $r39.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        virtualinvoke r36.<android.graphics.LinearGradient: void setLocalMatrix(android.graphics.Matrix)>($r40);

     label6:
        $r41 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $r42 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r43 = $r42.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id>;
        virtualinvoke $r41.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, r36);
        $r45 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientRefMap>;
        $r46 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r47 = $r46.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id>;
        $r48 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        virtualinvoke $r45.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, $r48);
        goto label18;

     label7:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("radialGradient");
        if $z2 == 0 goto label15;

        $r50 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r51 = $r50.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id>;
        if $r51 == null goto label18;

        $r52 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r53 = $r52.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String xlink>;
        if $r53 == null goto label8;

        $r54 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientRefMap>;
        $r55 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r56 = $r55.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String xlink>;
        $r57 = virtualinvoke $r54.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r56);
        r58 = (com.larvalabs.svgandroid.SVGParser$Gradient) $r57;
        if r58 == null goto label8;

        $r59 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r60 = virtualinvoke r58.<com.larvalabs.svgandroid.SVGParser$Gradient: com.larvalabs.svgandroid.SVGParser$Gradient createChild(com.larvalabs.svgandroid.SVGParser$Gradient)>($r59);
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient> = $r60;

     label8:
        $r61 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r62 = $r61.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList colors>;
        $i7 = virtualinvoke $r62.<java.util.ArrayList: int size()>();
        r63 = newarray (int)[$i7];
        i8 = 0;

     label9:
        $i9 = lengthof r63;
        if i8 >= $i9 goto label10;

        $r64 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r65 = $r64.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList colors>;
        $r66 = virtualinvoke $r65.<java.util.ArrayList: java.lang.Object get(int)>(i8);
        $r67 = (java.lang.Integer) $r66;
        $i10 = virtualinvoke $r67.<java.lang.Integer: int intValue()>();
        r63[i8] = $i10;
        i8 = i8 + 1;
        goto label9;

     label10:
        $r68 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r69 = $r68.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList positions>;
        $i11 = virtualinvoke $r69.<java.util.ArrayList: int size()>();
        r70 = newarray (float)[$i11];
        i12 = 0;

     label11:
        $i13 = lengthof r70;
        if i12 >= $i13 goto label12;

        $r71 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r72 = $r71.<com.larvalabs.svgandroid.SVGParser$Gradient: java.util.ArrayList positions>;
        $r73 = virtualinvoke $r72.<java.util.ArrayList: java.lang.Object get(int)>(i12);
        $r74 = (java.lang.Float) $r73;
        $f5 = virtualinvoke $r74.<java.lang.Float: float floatValue()>();
        r70[i12] = $f5;
        i12 = i12 + 1;
        goto label11;

     label12:
        $r75 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r76 = $r75.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String xlink>;
        if $r76 == null goto label13;

        $r77 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientRefMap>;
        $r78 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r79 = $r78.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String xlink>;
        $r80 = virtualinvoke $r77.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r79);
        r81 = (com.larvalabs.svgandroid.SVGParser$Gradient) $r80;
        if r81 == null goto label13;

        $r82 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r83 = virtualinvoke r81.<com.larvalabs.svgandroid.SVGParser$Gradient: com.larvalabs.svgandroid.SVGParser$Gradient createChild(com.larvalabs.svgandroid.SVGParser$Gradient)>($r82);
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient> = $r83;

     label13:
        $r84 = new android.graphics.RadialGradient;
        $r85 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $f6 = $r85.<com.larvalabs.svgandroid.SVGParser$Gradient: float x>;
        $r86 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $f7 = $r86.<com.larvalabs.svgandroid.SVGParser$Gradient: float y>;
        $r87 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $f8 = $r87.<com.larvalabs.svgandroid.SVGParser$Gradient: float radius>;
        $r88 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;
        specialinvoke $r84.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f6, $f7, $f8, r63, r70, $r88);
        r89 = $r84;
        $r90 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r91 = $r90.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        if $r91 == null goto label14;

        $r92 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r93 = $r92.<com.larvalabs.svgandroid.SVGParser$Gradient: android.graphics.Matrix matrix>;
        virtualinvoke r89.<android.graphics.RadialGradient: void setLocalMatrix(android.graphics.Matrix)>($r93);

     label14:
        $r94 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        $r95 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r96 = $r95.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id>;
        virtualinvoke $r94.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r96, r89);
        $r98 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientRefMap>;
        $r99 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        $r100 = $r99.<com.larvalabs.svgandroid.SVGParser$Gradient: java.lang.String id>;
        $r101 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: com.larvalabs.svgandroid.SVGParser$Gradient gradient>;
        virtualinvoke $r98.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r100, $r101);
        goto label18;

     label15:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("g");
        if $z3 == 0 goto label18;

        $z4 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean boundsMode>;
        if $z4 == 0 goto label16;

        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean boundsMode> = 0;

     label16:
        $z5 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden>;
        if $z5 == 0 goto label17;

        $i14 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: int hiddenLevel>;
        $i15 = $i14 - 1;
        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: int hiddenLevel> = $i15;
        $i16 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: int hiddenLevel>;
        if $i16 != 0 goto label17;

        r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: boolean hidden> = 0;

     label17:
        $r104 = r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: java.util.HashMap gradientMap>;
        virtualinvoke $r104.<java.util.HashMap: void clear()>();
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void popTransform()>();

     label18:
        return;
    }

    void <init>(android.graphics.Picture, com.larvalabs.svgandroid.SVGParser$1)
    {
        com.larvalabs.svgandroid.SVGParser$SVGHandler r0;
        android.graphics.Picture r1;
        com.larvalabs.svgandroid.SVGParser$1 r2;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$SVGHandler;
        r1 := @parameter0: android.graphics.Picture;
        r2 := @parameter1: com.larvalabs.svgandroid.SVGParser$1;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void <init>(android.graphics.Picture)>(r1);
        return;
    }
}
class com.larvalabs.svgandroid.SVGParser$StyleSet extends java.lang.Object
{
    java.util.HashMap styleMap;

    private void <init>(java.lang.String)
    {
        com.larvalabs.svgandroid.SVGParser$StyleSet r0;
        java.lang.String r1, r5, $r8, $r9;
        java.util.HashMap $r2, $r7;
        java.lang.String[] r3, r4, r6;
        int i0, i1, $i2;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$StyleSet;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r0.<com.larvalabs.svgandroid.SVGParser$StyleSet: java.util.HashMap styleMap> = $r2;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");
        r4 = r3;
        i0 = lengthof r4;
        i1 = 0;

     label0:
        if i1 >= i0 goto label2;

        r5 = r4[i1];
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");
        $i2 = lengthof r6;
        if $i2 != 2 goto label1;

        $r7 = r0.<com.larvalabs.svgandroid.SVGParser$StyleSet: java.util.HashMap styleMap>;
        $r8 = r6[0];
        $r9 = r6[1];
        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return;
    }

    public java.lang.String getStyle(java.lang.String)
    {
        com.larvalabs.svgandroid.SVGParser$StyleSet r0;
        java.lang.String r1, $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$StyleSet;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<com.larvalabs.svgandroid.SVGParser$StyleSet: java.util.HashMap styleMap>;
        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (java.lang.String) $r3;
        return $r4;
    }

    void <init>(java.lang.String, com.larvalabs.svgandroid.SVGParser$1)
    {
        com.larvalabs.svgandroid.SVGParser$StyleSet r0;
        java.lang.String r1;
        com.larvalabs.svgandroid.SVGParser$1 r2;

        r0 := @this: com.larvalabs.svgandroid.SVGParser$StyleSet;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: com.larvalabs.svgandroid.SVGParser$1;
        specialinvoke r0.<com.larvalabs.svgandroid.SVGParser$StyleSet: void <init>(java.lang.String)>(r1);
        return;
    }
}
public class com.larvalabs.svgandroid.SVGParser extends java.lang.Object
{
    static final java.lang.String TAG;

    public void <init>()
    {
        com.larvalabs.svgandroid.SVGParser r0;

        r0 := @this: com.larvalabs.svgandroid.SVGParser;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static com.larvalabs.svgandroid.SVG getSVGFromInputStream(java.io.InputStream) throws com.larvalabs.svgandroid.SVGParseException
    {
        java.io.InputStream r0;
        java.lang.Integer $r1, $r2;
        com.larvalabs.svgandroid.SVG $r3;

        r0 := @parameter0: java.io.InputStream;
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        $r3 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG parse(java.io.InputStream,java.lang.Integer,java.lang.Integer,boolean)>(r0, $r1, $r2, 0);
        return $r3;
    }

    public static com.larvalabs.svgandroid.SVG getSVGFromString(java.lang.String) throws com.larvalabs.svgandroid.SVGParseException
    {
        java.lang.String r0;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;
        java.lang.Integer $r3, $r4;
        com.larvalabs.svgandroid.SVG $r5;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.io.ByteArrayInputStream;
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();
        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        $r5 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG parse(java.io.InputStream,java.lang.Integer,java.lang.Integer,boolean)>($r1, $r3, $r4, 0);
        return $r5;
    }

    public static com.larvalabs.svgandroid.SVG getSVGFromResource(android.content.res.Resources, int) throws com.larvalabs.svgandroid.SVGParseException
    {
        android.content.res.Resources r0;
        int i0;
        java.io.InputStream $r1;
        java.lang.Integer $r2, $r3;
        com.larvalabs.svgandroid.SVG $r4;

        r0 := @parameter0: android.content.res.Resources;
        i0 := @parameter1: int;
        $r1 = virtualinvoke r0.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(i0);
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        $r4 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG parse(java.io.InputStream,java.lang.Integer,java.lang.Integer,boolean)>($r1, $r2, $r3, 0);
        return $r4;
    }

    public static com.larvalabs.svgandroid.SVG getSVGFromAsset(android.content.res.AssetManager, java.lang.String) throws com.larvalabs.svgandroid.SVGParseException, java.io.IOException
    {
        android.content.res.AssetManager r0;
        java.lang.String r1;
        java.io.InputStream r2;
        com.larvalabs.svgandroid.SVG r3;

        r0 := @parameter0: android.content.res.AssetManager;
        r1 := @parameter1: java.lang.String;
        r2 = virtualinvoke r0.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(r1);
        r3 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG getSVGFromInputStream(java.io.InputStream)>(r2);
        virtualinvoke r2.<java.io.InputStream: void close()>();
        return r3;
    }

    public static com.larvalabs.svgandroid.SVG getSVGFromInputStream(java.io.InputStream, int, int) throws com.larvalabs.svgandroid.SVGParseException
    {
        java.io.InputStream r0;
        int i0, i1;
        java.lang.Integer $r1, $r2;
        com.larvalabs.svgandroid.SVG $r3;

        r0 := @parameter0: java.io.InputStream;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r3 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG parse(java.io.InputStream,java.lang.Integer,java.lang.Integer,boolean)>(r0, $r1, $r2, 0);
        return $r3;
    }

    public static com.larvalabs.svgandroid.SVG getSVGFromString(java.lang.String, int, int) throws com.larvalabs.svgandroid.SVGParseException
    {
        java.lang.String r0;
        int i0, i1;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;
        java.lang.Integer $r3, $r4;
        com.larvalabs.svgandroid.SVG $r5;

        r0 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = new java.io.ByteArrayInputStream;
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();
        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r5 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG parse(java.io.InputStream,java.lang.Integer,java.lang.Integer,boolean)>($r1, $r3, $r4, 0);
        return $r5;
    }

    public static com.larvalabs.svgandroid.SVG getSVGFromResource(android.content.res.Resources, int, int, int) throws com.larvalabs.svgandroid.SVGParseException
    {
        android.content.res.Resources r0;
        int i0, i1, i2;
        java.io.InputStream $r1;
        java.lang.Integer $r2, $r3;
        com.larvalabs.svgandroid.SVG $r4;

        r0 := @parameter0: android.content.res.Resources;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r1 = virtualinvoke r0.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(i0);
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r4 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG parse(java.io.InputStream,java.lang.Integer,java.lang.Integer,boolean)>($r1, $r2, $r3, 0);
        return $r4;
    }

    public static com.larvalabs.svgandroid.SVG getSVGFromAsset(android.content.res.AssetManager, java.lang.String, int, int) throws com.larvalabs.svgandroid.SVGParseException, java.io.IOException
    {
        android.content.res.AssetManager r0;
        java.lang.String r1;
        int i0, i1;
        java.io.InputStream r2;
        com.larvalabs.svgandroid.SVG r3;

        r0 := @parameter0: android.content.res.AssetManager;
        r1 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        r2 = virtualinvoke r0.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(r1);
        r3 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG getSVGFromInputStream(java.io.InputStream,int,int)>(r2, i0, i1);
        virtualinvoke r2.<java.io.InputStream: void close()>();
        return r3;
    }

    public static android.graphics.Path parsePath(java.lang.String)
    {
        java.lang.String r0;
        android.graphics.Path $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <com.larvalabs.svgandroid.SVGParser: android.graphics.Path doPath(java.lang.String)>(r0);
        return $r1;
    }

    private static com.larvalabs.svgandroid.SVG parse(java.io.InputStream, java.lang.Integer, java.lang.Integer, boolean) throws com.larvalabs.svgandroid.SVGParseException
    {
        java.io.InputStream r0;
        java.lang.Integer r1, r2;
        boolean z0, $z1;
        javax.xml.parsers.SAXParserFactory r3;
        javax.xml.parsers.SAXParser r4;
        org.xml.sax.XMLReader r5;
        android.graphics.Picture r6, $r9;
        com.larvalabs.svgandroid.SVGParser$SVGHandler r7, $r10;
        com.larvalabs.svgandroid.SVG r8, $r12;
        org.xml.sax.InputSource $r11;
        android.graphics.RectF $r13, $r14, $r15;
        float $f0;
        java.lang.Exception $r17, r18;
        com.larvalabs.svgandroid.SVGParseException $r19;

        r0 := @parameter0: java.io.InputStream;
        r1 := @parameter1: java.lang.Integer;
        r2 := @parameter2: java.lang.Integer;
        z0 := @parameter3: boolean;

     label0:
        r3 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();
        r4 = virtualinvoke r3.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();
        r5 = virtualinvoke r4.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();
        $r9 = new android.graphics.Picture;
        specialinvoke $r9.<android.graphics.Picture: void <init>()>();
        r6 = $r9;
        $r10 = new com.larvalabs.svgandroid.SVGParser$SVGHandler;
        specialinvoke $r10.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void <init>(android.graphics.Picture,com.larvalabs.svgandroid.SVGParser$1)>(r6, null);
        r7 = $r10;
        virtualinvoke r7.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void setColorSwap(java.lang.Integer,java.lang.Integer)>(r1, r2);
        virtualinvoke r7.<com.larvalabs.svgandroid.SVGParser$SVGHandler: void setWhiteMode(boolean)>(z0);
        interfaceinvoke r5.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r7);
        $r11 = new org.xml.sax.InputSource;
        specialinvoke $r11.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r0);
        interfaceinvoke r5.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r11);
        $r12 = new com.larvalabs.svgandroid.SVG;
        $r13 = r7.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF bounds>;
        specialinvoke $r12.<com.larvalabs.svgandroid.SVG: void <init>(android.graphics.Picture,android.graphics.RectF)>(r6, $r13);
        r8 = $r12;
        $r14 = r7.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        $f0 = $r14.<android.graphics.RectF: float top>;
        $z1 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f0);
        if $z1 != 0 goto label1;

        $r15 = r7.<com.larvalabs.svgandroid.SVGParser$SVGHandler: android.graphics.RectF limits>;
        virtualinvoke r8.<com.larvalabs.svgandroid.SVG: void setLimits(android.graphics.RectF)>($r15);

     label1:
        return r8;

     label2:
        $r17 := @caughtexception;
        r18 = $r17;
        $r19 = new com.larvalabs.svgandroid.SVGParseException;
        specialinvoke $r19.<com.larvalabs.svgandroid.SVGParseException: void <init>(java.lang.Throwable)>(r18);
        throw $r19;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    private static com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String)
    {
        java.lang.String r0, r2, $r5, r7, $r8, r10;
        int i0, i1, i2, $i4, i5, $i6, $i7;
        java.util.ArrayList r1, $r4;
        boolean z0;
        char c3;
        java.lang.Float r3, r9, $r11;
        float $f0, $f1, $f2;
        com.larvalabs.svgandroid.SVGParser$NumberParse $r6, $r14;
        java.lang.NumberFormatException $r12, r13;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        i1 = 0;
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r1 = $r4;
        z0 = 0;
        i2 = 1;

     label0:
        if i2 >= i0 goto label9;

        if z0 == 0 goto label1;

        z0 = 0;
        goto label8;

     label1:
        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);
        tableswitch(c3)
        {
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label8;
            case 12: goto label8;
            case 13: goto label8;
            case 14: goto label8;
            case 15: goto label8;
            case 16: goto label8;
            case 17: goto label8;
            case 18: goto label8;
            case 19: goto label8;
            case 20: goto label8;
            case 21: goto label8;
            case 22: goto label8;
            case 23: goto label8;
            case 24: goto label8;
            case 25: goto label8;
            case 26: goto label8;
            case 27: goto label8;
            case 28: goto label8;
            case 29: goto label8;
            case 30: goto label8;
            case 31: goto label8;
            case 32: goto label4;
            case 33: goto label8;
            case 34: goto label8;
            case 35: goto label8;
            case 36: goto label8;
            case 37: goto label8;
            case 38: goto label8;
            case 39: goto label8;
            case 40: goto label8;
            case 41: goto label2;
            case 42: goto label8;
            case 43: goto label8;
            case 44: goto label4;
            case 45: goto label8;
            case 46: goto label8;
            case 47: goto label8;
            case 48: goto label8;
            case 49: goto label8;
            case 50: goto label8;
            case 51: goto label8;
            case 52: goto label8;
            case 53: goto label8;
            case 54: goto label8;
            case 55: goto label8;
            case 56: goto label8;
            case 57: goto label8;
            case 58: goto label8;
            case 59: goto label8;
            case 60: goto label8;
            case 61: goto label8;
            case 62: goto label8;
            case 63: goto label8;
            case 64: goto label8;
            case 65: goto label2;
            case 66: goto label8;
            case 67: goto label2;
            case 68: goto label8;
            case 69: goto label8;
            case 70: goto label8;
            case 71: goto label8;
            case 72: goto label2;
            case 73: goto label8;
            case 74: goto label8;
            case 75: goto label8;
            case 76: goto label2;
            case 77: goto label2;
            case 78: goto label8;
            case 79: goto label8;
            case 80: goto label8;
            case 81: goto label2;
            case 82: goto label8;
            case 83: goto label2;
            case 84: goto label2;
            case 85: goto label8;
            case 86: goto label2;
            case 87: goto label8;
            case 88: goto label8;
            case 89: goto label8;
            case 90: goto label2;
            case 91: goto label8;
            case 92: goto label8;
            case 93: goto label8;
            case 94: goto label8;
            case 95: goto label8;
            case 96: goto label8;
            case 97: goto label2;
            case 98: goto label8;
            case 99: goto label2;
            case 100: goto label8;
            case 101: goto label8;
            case 102: goto label8;
            case 103: goto label8;
            case 104: goto label2;
            case 105: goto label8;
            case 106: goto label8;
            case 107: goto label8;
            case 108: goto label2;
            case 109: goto label2;
            case 110: goto label8;
            case 111: goto label8;
            case 112: goto label8;
            case 113: goto label2;
            case 114: goto label8;
            case 115: goto label2;
            case 116: goto label2;
            case 117: goto label8;
            case 118: goto label2;
            case 119: goto label8;
            case 120: goto label8;
            case 121: goto label8;
            case 122: goto label2;
            default: goto label8;
        };

     label2:
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);
        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();
        $i4 = virtualinvoke $r5.<java.lang.String: int length()>();
        if $i4 <= 0 goto label3;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);
        r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label3:
        i5 = i2;
        $r6 = new com.larvalabs.svgandroid.SVGParser$NumberParse;
        specialinvoke $r6.<com.larvalabs.svgandroid.SVGParser$NumberParse: void <init>(java.util.ArrayList,int)>(r1, i5);
        return $r6;

     label4:
        r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);
        $r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();
        $i6 = virtualinvoke $r8.<java.lang.String: int length()>();
        if $i6 <= 0 goto label7;

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r7);
        r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);
        if c3 != 45 goto label5;

        i1 = i2;
        goto label6;

     label5:
        i1 = i2 + 1;
        z0 = 1;

     label6:
        goto label8;

     label7:
        i1 = i1 + 1;
        goto label8;

     label8:
        i2 = i2 + 1;
        goto label0;

     label9:
        r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i1);
        $i7 = virtualinvoke r10.<java.lang.String: int length()>();
        if $i7 <= 0 goto label14;

     label10:
        $f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r10);
        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label11:
        goto label13;

     label12:
        $r12 := @caughtexception;
        r13 = $r12;

     label13:
        i1 = virtualinvoke r0.<java.lang.String: int length()>();

     label14:
        $r14 = new com.larvalabs.svgandroid.SVGParser$NumberParse;
        specialinvoke $r14.<com.larvalabs.svgandroid.SVGParser$NumberParse: void <init>(java.util.ArrayList,int)>(r1, i1);
        return $r14;

        catch java.lang.NumberFormatException from label10 to label11 with label12;
    }

    private static android.graphics.Matrix parseTransform(java.lang.String)
    {
        java.lang.String r0, $r5, $r6, $r28, $r29, $r40, $r41, $r53, $r54, $r62, $r63, $r71, $r72;
        com.larvalabs.svgandroid.SVGParser$NumberParse r1, r30, r42, r55, r64, r73;
        android.graphics.Matrix r2, r3, r4, $r8, $r39, $r51, r52, $r60, r61, $r69, r70, $r85;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, f7, f8, f9, f10, $f11, f12, $f13, f14, f15, f16, $f17, $f18;
        boolean $z0, $z1, $z3, $z5, $z7, $z9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.util.ArrayList $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r31, $r32, $r35, $r36, $r43, $r44, $r47, $r48, $r56, $r57, $r65, $r66, $r74, $r75, $r78, $r79, $r82;
        float[] $r9;
        java.lang.Object $r11, $r14, $r17, $r20, $r23, $r26, $r33, $r37, $r45, $r49, $r58, $r67, $r76, $r80, $r83;
        java.lang.Float $r12, $r15, $r18, $r21, $r24, $r27, $r34, $r38, $r46, $r50, $r59, $r68, $r77, $r81, $r84;
        double $d0, $d1, $d2, $d3;

        r0 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("matrix(");
        if $z0 == 0 goto label1;

        $r5 = "matrix(";
        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();
        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);
        r1 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String)>($r6);
        $r7 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r1);
        $i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();
        if $i1 != 6 goto label0;

        $r8 = new android.graphics.Matrix;
        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();
        r2 = $r8;
        $r9 = newarray (float)[9];
        $r10 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r1);
        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r12 = (java.lang.Float) $r11;
        $f1 = virtualinvoke $r12.<java.lang.Float: float floatValue()>();
        $r9[0] = $f1;
        $r13 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r1);
        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(2);
        $r15 = (java.lang.Float) $r14;
        $f2 = virtualinvoke $r15.<java.lang.Float: float floatValue()>();
        $r9[1] = $f2;
        $r16 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r1);
        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(4);
        $r18 = (java.lang.Float) $r17;
        $f3 = virtualinvoke $r18.<java.lang.Float: float floatValue()>();
        $r9[2] = $f3;
        $r19 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r1);
        $r20 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(1);
        $r21 = (java.lang.Float) $r20;
        $f4 = virtualinvoke $r21.<java.lang.Float: float floatValue()>();
        $r9[3] = $f4;
        $r22 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r1);
        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(3);
        $r24 = (java.lang.Float) $r23;
        $f5 = virtualinvoke $r24.<java.lang.Float: float floatValue()>();
        $r9[4] = $f5;
        $r25 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r1);
        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(5);
        $r27 = (java.lang.Float) $r26;
        $f6 = virtualinvoke $r27.<java.lang.Float: float floatValue()>();
        $r9[5] = $f6;
        $r9[6] = 0.0F;
        $r9[7] = 0.0F;
        $r9[8] = 1.0F;
        virtualinvoke r2.<android.graphics.Matrix: void setValues(float[])>($r9);
        return r2;

     label0:
        goto label13;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("translate(");
        if $z1 == 0 goto label4;

        $r28 = "translate(";
        $i2 = virtualinvoke $r28.<java.lang.String: int length()>();
        $r29 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);
        r30 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String)>($r29);
        $r31 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r30);
        $i3 = virtualinvoke $r31.<java.util.ArrayList: int size()>();
        if $i3 <= 0 goto label3;

        $r32 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r30);
        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r34 = (java.lang.Float) $r33;
        f7 = virtualinvoke $r34.<java.lang.Float: float floatValue()>();
        f0 = 0.0F;
        $r35 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r30);
        $i4 = virtualinvoke $r35.<java.util.ArrayList: int size()>();
        if $i4 <= 1 goto label2;

        $r36 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r30);
        $r37 = virtualinvoke $r36.<java.util.ArrayList: java.lang.Object get(int)>(1);
        $r38 = (java.lang.Float) $r37;
        f0 = virtualinvoke $r38.<java.lang.Float: float floatValue()>();

     label2:
        $r39 = new android.graphics.Matrix;
        specialinvoke $r39.<android.graphics.Matrix: void <init>()>();
        r3 = $r39;
        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>(f7, f0);
        return r3;

     label3:
        goto label13;

     label4:
        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("scale(");
        if $z3 == 0 goto label7;

        $r40 = "scale(";
        $i5 = virtualinvoke $r40.<java.lang.String: int length()>();
        $r41 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i5);
        r42 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String)>($r41);
        $r43 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r42);
        $i6 = virtualinvoke $r43.<java.util.ArrayList: int size()>();
        if $i6 <= 0 goto label6;

        $r44 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r42);
        $r45 = virtualinvoke $r44.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r46 = (java.lang.Float) $r45;
        f8 = virtualinvoke $r46.<java.lang.Float: float floatValue()>();
        f9 = 0.0F;
        $r47 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r42);
        $i7 = virtualinvoke $r47.<java.util.ArrayList: int size()>();
        if $i7 <= 1 goto label5;

        $r48 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r42);
        $r49 = virtualinvoke $r48.<java.util.ArrayList: java.lang.Object get(int)>(1);
        $r50 = (java.lang.Float) $r49;
        f9 = virtualinvoke $r50.<java.lang.Float: float floatValue()>();

     label5:
        $r51 = new android.graphics.Matrix;
        specialinvoke $r51.<android.graphics.Matrix: void <init>()>();
        r52 = $r51;
        virtualinvoke r52.<android.graphics.Matrix: boolean postScale(float,float)>(f8, f9);
        return r52;

     label6:
        goto label13;

     label7:
        $z5 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("skewX(");
        if $z5 == 0 goto label9;

        $r53 = "skewX(";
        $i8 = virtualinvoke $r53.<java.lang.String: int length()>();
        $r54 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i8);
        r55 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String)>($r54);
        $r56 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r55);
        $i9 = virtualinvoke $r56.<java.util.ArrayList: int size()>();
        if $i9 <= 0 goto label8;

        $r57 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r55);
        $r58 = virtualinvoke $r57.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r59 = (java.lang.Float) $r58;
        f10 = virtualinvoke $r59.<java.lang.Float: float floatValue()>();
        $r60 = new android.graphics.Matrix;
        specialinvoke $r60.<android.graphics.Matrix: void <init>()>();
        r61 = $r60;
        $d0 = (double) f10;
        $d1 = staticinvoke <java.lang.Math: double tan(double)>($d0);
        $f11 = (float) $d1;
        virtualinvoke r61.<android.graphics.Matrix: boolean postSkew(float,float)>($f11, 0.0F);
        return r61;

     label8:
        goto label13;

     label9:
        $z7 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("skewY(");
        if $z7 == 0 goto label11;

        $r62 = "skewY(";
        $i10 = virtualinvoke $r62.<java.lang.String: int length()>();
        $r63 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i10);
        r64 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String)>($r63);
        $r65 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r64);
        $i11 = virtualinvoke $r65.<java.util.ArrayList: int size()>();
        if $i11 <= 0 goto label10;

        $r66 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r64);
        $r67 = virtualinvoke $r66.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r68 = (java.lang.Float) $r67;
        f12 = virtualinvoke $r68.<java.lang.Float: float floatValue()>();
        $r69 = new android.graphics.Matrix;
        specialinvoke $r69.<android.graphics.Matrix: void <init>()>();
        r70 = $r69;
        $d2 = (double) f12;
        $d3 = staticinvoke <java.lang.Math: double tan(double)>($d2);
        $f13 = (float) $d3;
        virtualinvoke r70.<android.graphics.Matrix: boolean postSkew(float,float)>(0.0F, $f13);
        return r70;

     label10:
        goto label13;

     label11:
        $z9 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("rotate(");
        if $z9 == 0 goto label13;

        $r71 = "rotate(";
        $i12 = virtualinvoke $r71.<java.lang.String: int length()>();
        $r72 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i12);
        r73 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String)>($r72);
        $r74 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r73);
        $i13 = virtualinvoke $r74.<java.util.ArrayList: int size()>();
        if $i13 <= 0 goto label13;

        $r75 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r73);
        $r76 = virtualinvoke $r75.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r77 = (java.lang.Float) $r76;
        f14 = virtualinvoke $r77.<java.lang.Float: float floatValue()>();
        f15 = 0.0F;
        f16 = 0.0F;
        $r78 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r73);
        $i14 = virtualinvoke $r78.<java.util.ArrayList: int size()>();
        if $i14 <= 2 goto label12;

        $r79 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r73);
        $r80 = virtualinvoke $r79.<java.util.ArrayList: java.lang.Object get(int)>(1);
        $r81 = (java.lang.Float) $r80;
        f15 = virtualinvoke $r81.<java.lang.Float: float floatValue()>();
        $r82 = staticinvoke <com.larvalabs.svgandroid.SVGParser$NumberParse: java.util.ArrayList access$100(com.larvalabs.svgandroid.SVGParser$NumberParse)>(r73);
        $r83 = virtualinvoke $r82.<java.util.ArrayList: java.lang.Object get(int)>(2);
        $r84 = (java.lang.Float) $r83;
        f16 = virtualinvoke $r84.<java.lang.Float: float floatValue()>();

     label12:
        $r85 = new android.graphics.Matrix;
        specialinvoke $r85.<android.graphics.Matrix: void <init>()>();
        r4 = $r85;
        virtualinvoke r4.<android.graphics.Matrix: boolean postTranslate(float,float)>(f15, f16);
        virtualinvoke r4.<android.graphics.Matrix: boolean postRotate(float)>(f14);
        $f17 = neg f15;
        $f18 = neg f16;
        virtualinvoke r4.<android.graphics.Matrix: boolean postTranslate(float,float)>($f17, $f18);
        return r4;

     label13:
        return null;
    }

    private static android.graphics.Path doPath(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i3, $i4, $i5, i6, i7;
        com.larvalabs.svgandroid.ParserHelper r1, $r3;
        android.graphics.Path r2, $r4;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, $f23, f24, $f25, f26, f27, f28, f29, $f30, $f31, f32;
        char c1, c2;
        boolean z0;

        r0 := @parameter0: java.lang.String;
        i0 = virtualinvoke r0.<java.lang.String: int length()>();
        $r3 = new com.larvalabs.svgandroid.ParserHelper;
        specialinvoke $r3.<com.larvalabs.svgandroid.ParserHelper: void <init>(java.lang.CharSequence,int)>(r0, 0);
        r1 = $r3;
        virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: void skipWhitespace()>();
        $r4 = new android.graphics.Path;
        specialinvoke $r4.<android.graphics.Path: void <init>()>();
        r2 = $r4;
        f0 = 0.0F;
        f1 = 0.0F;
        f2 = 0.0F;
        f3 = 0.0F;
        f4 = 0.0F;
        f5 = 0.0F;
        c1 = 0;

     label0:
        $i3 = r1.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        if $i3 >= i0 goto label25;

        $i4 = r1.<com.larvalabs.svgandroid.ParserHelper: int pos>;
        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);
        tableswitch(c2)
        {
            case 43: goto label1;
            case 44: goto label7;
            case 45: goto label1;
            case 46: goto label7;
            case 47: goto label7;
            case 48: goto label1;
            case 49: goto label1;
            case 50: goto label1;
            case 51: goto label1;
            case 52: goto label1;
            case 53: goto label1;
            case 54: goto label1;
            case 55: goto label1;
            case 56: goto label1;
            case 57: goto label1;
            default: goto label7;
        };

     label1:
        if c1 == 109 goto label2;

        if c1 != 77 goto label3;

     label2:
        $i5 = c1 - 1;
        c2 = (char) $i5;
        goto label8;

     label3:
        if c1 == 99 goto label4;

        if c1 != 67 goto label5;

     label4:
        c2 = c1;
        goto label8;

     label5:
        if c1 == 108 goto label6;

        if c1 != 76 goto label7;

     label6:
        c2 = c1;
        goto label8;

     label7:
        virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: void advance()>();
        c1 = c2;

     label8:
        z0 = 0;
        tableswitch(c2)
        {
            case 65: goto label22;
            case 66: goto label23;
            case 67: goto label18;
            case 68: goto label23;
            case 69: goto label23;
            case 70: goto label23;
            case 71: goto label23;
            case 72: goto label14;
            case 73: goto label23;
            case 74: goto label23;
            case 75: goto label23;
            case 76: goto label12;
            case 77: goto label9;
            case 78: goto label23;
            case 79: goto label23;
            case 80: goto label23;
            case 81: goto label23;
            case 82: goto label23;
            case 83: goto label20;
            case 84: goto label23;
            case 85: goto label23;
            case 86: goto label16;
            case 87: goto label23;
            case 88: goto label23;
            case 89: goto label23;
            case 90: goto label11;
            case 91: goto label23;
            case 92: goto label23;
            case 93: goto label23;
            case 94: goto label23;
            case 95: goto label23;
            case 96: goto label23;
            case 97: goto label22;
            case 98: goto label23;
            case 99: goto label18;
            case 100: goto label23;
            case 101: goto label23;
            case 102: goto label23;
            case 103: goto label23;
            case 104: goto label14;
            case 105: goto label23;
            case 106: goto label23;
            case 107: goto label23;
            case 108: goto label12;
            case 109: goto label9;
            case 110: goto label23;
            case 111: goto label23;
            case 112: goto label23;
            case 113: goto label23;
            case 114: goto label23;
            case 115: goto label20;
            case 116: goto label23;
            case 117: goto label23;
            case 118: goto label16;
            case 119: goto label23;
            case 120: goto label23;
            case 121: goto label23;
            case 122: goto label11;
            default: goto label23;
        };

     label9:
        f6 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f7 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        if c2 != 109 goto label10;

        f4 = f4 + f6;
        f5 = f5 + f7;
        virtualinvoke r2.<android.graphics.Path: void rMoveTo(float,float)>(f6, f7);
        f0 = f0 + f6;
        f1 = f1 + f7;
        goto label23;

     label10:
        f4 = f6;
        f5 = f7;
        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>(f6, f7);
        f0 = f6;
        f1 = f7;
        goto label23;

     label11:
        virtualinvoke r2.<android.graphics.Path: void close()>();
        virtualinvoke r2.<android.graphics.Path: void moveTo(float,float)>(f4, f5);
        f0 = f4;
        f1 = f5;
        f2 = f4;
        f3 = f5;
        z0 = 1;
        goto label23;

     label12:
        f13 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f14 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        if c2 != 108 goto label13;

        virtualinvoke r2.<android.graphics.Path: void rLineTo(float,float)>(f13, f14);
        f0 = f0 + f13;
        f1 = f1 + f14;
        goto label23;

     label13:
        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f13, f14);
        f0 = f13;
        f1 = f14;
        goto label23;

     label14:
        f15 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        if c2 != 104 goto label15;

        virtualinvoke r2.<android.graphics.Path: void rLineTo(float,float)>(f15, 0.0F);
        f0 = f0 + f15;
        goto label23;

     label15:
        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f15, f1);
        f0 = f15;
        goto label23;

     label16:
        f16 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        if c2 != 118 goto label17;

        virtualinvoke r2.<android.graphics.Path: void rLineTo(float,float)>(0.0F, f16);
        f1 = f1 + f16;
        goto label23;

     label17:
        virtualinvoke r2.<android.graphics.Path: void lineTo(float,float)>(f0, f16);
        f1 = f16;
        goto label23;

     label18:
        z0 = 1;
        f17 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f18 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f8 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f9 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f10 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f11 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        if c2 != 99 goto label19;

        f17 = f17 + f0;
        f8 = f8 + f0;
        f10 = f10 + f0;
        f18 = f18 + f1;
        f9 = f9 + f1;
        f11 = f11 + f1;

     label19:
        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f17, f18, f8, f9, f10, f11);
        f2 = f8;
        f3 = f9;
        f0 = f10;
        f1 = f11;
        goto label23;

     label20:
        z0 = 1;
        f19 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f20 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f21 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f22 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        if c2 != 115 goto label21;

        f19 = f19 + f0;
        f21 = f21 + f0;
        f20 = f20 + f1;
        f22 = f22 + f1;

     label21:
        $f23 = 2.0F * f0;
        f24 = $f23 - f2;
        $f25 = 2.0F * f1;
        f26 = $f25 - f3;
        virtualinvoke r2.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>(f24, f26, f19, f20, f21, f22);
        f2 = f19;
        f3 = f20;
        f0 = f21;
        f1 = f22;
        goto label23;

     label22:
        f27 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f28 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f29 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        $f30 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        i6 = (int) $f30;
        $f31 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        i7 = (int) $f31;
        f32 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        f12 = virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: float nextFloat()>();
        staticinvoke <com.larvalabs.svgandroid.SVGParser: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,int,int)>(r2, f0, f1, f32, f12, f27, f28, f29, i6, i7);
        f0 = f32;
        f1 = f12;
        goto label23;

     label23:
        if z0 != 0 goto label24;

        f2 = f0;
        f3 = f1;

     label24:
        virtualinvoke r1.<com.larvalabs.svgandroid.ParserHelper: void skipWhitespace()>();
        goto label0;

     label25:
        return r2;
    }

    private static void drawArc(android.graphics.Path, float, float, float, float, float, float, float, int, int)
    {
        android.graphics.Path r0;
        float f0, f1, f2, f3, f4, f5, f6;
        int i0, i1;

        r0 := @parameter0: android.graphics.Path;
        f0 := @parameter1: float;
        f1 := @parameter2: float;
        f2 := @parameter3: float;
        f3 := @parameter4: float;
        f4 := @parameter5: float;
        f5 := @parameter6: float;
        f6 := @parameter7: float;
        i0 := @parameter8: int;
        i1 := @parameter9: int;
        return;
    }

    private static com.larvalabs.svgandroid.SVGParser$NumberParse getNumberParseAttr(java.lang.String, org.xml.sax.Attributes)
    {
        java.lang.String r0, $r2, $r3;
        org.xml.sax.Attributes r1;
        int i0, i1;
        boolean $z0;
        com.larvalabs.svgandroid.SVGParser$NumberParse $r4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.xml.sax.Attributes;
        i0 = interfaceinvoke r1.<org.xml.sax.Attributes: int getLength()>();
        i1 = 0;

     label0:
        if i1 >= i0 goto label2;

        $r2 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i1);
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);
        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i1);
        $r4 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVGParser$NumberParse parseNumbers(java.lang.String)>($r3);
        return $r4;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return null;
    }

    private static java.lang.String getStringAttr(java.lang.String, org.xml.sax.Attributes)
    {
        java.lang.String r0, $r2, $r3;
        org.xml.sax.Attributes r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.xml.sax.Attributes;
        i0 = interfaceinvoke r1.<org.xml.sax.Attributes: int getLength()>();
        i1 = 0;

     label0:
        if i1 >= i0 goto label2;

        $r2 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i1);
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);
        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i1);
        return $r3;

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        return null;
    }

    private static java.lang.Float getFloatAttr(java.lang.String, org.xml.sax.Attributes)
    {
        java.lang.String r0;
        org.xml.sax.Attributes r1;
        java.lang.Float $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.xml.sax.Attributes;
        $r2 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float getFloatAttr(java.lang.String,org.xml.sax.Attributes,java.lang.Float)>(r0, r1, null);
        return $r2;
    }

    private static java.lang.Float getFloatAttr(java.lang.String, org.xml.sax.Attributes, java.lang.Float)
    {
        java.lang.String r0, r3;
        org.xml.sax.Attributes r1;
        java.lang.Float r2, $r4;
        boolean $z0, $z1;
        int $i0, $i1;
        float $f0;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.xml.sax.Attributes;
        r2 := @parameter2: java.lang.Float;
        r3 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String getStringAttr(java.lang.String,org.xml.sax.Attributes)>(r0, r1);
        if r3 != null goto label0;

        return r2;

     label0:
        $z0 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("px");
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("pt");
        if $z1 == 0 goto label2;

     label1:
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        $i1 = $i0 - 2;
        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r3);
        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);
        return $r4;
    }

    static java.lang.String access$200(java.lang.String, org.xml.sax.Attributes)
    {
        java.lang.String r0, $r2;
        org.xml.sax.Attributes r1;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.xml.sax.Attributes;
        $r2 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.String getStringAttr(java.lang.String,org.xml.sax.Attributes)>(r0, r1);
        return $r2;
    }

    static java.lang.Float access$500(java.lang.String, org.xml.sax.Attributes, java.lang.Float)
    {
        java.lang.String r0;
        org.xml.sax.Attributes r1;
        java.lang.Float r2, $r3;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.xml.sax.Attributes;
        r2 := @parameter2: java.lang.Float;
        $r3 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float getFloatAttr(java.lang.String,org.xml.sax.Attributes,java.lang.Float)>(r0, r1, r2);
        return $r3;
    }

    static android.graphics.Matrix access$600(java.lang.String)
    {
        java.lang.String r0;
        android.graphics.Matrix $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <com.larvalabs.svgandroid.SVGParser: android.graphics.Matrix parseTransform(java.lang.String)>(r0);
        return $r1;
    }

    static java.lang.Float access$700(java.lang.String, org.xml.sax.Attributes)
    {
        java.lang.String r0;
        org.xml.sax.Attributes r1;
        java.lang.Float $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.xml.sax.Attributes;
        $r2 = staticinvoke <com.larvalabs.svgandroid.SVGParser: java.lang.Float getFloatAttr(java.lang.String,org.xml.sax.Attributes)>(r0, r1);
        return $r2;
    }

    static com.larvalabs.svgandroid.SVGParser$NumberParse access$900(java.lang.String, org.xml.sax.Attributes)
    {
        java.lang.String r0;
        org.xml.sax.Attributes r1;
        com.larvalabs.svgandroid.SVGParser$NumberParse $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: org.xml.sax.Attributes;
        $r2 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVGParser$NumberParse getNumberParseAttr(java.lang.String,org.xml.sax.Attributes)>(r0, r1);
        return $r2;
    }

    static android.graphics.Path access$1000(java.lang.String)
    {
        java.lang.String r0;
        android.graphics.Path $r1;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <com.larvalabs.svgandroid.SVGParser: android.graphics.Path doPath(java.lang.String)>(r0);
        return $r1;
    }
}
interface  com.larvalabs.svgandroid.package-info extends java.lang.Object
{
}
class guibase.ChessController$1$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$cmd;
    final guibase.ChessController$1 this$1;

    void <init>(guibase.ChessController$1, java.lang.String)
    {
        guibase.ChessController$1$1 r0;
        guibase.ChessController$1 r1;
        java.lang.String r2;

        r0 := @this: guibase.ChessController$1$1;
        r1 := @parameter0: guibase.ChessController$1;
        r2 := @parameter1: java.lang.String;
        r0.<guibase.ChessController$1$1: guibase.ChessController$1 this$1> = r1;
        r0.<guibase.ChessController$1$1: java.lang.String val$cmd> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        guibase.ChessController$1$1 r0;
        guibase.ChessController$1 $r1, $r5, $r7, $r9, $r11;
        guibase.ChessController $r2, $r6, $r8, $r10, $r12;
        chess.Game $r3;
        java.lang.String $r4;

        r0 := @this: guibase.ChessController$1$1;
        $r1 = r0.<guibase.ChessController$1$1: guibase.ChessController$1 this$1>;
        $r2 = $r1.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r3 = $r2.<guibase.ChessController: chess.Game game>;
        $r4 = r0.<guibase.ChessController$1$1: java.lang.String val$cmd>;
        virtualinvoke $r3.<chess.Game: boolean processString(java.lang.String)>($r4);
        $r5 = r0.<guibase.ChessController$1$1: guibase.ChessController$1 this$1>;
        $r6 = $r5.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r6.<guibase.ChessController: java.lang.String thinkingPV> = "";
        $r7 = r0.<guibase.ChessController$1$1: guibase.ChessController$1 this$1>;
        $r8 = $r7.<guibase.ChessController$1: guibase.ChessController this$0>;
        staticinvoke <guibase.ChessController: void access$000(guibase.ChessController)>($r8);
        $r9 = r0.<guibase.ChessController$1$1: guibase.ChessController$1 this$1>;
        $r10 = $r9.<guibase.ChessController$1: guibase.ChessController this$0>;
        staticinvoke <guibase.ChessController: void access$100(guibase.ChessController)>($r10);
        $r11 = r0.<guibase.ChessController$1$1: guibase.ChessController$1 this$1>;
        $r12 = $r11.<guibase.ChessController$1: guibase.ChessController this$0>;
        virtualinvoke $r12.<guibase.ChessController: void stopComputerThinking()>();
        return;
    }
}
class guibase.ChessController$1 extends java.lang.Object implements java.lang.Runnable
{
    final guibase.ChessController this$0;

    void <init>(guibase.ChessController)
    {
        guibase.ChessController$1 r0;
        guibase.ChessController r1;

        r0 := @this: guibase.ChessController$1;
        r1 := @parameter0: guibase.ChessController;
        r0.<guibase.ChessController$1: guibase.ChessController this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        guibase.ChessController$1 r0;
        java.lang.String r1;
        guibase.ChessController $r2, $r4, $r6, $r8, $r10, $r13, $r16, $r18, $r21;
        chess.ComputerPlayer $r3, $r11;
        guibase.GUIInterface $r5, $r7, $r9, $r22;
        int $i0, $i1;
        boolean $z0, $z1;
        chess.Position $r12, $r15;
        chess.Game $r14, $r17, $r19;
        java.util.ArrayList $r20;
        guibase.ChessController$1$1 $r23;

        r0 := @this: guibase.ChessController$1;
        $r2 = r0.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r3 = $r2.<guibase.ChessController: chess.ComputerPlayer computerPlayer>;
        $r4 = r0.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r5 = $r4.<guibase.ChessController: guibase.GUIInterface gui>;
        $i0 = interfaceinvoke $r5.<guibase.GUIInterface: int timeLimit()>();
        $r6 = r0.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r7 = $r6.<guibase.ChessController: guibase.GUIInterface gui>;
        $i1 = interfaceinvoke $r7.<guibase.GUIInterface: int timeLimit()>();
        $r8 = r0.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r9 = $r8.<guibase.ChessController: guibase.GUIInterface gui>;
        $z0 = interfaceinvoke $r9.<guibase.GUIInterface: boolean randomMode()>();
        virtualinvoke $r3.<chess.ComputerPlayer: void timeLimit(int,int,boolean)>($i0, $i1, $z0);
        $r10 = r0.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r11 = $r10.<guibase.ChessController: chess.ComputerPlayer computerPlayer>;
        $r12 = new chess.Position;
        $r13 = r0.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r14 = $r13.<guibase.ChessController: chess.Game game>;
        $r15 = $r14.<chess.Game: chess.Position pos>;
        specialinvoke $r12.<chess.Position: void <init>(chess.Position)>($r15);
        $r16 = r0.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r17 = $r16.<guibase.ChessController: chess.Game game>;
        $z1 = virtualinvoke $r17.<chess.Game: boolean haveDrawOffer()>();
        $r18 = r0.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r19 = $r18.<guibase.ChessController: chess.Game game>;
        $r20 = virtualinvoke $r19.<chess.Game: java.util.ArrayList getHistory()>();
        r1 = virtualinvoke $r11.<chess.ComputerPlayer: java.lang.String getCommand(chess.Position,boolean,java.util.List)>($r12, $z1, $r20);
        $r21 = r0.<guibase.ChessController$1: guibase.ChessController this$0>;
        $r22 = $r21.<guibase.ChessController: guibase.GUIInterface gui>;
        $r23 = new guibase.ChessController$1$1;
        specialinvoke $r23.<guibase.ChessController$1$1: void <init>(guibase.ChessController$1,java.lang.String)>(r0, r1);
        interfaceinvoke $r22.<guibase.GUIInterface: void runOnUIThread(java.lang.Runnable)>($r23);
        return;
    }
}
class guibase.ChessController$SearchListener$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$newPV;
    final guibase.ChessController$SearchListener this$1;

    void <init>(guibase.ChessController$SearchListener, java.lang.String)
    {
        guibase.ChessController$SearchListener$1 r0;
        guibase.ChessController$SearchListener r1;
        java.lang.String r2;

        r0 := @this: guibase.ChessController$SearchListener$1;
        r1 := @parameter0: guibase.ChessController$SearchListener;
        r2 := @parameter1: java.lang.String;
        r0.<guibase.ChessController$SearchListener$1: guibase.ChessController$SearchListener this$1> = r1;
        r0.<guibase.ChessController$SearchListener$1: java.lang.String val$newPV> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        guibase.ChessController$SearchListener$1 r0;
        guibase.ChessController$SearchListener $r1, $r4;
        guibase.ChessController $r2, $r5;
        java.lang.String $r3;

        r0 := @this: guibase.ChessController$SearchListener$1;
        $r1 = r0.<guibase.ChessController$SearchListener$1: guibase.ChessController$SearchListener this$1>;
        $r2 = $r1.<guibase.ChessController$SearchListener: guibase.ChessController this$0>;
        $r3 = r0.<guibase.ChessController$SearchListener$1: java.lang.String val$newPV>;
        $r2.<guibase.ChessController: java.lang.String thinkingPV> = $r3;
        $r4 = r0.<guibase.ChessController$SearchListener$1: guibase.ChessController$SearchListener this$1>;
        $r5 = $r4.<guibase.ChessController$SearchListener: guibase.ChessController this$0>;
        virtualinvoke $r5.<guibase.ChessController: void setThinkingPV()>();
        return;
    }
}
class guibase.ChessController$SearchListener extends java.lang.Object implements chess.Search$Listener
{
    int currDepth;
    int currMoveNr;
    java.lang.String currMove;
    long currNodes;
    int currNps;
    int currTime;
    int pvDepth;
    int pvScore;
    boolean pvIsMate;
    boolean pvUpperBound;
    boolean pvLowerBound;
    java.lang.String pvStr;
    final guibase.ChessController this$0;

    void <init>(guibase.ChessController)
    {
        guibase.ChessController$SearchListener r0;
        guibase.ChessController r1;

        r0 := @this: guibase.ChessController$SearchListener;
        r1 := @parameter0: guibase.ChessController;
        r0.<guibase.ChessController$SearchListener: guibase.ChessController this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<guibase.ChessController$SearchListener: int currDepth> = 0;
        r0.<guibase.ChessController$SearchListener: int currMoveNr> = 0;
        r0.<guibase.ChessController$SearchListener: java.lang.String currMove> = "";
        r0.<guibase.ChessController$SearchListener: long currNodes> = 0L;
        r0.<guibase.ChessController$SearchListener: int currNps> = 0;
        r0.<guibase.ChessController$SearchListener: int currTime> = 0;
        r0.<guibase.ChessController$SearchListener: int pvDepth> = 0;
        r0.<guibase.ChessController$SearchListener: int pvScore> = 0;
        r0.<guibase.ChessController$SearchListener: boolean pvIsMate> = 0;
        r0.<guibase.ChessController$SearchListener: boolean pvUpperBound> = 0;
        r0.<guibase.ChessController$SearchListener: boolean pvLowerBound> = 0;
        r0.<guibase.ChessController$SearchListener: java.lang.String pvStr> = "";
        return;
    }

    private void setSearchInfo()
    {
        guibase.ChessController$SearchListener r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String r3, $r6, $r12, $r16, $r18, $r21, $r26, $r30;
        java.lang.Object[] $r4, $r10, $r14, $r20, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.Integer $r5, $r11, $r24, $r25, $r29;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3;
        java.lang.Double $r15, $r27;
        long $l6;
        java.lang.Long $r28;
        guibase.ChessController $r32;
        guibase.GUIInterface $r33;
        guibase.ChessController$SearchListener$1 $r34;

        r0 := @this: guibase.ChessController$SearchListener;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r4 = newarray (java.lang.Object)[1];
        $i0 = r0.<guibase.ChessController$SearchListener: int pvDepth>;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        $r4[0] = $r5;
        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%n[%d] ", $r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $z0 = r0.<guibase.ChessController$SearchListener: boolean pvUpperBound>;
        if $z0 == 0 goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<=");
        goto label1;

     label0:
        $z1 = r0.<guibase.ChessController$SearchListener: boolean pvLowerBound>;
        if $z1 == 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">=");

     label1:
        $z2 = r0.<guibase.ChessController$SearchListener: boolean pvIsMate>;
        if $z2 == 0 goto label2;

        $r10 = newarray (java.lang.Object)[1];
        $i1 = r0.<guibase.ChessController$SearchListener: int pvScore>;
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        $r10[0] = $r11;
        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("m%d", $r10);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        goto label3;

     label2:
        $r14 = newarray (java.lang.Object)[1];
        $i2 = r0.<guibase.ChessController$SearchListener: int pvScore>;
        $d0 = (double) $i2;
        $d1 = $d0 / 100.0;
        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
        $r14[0] = $r15;
        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r14);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label3:
        $r18 = r0.<guibase.ChessController$SearchListener: java.lang.String pvStr>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = newarray (java.lang.Object)[0];
        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%n", $r20);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = newarray (java.lang.Object)[6];
        $i3 = r0.<guibase.ChessController$SearchListener: int currDepth>;
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
        $r23[0] = $r24;
        $i4 = r0.<guibase.ChessController$SearchListener: int currMoveNr>;
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        $r23[1] = $r25;
        $r26 = r0.<guibase.ChessController$SearchListener: java.lang.String currMove>;
        $r23[2] = $r26;
        $i5 = r0.<guibase.ChessController$SearchListener: int currTime>;
        $d2 = (double) $i5;
        $d3 = $d2 / 1000.0;
        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);
        $r23[3] = $r27;
        $l6 = r0.<guibase.ChessController$SearchListener: long currNodes>;
        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
        $r23[4] = $r28;
        $i7 = r0.<guibase.ChessController$SearchListener: int currNps>;
        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
        $r23[5] = $r29;
        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("d:%d %d:%s t:%.2f n:%d nps:%d", $r23);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        $r32 = r0.<guibase.ChessController$SearchListener: guibase.ChessController this$0>;
        $r33 = $r32.<guibase.ChessController: guibase.GUIInterface gui>;
        $r34 = new guibase.ChessController$SearchListener$1;
        specialinvoke $r34.<guibase.ChessController$SearchListener$1: void <init>(guibase.ChessController$SearchListener,java.lang.String)>(r0, r3);
        interfaceinvoke $r33.<guibase.GUIInterface: void runOnUIThread(java.lang.Runnable)>($r34);
        return;
    }

    public void notifyDepth(int)
    {
        guibase.ChessController$SearchListener r0;
        int i0;

        r0 := @this: guibase.ChessController$SearchListener;
        i0 := @parameter0: int;
        r0.<guibase.ChessController$SearchListener: int currDepth> = i0;
        specialinvoke r0.<guibase.ChessController$SearchListener: void setSearchInfo()>();
        return;
    }

    public void notifyCurrMove(chess.Move, int)
    {
        guibase.ChessController$SearchListener r0;
        chess.Move r1;
        int i0;
        chess.Position $r2, $r5;
        guibase.ChessController $r3;
        chess.Game $r4;
        java.lang.String $r6;

        r0 := @this: guibase.ChessController$SearchListener;
        r1 := @parameter0: chess.Move;
        i0 := @parameter1: int;
        $r2 = new chess.Position;
        $r3 = r0.<guibase.ChessController$SearchListener: guibase.ChessController this$0>;
        $r4 = $r3.<guibase.ChessController: chess.Game game>;
        $r5 = $r4.<chess.Game: chess.Position pos>;
        specialinvoke $r2.<chess.Position: void <init>(chess.Position)>($r5);
        $r6 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>($r2, r1, 0);
        r0.<guibase.ChessController$SearchListener: java.lang.String currMove> = $r6;
        r0.<guibase.ChessController$SearchListener: int currMoveNr> = i0;
        specialinvoke r0.<guibase.ChessController$SearchListener: void setSearchInfo()>();
        return;
    }

    public void notifyPV(int, int, int, long, int, boolean, boolean, boolean, java.util.ArrayList)
    {
        guibase.ChessController$SearchListener r0;
        int i0, i1, i2, i4;
        long l3;
        boolean z0, z1, z2, $z3;
        java.util.ArrayList r1;
        java.lang.StringBuilder r2, $r7;
        chess.Position r3, $r8, $r11;
        chess.UndoInfo r4, $r12;
        java.util.Iterator r5;
        chess.Move r6;
        guibase.ChessController $r9;
        chess.Game $r10;
        java.lang.Object $r13;
        java.lang.Object[] $r14;
        java.lang.String $r15, $r16, $r18;

        r0 := @this: guibase.ChessController$SearchListener;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        l3 := @parameter3: long;
        i4 := @parameter4: int;
        z0 := @parameter5: boolean;
        z1 := @parameter6: boolean;
        z2 := @parameter7: boolean;
        r1 := @parameter8: java.util.ArrayList;
        r0.<guibase.ChessController$SearchListener: int pvDepth> = i0;
        r0.<guibase.ChessController$SearchListener: int pvScore> = i1;
        r0.<guibase.ChessController$SearchListener: int currTime> = i2;
        r0.<guibase.ChessController$SearchListener: long currNodes> = l3;
        r0.<guibase.ChessController$SearchListener: int currNps> = i4;
        r0.<guibase.ChessController$SearchListener: boolean pvIsMate> = z0;
        r0.<guibase.ChessController$SearchListener: boolean pvUpperBound> = z1;
        r0.<guibase.ChessController$SearchListener: boolean pvLowerBound> = z2;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        r2 = $r7;
        $r8 = new chess.Position;
        $r9 = r0.<guibase.ChessController$SearchListener: guibase.ChessController this$0>;
        $r10 = $r9.<guibase.ChessController: chess.Game game>;
        $r11 = $r10.<chess.Game: chess.Position pos>;
        specialinvoke $r8.<chess.Position: void <init>(chess.Position)>($r11);
        r3 = $r8;
        $r12 = new chess.UndoInfo;
        specialinvoke $r12.<chess.UndoInfo: void <init>()>();
        r4 = $r12;
        r5 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label1;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (chess.Move) $r13;
        $r14 = newarray (java.lang.Object)[1];
        $r15 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r3, r6, 0);
        $r14[0] = $r15;
        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %s", $r14);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        virtualinvoke r3.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r6, r4);
        goto label0;

     label1:
        $r18 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<guibase.ChessController$SearchListener: java.lang.String pvStr> = $r18;
        specialinvoke r0.<guibase.ChessController$SearchListener: void setSearchInfo()>();
        return;
    }

    public void notifyStats(long, int, int)
    {
        guibase.ChessController$SearchListener r0;
        long l0;
        int i1, i2;

        r0 := @this: guibase.ChessController$SearchListener;
        l0 := @parameter0: long;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        r0.<guibase.ChessController$SearchListener: long currNodes> = l0;
        r0.<guibase.ChessController$SearchListener: int currNps> = i1;
        r0.<guibase.ChessController$SearchListener: int currTime> = i2;
        specialinvoke r0.<guibase.ChessController$SearchListener: void setSearchInfo()>();
        return;
    }
}
public class guibase.ChessController extends java.lang.Object
{
    chess.Player humanPlayer;
    chess.ComputerPlayer computerPlayer;
    chess.Game game;
    guibase.GUIInterface gui;
    boolean humanIsWhite;
    java.lang.Thread computerThread;
    int threadStack;
    java.lang.String thinkingPV;
    guibase.ChessController$SearchListener listener;
    chess.Move promoteMove;

    public void <init>(guibase.GUIInterface)
    {
        guibase.ChessController r0;
        guibase.GUIInterface r1;
        guibase.ChessController$SearchListener $r2;

        r0 := @this: guibase.ChessController;
        r1 := @parameter0: guibase.GUIInterface;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<guibase.ChessController: guibase.GUIInterface gui> = r1;
        $r2 = new guibase.ChessController$SearchListener;
        specialinvoke $r2.<guibase.ChessController$SearchListener: void <init>(guibase.ChessController)>(r0);
        r0.<guibase.ChessController: guibase.ChessController$SearchListener listener> = $r2;
        r0.<guibase.ChessController: java.lang.String thinkingPV> = "";
        r0.<guibase.ChessController: int threadStack> = 0;
        return;
    }

    public void setThreadStackSize(int)
    {
        guibase.ChessController r0;
        int i0;

        r0 := @this: guibase.ChessController;
        i0 := @parameter0: int;
        r0.<guibase.ChessController: int threadStack> = i0;
        return;
    }

    public final void newGame(boolean, int, boolean)
    {
        guibase.ChessController r0;
        boolean z0, z1;
        int i0;
        chess.HumanPlayer $r1;
        chess.ComputerPlayer $r2, $r3, $r4, $r5, $r9, $r11;
        guibase.ChessController$SearchListener $r6;
        chess.Game $r7, $r10;
        chess.Player $r8, $r12;

        r0 := @this: guibase.ChessController;
        z0 := @parameter0: boolean;
        i0 := @parameter1: int;
        z1 := @parameter2: boolean;
        virtualinvoke r0.<guibase.ChessController: void stopComputerThinking()>();
        r0.<guibase.ChessController: boolean humanIsWhite> = z0;
        $r1 = new chess.HumanPlayer;
        specialinvoke $r1.<chess.HumanPlayer: void <init>()>();
        r0.<guibase.ChessController: chess.Player humanPlayer> = $r1;
        $r2 = new chess.ComputerPlayer;
        specialinvoke $r2.<chess.ComputerPlayer: void <init>()>();
        r0.<guibase.ChessController: chess.ComputerPlayer computerPlayer> = $r2;
        $r3 = r0.<guibase.ChessController: chess.ComputerPlayer computerPlayer>;
        $r3.<chess.ComputerPlayer: boolean verbose> = z1;
        $r4 = r0.<guibase.ChessController: chess.ComputerPlayer computerPlayer>;
        virtualinvoke $r4.<chess.ComputerPlayer: void setTTLogSize(int)>(i0);
        $r5 = r0.<guibase.ChessController: chess.ComputerPlayer computerPlayer>;
        $r6 = r0.<guibase.ChessController: guibase.ChessController$SearchListener listener>;
        virtualinvoke $r5.<chess.ComputerPlayer: void setListener(chess.Search$Listener)>($r6);
        if z0 == 0 goto label0;

        $r7 = new chess.Game;
        $r8 = r0.<guibase.ChessController: chess.Player humanPlayer>;
        $r9 = r0.<guibase.ChessController: chess.ComputerPlayer computerPlayer>;
        specialinvoke $r7.<chess.Game: void <init>(chess.Player,chess.Player)>($r8, $r9);
        r0.<guibase.ChessController: chess.Game game> = $r7;
        goto label1;

     label0:
        $r10 = new chess.Game;
        $r11 = r0.<guibase.ChessController: chess.ComputerPlayer computerPlayer>;
        $r12 = r0.<guibase.ChessController: chess.Player humanPlayer>;
        specialinvoke $r10.<chess.Game: void <init>(chess.Player,chess.Player)>($r11, $r12);
        r0.<guibase.ChessController: chess.Game game> = $r10;

     label1:
        return;
    }

    public final void startGame()
    {
        guibase.ChessController r0;
        guibase.GUIInterface $r1;

        r0 := @this: guibase.ChessController;
        $r1 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        interfaceinvoke $r1.<guibase.GUIInterface: void setSelection(int)>(-1);
        specialinvoke r0.<guibase.ChessController: void updateGUI()>();
        specialinvoke r0.<guibase.ChessController: void startComputerThinking()>();
        return;
    }

    public final void setPosHistory(java.util.List)
    {
        guibase.ChessController r0;
        java.util.List r1;
        java.lang.String r2, $r9, $r11, $r13;
        chess.Position r3;
        java.lang.String[] r4;
        int i0, i1, i2, i3;
        java.lang.Object $r5, $r8, $r12;
        chess.Game $r6, $r7, $r10, $r14;
        chess.ChessParseError $r15, r16;

        r0 := @this: guibase.ChessController;
        r1 := @parameter0: java.util.List;

     label0:
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);
        r2 = (java.lang.String) $r5;
        r3 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>(r2);
        $r6 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r6.<chess.Game: boolean processString(java.lang.String)>("new");
        $r7 = r0.<guibase.ChessController: chess.Game game>;
        $r7.<chess.Game: chess.Position pos> = r3;
        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);
        $r9 = (java.lang.String) $r8;
        r4 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        i0 = lengthof r4;
        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r10 = r0.<guibase.ChessController: chess.Game game>;
        $r11 = r4[i1];
        virtualinvoke $r10.<chess.Game: boolean processString(java.lang.String)>($r11);
        i1 = i1 + 1;
        goto label1;

     label2:
        $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(2);
        $r13 = (java.lang.String) $r12;
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r13);
        i2 = 0;

     label3:
        if i2 >= i3 goto label4;

        $r14 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r14.<chess.Game: boolean processString(java.lang.String)>("undo");
        i2 = i2 + 1;
        goto label3;

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;
        r16 = $r15;

     label6:
        return;

        catch chess.ChessParseError from label0 to label4 with label5;
    }

    public final java.util.List getPosHistory()
    {
        guibase.ChessController r0;
        chess.Game $r1;
        java.util.List $r2;

        r0 := @this: guibase.ChessController;
        $r1 = r0.<guibase.ChessController: chess.Game game>;
        $r2 = virtualinvoke $r1.<chess.Game: java.util.List getPosHistory()>();
        return $r2;
    }

    public java.lang.String getFEN()
    {
        guibase.ChessController r0;
        chess.Game $r1;
        chess.Position $r2;
        java.lang.String $r3;

        r0 := @this: guibase.ChessController;
        $r1 = r0.<guibase.ChessController: chess.Game game>;
        $r2 = $r1.<chess.Game: chess.Position pos>;
        $r3 = staticinvoke <chess.TextIO: java.lang.String toFEN(chess.Position)>($r2);
        return $r3;
    }

    public java.lang.String getPGN()
    {
        guibase.ChessController r0;
        java.lang.StringBuilder $r1, r2, $r15, $r16, $r17;
        java.util.List r3;
        java.lang.String r4, r5, r7, r8, r9, $r22, r24, $r26, $r29, $r33, $r34, $r37, $r42, $r48;
        java.util.Calendar r6;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9;
        java.lang.Object $r10;
        chess.Game $r11, $r12, $r32;
        chess.Game$GameState $r13, $r14;
        java.lang.Object[] $r18, $r25, $r28, $r31, $r36;
        java.lang.Integer $r19, $r20, $r21;
        boolean $z0, $z1;
        java.lang.String[] r41;

        r0 := @this: guibase.ChessController;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        r3 = virtualinvoke r0.<guibase.ChessController: java.util.List getPosHistory()>();
        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);
        r4 = (java.lang.String) $r10;
        $r11 = r0.<guibase.ChessController: chess.Game game>;
        r5 = virtualinvoke $r11.<chess.Game: java.lang.String getMoveListString(boolean)>(1);
        $r12 = r0.<guibase.ChessController: chess.Game game>;
        $r13 = virtualinvoke $r12.<chess.Game: chess.Game$GameState getGameState()>();
        $r14 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        if $r13 != $r14 goto label0;

        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *");
        r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        r6 = staticinvoke <java.util.GregorianCalendar: java.util.Calendar getInstance()>();
        i0 = virtualinvoke r6.<java.util.Calendar: int get(int)>(1);
        $i7 = virtualinvoke r6.<java.util.Calendar: int get(int)>(2);
        i1 = $i7 + 1;
        i2 = virtualinvoke r6.<java.util.Calendar: int get(int)>(5);
        $r18 = newarray (java.lang.Object)[3];
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r18[0] = $r19;
        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r18[1] = $r20;
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r18[2] = $r21;
        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[Date \"%04d.%02d.%02d\"]%n", $r18);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        r24 = "Player";
        r7 = <chess.ComputerPlayer: java.lang.String engineName>;
        $z0 = r0.<guibase.ChessController: boolean humanIsWhite>;
        if $z0 != 0 goto label1;

        r8 = r24;
        r24 = r7;
        r7 = r8;

     label1:
        $r25 = newarray (java.lang.Object)[1];
        $r25[0] = r24;
        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[White \"%s\"]%n", $r25);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = newarray (java.lang.Object)[1];
        $r28[0] = r7;
        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[Black \"%s\"]%n", $r28);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = newarray (java.lang.Object)[1];
        $r32 = r0.<guibase.ChessController: chess.Game game>;
        $r33 = virtualinvoke $r32.<chess.Game: java.lang.String getPGNResultString()>();
        $r31[0] = $r33;
        $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[Result \"%s\"]%n", $r31);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        if $z1 != 0 goto label2;

        $r36 = newarray (java.lang.Object)[1];
        $r36[0] = r4;
        $r37 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[FEN \"%s\"]%n", $r36);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[SetUp \"1\"]\n");

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r41 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        i3 = 0;
        i4 = lengthof r41;
        i5 = 0;

     label3:
        if i5 >= i4 goto label7;

        $r42 = r41[i5];
        r9 = virtualinvoke $r42.<java.lang.String: java.lang.String trim()>();
        i6 = virtualinvoke r9.<java.lang.String: int length()>();
        if i6 <= 0 goto label6;

        $i8 = i3 + 1;
        $i9 = $i8 + i6;
        if $i9 < 80 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        i3 = i6;
        goto label6;

     label4:
        if i3 <= 0 goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        i3 = i3 + 1;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);
        i3 = i3 + i6;

     label6:
        i5 = i5 + 1;
        goto label3;

     label7:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");
        $r48 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r48;
    }

    public void setPGN(java.lang.String) throws chess.ChessParseError
    {
        guibase.ChessController r0;
        java.lang.String r1, r5, r6, r7, r13, r18, r19, r20, r27, r31, r32;
        java.lang.StringBuilder $r2, r3, $r23, r24;
        java.util.Scanner r4, $r8, $r15, r16, $r28, r29;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9;
        chess.Position r14, $r34;
        int $i0, $i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, i12, $i13;
        char $c1, $c4, $c9;
        chess.Game $r21, $r22, $r33, $r36;
        chess.Move r35;

        r0 := @this: guibase.ChessController;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        r3 = $r2;
        $r8 = new java.util.Scanner;
        specialinvoke $r8.<java.util.Scanner: void <init>(java.lang.String)>(r1);
        r4 = $r8;
        virtualinvoke r4.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("");

     label0:
        $z0 = virtualinvoke r4.<java.util.Scanner: boolean hasNext()>();
        if $z0 == 0 goto label4;

        r5 = virtualinvoke r4.<java.util.Scanner: java.lang.String next()>();
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("{");
        if $z1 == 0 goto label1;

        virtualinvoke r4.<java.util.Scanner: java.util.Scanner skip(java.lang.String)>("[^}]*}");
        goto label3;

     label1:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(";");
        if $z2 == 0 goto label2;

        virtualinvoke r4.<java.util.Scanner: java.util.Scanner skip(java.lang.String)>("[^\n]*\n");
        goto label3;

     label2:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

     label3:
        goto label0;

     label4:
        r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r14 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        $r15 = new java.util.Scanner;
        specialinvoke $r15.<java.util.Scanner: void <init>(java.lang.String)>(r13);
        r16 = $r15;
        virtualinvoke r16.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("\\s+");

     label5:
        $z3 = virtualinvoke r16.<java.util.Scanner: boolean hasNext(java.lang.String)>("\\[.*");
        if $z3 == 0 goto label12;

        r18 = virtualinvoke r16.<java.util.Scanner: java.lang.String next()>();
        $i0 = virtualinvoke r18.<java.lang.String: int length()>();
        if $i0 <= 1 goto label6;

        r19 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int)>(1);
        goto label7;

     label6:
        r19 = virtualinvoke r16.<java.util.Scanner: java.lang.String next()>();

     label7:
        r6 = virtualinvoke r16.<java.util.Scanner: java.lang.String findWithinHorizon(java.lang.String,int)>(".*\\]", 0);
        r20 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();
        $c1 = virtualinvoke r20.<java.lang.String: char charAt(int)>(0);
        if $c1 != 34 goto label8;

        r20 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int)>(1);

     label8:
        $i2 = virtualinvoke r20.<java.lang.String: int length()>();
        $i3 = $i2 - 1;
        $c4 = virtualinvoke r20.<java.lang.String: char charAt(int)>($i3);
        if $c4 != 93 goto label9;

        $i5 = virtualinvoke r20.<java.lang.String: int length()>();
        $i6 = $i5 - 1;
        r20 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

     label9:
        $i7 = virtualinvoke r20.<java.lang.String: int length()>();
        $i8 = $i7 - 1;
        $c9 = virtualinvoke r20.<java.lang.String: char charAt(int)>($i8);
        if $c9 != 34 goto label10;

        $i10 = virtualinvoke r20.<java.lang.String: int length()>();
        $i11 = $i10 - 1;
        r20 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(0, $i11);

     label10:
        $z4 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("FEN");
        if $z4 == 0 goto label11;

        r14 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>(r20);

     label11:
        goto label5;

     label12:
        $r21 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r21.<chess.Game: boolean processString(java.lang.String)>("new");
        $r22 = r0.<guibase.ChessController: chess.Game game>;
        $r22.<chess.Game: chess.Position pos> = r14;
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        r24 = $r23;
        virtualinvoke r16.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("");
        i12 = 0;

     label13:
        $z6 = virtualinvoke r16.<java.util.Scanner: boolean hasNext()>();
        if $z6 == 0 goto label17;

        r7 = virtualinvoke r16.<java.util.Scanner: java.lang.String next()>();
        $z7 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("(");
        if $z7 == 0 goto label14;

        i12 = i12 + 1;
        goto label16;

     label14:
        $z8 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>(")");
        if $z8 == 0 goto label15;

        i12 = i12 + -1;
        goto label16;

     label15:
        if i12 != 0 goto label16;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

     label16:
        goto label13;

     label17:
        r27 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();
        $r28 = new java.util.Scanner;
        specialinvoke $r28.<java.util.Scanner: void <init>(java.lang.String)>(r27);
        r29 = $r28;
        virtualinvoke r29.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("\\s+");

     label18:
        $z9 = virtualinvoke r29.<java.util.Scanner: boolean hasNext()>();
        if $z9 == 0 goto label21;

        r31 = virtualinvoke r29.<java.util.Scanner: java.lang.String next()>();
        r32 = virtualinvoke r31.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("\\$?[0-9]*\\.*([^?!]*)[?!]*", "$1");
        $i13 = virtualinvoke r32.<java.lang.String: int length()>();
        if $i13 != 0 goto label19;

        goto label18;

     label19:
        $r33 = r0.<guibase.ChessController: chess.Game game>;
        $r34 = $r33.<chess.Game: chess.Position pos>;
        r35 = staticinvoke <chess.TextIO: chess.Move stringToMove(chess.Position,java.lang.String)>($r34, r32);
        if r35 != null goto label20;

        goto label21;

     label20:
        $r36 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r36.<chess.Game: boolean processString(java.lang.String)>(r32);
        goto label18;

     label21:
        return;
    }

    public void setFENOrPGN(java.lang.String) throws chess.ChessParseError
    {
        guibase.ChessController r0;
        java.lang.String r1;
        chess.Position r2;
        chess.Game $r3, $r4;
        chess.ChessParseError $r5, r6;
        guibase.GUIInterface $r7;

        r0 := @this: guibase.ChessController;
        r1 := @parameter0: java.lang.String;

     label0:
        r2 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>(r1);
        $r3 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r3.<chess.Game: boolean processString(java.lang.String)>("new");
        $r4 = r0.<guibase.ChessController: chess.Game game>;
        $r4.<chess.Game: chess.Position pos> = r2;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r6 = $r5;
        virtualinvoke r0.<guibase.ChessController: void setPGN(java.lang.String)>(r1);

     label3:
        $r7 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        interfaceinvoke $r7.<guibase.GUIInterface: void setSelection(int)>(-1);
        specialinvoke r0.<guibase.ChessController: void updateGUI()>();
        specialinvoke r0.<guibase.ChessController: void startComputerThinking()>();
        return;

        catch chess.ChessParseError from label0 to label1 with label2;
    }

    public final void setHumanWhite(boolean)
    {
        guibase.ChessController r0;
        boolean z0, $z1;
        java.lang.Thread $r1;
        chess.Game $r2;

        r0 := @this: guibase.ChessController;
        z0 := @parameter0: boolean;
        $r1 = r0.<guibase.ChessController: java.lang.Thread computerThread>;
        if $r1 == null goto label0;

        return;

     label0:
        $z1 = r0.<guibase.ChessController: boolean humanIsWhite>;
        if $z1 == z0 goto label1;

        r0.<guibase.ChessController: boolean humanIsWhite> = z0;
        $r2 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r2.<chess.Game: boolean processString(java.lang.String)>("swap");
        specialinvoke r0.<guibase.ChessController: void startComputerThinking()>();

     label1:
        return;
    }

    public final boolean humansTurn()
    {
        guibase.ChessController r0;
        chess.Game $r1;
        chess.Position $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: guibase.ChessController;
        $r1 = r0.<guibase.ChessController: chess.Game game>;
        $r2 = $r1.<chess.Game: chess.Position pos>;
        $z0 = $r2.<chess.Position: boolean whiteMove>;
        $z1 = r0.<guibase.ChessController: boolean humanIsWhite>;
        if $z0 != $z1 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public final boolean computerThinking()
    {
        guibase.ChessController r0;
        java.lang.Thread $r1;
        boolean $z0;

        r0 := @this: guibase.ChessController;
        $r1 = r0.<guibase.ChessController: java.lang.Thread computerThread>;
        if $r1 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final void takeBackMove()
    {
        guibase.ChessController r0;
        boolean $z0, $z5;
        chess.Game $r1, $r3, $r4, $r6, $r7, $r8, $r11, $r13, $r14, $r16, $r17;
        chess.Move $r2, $r5, $r12, $r15;
        chess.Game$GameState $r9, $r10;

        r0 := @this: guibase.ChessController;
        $z0 = virtualinvoke r0.<guibase.ChessController: boolean humansTurn()>();
        if $z0 == 0 goto label2;

        $r1 = r0.<guibase.ChessController: chess.Game game>;
        $r2 = virtualinvoke $r1.<chess.Game: chess.Move getLastMove()>();
        if $r2 == null goto label5;

        $r3 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r3.<chess.Game: boolean processString(java.lang.String)>("undo");
        $r4 = r0.<guibase.ChessController: chess.Game game>;
        $r5 = virtualinvoke $r4.<chess.Game: chess.Move getLastMove()>();
        if $r5 == null goto label0;

        $r6 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r6.<chess.Game: boolean processString(java.lang.String)>("undo");
        goto label1;

     label0:
        $r7 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r7.<chess.Game: boolean processString(java.lang.String)>("redo");

     label1:
        specialinvoke r0.<guibase.ChessController: void updateGUI()>();
        specialinvoke r0.<guibase.ChessController: void setSelection()>();
        goto label5;

     label2:
        $r8 = r0.<guibase.ChessController: chess.Game game>;
        $r9 = virtualinvoke $r8.<chess.Game: chess.Game$GameState getGameState()>();
        $r10 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        if $r9 == $r10 goto label5;

        $r11 = r0.<guibase.ChessController: chess.Game game>;
        $r12 = virtualinvoke $r11.<chess.Game: chess.Move getLastMove()>();
        if $r12 == null goto label5;

        $r13 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r13.<chess.Game: boolean processString(java.lang.String)>("undo");
        $z5 = virtualinvoke r0.<guibase.ChessController: boolean humansTurn()>();
        if $z5 != 0 goto label4;

        $r14 = r0.<guibase.ChessController: chess.Game game>;
        $r15 = virtualinvoke $r14.<chess.Game: chess.Move getLastMove()>();
        if $r15 == null goto label3;

        $r16 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r16.<chess.Game: boolean processString(java.lang.String)>("undo");
        goto label4;

     label3:
        $r17 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r17.<chess.Game: boolean processString(java.lang.String)>("redo");

     label4:
        specialinvoke r0.<guibase.ChessController: void updateGUI()>();
        specialinvoke r0.<guibase.ChessController: void setSelection()>();

     label5:
        return;
    }

    public final void redoMove()
    {
        guibase.ChessController r0;
        boolean $z0;
        chess.Game $r1, $r2;

        r0 := @this: guibase.ChessController;
        $z0 = virtualinvoke r0.<guibase.ChessController: boolean humansTurn()>();
        if $z0 == 0 goto label0;

        $r1 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r1.<chess.Game: boolean processString(java.lang.String)>("redo");
        $r2 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r2.<chess.Game: boolean processString(java.lang.String)>("redo");
        specialinvoke r0.<guibase.ChessController: void updateGUI()>();
        specialinvoke r0.<guibase.ChessController: void setSelection()>();

     label0:
        return;
    }

    public final void humanMove(chess.Move)
    {
        guibase.ChessController r0;
        chess.Move r1;
        boolean $z0, $z1;
        guibase.GUIInterface $r2;

        r0 := @this: guibase.ChessController;
        r1 := @parameter0: chess.Move;
        $z0 = virtualinvoke r0.<guibase.ChessController: boolean humansTurn()>();
        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<guibase.ChessController: boolean doMove(chess.Move)>(r1);
        if $z1 == 0 goto label0;

        specialinvoke r0.<guibase.ChessController: void updateGUI()>();
        specialinvoke r0.<guibase.ChessController: void startComputerThinking()>();
        goto label1;

     label0:
        $r2 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        interfaceinvoke $r2.<guibase.GUIInterface: void setSelection(int)>(-1);

     label1:
        return;
    }

    public final void reportPromotePiece(int)
    {
        guibase.ChessController r0;
        int i0;
        boolean z0;
        byte b1, $b2, $b3, $b4, $b5;
        chess.Move r1, $r4;
        chess.Game $r2;
        chess.Position $r3;

        r0 := @this: guibase.ChessController;
        i0 := @parameter0: int;
        $r2 = r0.<guibase.ChessController: chess.Game game>;
        $r3 = $r2.<chess.Game: chess.Position pos>;
        z0 = $r3.<chess.Position: boolean whiteMove>;
        tableswitch(i0)
        {
            case 1: goto label0;
            case 2: goto label3;
            case 3: goto label6;
            default: goto label9;
        };

     label0:
        if z0 == 0 goto label1;

        $b2 = 3;
        goto label2;

     label1:
        $b2 = 9;

     label2:
        b1 = $b2;
        goto label12;

     label3:
        if z0 == 0 goto label4;

        $b3 = 4;
        goto label5;

     label4:
        $b3 = 10;

     label5:
        b1 = $b3;
        goto label12;

     label6:
        if z0 == 0 goto label7;

        $b4 = 5;
        goto label8;

     label7:
        $b4 = 11;

     label8:
        b1 = $b4;
        goto label12;

     label9:
        if z0 == 0 goto label10;

        $b5 = 2;
        goto label11;

     label10:
        $b5 = 8;

     label11:
        b1 = $b5;

     label12:
        $r4 = r0.<guibase.ChessController: chess.Move promoteMove>;
        $r4.<chess.Move: int promoteTo> = b1;
        r1 = r0.<guibase.ChessController: chess.Move promoteMove>;
        r0.<guibase.ChessController: chess.Move promoteMove> = null;
        virtualinvoke r0.<guibase.ChessController: void humanMove(chess.Move)>(r1);
        return;
    }

    private final boolean doMove(chess.Move)
    {
        guibase.ChessController r0;
        chess.Move r1, r4;
        chess.Position r2;
        chess.MoveGen$MoveList r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r5;
        chess.Game $r6, $r10;
        chess.MoveGen $r7;
        chess.Move[] $r8;
        guibase.GUIInterface $r9, $r11;

        r0 := @this: guibase.ChessController;
        r1 := @parameter0: chess.Move;
        $r6 = r0.<guibase.ChessController: chess.Game game>;
        r2 = $r6.<chess.Game: chess.Position pos>;
        $r7 = new chess.MoveGen;
        specialinvoke $r7.<chess.MoveGen: void <init>()>();
        r3 = virtualinvoke $r7.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r2);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r2, r3);
        i0 = r1.<chess.Move: int promoteTo>;
        i1 = 0;

     label0:
        $i2 = r3.<chess.MoveGen$MoveList: int size>;
        if i1 >= $i2 goto label3;

        $r8 = r3.<chess.MoveGen$MoveList: chess.Move[] m>;
        r4 = $r8[i1];
        $i3 = r4.<chess.Move: int 'from'>;
        $i4 = r1.<chess.Move: int 'from'>;
        if $i3 != $i4 goto label2;

        $i5 = r4.<chess.Move: int 'to'>;
        $i6 = r1.<chess.Move: int 'to'>;
        if $i5 != $i6 goto label2;

        $i7 = r4.<chess.Move: int promoteTo>;
        if $i7 == 0 goto label1;

        if i0 != 0 goto label1;

        r0.<guibase.ChessController: chess.Move promoteMove> = r4;
        $r9 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        interfaceinvoke $r9.<guibase.GUIInterface: void requestPromotePiece()>();
        return 0;

     label1:
        $i8 = r4.<chess.Move: int promoteTo>;
        if $i8 != i0 goto label2;

        r5 = staticinvoke <chess.TextIO: java.lang.String moveToString(chess.Position,chess.Move,boolean)>(r2, r4, 0);
        $r10 = r0.<guibase.ChessController: chess.Game game>;
        virtualinvoke $r10.<chess.Game: boolean processString(java.lang.String)>(r5);
        return 1;

     label2:
        i1 = i1 + 1;
        goto label0;

     label3:
        $r11 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        interfaceinvoke $r11.<guibase.GUIInterface: void reportInvalidMove(chess.Move)>(r1);
        return 0;
    }

    private final void updateGUI()
    {
        guibase.ChessController r0;
        guibase.GUIInterface $r1;
        chess.Game $r2;
        chess.Position $r3;

        r0 := @this: guibase.ChessController;
        specialinvoke r0.<guibase.ChessController: void setStatusString()>();
        virtualinvoke r0.<guibase.ChessController: void setMoveList()>();
        virtualinvoke r0.<guibase.ChessController: void setThinkingPV()>();
        $r1 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        $r2 = r0.<guibase.ChessController: chess.Game game>;
        $r3 = $r2.<chess.Game: chess.Position pos>;
        interfaceinvoke $r1.<guibase.GUIInterface: void setPosition(chess.Position)>($r3);
        return;
    }

    private final void setStatusString()
    {
        guibase.ChessController r0;
        java.lang.String r1, $r4;
        chess.Game $r2, $r9, $r12;
        chess.Position $r3;
        boolean $z0;
        java.lang.Thread $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        chess.Game$GameState $r10, $r11;
        guibase.GUIInterface $r13;

        r0 := @this: guibase.ChessController;
        $r2 = r0.<guibase.ChessController: chess.Game game>;
        $r3 = $r2.<chess.Game: chess.Position pos>;
        $z0 = $r3.<chess.Position: boolean whiteMove>;
        if $z0 == 0 goto label0;

        $r4 = "White\'s move";
        goto label1;

     label0:
        $r4 = "Black\'s move";

     label1:
        r1 = $r4;
        $r5 = r0.<guibase.ChessController: java.lang.Thread computerThread>;
        if $r5 == null goto label2;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (thinking)");
        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r9 = r0.<guibase.ChessController: chess.Game game>;
        $r10 = virtualinvoke $r9.<chess.Game: chess.Game$GameState getGameState()>();
        $r11 = <chess.Game$GameState: chess.Game$GameState ALIVE>;
        if $r10 == $r11 goto label3;

        $r12 = r0.<guibase.ChessController: chess.Game game>;
        r1 = virtualinvoke $r12.<chess.Game: java.lang.String getGameStateString()>();

     label3:
        $r13 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        interfaceinvoke $r13.<guibase.GUIInterface: void setStatusString(java.lang.String)>(r1);
        return;
    }

    public final void setMoveList()
    {
        guibase.ChessController r0;
        java.lang.String r1;
        chess.Game $r2;
        guibase.GUIInterface $r3;

        r0 := @this: guibase.ChessController;
        $r2 = r0.<guibase.ChessController: chess.Game game>;
        r1 = virtualinvoke $r2.<chess.Game: java.lang.String getMoveListString(boolean)>(1);
        $r3 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        interfaceinvoke $r3.<guibase.GUIInterface: void setMoveListString(java.lang.String)>(r1);
        return;
    }

    public final void setThinkingPV()
    {
        guibase.ChessController r0;
        java.lang.String r1;
        guibase.GUIInterface $r2, $r3;
        boolean $z0;

        r0 := @this: guibase.ChessController;
        r1 = "";
        $r2 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        $z0 = interfaceinvoke $r2.<guibase.GUIInterface: boolean showThinking()>();
        if $z0 == 0 goto label0;

        r1 = r0.<guibase.ChessController: java.lang.String thinkingPV>;

     label0:
        $r3 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        interfaceinvoke $r3.<guibase.GUIInterface: void setThinkingString(java.lang.String)>(r1);
        return;
    }

    private final void setSelection()
    {
        guibase.ChessController r0;
        chess.Move r1;
        int i0, $i1;
        chess.Game $r2;
        guibase.GUIInterface $r3;

        r0 := @this: guibase.ChessController;
        $r2 = r0.<guibase.ChessController: chess.Game game>;
        r1 = virtualinvoke $r2.<chess.Game: chess.Move getLastMove()>();
        if r1 == null goto label0;

        $i1 = r1.<chess.Move: int 'to'>;
        goto label1;

     label0:
        $i1 = -1;

     label1:
        i0 = $i1;
        $r3 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        interfaceinvoke $r3.<guibase.GUIInterface: void setSelection(int)>(i0);
        return;
    }

    private void startComputerThinking()
    {
        guibase.ChessController r0;
        guibase.ChessController$1 r1, $r6;
        java.lang.ThreadGroup r2, $r7;
        chess.Game $r3;
        chess.Position $r4;
        boolean $z0, $z1;
        java.lang.Thread $r5, $r8, $r9, $r10;
        int $i0, $i1;
        long $l2;

        r0 := @this: guibase.ChessController;
        $r3 = r0.<guibase.ChessController: chess.Game game>;
        $r4 = $r3.<chess.Game: chess.Position pos>;
        $z0 = $r4.<chess.Position: boolean whiteMove>;
        $z1 = r0.<guibase.ChessController: boolean humanIsWhite>;
        if $z0 == $z1 goto label2;

        $r5 = r0.<guibase.ChessController: java.lang.Thread computerThread>;
        if $r5 != null goto label2;

        $r6 = new guibase.ChessController$1;
        specialinvoke $r6.<guibase.ChessController$1: void <init>(guibase.ChessController)>(r0);
        r1 = $r6;
        $i0 = r0.<guibase.ChessController: int threadStack>;
        if $i0 <= 0 goto label0;

        $r7 = new java.lang.ThreadGroup;
        specialinvoke $r7.<java.lang.ThreadGroup: void <init>(java.lang.String)>("searcher");
        r2 = $r7;
        $r8 = new java.lang.Thread;
        $i1 = r0.<guibase.ChessController: int threadStack>;
        $l2 = (long) $i1;
        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>(r2, r1, "searcher", $l2);
        r0.<guibase.ChessController: java.lang.Thread computerThread> = $r8;
        goto label1;

     label0:
        $r9 = new java.lang.Thread;
        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable)>(r1);
        r0.<guibase.ChessController: java.lang.Thread computerThread> = $r9;

     label1:
        r0.<guibase.ChessController: java.lang.String thinkingPV> = "";
        specialinvoke r0.<guibase.ChessController: void updateGUI()>();
        $r10 = r0.<guibase.ChessController: java.lang.Thread computerThread>;
        virtualinvoke $r10.<java.lang.Thread: void start()>();

     label2:
        return;
    }

    public synchronized void stopComputerThinking()
    {
        guibase.ChessController r0;
        java.lang.InterruptedException r1, $r5;
        java.lang.Thread $r2, $r4;
        chess.ComputerPlayer $r3;
        java.io.PrintStream $r6;
        java.lang.Object[] $r7;

        r0 := @this: guibase.ChessController;
        $r2 = r0.<guibase.ChessController: java.lang.Thread computerThread>;
        if $r2 == null goto label4;

        $r3 = r0.<guibase.ChessController: chess.ComputerPlayer computerPlayer>;
        virtualinvoke $r3.<chess.ComputerPlayer: void timeLimit(int,int,boolean)>(0, 0, 0);

     label0:
        $r4 = r0.<guibase.ChessController: java.lang.Thread computerThread>;
        virtualinvoke $r4.<java.lang.Thread: void join()>();

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r1 = $r5;
        $r6 = <java.lang.System: java.io.PrintStream out>;
        $r7 = newarray (java.lang.Object)[0];
        virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Could not stop thread%n", $r7);

     label3:
        r0.<guibase.ChessController: java.lang.Thread computerThread> = null;
        specialinvoke r0.<guibase.ChessController: void updateGUI()>();

     label4:
        return;

        catch java.lang.InterruptedException from label0 to label1 with label2;
    }

    public synchronized void setTimeLimit()
    {
        guibase.ChessController r0;
        java.lang.Thread $r1;
        chess.ComputerPlayer $r2;
        guibase.GUIInterface $r3, $r4, $r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: guibase.ChessController;
        $r1 = r0.<guibase.ChessController: java.lang.Thread computerThread>;
        if $r1 == null goto label0;

        $r2 = r0.<guibase.ChessController: chess.ComputerPlayer computerPlayer>;
        $r3 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        $i0 = interfaceinvoke $r3.<guibase.GUIInterface: int timeLimit()>();
        $r4 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        $i1 = interfaceinvoke $r4.<guibase.GUIInterface: int timeLimit()>();
        $r5 = r0.<guibase.ChessController: guibase.GUIInterface gui>;
        $z0 = interfaceinvoke $r5.<guibase.GUIInterface: boolean randomMode()>();
        virtualinvoke $r2.<chess.ComputerPlayer: void timeLimit(int,int,boolean)>($i0, $i1, $z0);

     label0:
        return;
    }

    static void access$000(guibase.ChessController)
    {
        guibase.ChessController r0;

        r0 := @parameter0: guibase.ChessController;
        specialinvoke r0.<guibase.ChessController: void updateGUI()>();
        return;
    }

    static void access$100(guibase.ChessController)
    {
        guibase.ChessController r0;

        r0 := @parameter0: guibase.ChessController;
        specialinvoke r0.<guibase.ChessController: void setSelection()>();
        return;
    }
}
public interface  guibase.GUIInterface extends java.lang.Object
{

    public abstract void setPosition(chess.Position);

    public abstract void setSelection(int);

    public abstract void setStatusString(java.lang.String);

    public abstract void setMoveListString(java.lang.String);

    public abstract void setThinkingString(java.lang.String);

    public abstract int timeLimit();

    public abstract boolean randomMode();

    public abstract boolean showThinking();

    public abstract void requestPromotePiece();

    public abstract void runOnUIThread(java.lang.Runnable);

    public abstract void reportInvalidMove(chess.Move);
}
public class net.margaritov.preference.colorpicker.AlphaPatternDrawable extends android.graphics.drawable.Drawable
{
    private int mRectangleSize;
    private android.graphics.Paint mPaint;
    private android.graphics.Paint mPaintWhite;
    private android.graphics.Paint mPaintGray;
    private int numRectanglesHorizontal;
    private int numRectanglesVertical;
    private android.graphics.Bitmap mBitmap;

    public void <init>(int)
    {
        net.margaritov.preference.colorpicker.AlphaPatternDrawable r0;
        int i0;
        android.graphics.Paint $r1, $r2, $r3, $r4, $r5;

        r0 := @this: net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        i0 := @parameter0: int;
        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int mRectangleSize> = 10;
        $r1 = new android.graphics.Paint;
        specialinvoke $r1.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Paint mPaint> = $r1;
        $r2 = new android.graphics.Paint;
        specialinvoke $r2.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Paint mPaintWhite> = $r2;
        $r3 = new android.graphics.Paint;
        specialinvoke $r3.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Paint mPaintGray> = $r3;
        r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int mRectangleSize> = i0;
        $r4 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Paint mPaintWhite>;
        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>(-1);
        $r5 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Paint mPaintGray>;
        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>(-3421237);
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        net.margaritov.preference.colorpicker.AlphaPatternDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Bitmap $r2;
        android.graphics.Rect $r3;
        android.graphics.Paint $r4;

        r0 := @this: net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        r1 := @parameter0: android.graphics.Canvas;
        $r2 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Bitmap mBitmap>;
        $r3 = virtualinvoke r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Rect getBounds()>();
        $r4 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Paint mPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r2, null, $r3, $r4);
        return;
    }

    public int getOpacity()
    {
        net.margaritov.preference.colorpicker.AlphaPatternDrawable r0;

        r0 := @this: net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        return 0;
    }

    public void setAlpha(int)
    {
        net.margaritov.preference.colorpicker.AlphaPatternDrawable r0;
        int i0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        i0 := @parameter0: int;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Alpha is not supported by this drawwable.");
        throw $r1;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        net.margaritov.preference.colorpicker.AlphaPatternDrawable r0;
        android.graphics.ColorFilter r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        r1 := @parameter0: android.graphics.ColorFilter;
        $r2 = new java.lang.UnsupportedOperationException;
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ColorFilter is not supported by this drawwable.");
        throw $r2;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        net.margaritov.preference.colorpicker.AlphaPatternDrawable r0;
        android.graphics.Rect r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        double $d0, $d1, $d2, $d3;

        r0 := @this: net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        r1 := @parameter0: android.graphics.Rect;
        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>(r1);
        i0 = virtualinvoke r1.<android.graphics.Rect: int height()>();
        i1 = virtualinvoke r1.<android.graphics.Rect: int width()>();
        $i2 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int mRectangleSize>;
        $i3 = i1 / $i2;
        $d0 = (double) $i3;
        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);
        $i4 = (int) $d1;
        r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int numRectanglesHorizontal> = $i4;
        $i5 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int mRectangleSize>;
        $i6 = i0 / $i5;
        $d2 = (double) $i6;
        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);
        $i7 = (int) $d3;
        r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int numRectanglesVertical> = $i7;
        specialinvoke r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: void generatePatternBitmap()>();
        return;
    }

    private void generatePatternBitmap()
    {
        net.margaritov.preference.colorpicker.AlphaPatternDrawable r0;
        android.graphics.Bitmap$Config $r1;
        android.graphics.Canvas r2, $r9;
        android.graphics.Rect r3, $r4, $r5, $r6, $r7, $r11;
        boolean z0, z1, $z2, $z3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.graphics.Bitmap $r8, $r10;
        android.graphics.Paint $r14;

        r0 := @this: net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        $r4 = virtualinvoke r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Rect getBounds()>();
        $i2 = virtualinvoke $r4.<android.graphics.Rect: int width()>();
        if $i2 <= 0 goto label0;

        $r5 = virtualinvoke r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Rect getBounds()>();
        $i3 = virtualinvoke $r5.<android.graphics.Rect: int height()>();
        if $i3 > 0 goto label1;

     label0:
        return;

     label1:
        $r6 = virtualinvoke r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Rect getBounds()>();
        $i4 = virtualinvoke $r6.<android.graphics.Rect: int width()>();
        $r7 = virtualinvoke r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Rect getBounds()>();
        $i5 = virtualinvoke $r7.<android.graphics.Rect: int height()>();
        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i4, $i5, $r1);
        r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Bitmap mBitmap> = $r8;
        $r9 = new android.graphics.Canvas;
        $r10 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Bitmap mBitmap>;
        specialinvoke $r9.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r10);
        r2 = $r9;
        $r11 = new android.graphics.Rect;
        specialinvoke $r11.<android.graphics.Rect: void <init>()>();
        r3 = $r11;
        z0 = 1;
        i0 = 0;

     label2:
        $i6 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int numRectanglesVertical>;
        if i0 > $i6 goto label11;

        z1 = z0;
        i1 = 0;

     label3:
        $i7 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int numRectanglesHorizontal>;
        if i1 > $i7 goto label8;

        $i8 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int mRectangleSize>;
        $i9 = i0 * $i8;
        r3.<android.graphics.Rect: int top> = $i9;
        $i10 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int mRectangleSize>;
        $i11 = i1 * $i10;
        r3.<android.graphics.Rect: int left> = $i11;
        $i12 = r3.<android.graphics.Rect: int top>;
        $i13 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int mRectangleSize>;
        $i14 = $i12 + $i13;
        r3.<android.graphics.Rect: int bottom> = $i14;
        $i15 = r3.<android.graphics.Rect: int left>;
        $i16 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: int mRectangleSize>;
        $i17 = $i15 + $i16;
        r3.<android.graphics.Rect: int right> = $i17;
        if z1 == 0 goto label4;

        $r14 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Paint mPaintWhite>;
        goto label5;

     label4:
        $r14 = r0.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: android.graphics.Paint mPaintGray>;

     label5:
        virtualinvoke r2.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>(r3, $r14);
        if z1 != 0 goto label6;

        $z2 = 1;
        goto label7;

     label6:
        $z2 = 0;

     label7:
        z1 = $z2;
        i1 = i1 + 1;
        goto label3;

     label8:
        if z0 != 0 goto label9;

        $z3 = 1;
        goto label10;

     label9:
        $z3 = 0;

     label10:
        z0 = $z3;
        i0 = i0 + 1;
        goto label2;

     label11:
        return;
    }
}
public interface  net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener extends java.lang.Object
{

    public abstract void onColorChanged(int);
}
public class net.margaritov.preference.colorpicker.ColorPickerDialog extends android.app.Dialog implements net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener, android.view.View$OnClickListener
{
    private net.margaritov.preference.colorpicker.ColorPickerView mColorPicker;
    private net.margaritov.preference.colorpicker.ColorPickerPanelView mOldColor;
    private net.margaritov.preference.colorpicker.ColorPickerPanelView mNewColor;
    private net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener mListener;
    private java.lang.CharSequence additionalInfo;

    public void <init>(android.content.Context, int, java.lang.CharSequence)
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        android.content.Context r1;
        int i0;
        java.lang.CharSequence r2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        r1 := @parameter0: android.content.Context;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.CharSequence;
        specialinvoke r0.<android.app.Dialog: void <init>(android.content.Context)>(r1);
        r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: java.lang.CharSequence additionalInfo> = r2;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: void init(int)>(i0);
        return;
    }

    private void init(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: android.view.Window getWindow()>();
        virtualinvoke $r1.<android.view.Window: void setFormat(int)>(1);
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: void setUp(int)>(i0);
        return;
    }

    private void setUp(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        int i0, $i1, $i2;
        android.view.LayoutInflater r1;
        android.view.View r2, $r14, $r16, $r18;
        android.content.Context $r3, $r6;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r8, $r9, $r11, $r12;
        java.lang.CharSequence $r7, $r10;
        java.lang.String $r13;
        net.margaritov.preference.colorpicker.ColorPickerView $r15, $r23, $r24, $r27, $r29;
        net.margaritov.preference.colorpicker.ColorPickerPanelView $r17, $r19, $r20, $r25, $r26, $r28;
        android.view.ViewParent $r21;
        android.widget.LinearLayout $r22;
        float $f0, $f1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        i0 := @parameter0: int;
        $r3 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: android.content.Context getContext()>();
        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");
        r1 = (android.view.LayoutInflater) $r4;
        r2 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130903042, null);
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: void setContentView(android.view.View)>(r2);
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: android.content.Context getContext()>();
        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.CharSequence getText(int)>(2131099941);
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");
        $r10 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: java.lang.CharSequence additionalInfo>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: void setTitle(java.lang.CharSequence)>($r13);
        $r14 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>(2131296258);
        $r15 = (net.margaritov.preference.colorpicker.ColorPickerView) $r14;
        r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerView mColorPicker> = $r15;
        $r16 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>(2131296259);
        $r17 = (net.margaritov.preference.colorpicker.ColorPickerPanelView) $r16;
        r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mOldColor> = $r17;
        $r18 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>(2131296260);
        $r19 = (net.margaritov.preference.colorpicker.ColorPickerPanelView) $r18;
        r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mNewColor> = $r19;
        $r20 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mOldColor>;
        $r21 = virtualinvoke $r20.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.view.ViewParent getParent()>();
        $r22 = (android.widget.LinearLayout) $r21;
        $r23 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerView mColorPicker>;
        $f0 = virtualinvoke $r23.<net.margaritov.preference.colorpicker.ColorPickerView: float getDrawingOffset()>();
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);
        $r24 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerView mColorPicker>;
        $f1 = virtualinvoke $r24.<net.margaritov.preference.colorpicker.ColorPickerView: float getDrawingOffset()>();
        $i2 = staticinvoke <java.lang.Math: int round(float)>($f1);
        virtualinvoke $r22.<android.widget.LinearLayout: void setPadding(int,int,int,int)>($i1, 0, $i2, 0);
        $r25 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mOldColor>;
        virtualinvoke $r25.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void setOnClickListener(android.view.View$OnClickListener)>(r0);
        $r26 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mNewColor>;
        virtualinvoke $r26.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void setOnClickListener(android.view.View$OnClickListener)>(r0);
        $r27 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerView mColorPicker>;
        virtualinvoke $r27.<net.margaritov.preference.colorpicker.ColorPickerView: void setOnColorChangedListener(net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener)>(r0);
        $r28 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mOldColor>;
        virtualinvoke $r28.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void setColor(int)>(i0);
        $r29 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerView mColorPicker>;
        virtualinvoke $r29.<net.margaritov.preference.colorpicker.ColorPickerView: void setColor(int,boolean)>(i0, 1);
        return;
    }

    public void onColorChanged(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        int i0;
        net.margaritov.preference.colorpicker.ColorPickerPanelView $r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        i0 := @parameter0: int;
        $r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mNewColor>;
        virtualinvoke $r1.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void setColor(int)>(i0);
        return;
    }

    public void setAlphaSliderVisible(boolean)
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        boolean z0;
        net.margaritov.preference.colorpicker.ColorPickerView $r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        z0 := @parameter0: boolean;
        $r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerView mColorPicker>;
        virtualinvoke $r1.<net.margaritov.preference.colorpicker.ColorPickerView: void setAlphaSliderVisible(boolean)>(z0);
        return;
    }

    public void setOnColorChangedListener(net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener)
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        r1 := @parameter0: net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener;
        r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener mListener> = r1;
        return;
    }

    public int getColor()
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        net.margaritov.preference.colorpicker.ColorPickerView $r1;
        int $i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        $r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerView mColorPicker>;
        $i0 = virtualinvoke $r1.<net.margaritov.preference.colorpicker.ColorPickerView: int getColor()>();
        return $i0;
    }

    public void onClick(android.view.View)
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        android.view.View r1;
        int $i0, $i1;
        net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener $r2, $r3;
        net.margaritov.preference.colorpicker.ColorPickerPanelView $r4;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        r1 := @parameter0: android.view.View;
        $i0 = virtualinvoke r1.<android.view.View: int getId()>();
        if $i0 != 2131296260 goto label0;

        $r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener mListener>;
        if $r2 == null goto label0;

        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener mListener>;
        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mNewColor>;
        $i1 = virtualinvoke $r4.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int getColor()>();
        interfaceinvoke $r3.<net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener: void onColorChanged(int)>($i1);

     label0:
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: void dismiss()>();
        return;
    }

    public android.os.Bundle onSaveInstanceState()
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        android.os.Bundle r1;
        net.margaritov.preference.colorpicker.ColorPickerPanelView $r2, $r3;
        int $i0, $i1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        r1 = specialinvoke r0.<android.app.Dialog: android.os.Bundle onSaveInstanceState()>();
        $r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mOldColor>;
        $i0 = virtualinvoke $r2.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int getColor()>();
        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("old_color", $i0);
        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mNewColor>;
        $i1 = virtualinvoke $r3.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int getColor()>();
        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("new_color", $i1);
        return r1;
    }

    public void onRestoreInstanceState(android.os.Bundle)
    {
        net.margaritov.preference.colorpicker.ColorPickerDialog r0;
        android.os.Bundle r1;
        net.margaritov.preference.colorpicker.ColorPickerPanelView $r2;
        int $i0, $i1;
        net.margaritov.preference.colorpicker.ColorPickerView $r3;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerDialog;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>(r1);
        $r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerPanelView mOldColor>;
        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("old_color");
        virtualinvoke $r2.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void setColor(int)>($i0);
        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerDialog: net.margaritov.preference.colorpicker.ColorPickerView mColorPicker>;
        $i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("new_color");
        virtualinvoke $r3.<net.margaritov.preference.colorpicker.ColorPickerView: void setColor(int,boolean)>($i1, 1);
        return;
    }
}
public class net.margaritov.preference.colorpicker.ColorPickerPanelView extends android.view.View
{
    private static final float BORDER_WIDTH_PX;
    private float mDensity;
    private int mBorderColor;
    private int mColor;
    private android.graphics.Paint mBorderPaint;
    private android.graphics.Paint mColorPaint;
    private android.graphics.RectF mDrawingRect;
    private android.graphics.RectF mColorRect;
    private net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern;

    public void <init>(android.content.Context)
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        android.content.Context r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        r1 := @parameter0: android.content.Context;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        i0 := @parameter2: int;
        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: float mDensity> = 1.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int mBorderColor> = -9539986;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int mColor> = -16777216;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void init()>();
        return;
    }

    private void init()
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        android.graphics.Paint $r1, $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;
        float $f0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        $r1 = new android.graphics.Paint;
        specialinvoke $r1.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.Paint mBorderPaint> = $r1;
        $r2 = new android.graphics.Paint;
        specialinvoke $r2.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.Paint mColorPaint> = $r2;
        $r3 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.content.Context getContext()>();
        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();
        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f0 = $r5.<android.util.DisplayMetrics: float density>;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: float mDensity> = $f0;
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        android.graphics.Canvas r1;
        android.graphics.RectF r2, $r4;
        android.graphics.Paint $r3, $r5, $r8, $r9;
        int $i0, $i1;
        net.margaritov.preference.colorpicker.AlphaPatternDrawable $r6, $r7;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        r1 := @parameter0: android.graphics.Canvas;
        r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mColorRect>;
        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.Paint mBorderPaint>;
        $i0 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int mBorderColor>;
        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i0);
        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mDrawingRect>;
        $r5 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.Paint mBorderPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r4, $r5);
        $r6 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern>;
        if $r6 == null goto label0;

        $r7 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern>;
        virtualinvoke $r7.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: void draw(android.graphics.Canvas)>(r1);

     label0:
        $r8 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.Paint mColorPaint>;
        $i1 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int mColor>;
        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i1);
        $r9 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.Paint mColorPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r2, $r9);
        return;
    }

    protected void onMeasure(int, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        int i0, i1, i2, i3;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);
        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void setMeasuredDimension(int,int)>(i2, i3);
        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.RectF $r1, $r2, $r3, $r4, $r5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);
        $r1 = new android.graphics.RectF;
        specialinvoke $r1.<android.graphics.RectF: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mDrawingRect> = $r1;
        $r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mDrawingRect>;
        $i4 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int getPaddingLeft()>();
        $f0 = (float) $i4;
        $r2.<android.graphics.RectF: float left> = $f0;
        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mDrawingRect>;
        $i5 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int getPaddingRight()>();
        $i6 = i0 - $i5;
        $f1 = (float) $i6;
        $r3.<android.graphics.RectF: float right> = $f1;
        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mDrawingRect>;
        $i7 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int getPaddingTop()>();
        $f2 = (float) $i7;
        $r4.<android.graphics.RectF: float top> = $f2;
        $r5 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mDrawingRect>;
        $i8 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int getPaddingBottom()>();
        $i9 = i1 - $i8;
        $f3 = (float) $i9;
        $r5.<android.graphics.RectF: float bottom> = $f3;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void setUpColorRect()>();
        return;
    }

    private void setUpColorRect()
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        android.graphics.RectF r1, $r2, $r5, $r6, $r7, $r8;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        net.margaritov.preference.colorpicker.AlphaPatternDrawable $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mDrawingRect>;
        $f4 = r1.<android.graphics.RectF: float left>;
        f0 = $f4 + 1.0F;
        $f5 = r1.<android.graphics.RectF: float top>;
        f1 = $f5 + 1.0F;
        $f6 = r1.<android.graphics.RectF: float bottom>;
        f2 = $f6 - 1.0F;
        $f7 = r1.<android.graphics.RectF: float right>;
        f3 = $f7 - 1.0F;
        $r2 = new android.graphics.RectF;
        specialinvoke $r2.<android.graphics.RectF: void <init>(float,float,float,float)>(f0, f1, f3, f2);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mColorRect> = $r2;
        $r3 = new net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        $f8 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: float mDensity>;
        $f9 = 5.0F * $f8;
        $i0 = (int) $f9;
        specialinvoke $r3.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: void <init>(int)>($i0);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern> = $r3;
        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern>;
        $r5 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mColorRect>;
        $f10 = $r5.<android.graphics.RectF: float left>;
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f10);
        $r6 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mColorRect>;
        $f11 = $r6.<android.graphics.RectF: float top>;
        $i2 = staticinvoke <java.lang.Math: int round(float)>($f11);
        $r7 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mColorRect>;
        $f12 = $r7.<android.graphics.RectF: float right>;
        $i3 = staticinvoke <java.lang.Math: int round(float)>($f12);
        $r8 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: android.graphics.RectF mColorRect>;
        $f13 = $r8.<android.graphics.RectF: float bottom>;
        $i4 = staticinvoke <java.lang.Math: int round(float)>($f13);
        virtualinvoke $r4.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: void setBounds(int,int,int,int)>($i1, $i2, $i3, $i4);
        return;
    }

    public void setColor(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        int i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        i0 := @parameter0: int;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int mColor> = i0;
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void invalidate()>();
        return;
    }

    public int getColor()
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        int $i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        $i0 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int mColor>;
        return $i0;
    }

    public void setBorderColor(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        int i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        i0 := @parameter0: int;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int mBorderColor> = i0;
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: void invalidate()>();
        return;
    }

    public int getBorderColor()
    {
        net.margaritov.preference.colorpicker.ColorPickerPanelView r0;
        int $i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPanelView;
        $i0 = r0.<net.margaritov.preference.colorpicker.ColorPickerPanelView: int mBorderColor>;
        return $i0;
    }
}
final class net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1 extends java.lang.Object implements android.os.Parcelable$Creator
{

    void <init>()
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1 r0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState createFromParcel(android.os.Parcel)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1 r0;
        android.os.Parcel r1;
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState $r2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1;
        r1 := @parameter0: android.os.Parcel;
        $r2 = new net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState;
        specialinvoke $r2.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState: void <init>(android.os.Parcel)>(r1);
        return $r2;
    }

    public net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState[] newArray(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1 r0;
        int i0;
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState[] $r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1;
        i0 := @parameter0: int;
        $r1 = newarray (net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState)[i0];
        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1 r0;
        int i0;
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState[] $r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState[] newArray(int)>(i0);
        return $r1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1 r0;
        android.os.Parcel r1;
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState $r2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1;
        r1 := @parameter0: android.os.Parcel;
        $r2 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState createFromParcel(android.os.Parcel)>(r1);
        return $r2;
    }
}
class net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState extends android.preference.Preference$BaseSavedState
{
    android.os.Bundle dialogBundle;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>(android.os.Parcel)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState r0;
        android.os.Parcel r1;
        android.os.Bundle $r2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState;
        r1 := @parameter0: android.os.Parcel;
        specialinvoke r0.<android.preference.Preference$BaseSavedState: void <init>(android.os.Parcel)>(r1);
        $r2 = virtualinvoke r1.<android.os.Parcel: android.os.Bundle readBundle()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState: android.os.Bundle dialogBundle> = $r2;
        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState r0;
        android.os.Parcel r1;
        int i0;
        android.os.Bundle $r2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState;
        r1 := @parameter0: android.os.Parcel;
        i0 := @parameter1: int;
        specialinvoke r0.<android.preference.Preference$BaseSavedState: void writeToParcel(android.os.Parcel,int)>(r1, i0);
        $r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState: android.os.Bundle dialogBundle>;
        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r2);
        return;
    }

    public void <init>(android.os.Parcelable)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState r0;
        android.os.Parcelable r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState;
        r1 := @parameter0: android.os.Parcelable;
        specialinvoke r0.<android.preference.Preference$BaseSavedState: void <init>(android.os.Parcelable)>(r1);
        return;
    }

    static void <clinit>()
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1 $r0;

        $r0 = new net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1;
        specialinvoke $r0.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState$1: void <init>()>();
        <net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState: android.os.Parcelable$Creator CREATOR> = $r0;
        return;
    }
}
public class net.margaritov.preference.colorpicker.ColorPickerPreference extends android.preference.Preference implements android.preference.Preference$OnPreferenceClickListener, net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener
{
    android.view.View mView;
    net.margaritov.preference.colorpicker.ColorPickerDialog mDialog;
    int mDefaultValue;
    private int mValue;
    private float mDensity;
    private boolean mAlphaSliderEnabled;
    private static final java.lang.String androidns;

    public void <init>(android.content.Context)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.content.Context r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        r1 := @parameter0: android.content.Context;
        specialinvoke r0.<android.preference.Preference: void <init>(android.content.Context)>(r1);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue> = -16777216;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = -16777216;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: float mDensity> = 0.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: boolean mAlphaSliderEnabled> = 0;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: void init(android.content.Context,android.util.AttributeSet)>(r1, null);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        specialinvoke r0.<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue> = -16777216;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = -16777216;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: float mDensity> = 0.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: boolean mAlphaSliderEnabled> = 0;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: void init(android.content.Context,android.util.AttributeSet)>(r1, r2);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        i0 := @parameter2: int;
        specialinvoke r0.<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue> = -16777216;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = -16777216;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: float mDensity> = 0.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: boolean mAlphaSliderEnabled> = 0;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: void init(android.content.Context,android.util.AttributeSet)>(r1, r2);
        return;
    }

    protected void onSetInitialValue(boolean, java.lang.Object)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        boolean z0;
        java.lang.Object r1;
        int $i0;
        java.lang.Integer $r3;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        z0 := @parameter0: boolean;
        r1 := @parameter1: java.lang.Object;
        if z0 == 0 goto label0;

        $i0 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int getValue()>();
        goto label1;

     label0:
        $r3 = (java.lang.Integer) r1;
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label1:
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: void onColorChanged(int)>($i0);
        return;
    }

    private void init(android.content.Context, android.util.AttributeSet)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.content.Context r1, $r5;
        android.util.AttributeSet r2;
        java.lang.String r3, $r12;
        java.lang.NumberFormatException r4, $r8;
        android.content.res.Resources $r6, $r13;
        android.util.DisplayMetrics $r7;
        float $f0;
        boolean $z0, $z1;
        int $i0, $i2, i3, $i4, $i5;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        $r5 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: android.content.Context getContext()>();
        $r6 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();
        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f0 = $r7.<android.util.DisplayMetrics: float density>;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: float mDensity> = $f0;
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)>(r0);
        if r2 == null goto label5;

        r3 = interfaceinvoke r2.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://schemas.android.com/apk/res/android", "defaultValue");
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z0 == 0 goto label3;

     label0:
        $i0 = staticinvoke <net.margaritov.preference.colorpicker.ColorPickerPreference: int convertToColorInt(java.lang.String)>(r3);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue> = $i0;

     label1:
        goto label4;

     label2:
        $r8 := @caughtexception;
        r4 = $r8;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong color: ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ColorPickerPreference", $r12);
        $i2 = staticinvoke <net.margaritov.preference.colorpicker.ColorPickerPreference: int convertToColorInt(java.lang.String)>("#FF000000");
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue> = $i2;
        goto label4;

     label3:
        i3 = interfaceinvoke r2.<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>("http://schemas.android.com/apk/res/android", "defaultValue", 0);
        if i3 == 0 goto label4;

        $r13 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();
        $i4 = virtualinvoke $r13.<android.content.res.Resources: int getInteger(int)>(i3);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue> = $i4;

     label4:
        $z1 = interfaceinvoke r2.<android.util.AttributeSet: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>(null, "alphaSlider", 0);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: boolean mAlphaSliderEnabled> = $z1;

     label5:
        $i5 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue>;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = $i5;
        return;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    protected void onBindView(android.view.View)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.view.View r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        r1 := @parameter0: android.view.View;
        specialinvoke r0.<android.preference.Preference: void onBindView(android.view.View)>(r1);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: android.view.View mView> = r1;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: void setPreviewColor()>();
        return;
    }

    private void setPreviewColor()
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.widget.ImageView r1, $r4;
        android.widget.LinearLayout r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r3, $r6, $r7;
        android.content.Context $r5;
        float $f0, $f1, $f2, $f3;
        net.margaritov.preference.colorpicker.AlphaPatternDrawable $r8;
        android.graphics.Bitmap $r9;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: android.view.View mView>;
        if $r3 != null goto label0;

        return;

     label0:
        $r4 = new android.widget.ImageView;
        $r5 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: android.content.Context getContext()>();
        specialinvoke $r4.<android.widget.ImageView: void <init>(android.content.Context)>($r5);
        r1 = $r4;
        $r6 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: android.view.View mView>;
        $r7 = virtualinvoke $r6.<android.view.View: android.view.View findViewById(int)>(16908312);
        r2 = (android.widget.LinearLayout) $r7;
        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<android.widget.LinearLayout: void setVisibility(int)>(0);
        $i1 = virtualinvoke r2.<android.widget.LinearLayout: int getPaddingLeft()>();
        $i2 = virtualinvoke r2.<android.widget.LinearLayout: int getPaddingTop()>();
        $f0 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: float mDensity>;
        $f1 = $f0 * 8.0F;
        $i3 = (int) $f1;
        $i4 = virtualinvoke r2.<android.widget.LinearLayout: int getPaddingBottom()>();
        virtualinvoke r2.<android.widget.LinearLayout: void setPadding(int,int,int,int)>($i1, $i2, $i3, $i4);
        i0 = virtualinvoke r2.<android.widget.LinearLayout: int getChildCount()>();
        if i0 <= 0 goto label2;

        virtualinvoke r2.<android.widget.LinearLayout: void removeViews(int,int)>(0, i0);

     label2:
        virtualinvoke r2.<android.widget.LinearLayout: void addView(android.view.View)>(r1);
        virtualinvoke r2.<android.widget.LinearLayout: void setMinimumWidth(int)>(0);
        $r8 = new net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        $f2 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: float mDensity>;
        $f3 = 5.0F * $f2;
        $i5 = (int) $f3;
        specialinvoke $r8.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: void <init>(int)>($i5);
        virtualinvoke r1.<android.widget.ImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r8);
        $r9 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: android.graphics.Bitmap getPreviewBitmap()>();
        virtualinvoke r1.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>($r9);
        return;
    }

    private android.graphics.Bitmap getPreviewBitmap()
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, i10;
        android.graphics.Bitmap$Config $r1;
        android.graphics.Bitmap r2;
        float $f0, $f1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        $f0 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: float mDensity>;
        $f1 = $f0 * 31.0F;
        i0 = (int) $f1;
        i1 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int getValue()>();
        $r1 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i0, $r1);
        i2 = virtualinvoke r2.<android.graphics.Bitmap: int getWidth()>();
        i3 = virtualinvoke r2.<android.graphics.Bitmap: int getHeight()>();
        i4 = i1;
        i5 = 0;

     label0:
        if i5 >= i2 goto label7;

        i6 = i5;

     label1:
        if i6 >= i3 goto label6;

        if i5 <= 1 goto label2;

        if i6 <= 1 goto label2;

        $i7 = i2 - 2;
        if i5 >= $i7 goto label2;

        $i8 = i3 - 2;
        if i6 < $i8 goto label3;

     label2:
        $i9 = -7829368;
        goto label4;

     label3:
        $i9 = i1;

     label4:
        i10 = $i9;
        virtualinvoke r2.<android.graphics.Bitmap: void setPixel(int,int,int)>(i5, i6, i10);
        if i5 == i6 goto label5;

        virtualinvoke r2.<android.graphics.Bitmap: void setPixel(int,int,int)>(i6, i5, i10);

     label5:
        i6 = i6 + 1;
        goto label1;

     label6:
        i5 = i5 + 1;
        goto label0;

     label7:
        return r2;
    }

    public int getValue()
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String r2, $r6;
        java.lang.IllegalArgumentException r3, $r7;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringIndexOutOfBoundsException $r8, r9;
        java.lang.ClassCastException $r10, r11;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;

     label0:
        $z0 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: boolean isPersistent()>();
        if $z0 == 0 goto label5;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $i0 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue>;
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        r2 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: java.lang.String getPersistedString(java.lang.String)>($r6);
        if r2 != null goto label1;

        $i1 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue>;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = $i1;
        goto label5;

     label1:
        $i2 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>(r2);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = $i2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;
        r3 = $r7;
        $i3 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue>;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = $i3;
        goto label5;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;
        $i4 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue>;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = $i4;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;
        r11 = $r10;
        $i5 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mDefaultValue>;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = $i5;

     label7:
        $i6 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue>;
        return $i6;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.StringIndexOutOfBoundsException from label1 to label2 with label4;
        catch java.lang.ClassCastException from label0 to label5 with label6;
    }

    public void onColorChanged(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        int i0;
        java.lang.NullPointerException r1, $r5;
        boolean $z0;
        java.lang.String $r2;
        android.preference.Preference$OnPreferenceChangeListener $r3;
        java.lang.Integer $r4;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        i0 := @parameter0: int;
        $z0 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: boolean isPersistent()>();
        if $z0 == 0 goto label0;

        $r2 = staticinvoke <net.margaritov.preference.colorpicker.ColorPickerPreference: java.lang.String convertToARGB(int)>(i0);
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: boolean persistString(java.lang.String)>($r2);

     label0:
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int mValue> = i0;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: void setPreviewColor()>();

     label1:
        $r3 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: android.preference.Preference$OnPreferenceChangeListener getOnPreferenceChangeListener()>();
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        interfaceinvoke $r3.<android.preference.Preference$OnPreferenceChangeListener: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>(r0, $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r1 = $r5;

     label4:
        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public boolean onPreferenceClick(android.preference.Preference)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.preference.Preference r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        r1 := @parameter0: android.preference.Preference;
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: void showDialog(android.os.Bundle)>(null);
        return 0;
    }

    protected void showDialog(android.os.Bundle)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.os.Bundle r1;
        net.margaritov.preference.colorpicker.ColorPickerDialog $r2, $r5, $r6, $r7, $r8;
        android.content.Context $r3;
        int $i0;
        java.lang.CharSequence $r4;
        boolean $z0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        r1 := @parameter0: android.os.Bundle;
        $r2 = new net.margaritov.preference.colorpicker.ColorPickerDialog;
        $r3 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: android.content.Context getContext()>();
        $i0 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: int getValue()>();
        $r4 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: java.lang.CharSequence getTitle()>();
        specialinvoke $r2.<net.margaritov.preference.colorpicker.ColorPickerDialog: void <init>(android.content.Context,int,java.lang.CharSequence)>($r3, $i0, $r4);
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: net.margaritov.preference.colorpicker.ColorPickerDialog mDialog> = $r2;
        $r5 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: net.margaritov.preference.colorpicker.ColorPickerDialog mDialog>;
        virtualinvoke $r5.<net.margaritov.preference.colorpicker.ColorPickerDialog: void setOnColorChangedListener(net.margaritov.preference.colorpicker.ColorPickerDialog$OnColorChangedListener)>(r0);
        $z0 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: boolean mAlphaSliderEnabled>;
        if $z0 == 0 goto label0;

        $r6 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: net.margaritov.preference.colorpicker.ColorPickerDialog mDialog>;
        virtualinvoke $r6.<net.margaritov.preference.colorpicker.ColorPickerDialog: void setAlphaSliderVisible(boolean)>(1);

     label0:
        if r1 == null goto label1;

        $r7 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: net.margaritov.preference.colorpicker.ColorPickerDialog mDialog>;
        virtualinvoke $r7.<net.margaritov.preference.colorpicker.ColorPickerDialog: void onRestoreInstanceState(android.os.Bundle)>(r1);

     label1:
        $r8 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: net.margaritov.preference.colorpicker.ColorPickerDialog mDialog>;
        virtualinvoke $r8.<net.margaritov.preference.colorpicker.ColorPickerDialog: void show()>();
        return;
    }

    public void setAlphaSliderEnabled(boolean)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        boolean z0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        z0 := @parameter0: boolean;
        r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: boolean mAlphaSliderEnabled> = z0;
        return;
    }

    public static java.lang.String convertToARGB(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r0, r1, r2, r3, $r22;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        i0 := @parameter0: int;
        $i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);
        r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);
        $i2 = staticinvoke <android.graphics.Color: int red(int)>(i0);
        r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);
        $i3 = staticinvoke <android.graphics.Color: int green(int)>(i0);
        r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);
        $i4 = staticinvoke <android.graphics.Color: int blue(int)>(i0);
        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i5 != 1 goto label0;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $i6 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i6 != 1 goto label1;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $i7 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i7 != 1 goto label2;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $i8 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i8 != 1 goto label3;

        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        r3 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r22;
    }

    public static int convertToColorInt(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z0 == 0 goto label0;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("#", "");

     label0:
        i0 = -1;
        i1 = -1;
        i2 = -1;
        i3 = -1;
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i4 != 8 goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r1, 16);
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, 4);
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(4, 6);
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16);
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(6, 8);
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r4, 16);
        goto label2;

     label1:
        $i5 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i5 != 6 goto label2;

        i0 = 255;
        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r5, 16);
        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, 4);
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r6, 16);
        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(4, 6);
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r7, 16);

     label2:
        $i6 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(i0, i1, i2, i3);
        return $i6;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.os.Parcelable r1;
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState r2, $r5;
        net.margaritov.preference.colorpicker.ColorPickerDialog $r3, $r4, $r6;
        boolean $z0;
        android.os.Bundle $r7;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        r1 = specialinvoke r0.<android.preference.Preference: android.os.Parcelable onSaveInstanceState()>();
        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: net.margaritov.preference.colorpicker.ColorPickerDialog mDialog>;
        if $r3 == null goto label0;

        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: net.margaritov.preference.colorpicker.ColorPickerDialog mDialog>;
        $z0 = virtualinvoke $r4.<net.margaritov.preference.colorpicker.ColorPickerDialog: boolean isShowing()>();
        if $z0 != 0 goto label1;

     label0:
        return r1;

     label1:
        $r5 = new net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState;
        specialinvoke $r5.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState: void <init>(android.os.Parcelable)>(r1);
        r2 = $r5;
        $r6 = r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: net.margaritov.preference.colorpicker.ColorPickerDialog mDialog>;
        $r7 = virtualinvoke $r6.<net.margaritov.preference.colorpicker.ColorPickerDialog: android.os.Bundle onSaveInstanceState()>();
        r2.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState: android.os.Bundle dialogBundle> = $r7;
        return r2;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        net.margaritov.preference.colorpicker.ColorPickerPreference r0;
        android.os.Parcelable r1, $r3;
        net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState r2;
        boolean $z0;
        android.os.Bundle $r4;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerPreference;
        r1 := @parameter0: android.os.Parcelable;
        if r1 == null goto label0;

        $z0 = r1 instanceof net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState;
        if $z0 != 0 goto label1;

     label0:
        specialinvoke r0.<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>(r1);
        return;

     label1:
        r2 = (net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState) r1;
        $r3 = virtualinvoke r2.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState: android.os.Parcelable getSuperState()>();
        specialinvoke r0.<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>($r3);
        $r4 = r2.<net.margaritov.preference.colorpicker.ColorPickerPreference$SavedState: android.os.Bundle dialogBundle>;
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerPreference: void showDialog(android.os.Bundle)>($r4);
        return;
    }
}
public interface  net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener extends java.lang.Object
{

    public abstract void onColorChanged(int);
}
public class net.margaritov.preference.colorpicker.ColorPickerView extends android.view.View
{
    private static final int PANEL_SAT_VAL;
    private static final int PANEL_HUE;
    private static final int PANEL_ALPHA;
    private static final float BORDER_WIDTH_PX;
    private float HUE_PANEL_WIDTH;
    private float ALPHA_PANEL_HEIGHT;
    private float PANEL_SPACING;
    private float PALETTE_CIRCLE_TRACKER_RADIUS;
    private float RECTANGLE_TRACKER_OFFSET;
    private float mDensity;
    private net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener;
    private android.graphics.Paint mSatValPaint;
    private android.graphics.Paint mSatValTrackerPaint;
    private android.graphics.Paint mHuePaint;
    private android.graphics.Paint mHueTrackerPaint;
    private android.graphics.Paint mAlphaPaint;
    private android.graphics.Paint mAlphaTextPaint;
    private android.graphics.Paint mBorderPaint;
    private android.graphics.Shader mValShader;
    private android.graphics.Shader mSatShader;
    private android.graphics.Shader mHueShader;
    private android.graphics.Shader mAlphaShader;
    private int mAlpha;
    private float mHue;
    private float mSat;
    private float mVal;
    private java.lang.String mAlphaSliderText;
    private int mSliderTrackerColor;
    private int mBorderColor;
    private boolean mShowAlphaPanel;
    private int mLastTouchedPanel;
    private float mDrawingOffset;
    private android.graphics.RectF mDrawingRect;
    private android.graphics.RectF mSatValRect;
    private android.graphics.RectF mHueRect;
    private android.graphics.RectF mAlphaRect;
    private net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern;
    private android.graphics.Point mStartTouchPoint;

    public void <init>(android.content.Context)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.content.Context r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.content.Context;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        i0 := @parameter2: int;
        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float HUE_PANEL_WIDTH> = 30.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT> = 20.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING> = 10.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PALETTE_CIRCLE_TRACKER_RADIUS> = 5.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float RECTANGLE_TRACKER_OFFSET> = 2.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity> = 1.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha> = 255;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue> = 360.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat> = 0.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal> = 0.0F;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: java.lang.String mAlphaSliderText> = "";
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mSliderTrackerColor> = -14935012;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mBorderColor> = -9539986;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel> = 0;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mLastTouchedPanel> = 0;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Point mStartTouchPoint> = null;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void init()>();
        return;
    }

    private void init()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $r1 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.content.Context getContext()>();
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();
        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f0 = $r3.<android.util.DisplayMetrics: float density>;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity> = $f0;
        $f1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PALETTE_CIRCLE_TRACKER_RADIUS>;
        $f2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f3 = $f1 * $f2;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PALETTE_CIRCLE_TRACKER_RADIUS> = $f3;
        $f4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float RECTANGLE_TRACKER_OFFSET>;
        $f5 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f6 = $f4 * $f5;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float RECTANGLE_TRACKER_OFFSET> = $f6;
        $f7 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float HUE_PANEL_WIDTH>;
        $f8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f9 = $f7 * $f8;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float HUE_PANEL_WIDTH> = $f9;
        $f10 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT>;
        $f11 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f12 = $f10 * $f11;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT> = $f12;
        $f13 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING>;
        $f14 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f15 = $f13 * $f14;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING> = $f15;
        $f16 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: float calculateRequiredOffset()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDrawingOffset> = $f16;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void initPaintTools()>();
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void setFocusable(boolean)>(1);
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void setFocusableInTouchMode(boolean)>(1);
        return;
    }

    private void initPaintTools()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.graphics.Paint $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22;
        android.graphics.Paint$Style $r9, $r14;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        int $i0;
        android.graphics.Paint$Align $r21;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $r1 = new android.graphics.Paint;
        specialinvoke $r1.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValPaint> = $r1;
        $r2 = new android.graphics.Paint;
        specialinvoke $r2.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValTrackerPaint> = $r2;
        $r3 = new android.graphics.Paint;
        specialinvoke $r3.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHuePaint> = $r3;
        $r4 = new android.graphics.Paint;
        specialinvoke $r4.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHueTrackerPaint> = $r4;
        $r5 = new android.graphics.Paint;
        specialinvoke $r5.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaPaint> = $r5;
        $r6 = new android.graphics.Paint;
        specialinvoke $r6.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaTextPaint> = $r6;
        $r7 = new android.graphics.Paint;
        specialinvoke $r7.<android.graphics.Paint: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mBorderPaint> = $r7;
        $r8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValTrackerPaint>;
        $r9 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke $r8.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r9);
        $r10 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValTrackerPaint>;
        $f0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f1 = 2.0F * $f0;
        virtualinvoke $r10.<android.graphics.Paint: void setStrokeWidth(float)>($f1);
        $r11 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValTrackerPaint>;
        virtualinvoke $r11.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r12 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHueTrackerPaint>;
        $i0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mSliderTrackerColor>;
        virtualinvoke $r12.<android.graphics.Paint: void setColor(int)>($i0);
        $r13 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHueTrackerPaint>;
        $r14 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke $r13.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r14);
        $r15 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHueTrackerPaint>;
        $f2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f3 = 2.0F * $f2;
        virtualinvoke $r15.<android.graphics.Paint: void setStrokeWidth(float)>($f3);
        $r16 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHueTrackerPaint>;
        virtualinvoke $r16.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r17 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaTextPaint>;
        virtualinvoke $r17.<android.graphics.Paint: void setColor(int)>(-14935012);
        $r18 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaTextPaint>;
        $f4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f5 = 14.0F * $f4;
        virtualinvoke $r18.<android.graphics.Paint: void setTextSize(float)>($f5);
        $r19 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaTextPaint>;
        virtualinvoke $r19.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r20 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaTextPaint>;
        $r21 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;
        virtualinvoke $r20.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r21);
        $r22 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaTextPaint>;
        virtualinvoke $r22.<android.graphics.Paint: void setFakeBoldText(boolean)>(1);
        return;
    }

    private float calculateRequiredOffset()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        float f0, $f1, $f2, $f3, $f4, f5, $f6;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $f1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PALETTE_CIRCLE_TRACKER_RADIUS>;
        $f2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float RECTANGLE_TRACKER_OFFSET>;
        f0 = staticinvoke <java.lang.Math: float max(float,float)>($f1, $f2);
        $f3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f4 = 1.0F * $f3;
        f5 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f4);
        $f6 = f5 * 1.5F;
        return $f6;
    }

    private int[] buildHueColorArray()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int[] r1;
        int i0, i1, $i2, $i3;
        float[] $r2;
        float $f0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 = newarray (int)[361];
        i0 = 0;
        $i2 = lengthof r1;
        i1 = $i2 - 1;

     label0:
        if i1 < 0 goto label1;

        $r2 = newarray (float)[3];
        $f0 = (float) i1;
        $r2[0] = $f0;
        $r2[1] = 1.0F;
        $r2[2] = 1.0F;
        $i3 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>($r2);
        r1[i0] = $i3;
        i1 = i1 + -1;
        i0 = i0 + 1;
        goto label0;

     label1:
        return r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.graphics.Canvas r1;
        android.graphics.RectF $r2, $r3;
        float $f0, $f1;
        byte $b0, $b1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.graphics.Canvas;
        $r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f0 = virtualinvoke $r2.<android.graphics.RectF: float width()>();
        $b0 = $f0 cmpg 0.0F;
        if $b0 <= 0 goto label0;

        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f1 = virtualinvoke $r3.<android.graphics.RectF: float height()>();
        $b1 = $f1 cmpg 0.0F;
        if $b1 > 0 goto label1;

     label0:
        return;

     label1:
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void drawSatValPanel(android.graphics.Canvas)>(r1);
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void drawHuePanel(android.graphics.Canvas)>(r1);
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void drawAlphaPanel(android.graphics.Canvas)>(r1);
        return;
    }

    private void drawSatValPanel(android.graphics.Canvas)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.graphics.Canvas r1;
        android.graphics.RectF r2, $r7, $r8;
        android.graphics.Shader$TileMode $r3, $r14;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.ComposeShader r4, $r15;
        android.graphics.Point r5;
        android.graphics.Paint $r6, $r9, $r19, $r21, $r22, $r23, $r24, $r25;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25;
        android.graphics.Shader $r10, $r16, $r17;
        android.graphics.LinearGradient $r11, $r13;
        float[] $r12;
        android.graphics.PorterDuff$Mode $r18;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.graphics.Canvas;
        r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mSatValRect>;
        $r6 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mBorderPaint>;
        $i1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mBorderColor>;
        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i1);
        $r7 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f0 = $r7.<android.graphics.RectF: float left>;
        $r8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f1 = $r8.<android.graphics.RectF: float top>;
        $f2 = r2.<android.graphics.RectF: float right>;
        $f3 = $f2 + 1.0F;
        $f4 = r2.<android.graphics.RectF: float bottom>;
        $f5 = $f4 + 1.0F;
        $r9 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mBorderPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f3, $f5, $r9);
        $r10 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mValShader>;
        if $r10 != null goto label0;

        $r11 = new android.graphics.LinearGradient;
        $f6 = r2.<android.graphics.RectF: float left>;
        $f7 = r2.<android.graphics.RectF: float top>;
        $f8 = r2.<android.graphics.RectF: float left>;
        $f9 = r2.<android.graphics.RectF: float bottom>;
        $r3 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;
        specialinvoke $r11.<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode)>($f6, $f7, $f8, $f9, -1, -16777216, $r3);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mValShader> = $r11;

     label0:
        $r12 = newarray (float)[3];
        $f10 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue>;
        $r12[0] = $f10;
        $r12[1] = 1.0F;
        $r12[2] = 1.0F;
        i0 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>($r12);
        $r13 = new android.graphics.LinearGradient;
        $f11 = r2.<android.graphics.RectF: float left>;
        $f12 = r2.<android.graphics.RectF: float top>;
        $f13 = r2.<android.graphics.RectF: float right>;
        $f14 = r2.<android.graphics.RectF: float top>;
        $r14 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;
        specialinvoke $r13.<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode)>($f11, $f12, $f13, $f14, -1, i0, $r14);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mSatShader> = $r13;
        $r15 = new android.graphics.ComposeShader;
        $r16 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mValShader>;
        $r17 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mSatShader>;
        $r18 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;
        specialinvoke $r15.<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.PorterDuff$Mode)>($r16, $r17, $r18);
        r4 = $r15;
        $r19 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValPaint>;
        virtualinvoke $r19.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r4);
        $r21 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r2, $r21);
        $f15 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat>;
        $f16 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal>;
        r5 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Point satValToPoint(float,float)>($f15, $f16);
        $r22 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValTrackerPaint>;
        virtualinvoke $r22.<android.graphics.Paint: void setColor(int)>(-16777216);
        $i2 = r5.<android.graphics.Point: int x>;
        $f17 = (float) $i2;
        $i3 = r5.<android.graphics.Point: int y>;
        $f18 = (float) $i3;
        $f19 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PALETTE_CIRCLE_TRACKER_RADIUS>;
        $f20 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f21 = 1.0F * $f20;
        $f22 = $f19 - $f21;
        $r23 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValTrackerPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f17, $f18, $f22, $r23);
        $r24 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValTrackerPaint>;
        virtualinvoke $r24.<android.graphics.Paint: void setColor(int)>(-2236963);
        $i4 = r5.<android.graphics.Point: int x>;
        $f23 = (float) $i4;
        $i5 = r5.<android.graphics.Point: int y>;
        $f24 = (float) $i5;
        $f25 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PALETTE_CIRCLE_TRACKER_RADIUS>;
        $r25 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mSatValTrackerPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f23, $f24, $f25, $r25);
        return;
    }

    private void drawHuePanel(android.graphics.Canvas)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.graphics.Canvas r1;
        android.graphics.RectF r2, r5, $r15;
        android.graphics.Shader$TileMode $r3;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25;
        android.graphics.Point r4;
        android.graphics.Paint $r6, $r7, $r11, $r14, $r16;
        int $i0, $i1, $i2;
        android.graphics.Shader $r8, $r12;
        android.graphics.LinearGradient $r9;
        int[] $r10;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.graphics.Canvas;
        r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mHueRect>;
        $r6 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mBorderPaint>;
        $i0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mBorderColor>;
        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i0);
        $f1 = r2.<android.graphics.RectF: float left>;
        $f2 = $f1 - 1.0F;
        $f3 = r2.<android.graphics.RectF: float top>;
        $f4 = $f3 - 1.0F;
        $f5 = r2.<android.graphics.RectF: float right>;
        $f6 = $f5 + 1.0F;
        $f7 = r2.<android.graphics.RectF: float bottom>;
        $f8 = $f7 + 1.0F;
        $r7 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mBorderPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f2, $f4, $f6, $f8, $r7);
        $r8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mHueShader>;
        if $r8 != null goto label0;

        $r9 = new android.graphics.LinearGradient;
        $f9 = r2.<android.graphics.RectF: float left>;
        $f10 = r2.<android.graphics.RectF: float top>;
        $f11 = r2.<android.graphics.RectF: float left>;
        $f12 = r2.<android.graphics.RectF: float bottom>;
        $r10 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int[] buildHueColorArray()>();
        $r3 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;
        specialinvoke $r9.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f9, $f10, $f11, $f12, $r10, null, $r3);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mHueShader> = $r9;
        $r11 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHuePaint>;
        $r12 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mHueShader>;
        virtualinvoke $r11.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r12);

     label0:
        $r14 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHuePaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r2, $r14);
        $f13 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f14 = 4.0F * $f13;
        f0 = $f14 / 2.0F;
        $f15 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue>;
        r4 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Point hueToPoint(float)>($f15);
        $r15 = new android.graphics.RectF;
        specialinvoke $r15.<android.graphics.RectF: void <init>()>();
        r5 = $r15;
        $f16 = r2.<android.graphics.RectF: float left>;
        $f17 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float RECTANGLE_TRACKER_OFFSET>;
        $f18 = $f16 - $f17;
        r5.<android.graphics.RectF: float left> = $f18;
        $f19 = r2.<android.graphics.RectF: float right>;
        $f20 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float RECTANGLE_TRACKER_OFFSET>;
        $f21 = $f19 + $f20;
        r5.<android.graphics.RectF: float right> = $f21;
        $i1 = r4.<android.graphics.Point: int y>;
        $f22 = (float) $i1;
        $f23 = $f22 - f0;
        r5.<android.graphics.RectF: float top> = $f23;
        $i2 = r4.<android.graphics.Point: int y>;
        $f24 = (float) $i2;
        $f25 = $f24 + f0;
        r5.<android.graphics.RectF: float bottom> = $f25;
        $r16 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHueTrackerPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>(r5, 2.0F, 2.0F, $r16);
        return;
    }

    private void drawAlphaPanel(android.graphics.Canvas)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.graphics.Canvas r1;
        android.graphics.RectF r2, r6, $r7, $r22;
        float[] r3, $r12;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.graphics.Shader$TileMode $r4;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32;
        android.graphics.Point r5;
        boolean $z0;
        net.margaritov.preference.colorpicker.AlphaPatternDrawable $r8, $r11;
        android.graphics.Paint $r9, $r10, $r14, $r17, $r21, $r23;
        android.graphics.LinearGradient $r13;
        android.graphics.Shader $r15;
        java.lang.String $r18, $r19, $r20;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.graphics.Canvas;
        $z0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel>;
        if $z0 == 0 goto label0;

        $r7 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        if $r7 == null goto label0;

        $r8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern>;
        if $r8 != null goto label1;

     label0:
        return;

     label1:
        r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        $r9 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mBorderPaint>;
        $i2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mBorderColor>;
        virtualinvoke $r9.<android.graphics.Paint: void setColor(int)>($i2);
        $f1 = r2.<android.graphics.RectF: float left>;
        $f2 = $f1 - 1.0F;
        $f3 = r2.<android.graphics.RectF: float top>;
        $f4 = $f3 - 1.0F;
        $f5 = r2.<android.graphics.RectF: float right>;
        $f6 = $f5 + 1.0F;
        $f7 = r2.<android.graphics.RectF: float bottom>;
        $f8 = $f7 + 1.0F;
        $r10 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mBorderPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f2, $f4, $f6, $f8, $r10);
        $r11 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern>;
        virtualinvoke $r11.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: void draw(android.graphics.Canvas)>(r1);
        $r12 = newarray (float)[3];
        $f9 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue>;
        $r12[0] = $f9;
        $f10 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat>;
        $r12[1] = $f10;
        $f11 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal>;
        $r12[2] = $f11;
        r3 = $r12;
        i0 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>(r3);
        i1 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>(0, r3);
        $r13 = new android.graphics.LinearGradient;
        $f12 = r2.<android.graphics.RectF: float left>;
        $f13 = r2.<android.graphics.RectF: float top>;
        $f14 = r2.<android.graphics.RectF: float right>;
        $f15 = r2.<android.graphics.RectF: float top>;
        $r4 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;
        specialinvoke $r13.<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode)>($f12, $f13, $f14, $f15, i0, i1, $r4);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mAlphaShader> = $r13;
        $r14 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaPaint>;
        $r15 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mAlphaShader>;
        virtualinvoke $r14.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r15);
        $r17 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>(r2, $r17);
        $r18 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: java.lang.String mAlphaSliderText>;
        if $r18 == null goto label2;

        $r19 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: java.lang.String mAlphaSliderText>;
        if $r19 == "" goto label2;

        $r20 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: java.lang.String mAlphaSliderText>;
        $f16 = virtualinvoke r2.<android.graphics.RectF: float centerX()>();
        $f17 = virtualinvoke r2.<android.graphics.RectF: float centerY()>();
        $f18 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f19 = 4.0F * $f18;
        $f20 = $f17 + $f19;
        $r21 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mAlphaTextPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r20, $f16, $f20, $r21);

     label2:
        $f21 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f22 = 4.0F * $f21;
        f0 = $f22 / 2.0F;
        $i3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha>;
        r5 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Point alphaToPoint(int)>($i3);
        $r22 = new android.graphics.RectF;
        specialinvoke $r22.<android.graphics.RectF: void <init>()>();
        r6 = $r22;
        $i4 = r5.<android.graphics.Point: int x>;
        $f23 = (float) $i4;
        $f24 = $f23 - f0;
        r6.<android.graphics.RectF: float left> = $f24;
        $i5 = r5.<android.graphics.Point: int x>;
        $f25 = (float) $i5;
        $f26 = $f25 + f0;
        r6.<android.graphics.RectF: float right> = $f26;
        $f27 = r2.<android.graphics.RectF: float top>;
        $f28 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float RECTANGLE_TRACKER_OFFSET>;
        $f29 = $f27 - $f28;
        r6.<android.graphics.RectF: float top> = $f29;
        $f30 = r2.<android.graphics.RectF: float bottom>;
        $f31 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float RECTANGLE_TRACKER_OFFSET>;
        $f32 = $f30 + $f31;
        r6.<android.graphics.RectF: float bottom> = $f32;
        $r23 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHueTrackerPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>(r6, 2.0F, 2.0F, $r23);
        return;
    }

    private android.graphics.Point hueToPoint(float)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.RectF r1;
        android.graphics.Point r2, $r3;
        int $i0, $i1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        f0 := @parameter0: float;
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mHueRect>;
        f1 = virtualinvoke r1.<android.graphics.RectF: float height()>();
        $r3 = new android.graphics.Point;
        specialinvoke $r3.<android.graphics.Point: void <init>()>();
        r2 = $r3;
        $f2 = f0 * f1;
        $f3 = $f2 / 360.0F;
        $f4 = f1 - $f3;
        $f5 = r1.<android.graphics.RectF: float top>;
        $f6 = $f4 + $f5;
        $i0 = (int) $f6;
        r2.<android.graphics.Point: int y> = $i0;
        $f7 = r1.<android.graphics.RectF: float left>;
        $i1 = (int) $f7;
        r2.<android.graphics.Point: int x> = $i1;
        return r2;
    }

    private android.graphics.Point satValToPoint(float, float)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.graphics.RectF r1;
        android.graphics.Point r2, $r3;
        int $i0, $i1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        f0 := @parameter0: float;
        f1 := @parameter1: float;
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mSatValRect>;
        f2 = virtualinvoke r1.<android.graphics.RectF: float height()>();
        f3 = virtualinvoke r1.<android.graphics.RectF: float width()>();
        $r3 = new android.graphics.Point;
        specialinvoke $r3.<android.graphics.Point: void <init>()>();
        r2 = $r3;
        $f4 = f0 * f3;
        $f5 = r1.<android.graphics.RectF: float left>;
        $f6 = $f4 + $f5;
        $i0 = (int) $f6;
        r2.<android.graphics.Point: int x> = $i0;
        $f7 = 1.0F - f1;
        $f8 = $f7 * f2;
        $f9 = r1.<android.graphics.RectF: float top>;
        $f10 = $f8 + $f9;
        $i1 = (int) $f10;
        r2.<android.graphics.Point: int y> = $i1;
        return r2;
    }

    private android.graphics.Point alphaToPoint(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0, $i1, $i2;
        android.graphics.RectF r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.Point r2, $r3;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        f0 = virtualinvoke r1.<android.graphics.RectF: float width()>();
        $r3 = new android.graphics.Point;
        specialinvoke $r3.<android.graphics.Point: void <init>()>();
        r2 = $r3;
        $f1 = (float) i0;
        $f2 = $f1 * f0;
        $f3 = $f2 / 255.0F;
        $f4 = f0 - $f3;
        $f5 = r1.<android.graphics.RectF: float left>;
        $f6 = $f4 + $f5;
        $i1 = (int) $f6;
        r2.<android.graphics.Point: int x> = $i1;
        $f7 = r1.<android.graphics.RectF: float top>;
        $i2 = (int) $f7;
        r2.<android.graphics.Point: int y> = $i2;
        return r2;
    }

    private float[] pointToSatVal(float, float)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        float f0, f1, f2, f3, $f4, f5, $f6, $f7, $f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        android.graphics.RectF r1;
        float[] r2;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        f0 := @parameter0: float;
        f1 := @parameter1: float;
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mSatValRect>;
        r2 = newarray (float)[2];
        f2 = virtualinvoke r1.<android.graphics.RectF: float width()>();
        f3 = virtualinvoke r1.<android.graphics.RectF: float height()>();
        $f4 = r1.<android.graphics.RectF: float left>;
        $b0 = f0 cmpg $f4;
        if $b0 >= 0 goto label0;

        f5 = 0.0F;
        goto label2;

     label0:
        $f6 = r1.<android.graphics.RectF: float right>;
        $b1 = f0 cmpl $f6;
        if $b1 <= 0 goto label1;

        f5 = f2;
        goto label2;

     label1:
        $f7 = r1.<android.graphics.RectF: float left>;
        f5 = f0 - $f7;

     label2:
        $f8 = r1.<android.graphics.RectF: float top>;
        $b2 = f1 cmpg $f8;
        if $b2 >= 0 goto label3;

        f9 = 0.0F;
        goto label5;

     label3:
        $f10 = r1.<android.graphics.RectF: float bottom>;
        $b3 = f1 cmpl $f10;
        if $b3 <= 0 goto label4;

        f9 = f3;
        goto label5;

     label4:
        $f11 = r1.<android.graphics.RectF: float top>;
        f9 = f1 - $f11;

     label5:
        $f12 = 1.0F / f2;
        $f13 = $f12 * f5;
        r2[0] = $f13;
        $f14 = 1.0F / f3;
        $f15 = $f14 * f9;
        $f16 = 1.0F - $f15;
        r2[1] = $f16;
        return r2;
    }

    private float pointToHue(float)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        float f0, f1, $f2, f3, $f4, $f5, $f6, $f7, $f8;
        android.graphics.RectF r1;
        byte $b0, $b1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        f0 := @parameter0: float;
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mHueRect>;
        f1 = virtualinvoke r1.<android.graphics.RectF: float height()>();
        $f2 = r1.<android.graphics.RectF: float top>;
        $b0 = f0 cmpg $f2;
        if $b0 >= 0 goto label0;

        f3 = 0.0F;
        goto label2;

     label0:
        $f4 = r1.<android.graphics.RectF: float bottom>;
        $b1 = f0 cmpl $f4;
        if $b1 <= 0 goto label1;

        f3 = f1;
        goto label2;

     label1:
        $f5 = r1.<android.graphics.RectF: float top>;
        f3 = f0 - $f5;

     label2:
        $f6 = f3 * 360.0F;
        $f7 = $f6 / f1;
        $f8 = 360.0F - $f7;
        return $f8;
    }

    private int pointToAlpha(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0, i1, i3, $i5, $i6, $i7, $i8;
        android.graphics.RectF r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b2, $b4;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        $f0 = virtualinvoke r1.<android.graphics.RectF: float width()>();
        i1 = (int) $f0;
        $f1 = (float) i0;
        $f2 = r1.<android.graphics.RectF: float left>;
        $b2 = $f1 cmpg $f2;
        if $b2 >= 0 goto label0;

        i3 = 0;
        goto label2;

     label0:
        $f3 = (float) i0;
        $f4 = r1.<android.graphics.RectF: float right>;
        $b4 = $f3 cmpl $f4;
        if $b4 <= 0 goto label1;

        i3 = i1;
        goto label2;

     label1:
        $f5 = r1.<android.graphics.RectF: float left>;
        $i5 = (int) $f5;
        i3 = i0 - $i5;

     label2:
        $i6 = i3 * 255;
        $i7 = $i6 / i1;
        $i8 = 255 - $i7;
        return $i8;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.view.MotionEvent r1;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i9, $i10, $i11;
        byte $b3, $b4, $b5, $b6, $b7, $b8;
        android.graphics.RectF $r2;
        net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener $r3, $r4;
        float[] $r5;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.view.MotionEvent;
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();
        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();
        z0 = 0;
        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        if $i1 != 2 goto label13;

        $i2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mLastTouchedPanel>;
        tableswitch($i2)
        {
            case 0: goto label0;
            case 1: goto label5;
            case 2: goto label8;
            default: goto label13;
        };

     label0:
        $f5 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat>;
        $f6 = f0 / 50.0F;
        f2 = $f5 + $f6;
        $f7 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal>;
        $f8 = f1 / 50.0F;
        f3 = $f7 - $f8;
        $b3 = f2 cmpg 0.0F;
        if $b3 >= 0 goto label1;

        f2 = 0.0F;
        goto label2;

     label1:
        $b4 = f2 cmpl 1.0F;
        if $b4 <= 0 goto label2;

        f2 = 1.0F;

     label2:
        $b5 = f3 cmpg 0.0F;
        if $b5 >= 0 goto label3;

        f3 = 0.0F;
        goto label4;

     label3:
        $b6 = f3 cmpl 1.0F;
        if $b6 <= 0 goto label4;

        f3 = 1.0F;

     label4:
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat> = f2;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal> = f3;
        z0 = 1;
        goto label13;

     label5:
        $f9 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue>;
        $f10 = f1 * 10.0F;
        f4 = $f9 - $f10;
        $b7 = f4 cmpg 0.0F;
        if $b7 >= 0 goto label6;

        f4 = 0.0F;
        goto label7;

     label6:
        $b8 = f4 cmpl 360.0F;
        if $b8 <= 0 goto label7;

        f4 = 360.0F;

     label7:
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue> = f4;
        z0 = 1;
        goto label13;

     label8:
        $z1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel>;
        if $z1 == 0 goto label9;

        $r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        if $r2 != null goto label10;

     label9:
        z0 = 0;
        goto label13;

     label10:
        $i9 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha>;
        $f11 = (float) $i9;
        $f12 = f0 * 10.0F;
        $f13 = $f11 - $f12;
        i0 = (int) $f13;
        if i0 >= 0 goto label11;

        i0 = 0;
        goto label12;

     label11:
        if i0 <= 255 goto label12;

        i0 = 255;

     label12:
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha> = i0;
        z0 = 1;

     label13:
        if z0 == 0 goto label15;

        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener>;
        if $r3 == null goto label14;

        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener>;
        $i10 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha>;
        $r5 = newarray (float)[3];
        $f14 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue>;
        $r5[0] = $f14;
        $f15 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat>;
        $r5[1] = $f15;
        $f16 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal>;
        $r5[2] = $f16;
        $i11 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>($i10, $r5);
        interfaceinvoke $r4.<net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener: void onColorChanged(int)>($i11);

     label14:
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void invalidate()>();
        return 1;

     label15:
        $z2 = specialinvoke r0.<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>(r1);
        return $z2;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.view.MotionEvent r1;
        boolean z0, $z1;
        android.graphics.Point $r2;
        int $i0, $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2, $f3, $f4;
        net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener $r3, $r4;
        float[] $r5;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.view.MotionEvent;
        z0 = 0;
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        tableswitch($i0)
        {
            case 0: goto label0;
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label0:
        $r2 = new android.graphics.Point;
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();
        $i1 = (int) $f0;
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();
        $i2 = (int) $f1;
        specialinvoke $r2.<android.graphics.Point: void <init>(int,int)>($i1, $i2);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Point mStartTouchPoint> = $r2;
        z0 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean moveTrackersIfNeeded(android.view.MotionEvent)>(r1);
        goto label3;

     label1:
        z0 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean moveTrackersIfNeeded(android.view.MotionEvent)>(r1);
        goto label3;

     label2:
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Point mStartTouchPoint> = null;
        z0 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean moveTrackersIfNeeded(android.view.MotionEvent)>(r1);

     label3:
        if z0 == 0 goto label5;

        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener>;
        if $r3 == null goto label4;

        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener>;
        $i3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha>;
        $r5 = newarray (float)[3];
        $f2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue>;
        $r5[0] = $f2;
        $f3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat>;
        $r5[1] = $f3;
        $f4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal>;
        $r5[2] = $f4;
        $i4 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>($i3, $r5);
        interfaceinvoke $r4.<net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener: void onColorChanged(int)>($i4);

     label4:
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void invalidate()>();
        return 1;

     label5:
        $z1 = specialinvoke r0.<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>(r1);
        return $z1;
    }

    private boolean moveTrackersIfNeeded(android.view.MotionEvent)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, $i2, $i3;
        float[] r2;
        android.graphics.Point $r3, $r4, $r5;
        android.graphics.RectF $r6, $r7, $r8, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: android.view.MotionEvent;
        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Point mStartTouchPoint>;
        if $r3 != null goto label0;

        return 0;

     label0:
        z0 = 0;
        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Point mStartTouchPoint>;
        i0 = $r4.<android.graphics.Point: int x>;
        $r5 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Point mStartTouchPoint>;
        i1 = $r5.<android.graphics.Point: int y>;
        $r6 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mHueRect>;
        $f0 = (float) i0;
        $f1 = (float) i1;
        $z1 = virtualinvoke $r6.<android.graphics.RectF: boolean contains(float,float)>($f0, $f1);
        if $z1 == 0 goto label1;

        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mLastTouchedPanel> = 1;
        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();
        $f3 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: float pointToHue(float)>($f2);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue> = $f3;
        z0 = 1;
        goto label3;

     label1:
        $r7 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mSatValRect>;
        $f4 = (float) i0;
        $f5 = (float) i1;
        $z2 = virtualinvoke $r7.<android.graphics.RectF: boolean contains(float,float)>($f4, $f5);
        if $z2 == 0 goto label2;

        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mLastTouchedPanel> = 0;
        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();
        $f7 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();
        r2 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: float[] pointToSatVal(float,float)>($f6, $f7);
        $f8 = r2[0];
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat> = $f8;
        $f9 = r2[1];
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal> = $f9;
        z0 = 1;
        goto label3;

     label2:
        $r8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        if $r8 == null goto label3;

        $r9 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        $f10 = (float) i0;
        $f11 = (float) i1;
        $z3 = virtualinvoke $r9.<android.graphics.RectF: boolean contains(float,float)>($f10, $f11);
        if $z3 == 0 goto label3;

        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mLastTouchedPanel> = 2;
        $f12 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();
        $i2 = (int) $f12;
        $i3 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int pointToAlpha(int)>($i2);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha> = $i3;
        z0 = 1;

     label3:
        return z0;
    }

    protected void onMeasure(int, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;
        boolean z0, z1, $z2, $z3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        java.lang.Object $r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        z0 = 0;
        z1 = 0;
        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);
        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);
        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);
        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);
        i6 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int chooseWidth(int,int)>(i2, i4);
        i7 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int chooseHeight(int,int)>(i3, i5);
        $z2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel>;
        if $z2 != 0 goto label2;

        $f0 = (float) i6;
        $f1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING>;
        $f2 = $f0 - $f1;
        $f3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float HUE_PANEL_WIDTH>;
        $f4 = $f2 - $f3;
        i8 = (int) $f4;
        if i8 > i7 goto label0;

        $r1 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: java.lang.Object getTag()>();
        $z3 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>("landscape");
        if $z3 == 0 goto label1;

     label0:
        i8 = i7;
        $f5 = (float) i8;
        $f6 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING>;
        $f7 = $f5 + $f6;
        $f8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float HUE_PANEL_WIDTH>;
        $f9 = $f7 + $f8;
        i9 = (int) $f9;
        goto label4;

     label1:
        i9 = i6;
        goto label4;

     label2:
        $f10 = (float) i7;
        $f11 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT>;
        $f12 = $f10 - $f11;
        $f13 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float HUE_PANEL_WIDTH>;
        $f14 = $f12 + $f13;
        i9 = (int) $f14;
        if i9 <= i6 goto label3;

        i9 = i6;
        $f15 = (float) i6;
        $f16 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float HUE_PANEL_WIDTH>;
        $f17 = $f15 - $f16;
        $f18 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT>;
        $f19 = $f17 + $f18;
        i8 = (int) $f19;
        goto label4;

     label3:
        i8 = i7;

     label4:
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void setMeasuredDimension(int,int)>(i9, i8);
        return;
    }

    private int chooseWidth(int, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0, i1, $i2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 == -2147483648 goto label0;

        if i0 != 1073741824 goto label1;

     label0:
        return i1;

     label1:
        $i2 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int getPrefferedWidth()>();
        return $i2;
    }

    private int chooseHeight(int, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0, i1, $i2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i0 == -2147483648 goto label0;

        if i0 != 1073741824 goto label1;

     label0:
        return i1;

     label1:
        $i2 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int getPrefferedHeight()>();
        return $i2;
    }

    private int getPrefferedWidth()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0, $i1;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 = specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int getPrefferedHeight()>();
        $z0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel>;
        if $z0 == 0 goto label0;

        $f0 = (float) i0;
        $f1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING>;
        $f2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT>;
        $f3 = $f1 + $f2;
        $f4 = $f0 - $f3;
        i0 = (int) $f4;

     label0:
        $f5 = (float) i0;
        $f6 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float HUE_PANEL_WIDTH>;
        $f7 = $f5 + $f6;
        $f8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING>;
        $f9 = $f7 + $f8;
        $i1 = (int) $f9;
        return $i1;
    }

    private int getPrefferedHeight()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        boolean $z0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $f0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f1 = 200.0F * $f0;
        i0 = (int) $f1;
        $z0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel>;
        if $z0 == 0 goto label0;

        $f2 = (float) i0;
        $f3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING>;
        $f4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT>;
        $f5 = $f3 + $f4;
        $f6 = $f2 + $f5;
        i0 = (int) $f6;

     label0:
        return i0;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.graphics.RectF $r1, $r2, $r3, $r4, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);
        $r1 = new android.graphics.RectF;
        specialinvoke $r1.<android.graphics.RectF: void <init>()>();
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect> = $r1;
        $r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDrawingOffset>;
        $i4 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int getPaddingLeft()>();
        $f1 = (float) $i4;
        $f2 = $f0 + $f1;
        $r2.<android.graphics.RectF: float left> = $f2;
        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f3 = (float) i0;
        $f4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDrawingOffset>;
        $f5 = $f3 - $f4;
        $i5 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int getPaddingRight()>();
        $f6 = (float) $i5;
        $f7 = $f5 - $f6;
        $r3.<android.graphics.RectF: float right> = $f7;
        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDrawingOffset>;
        $i6 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int getPaddingTop()>();
        $f9 = (float) $i6;
        $f10 = $f8 + $f9;
        $r4.<android.graphics.RectF: float top> = $f10;
        $r5 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f11 = (float) i1;
        $f12 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDrawingOffset>;
        $f13 = $f11 - $f12;
        $i7 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: int getPaddingBottom()>();
        $f14 = (float) $i7;
        $f15 = $f13 - $f14;
        $r5.<android.graphics.RectF: float bottom> = $f15;
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void setUpSatValRect()>();
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void setUpHueRect()>();
        specialinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void setUpAlphaRect()>();
        return;
    }

    private void setUpSatValRect()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.graphics.RectF r1, $r2;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10;
        boolean $z0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f5 = virtualinvoke r1.<android.graphics.RectF: float height()>();
        f0 = $f5 - 2.0F;
        $z0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel>;
        if $z0 == 0 goto label0;

        $f6 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING>;
        $f7 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT>;
        $f8 = $f6 + $f7;
        f0 = f0 - $f8;

     label0:
        $f9 = r1.<android.graphics.RectF: float left>;
        f1 = $f9 + 1.0F;
        $f10 = r1.<android.graphics.RectF: float top>;
        f2 = $f10 + 1.0F;
        f3 = f2 + f0;
        f4 = f1 + f0;
        $r2 = new android.graphics.RectF;
        specialinvoke $r2.<android.graphics.RectF: void <init>(float,float,float,float)>(f1, f2, f4, f3);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mSatValRect> = $r2;
        return;
    }

    private void setUpHueRect()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.graphics.RectF r1, $r2;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        boolean $z0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f4 = r1.<android.graphics.RectF: float right>;
        $f5 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float HUE_PANEL_WIDTH>;
        $f6 = $f4 - $f5;
        f0 = $f6 + 1.0F;
        $f7 = r1.<android.graphics.RectF: float top>;
        f1 = $f7 + 1.0F;
        $f8 = r1.<android.graphics.RectF: float bottom>;
        $f9 = $f8 - 1.0F;
        $z0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel>;
        if $z0 == 0 goto label0;

        $f10 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float PANEL_SPACING>;
        $f11 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT>;
        $f12 = $f10 + $f11;
        goto label1;

     label0:
        $f12 = 0.0F;

     label1:
        f2 = $f9 - $f12;
        $f13 = r1.<android.graphics.RectF: float right>;
        f3 = $f13 - 1.0F;
        $r2 = new android.graphics.RectF;
        specialinvoke $r2.<android.graphics.RectF: void <init>(float,float,float,float)>(f0, f1, f3, f2);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mHueRect> = $r2;
        return;
    }

    private void setUpAlphaRect()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        android.graphics.RectF r1, $r2, $r5, $r6, $r7, $r8;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        boolean $z0;
        net.margaritov.preference.colorpicker.AlphaPatternDrawable $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $z0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel>;
        if $z0 != 0 goto label0;

        return;

     label0:
        r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mDrawingRect>;
        $f4 = r1.<android.graphics.RectF: float left>;
        f0 = $f4 + 1.0F;
        $f5 = r1.<android.graphics.RectF: float bottom>;
        $f6 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float ALPHA_PANEL_HEIGHT>;
        $f7 = $f5 - $f6;
        f1 = $f7 + 1.0F;
        $f8 = r1.<android.graphics.RectF: float bottom>;
        f2 = $f8 - 1.0F;
        $f9 = r1.<android.graphics.RectF: float right>;
        f3 = $f9 - 1.0F;
        $r2 = new android.graphics.RectF;
        specialinvoke $r2.<android.graphics.RectF: void <init>(float,float,float,float)>(f0, f1, f3, f2);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect> = $r2;
        $r3 = new net.margaritov.preference.colorpicker.AlphaPatternDrawable;
        $f10 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDensity>;
        $f11 = 5.0F * $f10;
        $i0 = (int) $f11;
        specialinvoke $r3.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: void <init>(int)>($i0);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern> = $r3;
        $r4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.AlphaPatternDrawable mAlphaPattern>;
        $r5 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        $f12 = $r5.<android.graphics.RectF: float left>;
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f12);
        $r6 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        $f13 = $r6.<android.graphics.RectF: float top>;
        $i2 = staticinvoke <java.lang.Math: int round(float)>($f13);
        $r7 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        $f14 = $r7.<android.graphics.RectF: float right>;
        $i3 = staticinvoke <java.lang.Math: int round(float)>($f14);
        $r8 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.RectF mAlphaRect>;
        $f15 = $r8.<android.graphics.RectF: float bottom>;
        $i4 = staticinvoke <java.lang.Math: int round(float)>($f15);
        virtualinvoke $r4.<net.margaritov.preference.colorpicker.AlphaPatternDrawable: void setBounds(int,int,int,int)>($i1, $i2, $i3, $i4);
        return;
    }

    public void setOnColorChangedListener(net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener> = r1;
        return;
    }

    public void setBorderColor(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mBorderColor> = i0;
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void invalidate()>();
        return;
    }

    public int getBorderColor()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int $i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $i0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mBorderColor>;
        return $i0;
    }

    public int getColor()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int $i0, $i1;
        float[] $r1;
        float $f0, $f1, $f2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $i0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha>;
        $r1 = newarray (float)[3];
        $f0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue>;
        $r1[0] = $f0;
        $f1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat>;
        $r1[1] = $f1;
        $f2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal>;
        $r1[2] = $f2;
        $i1 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>($i0, $r1);
        return $i1;
    }

    public void setColor(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void setColor(int,boolean)>(i0, 0);
        return;
    }

    public void setColor(int, boolean)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        boolean z0;
        float[] r1, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener $r2, $r3;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        i1 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);
        i2 = staticinvoke <android.graphics.Color: int red(int)>(i0);
        i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);
        i4 = staticinvoke <android.graphics.Color: int green(int)>(i0);
        r1 = newarray (float)[3];
        staticinvoke <android.graphics.Color: void RGBToHSV(int,int,int,float[])>(i2, i4, i3, r1);
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha> = i1;
        $f0 = r1[0];
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue> = $f0;
        $f1 = r1[1];
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat> = $f1;
        $f2 = r1[2];
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal> = $f2;
        if z0 == 0 goto label0;

        $r2 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener>;
        if $r2 == null goto label0;

        $r3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener mListener>;
        $i5 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mAlpha>;
        $r4 = newarray (float)[3];
        $f3 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mHue>;
        $r4[0] = $f3;
        $f4 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mSat>;
        $r4[1] = $f4;
        $f5 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mVal>;
        $r4[2] = $f5;
        $i6 = staticinvoke <android.graphics.Color: int HSVToColor(int,float[])>($i5, $r4);
        interfaceinvoke $r3.<net.margaritov.preference.colorpicker.ColorPickerView$OnColorChangedListener: void onColorChanged(int)>($i6);

     label0:
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void invalidate()>();
        return;
    }

    public float getDrawingOffset()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        float $f0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $f0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: float mDrawingOffset>;
        return $f0;
    }

    public void setAlphaSliderVisible(boolean)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        boolean z0, $z1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        z0 := @parameter0: boolean;
        $z1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel>;
        if $z1 == z0 goto label0;

        r0.<net.margaritov.preference.colorpicker.ColorPickerView: boolean mShowAlphaPanel> = z0;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mValShader> = null;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mSatShader> = null;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mHueShader> = null;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Shader mAlphaShader> = null;
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void requestLayout()>();

     label0:
        return;
    }

    public void setSliderTrackerColor(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0, $i1;
        android.graphics.Paint $r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mSliderTrackerColor> = i0;
        $r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.graphics.Paint mHueTrackerPaint>;
        $i1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mSliderTrackerColor>;
        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i1);
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void invalidate()>();
        return;
    }

    public int getSliderTrackerColor()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int $i0;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $i0 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: int mSliderTrackerColor>;
        return $i0;
    }

    public void setAlphaSliderText(int)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        int i0;
        java.lang.String r1;
        android.content.Context $r2;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        i0 := @parameter0: int;
        $r2 = virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: android.content.Context getContext()>();
        r1 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int)>(i0);
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void setAlphaSliderText(java.lang.String)>(r1);
        return;
    }

    public void setAlphaSliderText(java.lang.String)
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        java.lang.String r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        r1 := @parameter0: java.lang.String;
        r0.<net.margaritov.preference.colorpicker.ColorPickerView: java.lang.String mAlphaSliderText> = r1;
        virtualinvoke r0.<net.margaritov.preference.colorpicker.ColorPickerView: void invalidate()>();
        return;
    }

    public java.lang.String getAlphaSliderText()
    {
        net.margaritov.preference.colorpicker.ColorPickerView r0;
        java.lang.String $r1;

        r0 := @this: net.margaritov.preference.colorpicker.ColorPickerView;
        $r1 = r0.<net.margaritov.preference.colorpicker.ColorPickerView: java.lang.String mAlphaSliderText>;
        return $r1;
    }
}
public interface  org.petero.droidfish.ActionFactory extends java.lang.Object
{

    public abstract org.petero.droidfish.UIAction getAction(java.lang.String);
}
class org.petero.droidfish.ButtonActions$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final android.app.Activity val$activity;
    final org.petero.droidfish.ButtonActions this$0;

    void <init>(org.petero.droidfish.ButtonActions, android.app.Activity)
    {
        org.petero.droidfish.ButtonActions$1 r0;
        org.petero.droidfish.ButtonActions r1;
        android.app.Activity r2;

        r0 := @this: org.petero.droidfish.ButtonActions$1;
        r1 := @parameter0: org.petero.droidfish.ButtonActions;
        r2 := @parameter1: android.app.Activity;
        r0.<org.petero.droidfish.ButtonActions$1: org.petero.droidfish.ButtonActions this$0> = r1;
        r0.<org.petero.droidfish.ButtonActions$1: android.app.Activity val$activity> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.view.View)
    {
        org.petero.droidfish.ButtonActions$1 r0;
        android.view.View r1;
        org.petero.droidfish.ButtonActions $r2, $r4, $r6, $r8;
        org.petero.droidfish.UIAction $r3, $r5, $r7;
        boolean $z0;
        android.app.Activity $r9;

        r0 := @this: org.petero.droidfish.ButtonActions$1;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.ButtonActions$1: org.petero.droidfish.ButtonActions this$0>;
        $r3 = staticinvoke <org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction access$000(org.petero.droidfish.ButtonActions)>($r2);
        if $r3 == null goto label0;

        $r4 = r0.<org.petero.droidfish.ButtonActions$1: org.petero.droidfish.ButtonActions this$0>;
        $r5 = staticinvoke <org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction access$000(org.petero.droidfish.ButtonActions)>($r4);
        $z0 = interfaceinvoke $r5.<org.petero.droidfish.UIAction: boolean enabled()>();
        if $z0 == 0 goto label1;

        $r6 = r0.<org.petero.droidfish.ButtonActions$1: org.petero.droidfish.ButtonActions this$0>;
        $r7 = staticinvoke <org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction access$000(org.petero.droidfish.ButtonActions)>($r6);
        interfaceinvoke $r7.<org.petero.droidfish.UIAction: void run()>();
        goto label1;

     label0:
        $r8 = r0.<org.petero.droidfish.ButtonActions$1: org.petero.droidfish.ButtonActions this$0>;
        $r9 = r0.<org.petero.droidfish.ButtonActions$1: android.app.Activity val$activity>;
        staticinvoke <org.petero.droidfish.ButtonActions: boolean access$100(org.petero.droidfish.ButtonActions,android.app.Activity)>($r8, $r9);

     label1:
        return;
    }
}
class org.petero.droidfish.ButtonActions$2 extends java.lang.Object implements android.view.View$OnLongClickListener
{
    final android.app.Activity val$activity;
    final org.petero.droidfish.ButtonActions this$0;

    void <init>(org.petero.droidfish.ButtonActions, android.app.Activity)
    {
        org.petero.droidfish.ButtonActions$2 r0;
        org.petero.droidfish.ButtonActions r1;
        android.app.Activity r2;

        r0 := @this: org.petero.droidfish.ButtonActions$2;
        r1 := @parameter0: org.petero.droidfish.ButtonActions;
        r2 := @parameter1: android.app.Activity;
        r0.<org.petero.droidfish.ButtonActions$2: org.petero.droidfish.ButtonActions this$0> = r1;
        r0.<org.petero.droidfish.ButtonActions$2: android.app.Activity val$activity> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onLongClick(android.view.View)
    {
        org.petero.droidfish.ButtonActions$2 r0;
        android.view.View r1;
        org.petero.droidfish.ButtonActions $r2;
        android.app.Activity $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.ButtonActions$2;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.ButtonActions$2: org.petero.droidfish.ButtonActions this$0>;
        $r3 = r0.<org.petero.droidfish.ButtonActions$2: android.app.Activity val$activity>;
        $z0 = staticinvoke <org.petero.droidfish.ButtonActions: boolean access$100(org.petero.droidfish.ButtonActions,android.app.Activity)>($r2, $r3);
        return $z0;
    }
}
public class org.petero.droidfish.ButtonActions extends java.lang.Object
{
    private android.widget.ImageButton button;
    private java.lang.String name;
    private int longClickDialog;
    private int menuTitle;
    private org.petero.droidfish.UIAction mainAction;
    private java.util.ArrayList menuActions;
    private static final int maxMenuActions;

    public void <init>(java.lang.String, int, int)
    {
        org.petero.droidfish.ButtonActions r0;
        java.lang.String r1;
        int i0, i1;
        java.util.ArrayList $r2;

        r0 := @this: org.petero.droidfish.ButtonActions;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction mainAction> = null;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.ButtonActions: java.util.ArrayList menuActions> = $r2;
        r0.<org.petero.droidfish.ButtonActions: android.widget.ImageButton button> = null;
        r0.<org.petero.droidfish.ButtonActions: java.lang.String name> = r1;
        r0.<org.petero.droidfish.ButtonActions: int longClickDialog> = i0;
        r0.<org.petero.droidfish.ButtonActions: int menuTitle> = i1;
        return;
    }

    public boolean isEnabled()
    {
        org.petero.droidfish.ButtonActions r0;
        java.util.Iterator r1;
        org.petero.droidfish.UIAction r2, $r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: org.petero.droidfish.ButtonActions;
        $r3 = r0.<org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction mainAction>;
        if $r3 == null goto label0;

        return 1;

     label0:
        $r4 = r0.<org.petero.droidfish.ButtonActions: java.util.ArrayList menuActions>;
        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.petero.droidfish.UIAction) $r5;
        if r2 == null goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public void setImageButton(android.widget.ImageButton, android.app.Activity)
    {
        org.petero.droidfish.ButtonActions r0;
        android.widget.ImageButton r1;
        android.app.Activity r2;
        org.petero.droidfish.ButtonActions$1 $r3;
        org.petero.droidfish.ButtonActions$2 $r4;

        r0 := @this: org.petero.droidfish.ButtonActions;
        r1 := @parameter0: android.widget.ImageButton;
        r2 := @parameter1: android.app.Activity;
        r0.<org.petero.droidfish.ButtonActions: android.widget.ImageButton button> = r1;
        $r3 = new org.petero.droidfish.ButtonActions$1;
        specialinvoke $r3.<org.petero.droidfish.ButtonActions$1: void <init>(org.petero.droidfish.ButtonActions,android.app.Activity)>(r0, r2);
        virtualinvoke r1.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r3);
        $r4 = new org.petero.droidfish.ButtonActions$2;
        specialinvoke $r4.<org.petero.droidfish.ButtonActions$2: void <init>(org.petero.droidfish.ButtonActions,android.app.Activity)>(r0, r2);
        virtualinvoke r1.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>($r4);
        return;
    }

    private boolean showMenu(android.app.Activity)
    {
        org.petero.droidfish.ButtonActions r0;
        android.app.Activity r1;
        boolean z0, z1, $z2, $z3;
        java.util.Iterator r2;
        org.petero.droidfish.UIAction r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        int $i0, $i1;

        r0 := @this: org.petero.droidfish.ButtonActions;
        r1 := @parameter0: android.app.Activity;
        z0 = 0;
        z1 = 0;
        $r4 = r0.<org.petero.droidfish.ButtonActions: java.util.ArrayList menuActions>;
        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.petero.droidfish.UIAction) $r5;
        if r3 == null goto label1;

        z0 = 1;
        $z3 = interfaceinvoke r3.<org.petero.droidfish.UIAction: boolean enabled()>();
        if $z3 == 0 goto label1;

        z1 = 1;

     label1:
        goto label0;

     label2:
        if z0 == 0 goto label4;

        if z1 == 0 goto label3;

        $i0 = r0.<org.petero.droidfish.ButtonActions: int longClickDialog>;
        virtualinvoke r1.<android.app.Activity: void removeDialog(int)>($i0);
        $i1 = r0.<org.petero.droidfish.ButtonActions: int longClickDialog>;
        virtualinvoke r1.<android.app.Activity: void showDialog(int)>($i1);

     label3:
        return 1;

     label4:
        return 0;
    }

    public int getMenuTitle()
    {
        org.petero.droidfish.ButtonActions r0;
        int $i0;

        r0 := @this: org.petero.droidfish.ButtonActions;
        $i0 = r0.<org.petero.droidfish.ButtonActions: int menuTitle>;
        return $i0;
    }

    public java.util.ArrayList getMenuActions()
    {
        org.petero.droidfish.ButtonActions r0;
        java.util.ArrayList $r1;

        r0 := @this: org.petero.droidfish.ButtonActions;
        $r1 = r0.<org.petero.droidfish.ButtonActions: java.util.ArrayList menuActions>;
        return $r1;
    }

    public void readPrefs(android.content.SharedPreferences, org.petero.droidfish.ActionFactory)
    {
        org.petero.droidfish.ButtonActions r0;
        android.content.SharedPreferences r1;
        org.petero.droidfish.ActionFactory r2;
        boolean z0;
        java.lang.StringBuilder $r3, $r6, $r8, $r9, $r14, $r15, $r17, $r18, $r19;
        java.lang.String r4, $r7, $r10, $r16, $r20, r21;
        int i0, $i1;
        org.petero.droidfish.UIAction r5, $r11, $r12;
        java.util.ArrayList $r13, $r22;
        android.widget.ImageButton $r23, $r24;
        byte $b2;

        r0 := @this: org.petero.droidfish.ButtonActions;
        r1 := @parameter0: android.content.SharedPreferences;
        r2 := @parameter1: org.petero.droidfish.ActionFactory;
        z0 = 0;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("button_action_");
        $r7 = r0.<org.petero.droidfish.ButtonActions: java.lang.String name>;
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_0");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        r4 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r10, "");
        $r11 = interfaceinvoke r2.<org.petero.droidfish.ActionFactory: org.petero.droidfish.UIAction getAction(java.lang.String)>(r4);
        r0.<org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction mainAction> = $r11;
        $r12 = r0.<org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction mainAction>;
        if $r12 == null goto label0;

        z0 = 1;

     label0:
        $r13 = r0.<org.petero.droidfish.ButtonActions: java.util.ArrayList menuActions>;
        virtualinvoke $r13.<java.util.ArrayList: void clear()>();
        i0 = 0;

     label1:
        if i0 >= 6 goto label3;

        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("button_action_");
        $r16 = r0.<org.petero.droidfish.ButtonActions: java.lang.String name>;
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");
        $i1 = i0 + 1;
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        r21 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r20, "");
        r5 = interfaceinvoke r2.<org.petero.droidfish.ActionFactory: org.petero.droidfish.UIAction getAction(java.lang.String)>(r21);
        if r5 == null goto label2;

        z0 = 1;

     label2:
        $r22 = r0.<org.petero.droidfish.ButtonActions: java.util.ArrayList menuActions>;
        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        i0 = i0 + 1;
        goto label1;

     label3:
        $r23 = r0.<org.petero.droidfish.ButtonActions: android.widget.ImageButton button>;
        if $r23 == null goto label6;

        $r24 = r0.<org.petero.droidfish.ButtonActions: android.widget.ImageButton button>;
        if z0 == 0 goto label4;

        $b2 = 0;
        goto label5;

     label4:
        $b2 = 8;

     label5:
        virtualinvoke $r24.<android.widget.ImageButton: void setVisibility(int)>($b2);

     label6:
        return;
    }

    public int getIcon()
    {
        org.petero.droidfish.ButtonActions r0;
        int i0;
        org.petero.droidfish.UIAction $r1, $r2;

        r0 := @this: org.petero.droidfish.ButtonActions;
        i0 = -1;
        $r1 = r0.<org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction mainAction>;
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction mainAction>;
        i0 = interfaceinvoke $r2.<org.petero.droidfish.UIAction: int getIcon()>();

     label0:
        if i0 != -1 goto label1;

        i0 = 2131034116;

     label1:
        return i0;
    }

    static org.petero.droidfish.UIAction access$000(org.petero.droidfish.ButtonActions)
    {
        org.petero.droidfish.ButtonActions r0;
        org.petero.droidfish.UIAction $r1;

        r0 := @parameter0: org.petero.droidfish.ButtonActions;
        $r1 = r0.<org.petero.droidfish.ButtonActions: org.petero.droidfish.UIAction mainAction>;
        return $r1;
    }

    static boolean access$100(org.petero.droidfish.ButtonActions, android.app.Activity)
    {
        org.petero.droidfish.ButtonActions r0;
        android.app.Activity r1;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.ButtonActions;
        r1 := @parameter1: android.app.Activity;
        $z0 = specialinvoke r0.<org.petero.droidfish.ButtonActions: boolean showMenu(android.app.Activity)>(r1);
        return $z0;
    }
}
class org.petero.droidfish.ChessBoard$AnimInfo$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.ChessBoard$AnimInfo this$1;

    void <init>(org.petero.droidfish.ChessBoard$AnimInfo)
    {
        org.petero.droidfish.ChessBoard$AnimInfo$1 r0;
        org.petero.droidfish.ChessBoard$AnimInfo r1;

        r0 := @this: org.petero.droidfish.ChessBoard$AnimInfo$1;
        r1 := @parameter0: org.petero.droidfish.ChessBoard$AnimInfo;
        r0.<org.petero.droidfish.ChessBoard$AnimInfo$1: org.petero.droidfish.ChessBoard$AnimInfo this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.ChessBoard$AnimInfo$1 r0;
        org.petero.droidfish.ChessBoard$AnimInfo $r1;
        org.petero.droidfish.ChessBoard $r2;

        r0 := @this: org.petero.droidfish.ChessBoard$AnimInfo$1;
        $r1 = r0.<org.petero.droidfish.ChessBoard$AnimInfo$1: org.petero.droidfish.ChessBoard$AnimInfo this$1>;
        $r2 = $r1.<org.petero.droidfish.ChessBoard$AnimInfo: org.petero.droidfish.ChessBoard this$0>;
        virtualinvoke $r2.<org.petero.droidfish.ChessBoard: void invalidate()>();
        return;
    }
}
final class org.petero.droidfish.ChessBoard$AnimInfo extends java.lang.Object
{
    boolean paused;
    long posHash;
    long startTime;
    long stopTime;
    long now;
    int piece1;
    int from1;
    int to1;
    int hide1;
    int piece2;
    int from2;
    int to2;
    int hide2;
    final org.petero.droidfish.ChessBoard this$0;

    void <init>(org.petero.droidfish.ChessBoard)
    {
        org.petero.droidfish.ChessBoard$AnimInfo r0;
        org.petero.droidfish.ChessBoard r1;

        r0 := @this: org.petero.droidfish.ChessBoard$AnimInfo;
        r1 := @parameter0: org.petero.droidfish.ChessBoard;
        r0.<org.petero.droidfish.ChessBoard$AnimInfo: org.petero.droidfish.ChessBoard this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard$AnimInfo: long startTime> = -1L;
        return;
    }

    public final boolean updateState()
    {
        org.petero.droidfish.ChessBoard$AnimInfo r0;
        long $l0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.ChessBoard$AnimInfo;
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<org.petero.droidfish.ChessBoard$AnimInfo: long now> = $l0;
        $z0 = specialinvoke r0.<org.petero.droidfish.ChessBoard$AnimInfo: boolean animActive()>();
        return $z0;
    }

    private final boolean animActive()
    {
        org.petero.droidfish.ChessBoard$AnimInfo r0;
        boolean $z0;
        long $l0, $l2, $l3, $l5, $l6;
        byte $b1, $b4, $b7;
        org.petero.droidfish.ChessBoard $r1;
        org.petero.droidfish.gamelogic.Position $r2;

        r0 := @this: org.petero.droidfish.ChessBoard$AnimInfo;
        $z0 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: boolean paused>;
        if $z0 != 0 goto label0;

        $l0 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: long startTime>;
        $b1 = $l0 cmp 0L;
        if $b1 < 0 goto label0;

        $l2 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: long now>;
        $l3 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: long stopTime>;
        $b4 = $l2 cmp $l3;
        if $b4 >= 0 goto label0;

        $l5 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: long posHash>;
        $r1 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: org.petero.droidfish.ChessBoard this$0>;
        $r2 = $r1.<org.petero.droidfish.ChessBoard: org.petero.droidfish.gamelogic.Position pos>;
        $l6 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.Position: long zobristHash()>();
        $b7 = $l5 cmp $l6;
        if $b7 == 0 goto label1;

     label0:
        return 0;

     label1:
        return 1;
    }

    public final boolean squareHidden(int)
    {
        org.petero.droidfish.ChessBoard$AnimInfo r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: org.petero.droidfish.ChessBoard$AnimInfo;
        i0 := @parameter0: int;
        $z0 = specialinvoke r0.<org.petero.droidfish.ChessBoard$AnimInfo: boolean animActive()>();
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $i1 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: int hide1>;
        if i0 == $i1 goto label1;

        $i2 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: int hide2>;
        if i0 != $i2 goto label2;

     label1:
        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public final void draw(android.graphics.Canvas)
    {
        org.petero.droidfish.ChessBoard$AnimInfo r0;
        android.graphics.Canvas r1;
        double d0, $d1, $d2;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l7, $l14, $l15;
        boolean $z0;
        int $i8, $i9, $i10, $i11, $i12, $i13;
        byte $b16;
        org.petero.droidfish.ChessBoard $r2;
        android.os.Handler $r3;
        org.petero.droidfish.ChessBoard$AnimInfo$1 $r4;

        r0 := @this: org.petero.droidfish.ChessBoard$AnimInfo;
        r1 := @parameter0: android.graphics.Canvas;
        $z0 = specialinvoke r0.<org.petero.droidfish.ChessBoard$AnimInfo: boolean animActive()>();
        if $z0 != 0 goto label0;

        return;

     label0:
        $l2 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: long now>;
        $l3 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: long startTime>;
        $l4 = $l2 - $l3;
        $d1 = (double) $l4;
        $l5 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: long stopTime>;
        $l6 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: long startTime>;
        $l7 = $l5 - $l6;
        $d2 = (double) $l7;
        d0 = $d1 / $d2;
        $i8 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: int piece2>;
        $i9 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: int from2>;
        $i10 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: int to2>;
        specialinvoke r0.<org.petero.droidfish.ChessBoard$AnimInfo: void drawAnimPiece(android.graphics.Canvas,int,int,int,double)>(r1, $i8, $i9, $i10, d0);
        $i11 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: int piece1>;
        $i12 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: int from1>;
        $i13 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: int to1>;
        specialinvoke r0.<org.petero.droidfish.ChessBoard$AnimInfo: void drawAnimPiece(android.graphics.Canvas,int,int,int,double)>(r1, $i11, $i12, $i13, d0);
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l14 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: long now>;
        $l15 = l0 - $l14;
        l1 = 20L - $l15;
        $b16 = l1 cmp 1L;
        if $b16 >= 0 goto label1;

        l1 = 1L;

     label1:
        $r2 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: org.petero.droidfish.ChessBoard this$0>;
        $r3 = staticinvoke <org.petero.droidfish.ChessBoard: android.os.Handler access$000(org.petero.droidfish.ChessBoard)>($r2);
        $r4 = new org.petero.droidfish.ChessBoard$AnimInfo$1;
        specialinvoke $r4.<org.petero.droidfish.ChessBoard$AnimInfo$1: void <init>(org.petero.droidfish.ChessBoard$AnimInfo)>(r0);
        virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, l1);
        return;
    }

    private void drawAnimPiece(android.graphics.Canvas, int, int, int, double)
    {
        org.petero.droidfish.ChessBoard$AnimInfo r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i18;
        double d0, $d1, $d2, $d3, $d4;
        org.petero.droidfish.ChessBoard $r2, $r3, $r4, $r5, $r6;
        long $l14, $l17;

        r0 := @this: org.petero.droidfish.ChessBoard$AnimInfo;
        r1 := @parameter0: android.graphics.Canvas;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        d0 := @parameter4: double;
        if i0 != 0 goto label0;

        return;

     label0:
        $r2 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: org.petero.droidfish.ChessBoard this$0>;
        $i9 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i1);
        i3 = virtualinvoke $r2.<org.petero.droidfish.ChessBoard: int getXCrd(int)>($i9);
        $r3 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: org.petero.droidfish.ChessBoard this$0>;
        $i10 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i1);
        i4 = virtualinvoke $r3.<org.petero.droidfish.ChessBoard: int getYCrd(int)>($i10);
        $r4 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: org.petero.droidfish.ChessBoard this$0>;
        $i11 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i2);
        i5 = virtualinvoke $r4.<org.petero.droidfish.ChessBoard: int getXCrd(int)>($i11);
        $r5 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: org.petero.droidfish.ChessBoard this$0>;
        $i12 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i2);
        i6 = virtualinvoke $r5.<org.petero.droidfish.ChessBoard: int getYCrd(int)>($i12);
        $i13 = i5 - i3;
        $d1 = (double) $i13;
        $d2 = $d1 * d0;
        $l14 = staticinvoke <java.lang.Math: long round(double)>($d2);
        $i15 = (int) $l14;
        i7 = i3 + $i15;
        $i16 = i6 - i4;
        $d3 = (double) $i16;
        $d4 = $d3 * d0;
        $l17 = staticinvoke <java.lang.Math: long round(double)>($d4);
        $i18 = (int) $l17;
        i8 = i4 + $i18;
        $r6 = r0.<org.petero.droidfish.ChessBoard$AnimInfo: org.petero.droidfish.ChessBoard this$0>;
        virtualinvoke $r6.<org.petero.droidfish.ChessBoard: void drawPiece(android.graphics.Canvas,int,int,int)>(r1, i7, i8, i0);
        return;
    }
}
public class org.petero.droidfish.ChessBoard$OnTrackballListener extends java.lang.Object
{

    public void <init>()
    {
        org.petero.droidfish.ChessBoard$OnTrackballListener r0;

        r0 := @this: org.petero.droidfish.ChessBoard$OnTrackballListener;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onTrackballEvent(android.view.MotionEvent)
    {
        org.petero.droidfish.ChessBoard$OnTrackballListener r0;
        android.view.MotionEvent r1;

        r0 := @this: org.petero.droidfish.ChessBoard$OnTrackballListener;
        r1 := @parameter0: android.view.MotionEvent;
        return;
    }
}
public final class org.petero.droidfish.ChessBoard$SquareDecoration extends java.lang.Object implements java.lang.Comparable
{
    int sq;
    int number;

    public void <init>(int, int)
    {
        org.petero.droidfish.ChessBoard$SquareDecoration r0;
        int i0, i1;

        r0 := @this: org.petero.droidfish.ChessBoard$SquareDecoration;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard$SquareDecoration: int sq> = i0;
        r0.<org.petero.droidfish.ChessBoard$SquareDecoration: int number> = i1;
        return;
    }

    public int compareTo(org.petero.droidfish.ChessBoard$SquareDecoration)
    {
        org.petero.droidfish.ChessBoard$SquareDecoration r0, r1;
        int i0, i1, i2, i3, $i4, $i5, i6, $i7, $i8, $i9;

        r0 := @this: org.petero.droidfish.ChessBoard$SquareDecoration;
        r1 := @parameter0: org.petero.droidfish.ChessBoard$SquareDecoration;
        i0 = 100000;
        i1 = r0.<org.petero.droidfish.ChessBoard$SquareDecoration: int number>;
        if i1 <= 0 goto label0;

        $i4 = i0 - i1;
        goto label2;

     label0:
        if i1 != 0 goto label1;

        $i4 = 0;
        goto label2;

     label1:
        $i5 = neg i0;
        $i4 = $i5 - i1;

     label2:
        i2 = $i4;
        i6 = r1.<org.petero.droidfish.ChessBoard$SquareDecoration: int number>;
        if i6 <= 0 goto label3;

        $i7 = i0 - i6;
        goto label5;

     label3:
        if i6 != 0 goto label4;

        $i7 = 0;
        goto label5;

     label4:
        $i8 = neg i0;
        $i7 = $i8 - i6;

     label5:
        i3 = $i7;
        $i9 = i3 - i2;
        return $i9;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.petero.droidfish.ChessBoard$SquareDecoration r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.petero.droidfish.ChessBoard$SquareDecoration;
        r1 := @parameter0: java.lang.Object;
        $r2 = (org.petero.droidfish.ChessBoard$SquareDecoration) r1;
        $i0 = virtualinvoke r0.<org.petero.droidfish.ChessBoard$SquareDecoration: int compareTo(org.petero.droidfish.ChessBoard$SquareDecoration)>($r2);
        return $i0;
    }
}
public abstract class org.petero.droidfish.ChessBoard extends android.view.View
{
    public org.petero.droidfish.gamelogic.Position pos;
    public int selectedSquare;
    public boolean userSelectedSquare;
    public float cursorX;
    public float cursorY;
    public boolean cursorVisible;
    protected int x0;
    protected int y0;
    protected int sqSize;
    int pieceXDelta;
    int pieceYDelta;
    public boolean flipped;
    public boolean drawSquareLabels;
    boolean toggleSelection;
    java.util.List moveHints;
    private java.util.ArrayList decorations;
    protected android.graphics.Paint darkPaint;
    protected android.graphics.Paint brightPaint;
    private android.graphics.Paint selectedSquarePaint;
    private android.graphics.Paint cursorSquarePaint;
    private android.graphics.Paint whitePiecePaint;
    private android.graphics.Paint blackPiecePaint;
    private android.graphics.Paint labelPaint;
    private android.graphics.Paint decorationPaint;
    private java.util.ArrayList moveMarkPaint;
    private android.os.Handler handlerTimer;
    private org.petero.droidfish.ChessBoard$AnimInfo anim;
    private android.graphics.Rect labelBounds;
    private org.petero.droidfish.ChessBoard$OnTrackballListener otbl;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        org.petero.droidfish.ChessBoard r0;
        android.content.Context r1, $r29;
        android.util.AttributeSet r2;
        byte $b0, $b3;
        int i1;
        android.graphics.Paint r3, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r32, $r34;
        android.os.Handler $r4;
        org.petero.droidfish.ChessBoard$AnimInfo $r5;
        org.petero.droidfish.gamelogic.Position $r6;
        float $f0;
        android.graphics.Paint$Style $r11, $r15, $r27;
        java.util.ArrayList $r25, $r28;
        boolean $z1;
        android.content.res.AssetManager $r30;
        android.graphics.Typeface r31;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);
        $r4 = new android.os.Handler;
        specialinvoke $r4.<android.os.Handler: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.os.Handler handlerTimer> = $r4;
        $r5 = new org.petero.droidfish.ChessBoard$AnimInfo;
        specialinvoke $r5.<org.petero.droidfish.ChessBoard$AnimInfo: void <init>(org.petero.droidfish.ChessBoard)>(r0);
        r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim> = $r5;
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Rect labelBounds> = null;
        r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$OnTrackballListener otbl> = null;
        $r6 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r6.<org.petero.droidfish.gamelogic.Position: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.gamelogic.Position pos> = $r6;
        r0.<org.petero.droidfish.ChessBoard: int selectedSquare> = -1;
        r0.<org.petero.droidfish.ChessBoard: boolean userSelectedSquare> = 0;
        $f0 = 0.0F;
        r0.<org.petero.droidfish.ChessBoard: float cursorY> = $f0;
        r0.<org.petero.droidfish.ChessBoard: float cursorX> = $f0;
        r0.<org.petero.droidfish.ChessBoard: boolean cursorVisible> = 0;
        $b0 = 0;
        r0.<org.petero.droidfish.ChessBoard: int sqSize> = $b0;
        r0.<org.petero.droidfish.ChessBoard: int y0> = $b0;
        r0.<org.petero.droidfish.ChessBoard: int x0> = $b0;
        $b3 = -1;
        r0.<org.petero.droidfish.ChessBoard: int pieceYDelta> = $b3;
        r0.<org.petero.droidfish.ChessBoard: int pieceXDelta> = $b3;
        r0.<org.petero.droidfish.ChessBoard: boolean flipped> = 0;
        r0.<org.petero.droidfish.ChessBoard: boolean drawSquareLabels> = 0;
        r0.<org.petero.droidfish.ChessBoard: boolean toggleSelection> = 0;
        $r7 = new android.graphics.Paint;
        specialinvoke $r7.<android.graphics.Paint: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint darkPaint> = $r7;
        $r8 = new android.graphics.Paint;
        specialinvoke $r8.<android.graphics.Paint: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint brightPaint> = $r8;
        $r9 = new android.graphics.Paint;
        specialinvoke $r9.<android.graphics.Paint: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint selectedSquarePaint> = $r9;
        $r10 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint selectedSquarePaint>;
        $r11 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke $r10.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r11);
        $r12 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint selectedSquarePaint>;
        virtualinvoke $r12.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r13 = new android.graphics.Paint;
        specialinvoke $r13.<android.graphics.Paint: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint cursorSquarePaint> = $r13;
        $r14 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint cursorSquarePaint>;
        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;
        virtualinvoke $r14.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r15);
        $r16 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint cursorSquarePaint>;
        virtualinvoke $r16.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r17 = new android.graphics.Paint;
        specialinvoke $r17.<android.graphics.Paint: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint whitePiecePaint> = $r17;
        $r18 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint whitePiecePaint>;
        virtualinvoke $r18.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r19 = new android.graphics.Paint;
        specialinvoke $r19.<android.graphics.Paint: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint blackPiecePaint> = $r19;
        $r20 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint blackPiecePaint>;
        virtualinvoke $r20.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r21 = new android.graphics.Paint;
        specialinvoke $r21.<android.graphics.Paint: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint labelPaint> = $r21;
        $r22 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint labelPaint>;
        virtualinvoke $r22.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r23 = new android.graphics.Paint;
        specialinvoke $r23.<android.graphics.Paint: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint decorationPaint> = $r23;
        $r24 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint decorationPaint>;
        virtualinvoke $r24.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r25 = new java.util.ArrayList;
        specialinvoke $r25.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList moveMarkPaint> = $r25;
        i1 = 0;

     label0:
        if i1 >= 6 goto label1;

        $r26 = new android.graphics.Paint;
        specialinvoke $r26.<android.graphics.Paint: void <init>()>();
        r3 = $r26;
        $r27 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;
        virtualinvoke r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r27);
        virtualinvoke r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        $r28 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList moveMarkPaint>;
        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);
        i1 = i1 + 1;
        goto label0;

     label1:
        $z1 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: boolean isInEditMode()>();
        if $z1 == 0 goto label2;

        return;

     label2:
        $r29 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: android.content.Context getContext()>();
        $r30 = virtualinvoke $r29.<android.content.Context: android.content.res.AssetManager getAssets()>();
        r31 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r30, "fonts/ChessCases.ttf");
        $r32 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint whitePiecePaint>;
        virtualinvoke $r32.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r31);
        $r34 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint blackPiecePaint>;
        virtualinvoke $r34.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r31);
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void setColors()>();
        return;
    }

    final void setColors()
    {
        org.petero.droidfish.ChessBoard r0;
        org.petero.droidfish.ColorTheme r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.Paint $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12;
        java.util.ArrayList $r10;
        java.lang.Object $r11;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 = staticinvoke <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme instance()>();
        $r2 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint darkPaint>;
        $i1 = virtualinvoke r1.<org.petero.droidfish.ColorTheme: int getColor(int)>(0);
        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i1);
        $r3 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint brightPaint>;
        $i2 = virtualinvoke r1.<org.petero.droidfish.ColorTheme: int getColor(int)>(1);
        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i2);
        $r4 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint selectedSquarePaint>;
        $i3 = virtualinvoke r1.<org.petero.droidfish.ColorTheme: int getColor(int)>(2);
        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i3);
        $r5 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint cursorSquarePaint>;
        $i4 = virtualinvoke r1.<org.petero.droidfish.ColorTheme: int getColor(int)>(3);
        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i4);
        $r6 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint whitePiecePaint>;
        $i5 = virtualinvoke r1.<org.petero.droidfish.ColorTheme: int getColor(int)>(5);
        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i5);
        $r7 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint blackPiecePaint>;
        $i6 = virtualinvoke r1.<org.petero.droidfish.ColorTheme: int getColor(int)>(4);
        virtualinvoke $r7.<android.graphics.Paint: void setColor(int)>($i6);
        $r8 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint labelPaint>;
        $i7 = virtualinvoke r1.<org.petero.droidfish.ColorTheme: int getColor(int)>(13);
        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i7);
        $r9 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint decorationPaint>;
        $i8 = virtualinvoke r1.<org.petero.droidfish.ColorTheme: int getColor(int)>(14);
        virtualinvoke $r9.<android.graphics.Paint: void setColor(int)>($i8);
        i0 = 0;

     label0:
        if i0 >= 6 goto label1;

        $r10 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList moveMarkPaint>;
        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        $r12 = (android.graphics.Paint) $r11;
        $i9 = 7 + i0;
        $i10 = virtualinvoke r1.<org.petero.droidfish.ColorTheme: int getColor(int)>($i9);
        virtualinvoke $r12.<android.graphics.Paint: void setColor(int)>($i10);
        i0 = i0 + 1;
        goto label0;

     label1:
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void invalidate()>();
        return;
    }

    public final void setAnimMove(org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move, boolean)
    {
        org.petero.droidfish.ChessBoard r0;
        org.petero.droidfish.gamelogic.Position r1, r3, $r7;
        org.petero.droidfish.gamelogic.Move r2;
        boolean z0, z1, $z2, z3;
        org.petero.droidfish.gamelogic.UndoInfo r4, $r8;
        int i0, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i16, $i21, i22, $i23, $i24, $i25, $i26, i27, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i43, $i44, $i45, $i46, $i47, $i48, i49, $i50, $i51, $i53, $i54, $i55, $i56, $i57, $i58, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i69, $i70, $i71, $i72, $i73;
        double d0, d1, $d2, $d3;
        org.petero.droidfish.ChessBoard$AnimInfo $r5, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52;
        long $l1, $l2, $l15, $l17, $l18, $l19, $l20;
        byte $b33, $b42, $b52, $b59, $b68;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r2 := @parameter1: org.petero.droidfish.gamelogic.Move;
        z0 := @parameter2: boolean;
        $r5 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r5.<org.petero.droidfish.ChessBoard$AnimInfo: long startTime> = -1L;
        $r6 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r6.<org.petero.droidfish.ChessBoard$AnimInfo: boolean paused> = 1;
        if z0 == 0 goto label0;

        $r7 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r7.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r1);
        r3 = $r7;
        $r8 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r8.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r4 = $r8;
        virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r2, r4);
        $r9 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $l1 = virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: long zobristHash()>();
        $r9.<org.petero.droidfish.ChessBoard$AnimInfo: long posHash> = $l1;
        goto label1;

     label0:
        $r10 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $l2 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: long zobristHash()>();
        $r10.<org.petero.droidfish.ChessBoard$AnimInfo: long posHash> = $l2;

     label1:
        $i3 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i3);
        $i5 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i6 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i5);
        i7 = $i4 - $i6;
        $i8 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i9 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i8);
        $i10 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i11 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i10);
        i0 = $i9 - $i11;
        $i12 = i7 * i7;
        $i13 = i0 * i0;
        $i14 = $i12 + $i13;
        $d2 = (double) $i14;
        d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);
        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>(d0);
        d1 = $d3 * 100.0;
        $l15 = staticinvoke <java.lang.Math: long round(double)>(d1);
        i16 = (int) $l15;
        if i16 <= 0 goto label20;

        $r11 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $l17 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r11.<org.petero.droidfish.ChessBoard$AnimInfo: long startTime> = $l17;
        $r12 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r13 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $l18 = $r13.<org.petero.droidfish.ChessBoard$AnimInfo: long startTime>;
        $l19 = (long) i16;
        $l20 = $l18 + $l19;
        $r12.<org.petero.droidfish.ChessBoard$AnimInfo: long stopTime> = $l20;
        $r14 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r14.<org.petero.droidfish.ChessBoard$AnimInfo: int piece2> = 0;
        $r15 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r15.<org.petero.droidfish.ChessBoard$AnimInfo: int from2> = -1;
        $r16 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r16.<org.petero.droidfish.ChessBoard$AnimInfo: int to2> = -1;
        $r17 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r17.<org.petero.droidfish.ChessBoard$AnimInfo: int hide2> = -1;
        if z0 == 0 goto label10;

        $i21 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        i22 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i21);
        $r18 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r18.<org.petero.droidfish.ChessBoard$AnimInfo: int piece1> = i22;
        $r19 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i23 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $r19.<org.petero.droidfish.ChessBoard$AnimInfo: int from1> = $i23;
        $r20 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i24 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $r20.<org.petero.droidfish.ChessBoard$AnimInfo: int to1> = $i24;
        $r21 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r22 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i25 = $r22.<org.petero.droidfish.ChessBoard$AnimInfo: int to1>;
        $r21.<org.petero.droidfish.ChessBoard$AnimInfo: int hide1> = $i25;
        $i26 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        i27 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i26);
        if i27 == 0 goto label2;

        $r23 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r23.<org.petero.droidfish.ChessBoard$AnimInfo: int piece2> = i27;
        $r24 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i28 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $r24.<org.petero.droidfish.ChessBoard$AnimInfo: int from2> = $i28;
        $r25 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i29 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $r25.<org.petero.droidfish.ChessBoard$AnimInfo: int to2> = $i29;
        goto label9;

     label2:
        if i22 == 1 goto label3;

        if i22 != 7 goto label9;

     label3:
        z1 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i22);
        $i30 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i31 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i32 = $i31 + 2;
        if $i30 != $i32 goto label6;

        $r26 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        if z1 == 0 goto label4;

        $b33 = 3;
        goto label5;

     label4:
        $b33 = 9;

     label5:
        $r26.<org.petero.droidfish.ChessBoard$AnimInfo: int piece2> = $b33;
        $r27 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i34 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i35 = $i34 + 1;
        $r27.<org.petero.droidfish.ChessBoard$AnimInfo: int from2> = $i35;
        $r28 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i36 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i37 = $i36 - 1;
        $r28.<org.petero.droidfish.ChessBoard$AnimInfo: int to2> = $i37;
        $r29 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r30 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i38 = $r30.<org.petero.droidfish.ChessBoard$AnimInfo: int to2>;
        $r29.<org.petero.droidfish.ChessBoard$AnimInfo: int hide2> = $i38;
        goto label9;

     label6:
        $i39 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i40 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i41 = $i40 - 2;
        if $i39 != $i41 goto label9;

        $r31 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        if z1 == 0 goto label7;

        $b42 = 3;
        goto label8;

     label7:
        $b42 = 9;

     label8:
        $r31.<org.petero.droidfish.ChessBoard$AnimInfo: int piece2> = $b42;
        $r32 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i43 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i44 = $i43 - 2;
        $r32.<org.petero.droidfish.ChessBoard$AnimInfo: int from2> = $i44;
        $r33 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i45 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i46 = $i45 + 1;
        $r33.<org.petero.droidfish.ChessBoard$AnimInfo: int to2> = $i46;
        $r34 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r35 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i47 = $r35.<org.petero.droidfish.ChessBoard$AnimInfo: int to2>;
        $r34.<org.petero.droidfish.ChessBoard$AnimInfo: int hide2> = $i47;

     label9:
        goto label20;

     label10:
        $i48 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        i49 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i48);
        $r36 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r36.<org.petero.droidfish.ChessBoard$AnimInfo: int piece1> = i49;
        $i50 = r2.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        if $i50 == 0 goto label13;

        $r37 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r38 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i51 = $r38.<org.petero.droidfish.ChessBoard$AnimInfo: int piece1>;
        $z2 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>($i51);
        if $z2 == 0 goto label11;

        $b52 = 6;
        goto label12;

     label11:
        $b52 = 12;

     label12:
        $r37.<org.petero.droidfish.ChessBoard$AnimInfo: int piece1> = $b52;

     label13:
        $r39 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i53 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $r39.<org.petero.droidfish.ChessBoard$AnimInfo: int from1> = $i53;
        $r40 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i54 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $r40.<org.petero.droidfish.ChessBoard$AnimInfo: int to1> = $i54;
        $r41 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r42 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i55 = $r42.<org.petero.droidfish.ChessBoard$AnimInfo: int to1>;
        $r41.<org.petero.droidfish.ChessBoard$AnimInfo: int hide1> = $i55;
        if i49 == 1 goto label14;

        if i49 != 7 goto label20;

     label14:
        z3 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i49);
        $i56 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i57 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i58 = $i57 + 2;
        if $i56 != $i58 goto label17;

        $r43 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        if z3 == 0 goto label15;

        $b59 = 3;
        goto label16;

     label15:
        $b59 = 9;

     label16:
        $r43.<org.petero.droidfish.ChessBoard$AnimInfo: int piece2> = $b59;
        $r44 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i60 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i61 = $i60 - 1;
        $r44.<org.petero.droidfish.ChessBoard$AnimInfo: int from2> = $i61;
        $r45 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i62 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i63 = $i62 + 1;
        $r45.<org.petero.droidfish.ChessBoard$AnimInfo: int to2> = $i63;
        $r46 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r47 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i64 = $r47.<org.petero.droidfish.ChessBoard$AnimInfo: int to2>;
        $r46.<org.petero.droidfish.ChessBoard$AnimInfo: int hide2> = $i64;
        goto label20;

     label17:
        $i65 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i66 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i67 = $i66 - 2;
        if $i65 != $i67 goto label20;

        $r48 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        if z3 == 0 goto label18;

        $b68 = 3;
        goto label19;

     label18:
        $b68 = 9;

     label19:
        $r48.<org.petero.droidfish.ChessBoard$AnimInfo: int piece2> = $b68;
        $r49 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i69 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i70 = $i69 + 1;
        $r49.<org.petero.droidfish.ChessBoard$AnimInfo: int from2> = $i70;
        $r50 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i71 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i72 = $i71 - 2;
        $r50.<org.petero.droidfish.ChessBoard$AnimInfo: int to2> = $i72;
        $r51 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r52 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $i73 = $r52.<org.petero.droidfish.ChessBoard$AnimInfo: int to2>;
        $r51.<org.petero.droidfish.ChessBoard$AnimInfo: int hide2> = $i73;

     label20:
        return;
    }

    public final void setPosition(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.ChessBoard r0;
        org.petero.droidfish.gamelogic.Position r1, $r4, $r5;
        boolean z0, $z1, $z2;
        org.petero.droidfish.ChessBoard$AnimInfo $r2, $r3;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        z0 = 0;
        $z1 = 1;
        $r2 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r2.<org.petero.droidfish.ChessBoard$AnimInfo: boolean paused> = $z1;
        if $z1 == 0 goto label0;

        $r3 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $r3.<org.petero.droidfish.ChessBoard$AnimInfo: boolean paused> = 0;
        z0 = 1;

     label0:
        $r4 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.gamelogic.Position pos>;
        $z2 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.Position: boolean equals(java.lang.Object)>(r1);
        if $z2 != 0 goto label1;

        $r5 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r5.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r1);
        r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.gamelogic.Position pos> = $r5;
        z0 = 1;

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void invalidate()>();

     label2:
        return;
    }

    public final void setFlipped(boolean)
    {
        org.petero.droidfish.ChessBoard r0;
        boolean z0, $z1;

        r0 := @this: org.petero.droidfish.ChessBoard;
        z0 := @parameter0: boolean;
        $z1 = r0.<org.petero.droidfish.ChessBoard: boolean flipped>;
        if $z1 == z0 goto label0;

        r0.<org.petero.droidfish.ChessBoard: boolean flipped> = z0;
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void invalidate()>();

     label0:
        return;
    }

    public final void setDrawSquareLabels(boolean)
    {
        org.petero.droidfish.ChessBoard r0;
        boolean z0, $z1;

        r0 := @this: org.petero.droidfish.ChessBoard;
        z0 := @parameter0: boolean;
        $z1 = r0.<org.petero.droidfish.ChessBoard: boolean drawSquareLabels>;
        if $z1 == z0 goto label0;

        r0.<org.petero.droidfish.ChessBoard: boolean drawSquareLabels> = z0;
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void invalidate()>();

     label0:
        return;
    }

    public final void setSelection(int)
    {
        org.petero.droidfish.ChessBoard r0;
        int i0, $i1;

        r0 := @this: org.petero.droidfish.ChessBoard;
        i0 := @parameter0: int;
        $i1 = r0.<org.petero.droidfish.ChessBoard: int selectedSquare>;
        if i0 == $i1 goto label0;

        r0.<org.petero.droidfish.ChessBoard: int selectedSquare> = i0;
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void invalidate()>();

     label0:
        r0.<org.petero.droidfish.ChessBoard: boolean userSelectedSquare> = 1;
        return;
    }

    protected abstract int getWidth(int);

    protected abstract int getHeight(int);

    protected abstract int getSqSizeW(int);

    protected abstract int getSqSizeH(int);

    protected abstract int getMaxHeightPercentage();

    protected abstract int getMaxWidthPercentage();

    protected void onMeasure(int, int)
    {
        org.petero.droidfish.ChessBoard r0;
        int i0, i1, i2, i3, i4, i5, i6, i8, $i9, $i10, $i11, i12, $i13, $i14, $i15;
        byte $b7;

        r0 := @this: org.petero.droidfish.ChessBoard;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        specialinvoke r0.<android.view.View: void onMeasure(int,int)>(i0, i1);
        i2 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getMeasuredWidth()>();
        i3 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getMeasuredHeight()>();
        i4 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getSqSizeW(int)>(i2);
        i5 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getSqSizeH(int)>(i3);
        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i5);
        $b7 = -1;
        r0.<org.petero.droidfish.ChessBoard: int pieceYDelta> = $b7;
        r0.<org.petero.droidfish.ChessBoard: int pieceXDelta> = $b7;
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Rect labelBounds> = null;
        if i3 <= i2 goto label0;

        i8 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getMaxHeightPercentage()>();
        $i9 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getHeight(int)>(i6);
        $i10 = i3 * i8;
        $i11 = $i10 / 100;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i11);
        goto label1;

     label0:
        i12 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getMaxWidthPercentage()>();
        $i13 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getWidth(int)>(i6);
        $i14 = i2 * i12;
        $i15 = $i14 / 100;
        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i15);

     label1:
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void setMeasuredDimension(int,int)>(i2, i3);
        return;
    }

    protected abstract void computeOrigin(int, int);

    protected abstract int getXFromSq(int);

    protected abstract int getYFromSq(int);

    protected void onDraw(android.graphics.Canvas)
    {
        org.petero.droidfish.ChessBoard r0;
        android.graphics.Canvas r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i22, $i25, $i26, i27, $i28, i29, $i30, i31, i32, $i33, $i34, $i35, $i36, i37, i38, i39, i40, $i41, $i42, $i43, $i44, $i45;
        android.graphics.Paint r2, $r5, $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16;
        java.lang.String $r3, $r12;
        org.petero.droidfish.ChessBoard$AnimInfo $r4, $r10, $r17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        org.petero.droidfish.gamelogic.Position $r11;
        byte $b20, $b23;
        char $c21, $c24;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: android.graphics.Canvas;
        $z1 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: boolean isInEditMode()>();
        if $z1 == 0 goto label0;

        return;

     label0:
        $r4 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        z0 = virtualinvoke $r4.<org.petero.droidfish.ChessBoard$AnimInfo: boolean updateState()>();
        i0 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getWidth()>();
        i1 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getHeight()>();
        $i8 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getSqSizeW(int)>(i0);
        $i9 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getSqSizeH(int)>(i1);
        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i9);
        r0.<org.petero.droidfish.ChessBoard: int sqSize> = $i10;
        $r5 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint blackPiecePaint>;
        $i11 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $f0 = (float) $i11;
        virtualinvoke $r5.<android.graphics.Paint: void setTextSize(float)>($f0);
        $r6 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint whitePiecePaint>;
        $i12 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $f1 = (float) $i12;
        virtualinvoke $r6.<android.graphics.Paint: void setTextSize(float)>($f1);
        $r7 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint labelPaint>;
        $i13 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $f2 = (float) $i13;
        $f3 = $f2 / 4.0F;
        virtualinvoke $r7.<android.graphics.Paint: void setTextSize(float)>($f3);
        $r8 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint decorationPaint>;
        $i14 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $f4 = (float) $i14;
        $f5 = $f4 / 3.0F;
        virtualinvoke $r8.<android.graphics.Paint: void setTextSize(float)>($f5);
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void computeOrigin(int,int)>(i0, i1);
        i2 = 0;

     label1:
        if i2 >= 8 goto label14;

        i3 = 0;

     label2:
        if i3 >= 8 goto label13;

        i4 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getXCrd(int)>(i2);
        i5 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getYCrd(int)>(i3);
        $z2 = staticinvoke <org.petero.droidfish.gamelogic.Position: boolean darkSquare(int,int)>(i2, i3);
        if $z2 == 0 goto label3;

        $r9 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint darkPaint>;
        goto label4;

     label3:
        $r9 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint brightPaint>;

     label4:
        r2 = $r9;
        $f6 = (float) i4;
        $f7 = (float) i5;
        $i15 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i16 = i4 + $i15;
        $f8 = (float) $i16;
        $i17 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i18 = i5 + $i17;
        $f9 = (float) $i18;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f6, $f7, $f8, $f9, r2);
        i6 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i2, i3);
        if z0 == 0 goto label5;

        $r10 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        $z3 = virtualinvoke $r10.<org.petero.droidfish.ChessBoard$AnimInfo: boolean squareHidden(int)>(i6);
        if $z3 != 0 goto label6;

     label5:
        $r11 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.gamelogic.Position pos>;
        i7 = virtualinvoke $r11.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i6);
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void drawPiece(android.graphics.Canvas,int,int,int)>(r1, i4, i5, i7);

     label6:
        $z4 = r0.<org.petero.droidfish.ChessBoard: boolean drawSquareLabels>;
        if $z4 == 0 goto label12;

        $i19 = i2;
        $z5 = r0.<org.petero.droidfish.ChessBoard: boolean flipped>;
        if $z5 == 0 goto label7;

        $b20 = 7;
        goto label8;

     label7:
        $b20 = 0;

     label8:
        if $i19 != $b20 goto label9;

        $r3 = "12345678";
        $c21 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i3);
        specialinvoke r0.<org.petero.droidfish.ChessBoard: void drawLabel(android.graphics.Canvas,int,int,boolean,boolean,char)>(r1, i4, i5, 0, 0, $c21);

     label9:
        $i22 = i3;
        $z6 = r0.<org.petero.droidfish.ChessBoard: boolean flipped>;
        if $z6 == 0 goto label10;

        $b23 = 7;
        goto label11;

     label10:
        $b23 = 0;

     label11:
        if $i22 != $b23 goto label12;

        $r12 = "abcdefgh";
        $c24 = virtualinvoke $r12.<java.lang.String: char charAt(int)>(i2);
        specialinvoke r0.<org.petero.droidfish.ChessBoard: void drawLabel(android.graphics.Canvas,int,int,boolean,boolean,char)>(r1, i4, i5, 1, 1, $c24);

     label12:
        i3 = i3 + 1;
        goto label2;

     label13:
        i2 = i2 + 1;
        goto label1;

     label14:
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void drawExtraSquares(android.graphics.Canvas)>(r1);
        if z0 != 0 goto label15;

        $i25 = r0.<org.petero.droidfish.ChessBoard: int selectedSquare>;
        if $i25 == -1 goto label15;

        $i26 = r0.<org.petero.droidfish.ChessBoard: int selectedSquare>;
        i27 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getXFromSq(int)>($i26);
        $i28 = r0.<org.petero.droidfish.ChessBoard: int selectedSquare>;
        i29 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getYFromSq(int)>($i28);
        $r13 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint selectedSquarePaint>;
        $i30 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $f10 = (float) $i30;
        $f11 = $f10 / 16.0F;
        virtualinvoke $r13.<android.graphics.Paint: void setStrokeWidth(float)>($f11);
        i31 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getXCrd(int)>(i27);
        i32 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getYCrd(int)>(i29);
        $f12 = (float) i31;
        $f13 = (float) i32;
        $i33 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i34 = i31 + $i33;
        $f14 = (float) $i34;
        $i35 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i36 = i32 + $i35;
        $f15 = (float) $i36;
        $r14 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint selectedSquarePaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f12, $f13, $f14, $f15, $r14);

     label15:
        $z7 = r0.<org.petero.droidfish.ChessBoard: boolean cursorVisible>;
        if $z7 == 0 goto label16;

        $f16 = r0.<org.petero.droidfish.ChessBoard: float cursorX>;
        i37 = staticinvoke <java.lang.Math: int round(float)>($f16);
        $f17 = r0.<org.petero.droidfish.ChessBoard: float cursorY>;
        i38 = staticinvoke <java.lang.Math: int round(float)>($f17);
        i39 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getXCrd(int)>(i37);
        i40 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getYCrd(int)>(i38);
        $r15 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint cursorSquarePaint>;
        $i41 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $f18 = (float) $i41;
        $f19 = $f18 / 16.0F;
        virtualinvoke $r15.<android.graphics.Paint: void setStrokeWidth(float)>($f19);
        $f20 = (float) i39;
        $f21 = (float) i40;
        $i42 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i43 = i39 + $i42;
        $f22 = (float) $i43;
        $i44 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i45 = i40 + $i44;
        $f23 = (float) $i45;
        $r16 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint cursorSquarePaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f20, $f21, $f22, $f23, $r16);

     label16:
        if z0 != 0 goto label17;

        specialinvoke r0.<org.petero.droidfish.ChessBoard: void drawMoveHints(android.graphics.Canvas)>(r1);
        specialinvoke r0.<org.petero.droidfish.ChessBoard: void drawDecorations(android.graphics.Canvas)>(r1);

     label17:
        $r17 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$AnimInfo anim>;
        virtualinvoke $r17.<org.petero.droidfish.ChessBoard$AnimInfo: void draw(android.graphics.Canvas)>(r1);
        return;
    }

    private final void drawMoveHints(android.graphics.Canvas)
    {
        org.petero.droidfish.ChessBoard r0;
        android.graphics.Canvas r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        org.petero.droidfish.gamelogic.Move r2;
        android.graphics.Path r3, $r11;
        android.graphics.Matrix r4, $r12;
        android.graphics.Paint r5;
        java.util.List $r6, $r8, $r9;
        java.util.ArrayList $r7, $r13;
        java.lang.Object $r10, $r14;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: android.graphics.Canvas;
        $r6 = r0.<org.petero.droidfish.ChessBoard: java.util.List moveHints>;
        if $r6 != null goto label0;

        return;

     label0:
        $i2 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $d4 = (double) $i2;
        $d5 = $d4 / 2.0;
        f0 = (float) $d5;
        $i3 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $d6 = (double) $i3;
        $d7 = $d6 / 8.0;
        f1 = (float) $d7;
        d0 = 0.6108652381980153;
        d1 = staticinvoke <java.lang.Math: double cos(double)>(d0);
        d2 = staticinvoke <java.lang.Math: double sin(double)>(d0);
        d3 = staticinvoke <java.lang.Math: double tan(double)>(d0);
        $r7 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList moveMarkPaint>;
        $i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();
        $r8 = r0.<org.petero.droidfish.ChessBoard: java.util.List moveHints>;
        $i5 = interfaceinvoke $r8.<java.util.List: int size()>();
        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i5);
        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r9 = r0.<org.petero.droidfish.ChessBoard: java.util.List moveHints>;
        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);
        r2 = (org.petero.droidfish.gamelogic.Move) $r10;
        if r2 == null goto label3;

        $i6 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i7 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i6 != $i7 goto label2;

        goto label3;

     label2:
        $i8 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i9 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i8);
        $i10 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getXCrd(int)>($i9);
        $f16 = (float) $i10;
        f2 = $f16 + f0;
        $i11 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i12 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i11);
        $i13 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getYCrd(int)>($i12);
        $f17 = (float) $i13;
        f3 = $f17 + f0;
        $i14 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i15 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i14);
        $i16 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getXCrd(int)>($i15);
        $f18 = (float) $i16;
        f4 = $f18 + f0;
        $i17 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i18 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i17);
        $i19 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getYCrd(int)>($i18);
        $f19 = (float) $i19;
        f5 = $f19 + f0;
        $f20 = f4 - f2;
        $d8 = (double) $f20;
        $f21 = f5 - f3;
        $d9 = (double) $f21;
        $d10 = staticinvoke <java.lang.Math: double hypot(double,double)>($d8, $d9);
        $d11 = (double) f1;
        $d12 = $d10 + $d11;
        f6 = (float) $d12;
        f7 = 0.0F;
        $d13 = (double) f6;
        $d14 = (double) f0;
        $d15 = $d14 * d1;
        $d16 = $d13 - $d15;
        f8 = (float) $d16;
        $d17 = (double) f7;
        $d18 = (double) f0;
        $d19 = $d18 * d2;
        $d20 = $d17 - $d19;
        f9 = (float) $d20;
        $d21 = (double) f8;
        $d22 = (double) f1;
        $d23 = $d22 * d2;
        $d24 = $d21 - $d23;
        f10 = (float) $d24;
        $d25 = (double) f9;
        $d26 = (double) f1;
        $d27 = $d26 * d1;
        $d28 = $d25 + $d27;
        f11 = (float) $d28;
        $d29 = (double) f10;
        $f22 = neg f1;
        $f23 = $f22 / 2.0F;
        $f24 = $f23 - f11;
        $d30 = (double) $f24;
        $d31 = $d30 / d3;
        $d32 = $d29 + $d31;
        f12 = (float) $d32;
        $f25 = neg f1;
        f13 = $f25 / 2.0F;
        f14 = 0.0F;
        f15 = f13 / 2.0F;
        $r11 = new android.graphics.Path;
        specialinvoke $r11.<android.graphics.Path: void <init>()>();
        r3 = $r11;
        virtualinvoke r3.<android.graphics.Path: void moveTo(float,float)>(f6, f7);
        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>(f8, f9);
        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>(f12, f13);
        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>(f14, f15);
        $f26 = neg f15;
        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>(f14, $f26);
        $f27 = neg f13;
        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>(f12, $f27);
        $f28 = neg f9;
        virtualinvoke r3.<android.graphics.Path: void lineTo(float,float)>(f8, $f28);
        virtualinvoke r3.<android.graphics.Path: void close()>();
        $r12 = new android.graphics.Matrix;
        specialinvoke $r12.<android.graphics.Matrix: void <init>()>();
        r4 = $r12;
        $f29 = f5 - f3;
        $d33 = (double) $f29;
        $f30 = f4 - f2;
        $d34 = (double) $f30;
        $d35 = staticinvoke <java.lang.Math: double atan2(double,double)>($d33, $d34);
        $d36 = $d35 * 180.0;
        $d37 = $d36 / 3.141592653589793;
        $f31 = (float) $d37;
        virtualinvoke r4.<android.graphics.Matrix: boolean postRotate(float)>($f31);
        virtualinvoke r4.<android.graphics.Matrix: boolean postTranslate(float,float)>(f2, f3);
        virtualinvoke r3.<android.graphics.Path: void transform(android.graphics.Matrix)>(r4);
        $r13 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList moveMarkPaint>;
        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        r5 = (android.graphics.Paint) $r14;
        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r3, r5);

     label3:
        i1 = i1 + 1;
        goto label1;

     label4:
        return;
    }

    protected abstract void drawExtraSquares(android.graphics.Canvas);

    protected final void drawPiece(android.graphics.Canvas, int, int, int)
    {
        org.petero.droidfish.ChessBoard r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, i20, $i21, i22;
        boolean z0, $z1, z2, z3;
        java.lang.String r2, r3;
        android.graphics.Rect r4, $r5;
        android.graphics.Paint $r6, $r7, $r8;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: android.graphics.Canvas;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        z0 = 0;
        tableswitch(i2)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label7;
            case 8: goto label8;
            case 9: goto label9;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            default: goto label0;
        };

     label0:
        r2 = null;
        r3 = null;
        goto label13;

     label1:
        r2 = "H";
        r3 = "k";
        goto label13;

     label2:
        r2 = "I";
        r3 = "l";
        goto label13;

     label3:
        r2 = "J";
        r3 = "m";
        goto label13;

     label4:
        r2 = "K";
        r3 = "n";
        goto label13;

     label5:
        r2 = "L";
        r3 = "o";
        goto label13;

     label6:
        r2 = "M";
        r3 = "p";
        goto label13;

     label7:
        r2 = "N";
        r3 = "q";
        z0 = 1;
        goto label13;

     label8:
        r2 = "O";
        r3 = "r";
        z0 = 1;
        goto label13;

     label9:
        r2 = "P";
        r3 = "s";
        z0 = 1;
        goto label13;

     label10:
        r2 = "Q";
        r3 = "t";
        z0 = 1;
        goto label13;

     label11:
        r2 = "R";
        r3 = "u";
        z0 = 1;
        goto label13;

     label12:
        r2 = "S";
        r3 = "v";
        z0 = 1;

     label13:
        if r2 == null goto label16;

        $i3 = r0.<org.petero.droidfish.ChessBoard: int pieceXDelta>;
        if $i3 >= 0 goto label14;

        $r5 = new android.graphics.Rect;
        specialinvoke $r5.<android.graphics.Rect: void <init>()>();
        r4 = $r5;
        $r6 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint blackPiecePaint>;
        virtualinvoke $r6.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>("H", 0, 1, r4);
        $i4 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i5 = r4.<android.graphics.Rect: int left>;
        $i6 = r4.<android.graphics.Rect: int right>;
        $i7 = $i5 + $i6;
        $i8 = $i4 - $i7;
        $i9 = $i8 / 2;
        r0.<org.petero.droidfish.ChessBoard: int pieceXDelta> = $i9;
        $i10 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i11 = r4.<android.graphics.Rect: int top>;
        $i12 = r4.<android.graphics.Rect: int bottom>;
        $i13 = $i11 + $i12;
        $i14 = $i10 - $i13;
        $i15 = $i14 / 2;
        r0.<org.petero.droidfish.ChessBoard: int pieceYDelta> = $i15;

     label14:
        $z1 = r0.<org.petero.droidfish.ChessBoard: boolean flipped>;
        z2 = z0 ^ $z1;
        z3 = 0;
        if z3 == 0 goto label15;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();
        $f0 = (float) i0;
        $i17 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $f1 = (float) $i17;
        $f2 = $f1 * 0.5F;
        $f3 = $f0 + $f2;
        $f4 = (float) i1;
        $i18 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $f5 = (float) $i18;
        $f6 = $f5 * 0.5F;
        $f7 = $f4 + $f6;
        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f3, $f7);

     label15:
        $i19 = r0.<org.petero.droidfish.ChessBoard: int pieceXDelta>;
        i20 = i0 + $i19;
        $i21 = r0.<org.petero.droidfish.ChessBoard: int pieceYDelta>;
        i22 = i1 + $i21;
        $f8 = (float) i20;
        $f9 = (float) i22;
        $r7 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint whitePiecePaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r3, $f8, $f9, $r7);
        $f10 = (float) i20;
        $f11 = (float) i22;
        $r8 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint blackPiecePaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r2, $f10, $f11, $r8);
        if z3 == 0 goto label16;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label16:
        return;
    }

    private final void drawLabel(android.graphics.Canvas, int, int, boolean, boolean, char)
    {
        org.petero.droidfish.ChessBoard r0;
        android.graphics.Canvas r1;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i20;
        boolean z0, z1;
        char c2;
        java.lang.String r2;
        android.graphics.Rect $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        android.graphics.Paint $r5, $r11;
        float $f0, $f1;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: android.graphics.Canvas;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        z0 := @parameter3: boolean;
        z1 := @parameter4: boolean;
        c2 := @parameter5: char;
        r2 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c2);
        $r4 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Rect labelBounds>;
        if $r4 != null goto label0;

        $r3 = new android.graphics.Rect;
        specialinvoke $r3.<android.graphics.Rect: void <init>()>();
        r0.<org.petero.droidfish.ChessBoard: android.graphics.Rect labelBounds> = $r3;
        $r5 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint labelPaint>;
        $r6 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Rect labelBounds>;
        virtualinvoke $r5.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>("f", 0, 1, $r6);

     label0:
        $i4 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        i3 = $i4 / 16;
        if z0 == 0 goto label1;

        $i5 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $r7 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Rect labelBounds>;
        $i6 = $r7.<android.graphics.Rect: int right>;
        $i7 = $i5 - $i6;
        $i8 = $i7 - i3;
        i9 = i0 + $i8;
        goto label2;

     label1:
        $r8 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Rect labelBounds>;
        $i10 = $r8.<android.graphics.Rect: int left>;
        $i11 = neg $i10;
        $i12 = $i11 + i3;
        i9 = i0 + $i12;

     label2:
        if z1 == 0 goto label3;

        $i13 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $r9 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Rect labelBounds>;
        $i14 = $r9.<android.graphics.Rect: int bottom>;
        $i15 = $i13 - $i14;
        $i16 = $i15 - i3;
        i17 = i1 + $i16;
        goto label4;

     label3:
        $r10 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Rect labelBounds>;
        $i18 = $r10.<android.graphics.Rect: int top>;
        $i19 = neg $i18;
        $i20 = $i19 + i3;
        i17 = i1 + $i20;

     label4:
        $f0 = (float) i9;
        $f1 = (float) i17;
        $r11 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint labelPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r2, $f0, $f1, $r11);
        return;
    }

    protected abstract int getXCrd(int);

    protected abstract int getYCrd(int);

    protected abstract int getXSq(int);

    protected abstract int getYSq(int);

    public int eventToSquare(android.view.MotionEvent)
    {
        org.petero.droidfish.ChessBoard r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, $i5;
        float $f0, $f1;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: android.view.MotionEvent;
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();
        i0 = (int) $f0;
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();
        i1 = (int) $f1;
        i2 = -1;
        $i5 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        if $i5 <= 0 goto label0;

        i3 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getXSq(int)>(i0);
        i4 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getYSq(int)>(i1);
        if i3 < 0 goto label0;

        if i3 >= 8 goto label0;

        if i4 < 0 goto label0;

        if i4 >= 8 goto label0;

        i2 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i3, i4);

     label0:
        return i2;
    }

    protected abstract org.petero.droidfish.gamelogic.Move mousePressed(int);

    public final void setOnTrackballListener(org.petero.droidfish.ChessBoard$OnTrackballListener)
    {
        org.petero.droidfish.ChessBoard r0;
        org.petero.droidfish.ChessBoard$OnTrackballListener r1;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: org.petero.droidfish.ChessBoard$OnTrackballListener;
        r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$OnTrackballListener otbl> = r1;
        return;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        org.petero.droidfish.ChessBoard r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.ChessBoard$OnTrackballListener $r2, $r3;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$OnTrackballListener otbl>;
        if $r2 == null goto label0;

        $r3 = r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.ChessBoard$OnTrackballListener otbl>;
        virtualinvoke $r3.<org.petero.droidfish.ChessBoard$OnTrackballListener: void onTrackballEvent(android.view.MotionEvent)>(r1);
        return 1;

     label0:
        return 0;
    }

    protected abstract int minValidY();

    protected abstract int maxValidX();

    protected abstract int getSquare(int, int);

    public final org.petero.droidfish.gamelogic.Move handleTrackballEvent(android.view.MotionEvent)
    {
        org.petero.droidfish.ChessBoard r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i7, $i9, $i10, $i12;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        org.petero.droidfish.gamelogic.Move $r2;
        byte $b4, b5, $b6, $b8, $b11, $b13;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: android.view.MotionEvent;
        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        lookupswitch($i3)
        {
            case 0: goto label0;
            default: goto label2;
        };

     label0:
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void invalidate()>();
        $z0 = r0.<org.petero.droidfish.ChessBoard: boolean cursorVisible>;
        if $z0 == 0 goto label1;

        $f0 = r0.<org.petero.droidfish.ChessBoard: float cursorX>;
        i0 = staticinvoke <java.lang.Math: int round(float)>($f0);
        $f1 = r0.<org.petero.droidfish.ChessBoard: float cursorY>;
        i1 = staticinvoke <java.lang.Math: int round(float)>($f1);
        $f2 = (float) i0;
        r0.<org.petero.droidfish.ChessBoard: float cursorX> = $f2;
        $f3 = (float) i1;
        r0.<org.petero.droidfish.ChessBoard: float cursorY> = $f3;
        i2 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getSquare(int,int)>(i0, i1);
        $r2 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: org.petero.droidfish.gamelogic.Move mousePressed(int)>(i2);
        return $r2;

     label1:
        return null;

     label2:
        r0.<org.petero.droidfish.ChessBoard: boolean cursorVisible> = 1;
        $z1 = r0.<org.petero.droidfish.ChessBoard: boolean flipped>;
        if $z1 == 0 goto label3;

        $b4 = -1;
        goto label4;

     label3:
        $b4 = 1;

     label4:
        b5 = $b4;
        $f4 = r0.<org.petero.droidfish.ChessBoard: float cursorX>;
        $f5 = (float) b5;
        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();
        $f7 = $f5 * $f6;
        $f8 = $f4 + $f7;
        r0.<org.petero.droidfish.ChessBoard: float cursorX> = $f8;
        $f9 = r0.<org.petero.droidfish.ChessBoard: float cursorY>;
        $f10 = (float) b5;
        $f11 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();
        $f12 = $f10 * $f11;
        $f13 = $f9 - $f12;
        r0.<org.petero.droidfish.ChessBoard: float cursorY> = $f13;
        $f14 = r0.<org.petero.droidfish.ChessBoard: float cursorX>;
        $b6 = $f14 cmpg 0.0F;
        if $b6 >= 0 goto label5;

        r0.<org.petero.droidfish.ChessBoard: float cursorX> = 0.0F;

     label5:
        $f15 = r0.<org.petero.droidfish.ChessBoard: float cursorX>;
        $i7 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int maxValidX()>();
        $f16 = (float) $i7;
        $b8 = $f15 cmpl $f16;
        if $b8 <= 0 goto label6;

        $i9 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int maxValidX()>();
        $f17 = (float) $i9;
        r0.<org.petero.droidfish.ChessBoard: float cursorX> = $f17;

     label6:
        $f18 = r0.<org.petero.droidfish.ChessBoard: float cursorY>;
        $i10 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int minValidY()>();
        $f19 = (float) $i10;
        $b11 = $f18 cmpg $f19;
        if $b11 >= 0 goto label7;

        $i12 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int minValidY()>();
        $f20 = (float) $i12;
        r0.<org.petero.droidfish.ChessBoard: float cursorY> = $f20;

     label7:
        $f21 = r0.<org.petero.droidfish.ChessBoard: float cursorY>;
        $b13 = $f21 cmpl 7.0F;
        if $b13 <= 0 goto label8;

        r0.<org.petero.droidfish.ChessBoard: float cursorY> = 7.0F;

     label8:
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void invalidate()>();
        return null;
    }

    public final void setMoveHints(java.util.List)
    {
        org.petero.droidfish.ChessBoard r0;
        java.util.List r1, $r2, $r3, $r4;
        boolean z0, $z1, z2;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: java.util.List;
        z0 = 0;
        $r2 = r0.<org.petero.droidfish.ChessBoard: java.util.List moveHints>;
        if $r2 == null goto label0;

        if r1 != null goto label3;

     label0:
        $r3 = r0.<org.petero.droidfish.ChessBoard: java.util.List moveHints>;
        if $r3 != r1 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;
        goto label4;

     label3:
        $r4 = r0.<org.petero.droidfish.ChessBoard: java.util.List moveHints>;
        z2 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>(r1);

     label4:
        if z2 != 0 goto label5;

        r0.<org.petero.droidfish.ChessBoard: java.util.List moveHints> = r1;
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void invalidate()>();

     label5:
        return;
    }

    public final void setSquareDecorations(java.util.ArrayList)
    {
        org.petero.droidfish.ChessBoard r0;
        java.util.ArrayList r1, $r2, $r3, $r4, $r5, $r6;
        boolean z0, $z1, z2;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: java.util.ArrayList;
        z0 = 0;
        $r2 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList decorations>;
        if $r2 == null goto label0;

        if r1 != null goto label3;

     label0:
        $r3 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList decorations>;
        if $r3 != r1 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        z2 = $z1;
        goto label4;

     label3:
        $r4 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList decorations>;
        z2 = virtualinvoke $r4.<java.util.ArrayList: boolean equals(java.lang.Object)>(r1);

     label4:
        if z2 != 0 goto label6;

        r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList decorations> = r1;
        $r5 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList decorations>;
        if $r5 == null goto label5;

        $r6 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList decorations>;
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r6);

     label5:
        virtualinvoke r0.<org.petero.droidfish.ChessBoard: void invalidate()>();

     label6:
        return;
    }

    private final void drawDecorations(android.graphics.Canvas)
    {
        org.petero.droidfish.ChessBoard r0;
        android.graphics.Canvas r1;
        long l0, $l7, $l8, $l10;
        java.util.Iterator r2;
        org.petero.droidfish.ChessBoard$SquareDecoration r3;
        int i1, i2, i3, i4, $i5, $i6, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, i27;
        java.lang.String r4, $r11;
        android.graphics.Rect r5, $r13;
        java.util.ArrayList $r6, $r7;
        boolean $z0;
        java.lang.Object $r8;
        byte $b9;
        java.lang.StringBuilder $r9, $r10, $r12;
        android.graphics.Paint $r14, $r15;
        float $f0, $f1;

        r0 := @this: org.petero.droidfish.ChessBoard;
        r1 := @parameter0: android.graphics.Canvas;
        $r6 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList decorations>;
        if $r6 != null goto label0;

        return;

     label0:
        l0 = 0L;
        $r7 = r0.<org.petero.droidfish.ChessBoard: java.util.ArrayList decorations>;
        r2 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.petero.droidfish.ChessBoard$SquareDecoration) $r8;
        i1 = r3.<org.petero.droidfish.ChessBoard$SquareDecoration: int sq>;
        $i5 = r3.<org.petero.droidfish.ChessBoard$SquareDecoration: int sq>;
        if $i5 < 0 goto label1;

        $i6 = r3.<org.petero.droidfish.ChessBoard$SquareDecoration: int sq>;
        if $i6 < 64 goto label2;

        goto label1;

     label2:
        $l7 = 1L << i1;
        $l8 = $l7 & l0;
        $b9 = $l8 cmp 0L;
        if $b9 == 0 goto label3;

        goto label1;

     label3:
        $l10 = 1L << i1;
        l0 = l0 | $l10;
        $i11 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i1);
        i2 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getXCrd(int)>($i11);
        $i12 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i1);
        i3 = virtualinvoke r0.<org.petero.droidfish.ChessBoard: int getYCrd(int)>($i12);
        i4 = r3.<org.petero.droidfish.ChessBoard$SquareDecoration: int number>;
        if i4 <= 0 goto label4;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i4);
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label6;

     label4:
        if i4 >= 0 goto label5;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i4);
        goto label6;

     label5:
        r4 = "0";

     label6:
        $r13 = new android.graphics.Rect;
        specialinvoke $r13.<android.graphics.Rect: void <init>()>();
        r5 = $r13;
        $r14 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint decorationPaint>;
        $i13 = virtualinvoke r4.<java.lang.String: int length()>();
        virtualinvoke $r14.<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>(r4, 0, $i13, r5);
        $i14 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i15 = r5.<android.graphics.Rect: int left>;
        $i16 = r5.<android.graphics.Rect: int right>;
        $i17 = $i15 + $i16;
        $i18 = $i14 - $i17;
        $i19 = $i18 / 2;
        i20 = i2 + $i19;
        $i21 = r0.<org.petero.droidfish.ChessBoard: int sqSize>;
        $i22 = r5.<android.graphics.Rect: int top>;
        $i23 = r5.<android.graphics.Rect: int bottom>;
        $i24 = $i22 + $i23;
        $i25 = $i21 - $i24;
        $i26 = $i25 / 2;
        i27 = i3 + $i26;
        $f0 = (float) i20;
        $f1 = (float) i27;
        $r15 = r0.<org.petero.droidfish.ChessBoard: android.graphics.Paint decorationPaint>;
        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r4, $f0, $f1, $r15);
        goto label1;

     label7:
        return;
    }

    public final int getSelectedSquare()
    {
        org.petero.droidfish.ChessBoard r0;
        int $i0;

        r0 := @this: org.petero.droidfish.ChessBoard;
        $i0 = r0.<org.petero.droidfish.ChessBoard: int selectedSquare>;
        return $i0;
    }

    static android.os.Handler access$000(org.petero.droidfish.ChessBoard)
    {
        org.petero.droidfish.ChessBoard r0;
        android.os.Handler $r1;

        r0 := @parameter0: org.petero.droidfish.ChessBoard;
        $r1 = r0.<org.petero.droidfish.ChessBoard: android.os.Handler handlerTimer>;
        return $r1;
    }
}
public class org.petero.droidfish.ChessBoardPlay extends org.petero.droidfish.ChessBoard
{
    private org.petero.droidfish.PGNOptions pgnOptions;
    boolean oneTouchMoves;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        specialinvoke r0.<org.petero.droidfish.ChessBoard: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);
        r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.PGNOptions pgnOptions> = null;
        r0.<org.petero.droidfish.ChessBoardPlay: boolean oneTouchMoves> = 0;
        return;
    }

    public void setPgnOptions(org.petero.droidfish.PGNOptions)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        org.petero.droidfish.PGNOptions r1;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        r1 := @parameter0: org.petero.droidfish.PGNOptions;
        r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.PGNOptions pgnOptions> = r1;
        return;
    }

    protected int getXCrd(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i1 = r0.<org.petero.droidfish.ChessBoardPlay: int x0>;
        $i2 = r0.<org.petero.droidfish.ChessBoardPlay: int sqSize>;
        $z0 = r0.<org.petero.droidfish.ChessBoardPlay: boolean flipped>;
        if $z0 == 0 goto label0;

        $i3 = 7 - i0;
        goto label1;

     label0:
        $i3 = i0;

     label1:
        $i4 = $i2 * $i3;
        $i5 = $i1 + $i4;
        return $i5;
    }

    protected int getYCrd(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i1 = r0.<org.petero.droidfish.ChessBoardPlay: int y0>;
        $i2 = r0.<org.petero.droidfish.ChessBoardPlay: int sqSize>;
        $z0 = r0.<org.petero.droidfish.ChessBoardPlay: boolean flipped>;
        if $z0 == 0 goto label0;

        $i3 = i0;
        goto label1;

     label0:
        $i3 = 7 - i0;

     label1:
        $i4 = $i2 * $i3;
        $i5 = $i1 + $i4;
        return $i5;
    }

    protected int getXSq(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i2 = r0.<org.petero.droidfish.ChessBoardPlay: int x0>;
        $i3 = i0 - $i2;
        $i4 = r0.<org.petero.droidfish.ChessBoardPlay: int sqSize>;
        i1 = $i3 / $i4;
        $z0 = r0.<org.petero.droidfish.ChessBoardPlay: boolean flipped>;
        if $z0 == 0 goto label0;

        $i5 = 7 - i1;
        goto label1;

     label0:
        $i5 = i1;

     label1:
        return $i5;
    }

    protected int getYSq(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i2 = r0.<org.petero.droidfish.ChessBoardPlay: int y0>;
        $i3 = i0 - $i2;
        $i4 = r0.<org.petero.droidfish.ChessBoardPlay: int sqSize>;
        i1 = $i3 / $i4;
        $z0 = r0.<org.petero.droidfish.ChessBoardPlay: boolean flipped>;
        if $z0 == 0 goto label0;

        $i5 = i1;
        goto label1;

     label0:
        $i5 = 7 - i1;

     label1:
        return $i5;
    }

    protected int getWidth(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, $i1;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i1 = i0 * 8;
        return $i1;
    }

    protected int getHeight(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, $i1;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i1 = i0 * 8;
        return $i1;
    }

    protected int getSqSizeW(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, $i1;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i1 = i0 / 8;
        return $i1;
    }

    protected int getSqSizeH(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, $i1;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i1 = i0 / 8;
        return $i1;
    }

    protected int getMaxHeightPercentage()
    {
        org.petero.droidfish.ChessBoardPlay r0;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        return 75;
    }

    protected int getMaxWidthPercentage()
    {
        org.petero.droidfish.ChessBoardPlay r0;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        return 65;
    }

    protected void computeOrigin(int, int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.content.res.Configuration r1;
        boolean z0, $z1;
        android.content.res.Resources $r2;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i2 = r0.<org.petero.droidfish.ChessBoardPlay: int sqSize>;
        $i3 = $i2 * 8;
        $i4 = i0 - $i3;
        $i5 = $i4 / 2;
        r0.<org.petero.droidfish.ChessBoardPlay: int x0> = $i5;
        $r2 = virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: android.content.res.Resources getResources()>();
        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();
        $i6 = r1.<android.content.res.Configuration: int orientation>;
        if $i6 != 2 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        if z0 == 0 goto label2;

        $i7 = 0;
        goto label3;

     label2:
        $i8 = r0.<org.petero.droidfish.ChessBoardPlay: int sqSize>;
        $i9 = $i8 * 8;
        $i10 = i1 - $i9;
        $i7 = $i10 / 2;

     label3:
        r0.<org.petero.droidfish.ChessBoardPlay: int y0> = $i7;
        return;
    }

    protected int getXFromSq(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, $i1;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i1 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i0);
        return $i1;
    }

    protected int getYFromSq(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, $i1;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        $i1 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i0);
        return $i1;
    }

    protected int minValidY()
    {
        org.petero.droidfish.ChessBoardPlay r0;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        return 0;
    }

    protected int maxValidX()
    {
        org.petero.droidfish.ChessBoardPlay r0;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        return 7;
    }

    protected int getSquare(int, int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, i1, $i2;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i2 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i0, i1);
        return $i2;
    }

    protected void drawExtraSquares(android.graphics.Canvas)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        android.graphics.Canvas r1;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        r1 := @parameter0: android.graphics.Canvas;
        return;
    }

    private final boolean myColor(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0;
        boolean $z0, $z1, $z2;
        org.petero.droidfish.gamelogic.Position $r1;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        if i0 == 0 goto label0;

        $z0 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i0);
        $r1 = r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Position pos>;
        $z1 = $r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z0 != $z1 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        return $z2;
    }

    public org.petero.droidfish.gamelogic.Move mousePressed(int)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, $i11, $i12;
        org.petero.droidfish.gamelogic.Move r1, r2, $r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.petero.droidfish.gamelogic.Pair r3, $r10;
        java.lang.String r4, $r23, r25;
        org.petero.droidfish.gamelogic.Position $r5, $r8, $r15;
        org.petero.droidfish.gamelogic.MoveGen $r7;
        java.util.ArrayList r9;
        java.lang.Object $r11, $r12, $r13;
        java.lang.Boolean $r14;
        android.content.Context $r16, $r26;
        org.petero.droidfish.PGNOptions $r17, $r18;
        org.petero.droidfish.PGNOptions$Viewer $r19;
        java.lang.StringBuilder $r20, $r21, $r22, $r24;
        android.widget.Toast $r27;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        if i0 >= 0 goto label0;

        return null;

     label0:
        r0.<org.petero.droidfish.ChessBoardPlay: boolean cursorVisible> = 0;
        $i3 = r0.<org.petero.droidfish.ChessBoardPlay: int selectedSquare>;
        if $i3 == -1 goto label1;

        $z1 = r0.<org.petero.droidfish.ChessBoardPlay: boolean userSelectedSquare>;
        if $z1 != 0 goto label1;

        virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: void setSelection(int)>(-1);

     label1:
        $z2 = r0.<org.petero.droidfish.ChessBoardPlay: boolean oneTouchMoves>;
        if $z2 != 0 goto label7;

        $r5 = r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Position pos>;
        i1 = virtualinvoke $r5.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i0);
        $i4 = r0.<org.petero.droidfish.ChessBoardPlay: int selectedSquare>;
        if $i4 == -1 goto label5;

        $i5 = r0.<org.petero.droidfish.ChessBoardPlay: int selectedSquare>;
        if i0 != $i5 goto label3;

        $z3 = r0.<org.petero.droidfish.ChessBoardPlay: boolean toggleSelection>;
        if $z3 == 0 goto label2;

        virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: void setSelection(int)>(-1);

     label2:
        return null;

     label3:
        $z4 = specialinvoke r0.<org.petero.droidfish.ChessBoardPlay: boolean myColor(int)>(i1);
        if $z4 != 0 goto label4;

        $r6 = new org.petero.droidfish.gamelogic.Move;
        $i6 = r0.<org.petero.droidfish.ChessBoardPlay: int selectedSquare>;
        specialinvoke $r6.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>($i6, i0, 0);
        r1 = $r6;
        virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: void setSelection(int)>(i0);
        r0.<org.petero.droidfish.ChessBoardPlay: boolean userSelectedSquare> = 0;
        return r1;

     label4:
        virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: void setSelection(int)>(i0);
        goto label6;

     label5:
        $z5 = specialinvoke r0.<org.petero.droidfish.ChessBoardPlay: boolean myColor(int)>(i1);
        if $z5 == 0 goto label6;

        virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: void setSelection(int)>(i0);

     label6:
        goto label20;

     label7:
        $z6 = r0.<org.petero.droidfish.ChessBoardPlay: boolean userSelectedSquare>;
        if $z6 == 0 goto label8;

        $i7 = r0.<org.petero.droidfish.ChessBoardPlay: int selectedSquare>;
        goto label9;

     label8:
        $i7 = -1;

     label9:
        i8 = $i7;
        if i8 != i0 goto label11;

        $z7 = r0.<org.petero.droidfish.ChessBoardPlay: boolean toggleSelection>;
        if $z7 == 0 goto label10;

        virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: void setSelection(int)>(-1);

     label10:
        return null;

     label11:
        $r7 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r7.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        $r8 = r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Position pos>;
        r9 = virtualinvoke $r7.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>($r8);
        r2 = null;
        if i8 < 0 goto label12;

        $r10 = specialinvoke r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Pair matchingMove(int,int,java.util.ArrayList)>(i8, i0, r9);
        $r11 = $r10.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        r2 = (org.petero.droidfish.gamelogic.Move) $r11;

     label12:
        z0 = 0;
        if r2 != null goto label13;

        r3 = specialinvoke r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Pair matchingMove(int,int,java.util.ArrayList)>(-1, i0, r9);
        $r12 = r3.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        r2 = (org.petero.droidfish.gamelogic.Move) $r12;
        $r13 = r3.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        $r14 = (java.lang.Boolean) $r13;
        z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

     label13:
        if r2 == null goto label14;

        $i9 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: void setSelection(int)>($i9);
        r0.<org.petero.droidfish.ChessBoardPlay: boolean userSelectedSquare> = 0;
        return r2;

     label14:
        if z0 != 0 goto label17;

        if i0 < 0 goto label17;

        $r15 = r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Position pos>;
        i10 = virtualinvoke $r15.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i0);
        $z8 = specialinvoke r0.<org.petero.droidfish.ChessBoardPlay: boolean myColor(int)>(i10);
        if $z8 == 0 goto label17;

        $r16 = virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: android.content.Context getContext()>();
        r4 = virtualinvoke $r16.<android.content.Context: java.lang.String getString(int)>(2131099783);
        $r17 = r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.PGNOptions pgnOptions>;
        if $r17 != null goto label15;

        $i11 = 1;
        goto label16;

     label15:
        $r18 = r0.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.PGNOptions pgnOptions>;
        $r19 = $r18.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $i11 = $r19.<org.petero.droidfish.PGNOptions$Viewer: int pieceType>;

     label16:
        i2 = $i11;
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r23 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pieceAndSquareToString(int,int,int)>(i2, i10, i0);
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        $r26 = virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: android.content.Context getContext()>();
        $r27 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r26, r25, 0);
        virtualinvoke $r27.<android.widget.Toast: void show()>();

     label17:
        if z0 == 0 goto label18;

        $i12 = i0;
        goto label19;

     label18:
        $i12 = -1;

     label19:
        virtualinvoke r0.<org.petero.droidfish.ChessBoardPlay: void setSelection(int)>($i12);

     label20:
        return null;
    }

    private final org.petero.droidfish.gamelogic.Pair matchingMove(int, int, java.util.ArrayList)
    {
        org.petero.droidfish.ChessBoardPlay r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.ArrayList r1;
        org.petero.droidfish.gamelogic.Move r2, r4;
        boolean z0, z1, $z2, $z3, $z4;
        java.util.Iterator r3;
        java.lang.Object $r5;
        org.petero.droidfish.gamelogic.Pair $r6;
        java.lang.Boolean $r7;

        r0 := @this: org.petero.droidfish.ChessBoardPlay;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: java.util.ArrayList;
        r2 = null;
        z0 = 0;
        r3 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label13;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.petero.droidfish.gamelogic.Move) $r5;
        if i0 != -1 goto label4;

        $i2 = r4.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i2 == i1 goto label1;

        $i3 = r4.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i3 != i1 goto label2;

     label1:
        $z3 = 1;
        goto label3;

     label2:
        $z3 = 0;

     label3:
        z1 = $z3;
        goto label9;

     label4:
        $i4 = r4.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i4 != i0 goto label5;

        $i5 = r4.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i5 == i1 goto label6;

     label5:
        $i6 = r4.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i6 != i1 goto label7;

        $i7 = r4.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i7 != i0 goto label7;

     label6:
        $z4 = 1;
        goto label8;

     label7:
        $z4 = 0;

     label8:
        z1 = $z4;

     label9:
        if z1 == 0 goto label12;

        if r2 != null goto label10;

        r2 = r4;
        z0 = 1;
        goto label12;

     label10:
        $i8 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i9 = r4.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i8 != $i9 goto label11;

        $i10 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i11 = r4.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i10 != $i11 goto label11;

        r2.<org.petero.droidfish.gamelogic.Move: int promoteTo> = 0;
        goto label12;

     label11:
        r2 = null;
        goto label13;

     label12:
        goto label0;

     label13:
        $r6 = new org.petero.droidfish.gamelogic.Pair;
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);
        specialinvoke $r6.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>(r2, $r7);
        return $r6;
    }
}
public class org.petero.droidfish.ColorTheme extends java.lang.Object
{
    private static org.petero.droidfish.ColorTheme inst;
    static final int DARK_SQUARE;
    static final int BRIGHT_SQUARE;
    static final int SELECTED_SQUARE;
    static final int CURSOR_SQUARE;
    static final int DARK_PIECE;
    static final int BRIGHT_PIECE;
    static final int CURRENT_MOVE;
    static final int ARROW_0;
    static final int ARROW_1;
    static final int ARROW_2;
    static final int ARROW_3;
    static final int ARROW_4;
    static final int ARROW_5;
    static final int SQUARE_LABEL;
    static final int DECORATION;
    static final int PGN_COMMENT;
    public static final int FONT_FOREGROUND;
    public static final int GENERAL_BACKGROUND;
    private static final int numColors;
    private int[] colorTable;
    private static final java.lang.String[] prefNames;
    private static final java.lang.String prefPrefix;
    private static final int defaultTheme;
    static final java.lang.String[] themeNames;
    private static final java.lang.String[][] themeColors;

    public void <init>()
    {
        org.petero.droidfish.ColorTheme r0;
        int[] $r1;

        r0 := @this: org.petero.droidfish.ColorTheme;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (int)[18];
        r0.<org.petero.droidfish.ColorTheme: int[] colorTable> = $r1;
        return;
    }

    public static final org.petero.droidfish.ColorTheme instance()
    {
        org.petero.droidfish.ColorTheme $r0, $r1, $r2;

        $r0 = <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme inst>;
        if $r0 != null goto label0;

        $r1 = new org.petero.droidfish.ColorTheme;
        specialinvoke $r1.<org.petero.droidfish.ColorTheme: void <init>()>();
        <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme inst> = $r1;

     label0:
        $r2 = <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme inst>;
        return $r2;
    }

    final void readColors(android.content.SharedPreferences)
    {
        org.petero.droidfish.ColorTheme r0;
        android.content.SharedPreferences r1;
        int i0, $i1;
        java.lang.String r2, r3, r4, $r9;
        java.lang.IllegalArgumentException r5, $r15;
        java.lang.StringBuilder $r6, $r7, $r10;
        java.lang.String[] $r8, $r12;
        java.lang.String[][] $r11;
        int[] $r13, $r14;
        java.lang.StringIndexOutOfBoundsException $r16, r17;

        r0 := @this: org.petero.droidfish.ColorTheme;
        r1 := @parameter0: android.content.SharedPreferences;
        i0 = 0;

     label0:
        if i0 >= 18 goto label6;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("color_");
        $r8 = <org.petero.droidfish.ColorTheme: java.lang.String[] prefNames>;
        $r9 = $r8[i0];
        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        $r11 = <org.petero.droidfish.ColorTheme: java.lang.String[][] themeColors>;
        $r12 = $r11[2];
        r3 = $r12[i0];
        r4 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r2, r3);
        $r13 = r0.<org.petero.droidfish.ColorTheme: int[] colorTable>;
        $r13[i0] = 0;

     label1:
        $r14 = r0.<org.petero.droidfish.ColorTheme: int[] colorTable>;
        $i1 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>(r4);
        $r14[i0] = $i1;

     label2:
        goto label5;

     label3:
        $r15 := @caughtexception;
        r5 = $r15;
        goto label5;

     label4:
        $r16 := @caughtexception;
        r17 = $r16;

     label5:
        i0 = i0 + 1;
        goto label0;

     label6:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.StringIndexOutOfBoundsException from label1 to label2 with label4;
    }

    final void setTheme(android.content.SharedPreferences, int)
    {
        org.petero.droidfish.ColorTheme r0;
        android.content.SharedPreferences r1;
        int i0, i1;
        android.content.SharedPreferences$Editor r2;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.String[] $r5, $r10;
        java.lang.String $r6, $r8, $r11;
        java.lang.String[][] $r9;

        r0 := @this: org.petero.droidfish.ColorTheme;
        r1 := @parameter0: android.content.SharedPreferences;
        i0 := @parameter1: int;
        r2 = interfaceinvoke r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        i1 = 0;

     label0:
        if i1 >= 18 goto label1;

        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("color_");
        $r5 = <org.petero.droidfish.ColorTheme: java.lang.String[] prefNames>;
        $r6 = $r5[i1];
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = <org.petero.droidfish.ColorTheme: java.lang.String[][] themeColors>;
        $r10 = $r9[i0];
        $r11 = $r10[i1];
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r8, $r11);
        i1 = i1 + 1;
        goto label0;

     label1:
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: boolean commit()>();
        virtualinvoke r0.<org.petero.droidfish.ColorTheme: void readColors(android.content.SharedPreferences)>(r1);
        return;
    }

    public final int getColor(int)
    {
        org.petero.droidfish.ColorTheme r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: org.petero.droidfish.ColorTheme;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.ColorTheme: int[] colorTable>;
        $i1 = $r1[i0];
        return $i1;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String[][] $r2;

        <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme inst> = null;
        $r0 = newarray (java.lang.String)[18];
        $r0[0] = "darkSquare";
        $r0[1] = "brightSquare";
        $r0[2] = "selectedSquare";
        $r0[3] = "cursorSquare";
        $r0[4] = "darkPiece";
        $r0[5] = "brightPiece";
        $r0[6] = "currentMove";
        $r0[7] = "arrow0";
        $r0[8] = "arrow1";
        $r0[9] = "arrow2";
        $r0[10] = "arrow3";
        $r0[11] = "arrow4";
        $r0[12] = "arrow5";
        $r0[13] = "squareLabel";
        $r0[14] = "decoration";
        $r0[15] = "pgnComment";
        $r0[16] = "fontForeground";
        $r0[17] = "generalBackground";
        <org.petero.droidfish.ColorTheme: java.lang.String[] prefNames> = $r0;
        $r1 = newarray (java.lang.String)[7];
        $r1[0] = "Original";
        $r1[1] = "XBoard";
        $r1[2] = "Blue";
        $r1[3] = "Grey";
        $r1[4] = "Scid Default";
        $r1[5] = "Scid Brown";
        $r1[6] = "Scid Green";
        <org.petero.droidfish.ColorTheme: java.lang.String[] themeNames> = $r1;
        $r2 = newarray (java.lang.String[])[7];
        $r3 = newarray (java.lang.String)[18];
        $r3[0] = "#FF808080";
        $r3[1] = "#FFBEBE5A";
        $r3[2] = "#FFFF0000";
        $r3[3] = "#FF00FF00";
        $r3[4] = "#FF000000";
        $r3[5] = "#FFFFFFFF";
        $r3[6] = "#FF888888";
        $r3[7] = "#A01F1FFF";
        $r3[8] = "#A0FF1F1F";
        $r3[9] = "#501F1FFF";
        $r3[10] = "#50FF1F1F";
        $r3[11] = "#1E1F1FFF";
        $r3[12] = "#28FF1F1F";
        $r3[13] = "#FFFF0000";
        $r3[14] = "#FF9F9F66";
        $r3[15] = "#FFC0C000";
        $r3[16] = "#FFF7FBC6";
        $r3[17] = "#FF292C10";
        $r2[0] = $r3;
        $r4 = newarray (java.lang.String)[18];
        $r4[0] = "#FF77A26D";
        $r4[1] = "#FFC8C365";
        $r4[2] = "#FFFFFF00";
        $r4[3] = "#FF00FF00";
        $r4[4] = "#FF202020";
        $r4[5] = "#FFFFFFCC";
        $r4[6] = "#FF6B9262";
        $r4[7] = "#A01F1FFF";
        $r4[8] = "#A0FF1F1F";
        $r4[9] = "#501F1FFF";
        $r4[10] = "#50FF1F1F";
        $r4[11] = "#1E1F1FFF";
        $r4[12] = "#28FF1F1F";
        $r4[13] = "#FFFF0000";
        $r4[14] = "#FF808080";
        $r4[15] = "#FFC0C000";
        $r4[16] = "#FFEFFBBC";
        $r4[17] = "#FF28320C";
        $r2[1] = $r4;
        $r5 = newarray (java.lang.String)[18];
        $r5[0] = "#FF83A5D2";
        $r5[1] = "#FFFFFFFA";
        $r5[2] = "#FF3232D1";
        $r5[3] = "#FF5F5FFD";
        $r5[4] = "#FF282828";
        $r5[5] = "#FFF0F0F0";
        $r5[6] = "#FF3333FF";
        $r5[7] = "#A01F1FFF";
        $r5[8] = "#A01FFF1F";
        $r5[9] = "#501F1FFF";
        $r5[10] = "#501FFF1F";
        $r5[11] = "#1E1F1FFF";
        $r5[12] = "#281FFF1F";
        $r5[13] = "#FFFF0000";
        $r5[14] = "#FF808080";
        $r5[15] = "#FFC0C000";
        $r5[16] = "#FFFFFF00";
        $r5[17] = "#FF2E2B53";
        $r2[2] = $r5;
        $r6 = newarray (java.lang.String)[18];
        $r6[0] = "#FF666666";
        $r6[1] = "#FFDDDDDD";
        $r6[2] = "#FFFF0000";
        $r6[3] = "#FF0000FF";
        $r6[4] = "#FF000000";
        $r6[5] = "#FFFFFFFF";
        $r6[6] = "#FF888888";
        $r6[7] = "#A01F1FFF";
        $r6[8] = "#A0FF1F1F";
        $r6[9] = "#501F1FFF";
        $r6[10] = "#50FF1F1F";
        $r6[11] = "#1E1F1FFF";
        $r6[12] = "#28FF1F1F";
        $r6[13] = "#FFFF0000";
        $r6[14] = "#FF909090";
        $r6[15] = "#FFC0C000";
        $r6[16] = "#FFFFFFFF";
        $r6[17] = "#FF202020";
        $r2[3] = $r6;
        $r7 = newarray (java.lang.String)[18];
        $r7[0] = "#FF80A0A0";
        $r7[1] = "#FFD0E0D0";
        $r7[2] = "#FFFF0000";
        $r7[3] = "#FF00FF00";
        $r7[4] = "#FF000000";
        $r7[5] = "#FFFFFFFF";
        $r7[6] = "#FF666666";
        $r7[7] = "#A01F1FFF";
        $r7[8] = "#A0FF1F1F";
        $r7[9] = "#501F1FFF";
        $r7[10] = "#50FF1F1F";
        $r7[11] = "#1E1F1FFF";
        $r7[12] = "#28FF1F1F";
        $r7[13] = "#FFFF0000";
        $r7[14] = "#FF808080";
        $r7[15] = "#FFC0C000";
        $r7[16] = "#FFDEFBDE";
        $r7[17] = "#FF213429";
        $r2[4] = $r7;
        $r8 = newarray (java.lang.String)[18];
        $r8[0] = "#B58863";
        $r8[1] = "#F0D9B5";
        $r8[2] = "#FFFF0000";
        $r8[3] = "#FF00FF00";
        $r8[4] = "#FF000000";
        $r8[5] = "#FFFFFFFF";
        $r8[6] = "#FF666666";
        $r8[7] = "#A01F1FFF";
        $r8[8] = "#A0FF1F1F";
        $r8[9] = "#501F1FFF";
        $r8[10] = "#50FF1F1F";
        $r8[11] = "#1E1F1FFF";
        $r8[12] = "#28FF1F1F";
        $r8[13] = "#FFFF0000";
        $r8[14] = "#FF808080";
        $r8[15] = "#FFC0C000";
        $r8[16] = "#FFF7FAE3";
        $r8[17] = "#FF40260A";
        $r2[5] = $r8;
        $r9 = newarray (java.lang.String)[18];
        $r9[0] = "#FF769656";
        $r9[1] = "#FFEEEED2";
        $r9[2] = "#FFFF0000";
        $r9[3] = "#FF0000FF";
        $r9[4] = "#FF000000";
        $r9[5] = "#FFFFFFFF";
        $r9[6] = "#FF666666";
        $r9[7] = "#A01F1FFF";
        $r9[8] = "#A0FF1F1F";
        $r9[9] = "#501F1FFF";
        $r9[10] = "#50FF1F1F";
        $r9[11] = "#1E1F1FFF";
        $r9[12] = "#28FF1F1F";
        $r9[13] = "#FFFF0000";
        $r9[14] = "#FF808080";
        $r9[15] = "#FFC0C000";
        $r9[16] = "#FFDEE3CE";
        $r9[17] = "#FF183C21";
        $r2[6] = $r9;
        <org.petero.droidfish.ColorTheme: java.lang.String[][] themeColors> = $r2;
        return;
    }
}
class org.petero.droidfish.DroidFish$1$1 extends java.lang.Object implements org.petero.droidfish.UIAction
{
    final org.petero.droidfish.DroidFish$1 this$1;

    void <init>(org.petero.droidfish.DroidFish$1)
    {
        org.petero.droidfish.DroidFish$1$1 r0;
        org.petero.droidfish.DroidFish$1 r1;

        r0 := @this: org.petero.droidfish.DroidFish$1$1;
        r1 := @parameter0: org.petero.droidfish.DroidFish$1;
        r0.<org.petero.droidfish.DroidFish$1$1: org.petero.droidfish.DroidFish$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.String getId()
    {
        org.petero.droidfish.DroidFish$1$1 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$1;
        return "flipboard";
    }

    public int getName()
    {
        org.petero.droidfish.DroidFish$1$1 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$1;
        return 2131099743;
    }

    public int getIcon()
    {
        org.petero.droidfish.DroidFish$1$1 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$1;
        return 2131034117;
    }

    public boolean enabled()
    {
        org.petero.droidfish.DroidFish$1$1 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$1;
        return 1;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$1$1 r0;
        org.petero.droidfish.DroidFish$1 $r1, $r3, $r6, $r8, $r10, $r13;
        org.petero.droidfish.DroidFish $r2, $r4, $r7, $r9, $r11, $r14;
        org.petero.droidfish.ChessBoardPlay $r5, $r12;
        boolean $z0, $z1, $z3, $z4;

        r0 := @this: org.petero.droidfish.DroidFish$1$1;
        $r1 = r0.<org.petero.droidfish.DroidFish$1$1: org.petero.droidfish.DroidFish$1 this$1>;
        $r2 = $r1.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r3 = r0.<org.petero.droidfish.DroidFish$1$1: org.petero.droidfish.DroidFish$1 this$1>;
        $r4 = $r3.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r5 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r4);
        $z0 = $r5.<org.petero.droidfish.ChessBoardPlay: boolean flipped>;
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        staticinvoke <org.petero.droidfish.DroidFish: boolean access$002(org.petero.droidfish.DroidFish,boolean)>($r2, $z1);
        $r6 = r0.<org.petero.droidfish.DroidFish$1$1: org.petero.droidfish.DroidFish$1 this$1>;
        $r7 = $r6.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r8 = r0.<org.petero.droidfish.DroidFish$1$1: org.petero.droidfish.DroidFish$1 this$1>;
        $r9 = $r8.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $z3 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$000(org.petero.droidfish.DroidFish)>($r9);
        staticinvoke <org.petero.droidfish.DroidFish: void access$200(org.petero.droidfish.DroidFish,java.lang.String,boolean)>($r7, "boardFlipped", $z3);
        $r10 = r0.<org.petero.droidfish.DroidFish$1$1: org.petero.droidfish.DroidFish$1 this$1>;
        $r11 = $r10.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r12 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r11);
        $r13 = r0.<org.petero.droidfish.DroidFish$1$1: org.petero.droidfish.DroidFish$1 this$1>;
        $r14 = $r13.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $z4 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$000(org.petero.droidfish.DroidFish)>($r14);
        virtualinvoke $r12.<org.petero.droidfish.ChessBoardPlay: void setFlipped(boolean)>($z4);
        return;
    }
}
class org.petero.droidfish.DroidFish$1$2 extends java.lang.Object implements org.petero.droidfish.UIAction
{
    final org.petero.droidfish.DroidFish$1 this$1;

    void <init>(org.petero.droidfish.DroidFish$1)
    {
        org.petero.droidfish.DroidFish$1$2 r0;
        org.petero.droidfish.DroidFish$1 r1;

        r0 := @this: org.petero.droidfish.DroidFish$1$2;
        r1 := @parameter0: org.petero.droidfish.DroidFish$1;
        r0.<org.petero.droidfish.DroidFish$1$2: org.petero.droidfish.DroidFish$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.String getId()
    {
        org.petero.droidfish.DroidFish$1$2 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$2;
        return "showThinking";
    }

    public int getName()
    {
        org.petero.droidfish.DroidFish$1$2 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$2;
        return 2131099744;
    }

    public int getIcon()
    {
        org.petero.droidfish.DroidFish$1$2 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$2;
        return 2131034124;
    }

    public boolean enabled()
    {
        org.petero.droidfish.DroidFish$1$2 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$2;
        return 1;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$1$2 r0;
        org.petero.droidfish.DroidFish$1 $r1, $r3, $r5;
        org.petero.droidfish.DroidFish $r2, $r4, $r6;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish$1$2;
        $r1 = r0.<org.petero.droidfish.DroidFish$1$2: org.petero.droidfish.DroidFish$1 this$1>;
        $r2 = $r1.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r3 = r0.<org.petero.droidfish.DroidFish$1$2: org.petero.droidfish.DroidFish$1 this$1>;
        $r4 = $r3.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$400(org.petero.droidfish.DroidFish,java.lang.String)>($r4, "showThinking");
        staticinvoke <org.petero.droidfish.DroidFish: boolean access$302(org.petero.droidfish.DroidFish,boolean)>($r2, $z0);
        $r5 = r0.<org.petero.droidfish.DroidFish$1$2: org.petero.droidfish.DroidFish$1 this$1>;
        $r6 = $r5.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$500(org.petero.droidfish.DroidFish)>($r6);
        return;
    }
}
class org.petero.droidfish.DroidFish$1$3 extends java.lang.Object implements org.petero.droidfish.UIAction
{
    final org.petero.droidfish.DroidFish$1 this$1;

    void <init>(org.petero.droidfish.DroidFish$1)
    {
        org.petero.droidfish.DroidFish$1$3 r0;
        org.petero.droidfish.DroidFish$1 r1;

        r0 := @this: org.petero.droidfish.DroidFish$1$3;
        r1 := @parameter0: org.petero.droidfish.DroidFish$1;
        r0.<org.petero.droidfish.DroidFish$1$3: org.petero.droidfish.DroidFish$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.String getId()
    {
        org.petero.droidfish.DroidFish$1$3 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$3;
        return "bookHints";
    }

    public int getName()
    {
        org.petero.droidfish.DroidFish$1$3 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$3;
        return 2131099745;
    }

    public int getIcon()
    {
        org.petero.droidfish.DroidFish$1$3 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$3;
        return 2131034114;
    }

    public boolean enabled()
    {
        org.petero.droidfish.DroidFish$1$3 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$3;
        return 1;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$1$3 r0;
        org.petero.droidfish.DroidFish$1 $r1, $r3, $r5;
        org.petero.droidfish.DroidFish $r2, $r4, $r6;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish$1$3;
        $r1 = r0.<org.petero.droidfish.DroidFish$1$3: org.petero.droidfish.DroidFish$1 this$1>;
        $r2 = $r1.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r3 = r0.<org.petero.droidfish.DroidFish$1$3: org.petero.droidfish.DroidFish$1 this$1>;
        $r4 = $r3.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$400(org.petero.droidfish.DroidFish,java.lang.String)>($r4, "bookHints");
        staticinvoke <org.petero.droidfish.DroidFish: boolean access$602(org.petero.droidfish.DroidFish,boolean)>($r2, $z0);
        $r5 = r0.<org.petero.droidfish.DroidFish$1$3: org.petero.droidfish.DroidFish$1 this$1>;
        $r6 = $r5.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$500(org.petero.droidfish.DroidFish)>($r6);
        return;
    }
}
class org.petero.droidfish.DroidFish$1$4 extends java.lang.Object implements org.petero.droidfish.UIAction
{
    final org.petero.droidfish.DroidFish$1 this$1;

    void <init>(org.petero.droidfish.DroidFish$1)
    {
        org.petero.droidfish.DroidFish$1$4 r0;
        org.petero.droidfish.DroidFish$1 r1;

        r0 := @this: org.petero.droidfish.DroidFish$1$4;
        r1 := @parameter0: org.petero.droidfish.DroidFish$1;
        r0.<org.petero.droidfish.DroidFish$1$4: org.petero.droidfish.DroidFish$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.String getId()
    {
        org.petero.droidfish.DroidFish$1$4 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$4;
        return "viewVariations";
    }

    public int getName()
    {
        org.petero.droidfish.DroidFish$1$4 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$4;
        return 2131099746;
    }

    public int getIcon()
    {
        org.petero.droidfish.DroidFish$1$4 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$4;
        return 2131034126;
    }

    public boolean enabled()
    {
        org.petero.droidfish.DroidFish$1$4 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$4;
        return 1;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$1$4 r0;
        org.petero.droidfish.DroidFish$1 $r1, $r5, $r7;
        org.petero.droidfish.DroidFish $r2, $r6, $r8;
        org.petero.droidfish.PGNOptions $r3;
        org.petero.droidfish.PGNOptions$Viewer $r4;
        boolean $z0;
        org.petero.droidfish.DroidFish$PgnScreenText $r9;
        org.petero.droidfish.gamelogic.DroidChessController $r10;

        r0 := @this: org.petero.droidfish.DroidFish$1$4;
        $r1 = r0.<org.petero.droidfish.DroidFish$1$4: org.petero.droidfish.DroidFish$1 this$1>;
        $r2 = $r1.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r3 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions access$700(org.petero.droidfish.DroidFish)>($r2);
        $r4 = $r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $r5 = r0.<org.petero.droidfish.DroidFish$1$4: org.petero.droidfish.DroidFish$1 this$1>;
        $r6 = $r5.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$400(org.petero.droidfish.DroidFish,java.lang.String)>($r6, "viewVariations");
        $r4.<org.petero.droidfish.PGNOptions$Viewer: boolean variations> = $z0;
        $r7 = r0.<org.petero.droidfish.DroidFish$1$4: org.petero.droidfish.DroidFish$1 this$1>;
        $r8 = $r7.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r9 = $r8.<org.petero.droidfish.DroidFish: org.petero.droidfish.DroidFish$PgnScreenText gameTextListener>;
        virtualinvoke $r9.<org.petero.droidfish.DroidFish$PgnScreenText: void clear()>();
        $r10 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r10.<org.petero.droidfish.gamelogic.DroidChessController: void prefsChanged(boolean)>(0);
        return;
    }
}
class org.petero.droidfish.DroidFish$1$5 extends java.lang.Object implements org.petero.droidfish.UIAction
{
    final org.petero.droidfish.DroidFish$1 this$1;

    void <init>(org.petero.droidfish.DroidFish$1)
    {
        org.petero.droidfish.DroidFish$1$5 r0;
        org.petero.droidfish.DroidFish$1 r1;

        r0 := @this: org.petero.droidfish.DroidFish$1$5;
        r1 := @parameter0: org.petero.droidfish.DroidFish$1;
        r0.<org.petero.droidfish.DroidFish$1$5: org.petero.droidfish.DroidFish$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.String getId()
    {
        org.petero.droidfish.DroidFish$1$5 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$5;
        return "viewComments";
    }

    public int getName()
    {
        org.petero.droidfish.DroidFish$1$5 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$5;
        return 2131099747;
    }

    public int getIcon()
    {
        org.petero.droidfish.DroidFish$1$5 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$5;
        return 2131034115;
    }

    public boolean enabled()
    {
        org.petero.droidfish.DroidFish$1$5 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$5;
        return 1;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$1$5 r0;
        org.petero.droidfish.DroidFish$1 $r1, $r5, $r7;
        org.petero.droidfish.DroidFish $r2, $r6, $r8;
        org.petero.droidfish.PGNOptions $r3;
        org.petero.droidfish.PGNOptions$Viewer $r4;
        boolean $z0;
        org.petero.droidfish.DroidFish$PgnScreenText $r9;
        org.petero.droidfish.gamelogic.DroidChessController $r10;

        r0 := @this: org.petero.droidfish.DroidFish$1$5;
        $r1 = r0.<org.petero.droidfish.DroidFish$1$5: org.petero.droidfish.DroidFish$1 this$1>;
        $r2 = $r1.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r3 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions access$700(org.petero.droidfish.DroidFish)>($r2);
        $r4 = $r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $r5 = r0.<org.petero.droidfish.DroidFish$1$5: org.petero.droidfish.DroidFish$1 this$1>;
        $r6 = $r5.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$400(org.petero.droidfish.DroidFish,java.lang.String)>($r6, "viewComments");
        $r4.<org.petero.droidfish.PGNOptions$Viewer: boolean comments> = $z0;
        $r7 = r0.<org.petero.droidfish.DroidFish$1$5: org.petero.droidfish.DroidFish$1 this$1>;
        $r8 = $r7.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r9 = $r8.<org.petero.droidfish.DroidFish: org.petero.droidfish.DroidFish$PgnScreenText gameTextListener>;
        virtualinvoke $r9.<org.petero.droidfish.DroidFish$PgnScreenText: void clear()>();
        $r10 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r10.<org.petero.droidfish.gamelogic.DroidChessController: void prefsChanged(boolean)>(0);
        return;
    }
}
class org.petero.droidfish.DroidFish$1$6 extends java.lang.Object implements org.petero.droidfish.UIAction
{
    final org.petero.droidfish.DroidFish$1 this$1;

    void <init>(org.petero.droidfish.DroidFish$1)
    {
        org.petero.droidfish.DroidFish$1$6 r0;
        org.petero.droidfish.DroidFish$1 r1;

        r0 := @this: org.petero.droidfish.DroidFish$1$6;
        r1 := @parameter0: org.petero.droidfish.DroidFish$1;
        r0.<org.petero.droidfish.DroidFish$1$6: org.petero.droidfish.DroidFish$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.String getId()
    {
        org.petero.droidfish.DroidFish$1$6 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$6;
        return "viewHeaders";
    }

    public int getName()
    {
        org.petero.droidfish.DroidFish$1$6 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$6;
        return 2131099748;
    }

    public int getIcon()
    {
        org.petero.droidfish.DroidFish$1$6 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$6;
        return 2131034118;
    }

    public boolean enabled()
    {
        org.petero.droidfish.DroidFish$1$6 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$6;
        return 1;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$1$6 r0;
        org.petero.droidfish.DroidFish$1 $r1, $r5, $r7;
        org.petero.droidfish.DroidFish $r2, $r6, $r8;
        org.petero.droidfish.PGNOptions $r3;
        org.petero.droidfish.PGNOptions$Viewer $r4;
        boolean $z0;
        org.petero.droidfish.DroidFish$PgnScreenText $r9;
        org.petero.droidfish.gamelogic.DroidChessController $r10;

        r0 := @this: org.petero.droidfish.DroidFish$1$6;
        $r1 = r0.<org.petero.droidfish.DroidFish$1$6: org.petero.droidfish.DroidFish$1 this$1>;
        $r2 = $r1.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r3 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions access$700(org.petero.droidfish.DroidFish)>($r2);
        $r4 = $r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $r5 = r0.<org.petero.droidfish.DroidFish$1$6: org.petero.droidfish.DroidFish$1 this$1>;
        $r6 = $r5.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$400(org.petero.droidfish.DroidFish,java.lang.String)>($r6, "viewHeaders");
        $r4.<org.petero.droidfish.PGNOptions$Viewer: boolean headers> = $z0;
        $r7 = r0.<org.petero.droidfish.DroidFish$1$6: org.petero.droidfish.DroidFish$1 this$1>;
        $r8 = $r7.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r9 = $r8.<org.petero.droidfish.DroidFish: org.petero.droidfish.DroidFish$PgnScreenText gameTextListener>;
        virtualinvoke $r9.<org.petero.droidfish.DroidFish$PgnScreenText: void clear()>();
        $r10 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r10.<org.petero.droidfish.gamelogic.DroidChessController: void prefsChanged(boolean)>(0);
        return;
    }
}
class org.petero.droidfish.DroidFish$1$7 extends java.lang.Object implements org.petero.droidfish.UIAction
{
    private int oldGameModeType;
    final org.petero.droidfish.DroidFish$1 this$1;

    void <init>(org.petero.droidfish.DroidFish$1)
    {
        org.petero.droidfish.DroidFish$1$7 r0;
        org.petero.droidfish.DroidFish$1 r1;

        r0 := @this: org.petero.droidfish.DroidFish$1$7;
        r1 := @parameter0: org.petero.droidfish.DroidFish$1;
        r0.<org.petero.droidfish.DroidFish$1$7: org.petero.droidfish.DroidFish$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.DroidFish$1$7: int oldGameModeType> = 6;
        return;
    }

    public java.lang.String getId()
    {
        org.petero.droidfish.DroidFish$1$7 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$7;
        return "toggleAnalysis";
    }

    public int getName()
    {
        org.petero.droidfish.DroidFish$1$7 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$7;
        return 2131099749;
    }

    public int getIcon()
    {
        org.petero.droidfish.DroidFish$1$7 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$7;
        return 2131034113;
    }

    public boolean enabled()
    {
        org.petero.droidfish.DroidFish$1$7 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$7;
        return 1;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$1$7 r0;
        org.petero.droidfish.gamelogic.DroidChessController $r1, $r2;
        int i0, $i1;
        boolean $z0;
        org.petero.droidfish.GameMode $r3;
        org.petero.droidfish.DroidFish$1 $r4, $r6;
        org.petero.droidfish.DroidFish $r5, $r7;

        r0 := @this: org.petero.droidfish.DroidFish$1$7;
        $r1 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $z0 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.DroidChessController: boolean analysisMode()>();
        if $z0 == 0 goto label0;

        i0 = r0.<org.petero.droidfish.DroidFish$1$7: int oldGameModeType>;
        goto label1;

     label0:
        $r2 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $r3 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode getGameMode()>();
        $i1 = virtualinvoke $r3.<org.petero.droidfish.GameMode: int getModeNr()>();
        r0.<org.petero.droidfish.DroidFish$1$7: int oldGameModeType> = $i1;
        i0 = 4;

     label1:
        $r4 = r0.<org.petero.droidfish.DroidFish$1$7: org.petero.droidfish.DroidFish$1 this$1>;
        $r5 = $r4.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$900(org.petero.droidfish.DroidFish,int)>($r5, i0);
        $r6 = r0.<org.petero.droidfish.DroidFish$1$7: org.petero.droidfish.DroidFish$1 this$1>;
        $r7 = $r6.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$1000(org.petero.droidfish.DroidFish,boolean)>($r7, 1);
        return;
    }
}
class org.petero.droidfish.DroidFish$1$8 extends java.lang.Object implements org.petero.droidfish.UIAction
{
    final org.petero.droidfish.DroidFish$1 this$1;

    void <init>(org.petero.droidfish.DroidFish$1)
    {
        org.petero.droidfish.DroidFish$1$8 r0;
        org.petero.droidfish.DroidFish$1 r1;

        r0 := @this: org.petero.droidfish.DroidFish$1$8;
        r1 := @parameter0: org.petero.droidfish.DroidFish$1;
        r0.<org.petero.droidfish.DroidFish$1$8: org.petero.droidfish.DroidFish$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.String getId()
    {
        org.petero.droidfish.DroidFish$1$8 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$8;
        return "largeButtons";
    }

    public int getName()
    {
        org.petero.droidfish.DroidFish$1$8 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$8;
        return 2131099750;
    }

    public int getIcon()
    {
        org.petero.droidfish.DroidFish$1$8 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$8;
        return 2131034120;
    }

    public boolean enabled()
    {
        org.petero.droidfish.DroidFish$1$8 r0;

        r0 := @this: org.petero.droidfish.DroidFish$1$8;
        return 1;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$1$8 r0;
        org.petero.droidfish.DroidFish$1 $r1, $r5, $r7;
        org.petero.droidfish.DroidFish $r2, $r6, $r8;
        org.petero.droidfish.PGNOptions $r3;
        org.petero.droidfish.PGNOptions$Viewer $r4;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish$1$8;
        $r1 = r0.<org.petero.droidfish.DroidFish$1$8: org.petero.droidfish.DroidFish$1 this$1>;
        $r2 = $r1.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $r3 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions access$700(org.petero.droidfish.DroidFish)>($r2);
        $r4 = $r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $r5 = r0.<org.petero.droidfish.DroidFish$1$8: org.petero.droidfish.DroidFish$1 this$1>;
        $r6 = $r5.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$400(org.petero.droidfish.DroidFish,java.lang.String)>($r6, "largeButtons");
        $r4.<org.petero.droidfish.PGNOptions$Viewer: boolean headers> = $z0;
        $r7 = r0.<org.petero.droidfish.DroidFish$1$8: org.petero.droidfish.DroidFish$1 this$1>;
        $r8 = $r7.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$1100(org.petero.droidfish.DroidFish)>($r8);
        return;
    }
}
class org.petero.droidfish.DroidFish$1 extends java.lang.Object implements org.petero.droidfish.ActionFactory
{
    private java.util.HashMap actions;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$1 r0;
        org.petero.droidfish.DroidFish r1;
        java.util.HashMap $r2;
        org.petero.droidfish.DroidFish$1$1 $r3;
        org.petero.droidfish.DroidFish$1$2 $r4;
        org.petero.droidfish.DroidFish$1$3 $r5;
        org.petero.droidfish.DroidFish$1$4 $r6;
        org.petero.droidfish.DroidFish$1$5 $r7;
        org.petero.droidfish.DroidFish$1$6 $r8;
        org.petero.droidfish.DroidFish$1$7 $r9;
        org.petero.droidfish.DroidFish$1$8 $r10;

        r0 := @this: org.petero.droidfish.DroidFish$1;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$1: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r0.<org.petero.droidfish.DroidFish$1: java.util.HashMap actions> = $r2;
        $r3 = new org.petero.droidfish.DroidFish$1$1;
        specialinvoke $r3.<org.petero.droidfish.DroidFish$1$1: void <init>(org.petero.droidfish.DroidFish$1)>(r0);
        specialinvoke r0.<org.petero.droidfish.DroidFish$1: void addAction(org.petero.droidfish.UIAction)>($r3);
        $r4 = new org.petero.droidfish.DroidFish$1$2;
        specialinvoke $r4.<org.petero.droidfish.DroidFish$1$2: void <init>(org.petero.droidfish.DroidFish$1)>(r0);
        specialinvoke r0.<org.petero.droidfish.DroidFish$1: void addAction(org.petero.droidfish.UIAction)>($r4);
        $r5 = new org.petero.droidfish.DroidFish$1$3;
        specialinvoke $r5.<org.petero.droidfish.DroidFish$1$3: void <init>(org.petero.droidfish.DroidFish$1)>(r0);
        specialinvoke r0.<org.petero.droidfish.DroidFish$1: void addAction(org.petero.droidfish.UIAction)>($r5);
        $r6 = new org.petero.droidfish.DroidFish$1$4;
        specialinvoke $r6.<org.petero.droidfish.DroidFish$1$4: void <init>(org.petero.droidfish.DroidFish$1)>(r0);
        specialinvoke r0.<org.petero.droidfish.DroidFish$1: void addAction(org.petero.droidfish.UIAction)>($r6);
        $r7 = new org.petero.droidfish.DroidFish$1$5;
        specialinvoke $r7.<org.petero.droidfish.DroidFish$1$5: void <init>(org.petero.droidfish.DroidFish$1)>(r0);
        specialinvoke r0.<org.petero.droidfish.DroidFish$1: void addAction(org.petero.droidfish.UIAction)>($r7);
        $r8 = new org.petero.droidfish.DroidFish$1$6;
        specialinvoke $r8.<org.petero.droidfish.DroidFish$1$6: void <init>(org.petero.droidfish.DroidFish$1)>(r0);
        specialinvoke r0.<org.petero.droidfish.DroidFish$1: void addAction(org.petero.droidfish.UIAction)>($r8);
        $r9 = new org.petero.droidfish.DroidFish$1$7;
        specialinvoke $r9.<org.petero.droidfish.DroidFish$1$7: void <init>(org.petero.droidfish.DroidFish$1)>(r0);
        specialinvoke r0.<org.petero.droidfish.DroidFish$1: void addAction(org.petero.droidfish.UIAction)>($r9);
        $r10 = new org.petero.droidfish.DroidFish$1$8;
        specialinvoke $r10.<org.petero.droidfish.DroidFish$1$8: void <init>(org.petero.droidfish.DroidFish$1)>(r0);
        specialinvoke r0.<org.petero.droidfish.DroidFish$1: void addAction(org.petero.droidfish.UIAction)>($r10);
        return;
    }

    private void addAction(org.petero.droidfish.UIAction)
    {
        org.petero.droidfish.DroidFish$1 r0;
        org.petero.droidfish.UIAction r1;
        java.util.HashMap $r2;
        java.lang.String $r3;

        r0 := @this: org.petero.droidfish.DroidFish$1;
        r1 := @parameter0: org.petero.droidfish.UIAction;
        $r2 = r0.<org.petero.droidfish.DroidFish$1: java.util.HashMap actions>;
        $r3 = interfaceinvoke r1.<org.petero.droidfish.UIAction: java.lang.String getId()>();
        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);
        return;
    }

    public org.petero.droidfish.UIAction getAction(java.lang.String)
    {
        org.petero.droidfish.DroidFish$1 r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        org.petero.droidfish.UIAction $r4;

        r0 := @this: org.petero.droidfish.DroidFish$1;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.petero.droidfish.DroidFish$1: java.util.HashMap actions>;
        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (org.petero.droidfish.UIAction) $r3;
        return $r4;
    }
}
class org.petero.droidfish.DroidFish$10 extends java.lang.Object implements android.view.View$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$10 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$10;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$10: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.view.View)
    {
        org.petero.droidfish.DroidFish$10 r0;
        android.view.View r1;
        org.petero.droidfish.gamelogic.DroidChessController $r2;

        r0 := @this: org.petero.droidfish.DroidFish$10;
        r1 := @parameter0: android.view.View;
        $r2 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: void undoMove()>();
        return;
    }
}
class org.petero.droidfish.DroidFish$11 extends java.lang.Object implements android.view.View$OnLongClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$11 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$11;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$11: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onLongClick(android.view.View)
    {
        org.petero.droidfish.DroidFish$11 r0;
        android.view.View r1;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$11;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.DroidFish$11: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(13);
        $r3 = r0.<org.petero.droidfish.DroidFish$11: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(13);
        return 1;
    }
}
class org.petero.droidfish.DroidFish$12 extends java.lang.Object implements android.view.View$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$12 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$12;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$12: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.view.View)
    {
        org.petero.droidfish.DroidFish$12 r0;
        android.view.View r1;
        org.petero.droidfish.gamelogic.DroidChessController $r2;

        r0 := @this: org.petero.droidfish.DroidFish$12;
        r1 := @parameter0: android.view.View;
        $r2 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: void redoMove()>();
        return;
    }
}
class org.petero.droidfish.DroidFish$13 extends java.lang.Object implements android.view.View$OnLongClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$13 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$13;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$13: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onLongClick(android.view.View)
    {
        org.petero.droidfish.DroidFish$13 r0;
        android.view.View r1;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$13;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.DroidFish$13: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(14);
        $r3 = r0.<org.petero.droidfish.DroidFish$13: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(14);
        return 1;
    }
}
class org.petero.droidfish.DroidFish$14 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$14 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$14;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$14: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$14 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.DroidFish $r2;

        r0 := @this: org.petero.droidfish.DroidFish$14;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$14: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$1900(org.petero.droidfish.DroidFish,int)>($r2, 2);
        return;
    }
}
class org.petero.droidfish.DroidFish$15 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$15 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$15;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$15: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$15 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.DroidFish $r2;

        r0 := @this: org.petero.droidfish.DroidFish$15;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$15: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$1900(org.petero.droidfish.DroidFish,int)>($r2, 0);
        return;
    }
}
class org.petero.droidfish.DroidFish$16 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$16 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$16;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$16: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$16 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.DroidFish $r2;

        r0 := @this: org.petero.droidfish.DroidFish$16;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$16: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$1900(org.petero.droidfish.DroidFish,int)>($r2, 1);
        return;
    }
}
class org.petero.droidfish.DroidFish$17 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$17 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$17;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$17: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$17 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.gamelogic.DroidChessController $r2;

        r0 := @this: org.petero.droidfish.DroidFish$17;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: void reportPromotePiece(int)>(i0);
        return;
    }
}
class org.petero.droidfish.DroidFish$18 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.util.List val$finalActions;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.util.List)
    {
        org.petero.droidfish.DroidFish$18 r0;
        org.petero.droidfish.DroidFish r1;
        java.util.List r2;

        r0 := @this: org.petero.droidfish.DroidFish$18;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.util.List;
        r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$18: java.util.List val$finalActions> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$18 r0;
        android.content.DialogInterface r1;
        int i0, $i1;
        java.lang.String r2, $r13, r16, r24, $r31;
        android.text.ClipboardManager r3, r19, r22;
        org.petero.droidfish.gamelogic.ChessParseError r4, $r27;
        java.util.List $r5;
        java.lang.Object $r6, $r10, $r18, $r21;
        java.lang.Integer $r7;
        org.petero.droidfish.gamelogic.DroidChessController $r8, $r12, $r25;
        org.petero.droidfish.DroidFish $r9, $r17, $r20, $r26, $r28, $r30, $r33, $r34, $r35, $r36;
        java.lang.StringBuilder $r11, $r14, $r15;
        boolean $z0;
        java.lang.CharSequence $r23;
        android.content.Context $r29;
        android.widget.Toast $r32;

        r0 := @this: org.petero.droidfish.DroidFish$18;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r5 = r0.<org.petero.droidfish.DroidFish$18: java.util.List val$finalActions>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);
        $r7 = (java.lang.Integer) $r6;
        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
        tableswitch($i1)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label7;
            case 4: goto label8;
            case 5: goto label10;
            case 6: goto label9;
            default: goto label11;
        };

     label0:
        $r8 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        r2 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String getPGN()>();
        $r9 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        $r10 = virtualinvoke $r9.<org.petero.droidfish.DroidFish: java.lang.Object getSystemService(java.lang.String)>("clipboard");
        r3 = (android.text.ClipboardManager) $r10;
        virtualinvoke r3.<android.text.ClipboardManager: void setText(java.lang.CharSequence)>(r2);
        goto label11;

     label1:
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $r13 = virtualinvoke $r12.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String getFEN()>();
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        $r17 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        $r18 = virtualinvoke $r17.<org.petero.droidfish.DroidFish: java.lang.Object getSystemService(java.lang.String)>("clipboard");
        r19 = (android.text.ClipboardManager) $r18;
        virtualinvoke r19.<android.text.ClipboardManager: void setText(java.lang.CharSequence)>(r16);
        goto label11;

     label2:
        $r20 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        $r21 = virtualinvoke $r20.<org.petero.droidfish.DroidFish: java.lang.Object getSystemService(java.lang.String)>("clipboard");
        r22 = (android.text.ClipboardManager) $r21;
        $z0 = virtualinvoke r22.<android.text.ClipboardManager: boolean hasText()>();
        if $z0 == 0 goto label11;

        $r23 = virtualinvoke r22.<android.text.ClipboardManager: java.lang.CharSequence getText()>();
        r24 = interfaceinvoke $r23.<java.lang.CharSequence: java.lang.String toString()>();

     label3:
        $r25 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r25.<org.petero.droidfish.gamelogic.DroidChessController: void setFENOrPGN(java.lang.String)>(r24);
        $r26 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$1000(org.petero.droidfish.DroidFish,boolean)>($r26, 1);

     label4:
        goto label6;

     label5:
        $r27 := @caughtexception;
        r4 = $r27;
        $r28 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        $r29 = virtualinvoke $r28.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r30 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        $r31 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$2000(org.petero.droidfish.DroidFish,org.petero.droidfish.gamelogic.ChessParseError)>($r30, r4);
        $r32 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r29, $r31, 0);
        virtualinvoke $r32.<android.widget.Toast: void show()>();

     label6:
        goto label11;

     label7:
        $r33 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2100(org.petero.droidfish.DroidFish)>($r33);
        goto label11;

     label8:
        $r34 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2200(org.petero.droidfish.DroidFish,boolean)>($r34, 0);
        goto label11;

     label9:
        $r35 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2300(org.petero.droidfish.DroidFish)>($r35);
        goto label11;

     label10:
        $r36 = r0.<org.petero.droidfish.DroidFish$18: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2200(org.petero.droidfish.DroidFish,boolean)>($r36, 1);

     label11:
        return;

        catch org.petero.droidfish.gamelogic.ChessParseError from label3 to label4 with label5;
    }
}
class org.petero.droidfish.DroidFish$19 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.util.List val$finalActions;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.util.List)
    {
        org.petero.droidfish.DroidFish$19 r0;
        org.petero.droidfish.DroidFish r1;
        java.util.List r2;

        r0 := @this: org.petero.droidfish.DroidFish$19;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.util.List;
        r0.<org.petero.droidfish.DroidFish$19: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$19: java.util.List val$finalActions> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$19 r0;
        android.content.DialogInterface r1;
        int i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        org.petero.droidfish.DroidFish $r5, $r6, $r7;

        r0 := @this: org.petero.droidfish.DroidFish$19;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$19: java.util.List val$finalActions>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);
        $r4 = (java.lang.Integer) $r3;
        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
        tableswitch($i1)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label0:
        $r5 = r0.<org.petero.droidfish.DroidFish$19: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2200(org.petero.droidfish.DroidFish,boolean)>($r5, 0);
        goto label3;

     label1:
        $r6 = r0.<org.petero.droidfish.DroidFish$19: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2200(org.petero.droidfish.DroidFish,boolean)>($r6, 1);
        goto label3;

     label2:
        $r7 = r0.<org.petero.droidfish.DroidFish$19: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2300(org.petero.droidfish.DroidFish)>($r7);

     label3:
        return;
    }
}
class org.petero.droidfish.DroidFish$2 extends java.lang.Object implements android.content.SharedPreferences$OnSharedPreferenceChangeListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$2 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$2;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$2: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)
    {
        org.petero.droidfish.DroidFish$2 r0;
        android.content.SharedPreferences r1;
        java.lang.String r2;
        org.petero.droidfish.DroidFish $r3;

        r0 := @this: org.petero.droidfish.DroidFish$2;
        r1 := @parameter0: android.content.SharedPreferences;
        r2 := @parameter1: java.lang.String;
        $r3 = r0.<org.petero.droidfish.DroidFish$2: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$1200(org.petero.droidfish.DroidFish)>($r3);
        return;
    }
}
class org.petero.droidfish.DroidFish$20 extends java.lang.Object implements java.lang.Runnable
{
    final android.widget.EditText val$moveNrView;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, android.widget.EditText)
    {
        org.petero.droidfish.DroidFish$20 r0;
        org.petero.droidfish.DroidFish r1;
        android.widget.EditText r2;

        r0 := @this: org.petero.droidfish.DroidFish$20;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: android.widget.EditText;
        r0.<org.petero.droidfish.DroidFish$20: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$20: android.widget.EditText val$moveNrView> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$20 r0;
        int i0;
        android.widget.EditText $r1;
        android.text.Editable $r2;
        java.lang.String $r3;
        org.petero.droidfish.gamelogic.DroidChessController $r4;
        java.lang.NumberFormatException $r5, r6;
        org.petero.droidfish.DroidFish $r7;
        android.content.Context $r8;
        android.widget.Toast $r9;

        r0 := @this: org.petero.droidfish.DroidFish$20;

     label0:
        $r1 = r0.<org.petero.droidfish.DroidFish$20: android.widget.EditText val$moveNrView>;
        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);
        $r4 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.DroidChessController: void gotoMove(int)>(i0);

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r6 = $r5;
        $r7 = r0.<org.petero.droidfish.DroidFish$20: org.petero.droidfish.DroidFish this$0>;
        $r8 = virtualinvoke $r7.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r8, 2131099684, 0);
        virtualinvoke $r9.<android.widget.Toast: void show()>();

     label3:
        return;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }
}
class org.petero.droidfish.DroidFish$21 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.lang.Runnable val$gotoMove;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.lang.Runnable)
    {
        org.petero.droidfish.DroidFish$21 r0;
        org.petero.droidfish.DroidFish r1;
        java.lang.Runnable r2;

        r0 := @this: org.petero.droidfish.DroidFish$21;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.lang.Runnable;
        r0.<org.petero.droidfish.DroidFish$21: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$21: java.lang.Runnable val$gotoMove> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$21 r0;
        android.content.DialogInterface r1;
        int i0;
        java.lang.Runnable $r2;

        r0 := @this: org.petero.droidfish.DroidFish$21;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$21: java.lang.Runnable val$gotoMove>;
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();
        return;
    }
}
class org.petero.droidfish.DroidFish$22 extends java.lang.Object implements android.view.View$OnKeyListener
{
    final java.lang.Runnable val$gotoMove;
    final android.app.AlertDialog val$dialog;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.lang.Runnable, android.app.AlertDialog)
    {
        org.petero.droidfish.DroidFish$22 r0;
        org.petero.droidfish.DroidFish r1;
        java.lang.Runnable r2;
        android.app.AlertDialog r3;

        r0 := @this: org.petero.droidfish.DroidFish$22;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.lang.Runnable;
        r3 := @parameter2: android.app.AlertDialog;
        r0.<org.petero.droidfish.DroidFish$22: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$22: java.lang.Runnable val$gotoMove> = r2;
        r0.<org.petero.droidfish.DroidFish$22: android.app.AlertDialog val$dialog> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onKey(android.view.View, int, android.view.KeyEvent)
    {
        org.petero.droidfish.DroidFish$22 r0;
        android.view.View r1;
        int i0, $i1;
        android.view.KeyEvent r2;
        java.lang.Runnable $r3;
        android.app.AlertDialog $r4;

        r0 := @this: org.petero.droidfish.DroidFish$22;
        r1 := @parameter0: android.view.View;
        i0 := @parameter1: int;
        r2 := @parameter2: android.view.KeyEvent;
        $i1 = virtualinvoke r2.<android.view.KeyEvent: int getAction()>();
        if $i1 != 0 goto label0;

        if i0 != 66 goto label0;

        $r3 = r0.<org.petero.droidfish.DroidFish$22: java.lang.Runnable val$gotoMove>;
        interfaceinvoke $r3.<java.lang.Runnable: void run()>();
        $r4 = r0.<org.petero.droidfish.DroidFish$22: android.app.AlertDialog val$dialog>;
        virtualinvoke $r4.<android.app.AlertDialog: void cancel()>();
        return 1;

     label0:
        return 0;
    }
}
class org.petero.droidfish.DroidFish$23 extends java.lang.Object implements org.petero.droidfish.DroidFish$FileNameFilter
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$23 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$23;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$23: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean accept(java.lang.String)
    {
        org.petero.droidfish.DroidFish$23 r0;
        java.lang.String r1, r2;
        int i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.petero.droidfish.DroidFish$23;
        r1 := @parameter0: java.lang.String;
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");
        if i0 >= 0 goto label0;

        return 0;

     label0:
        $i1 = i0 + 1;
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ctg");
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("bin");
        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;
        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }
}
class org.petero.droidfish.DroidFish$24 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final int val$numFiles;
    final java.lang.CharSequence[] val$finalItems;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, int, java.lang.CharSequence[])
    {
        org.petero.droidfish.DroidFish$24 r0;
        org.petero.droidfish.DroidFish r1;
        int i0;
        java.lang.CharSequence[] r2;

        r0 := @this: org.petero.droidfish.DroidFish$24;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.CharSequence[];
        r0.<org.petero.droidfish.DroidFish$24: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$24: int val$numFiles> = i0;
        r0.<org.petero.droidfish.DroidFish$24: java.lang.CharSequence[] val$finalItems> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$24 r0;
        android.content.DialogInterface r1;
        int i0, $i1;
        android.content.SharedPreferences$Editor r2;
        java.lang.String r3;
        org.petero.droidfish.DroidFish $r4, $r9, $r11;
        android.content.SharedPreferences $r5;
        java.lang.CharSequence[] $r6;
        java.lang.CharSequence $r7;
        org.petero.droidfish.book.BookOptions $r10;

        r0 := @this: org.petero.droidfish.DroidFish$24;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r4 = r0.<org.petero.droidfish.DroidFish$24: org.petero.droidfish.DroidFish this$0>;
        $r5 = $r4.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r2 = interfaceinvoke $r5.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        r3 = "";
        $i1 = r0.<org.petero.droidfish.DroidFish$24: int val$numFiles>;
        if i0 >= $i1 goto label0;

        $r6 = r0.<org.petero.droidfish.DroidFish$24: java.lang.CharSequence[] val$finalItems>;
        $r7 = $r6[i0];
        r3 = interfaceinvoke $r7.<java.lang.CharSequence: java.lang.String toString()>();

     label0:
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("bookFile", r3);
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r9 = r0.<org.petero.droidfish.DroidFish$24: org.petero.droidfish.DroidFish this$0>;
        $r10 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions access$2400(org.petero.droidfish.DroidFish)>($r9);
        $r10.<org.petero.droidfish.book.BookOptions: java.lang.String filename> = r3;
        $r11 = r0.<org.petero.droidfish.DroidFish$24: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2500(org.petero.droidfish.DroidFish)>($r11);
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        return;
    }
}
class org.petero.droidfish.DroidFish$25 extends java.lang.Object implements org.petero.droidfish.DroidFish$FileNameFilter
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$25 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$25;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$25: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean accept(java.lang.String)
    {
        org.petero.droidfish.DroidFish$25 r0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.petero.droidfish.DroidFish$25;
        r1 := @parameter0: java.lang.String;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$2600(java.lang.String)>(r1);
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }
}
class org.petero.droidfish.DroidFish$26 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final int val$nEngines;
    final java.lang.String[] val$ids;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, int, java.lang.String[])
    {
        org.petero.droidfish.DroidFish$26 r0;
        org.petero.droidfish.DroidFish r1;
        int i0;
        java.lang.String[] r2;

        r0 := @this: org.petero.droidfish.DroidFish$26;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String[];
        r0.<org.petero.droidfish.DroidFish$26: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$26: int val$nEngines> = i0;
        r0.<org.petero.droidfish.DroidFish$26: java.lang.String[] val$ids> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$26 r0;
        android.content.DialogInterface r1;
        int i0, i1, $i2;
        android.content.SharedPreferences$Editor r2;
        java.lang.String r3;
        org.petero.droidfish.DroidFish $r4, $r8, $r10, $r11;
        android.content.SharedPreferences $r5, $r9;
        java.lang.String[] $r6;

        r0 := @this: org.petero.droidfish.DroidFish$26;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        if i0 < 0 goto label0;

        $i2 = r0.<org.petero.droidfish.DroidFish$26: int val$nEngines>;
        if i0 < $i2 goto label1;

     label0:
        return;

     label1:
        $r4 = r0.<org.petero.droidfish.DroidFish$26: org.petero.droidfish.DroidFish this$0>;
        $r5 = $r4.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r2 = interfaceinvoke $r5.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $r6 = r0.<org.petero.droidfish.DroidFish$26: java.lang.String[] val$ids>;
        r3 = $r6[i0];
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("engine", r3);
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: boolean commit()>();
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        $r8 = r0.<org.petero.droidfish.DroidFish$26: org.petero.droidfish.DroidFish this$0>;
        $r9 = $r8.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        i1 = interfaceinvoke $r9.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("strength", 1000);
        $r10 = r0.<org.petero.droidfish.DroidFish$26: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2700(org.petero.droidfish.DroidFish,boolean)>($r10, 0);
        $r11 = r0.<org.petero.droidfish.DroidFish$26: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2800(org.petero.droidfish.DroidFish,java.lang.String,int)>($r11, r3, i1);
        return;
    }
}
class org.petero.droidfish.DroidFish$27 extends java.lang.Object implements android.content.DialogInterface$OnCancelListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$27 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$27;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$27: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onCancel(android.content.DialogInterface)
    {
        org.petero.droidfish.DroidFish$27 r0;
        android.content.DialogInterface r1;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$27;
        r1 := @parameter0: android.content.DialogInterface;
        $r2 = r0.<org.petero.droidfish.DroidFish$27: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(20);
        $r3 = r0.<org.petero.droidfish.DroidFish$27: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(20);
        return;
    }
}
class org.petero.droidfish.DroidFish$28 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.lang.String[] val$fileNames;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.lang.String[])
    {
        org.petero.droidfish.DroidFish$28 r0;
        org.petero.droidfish.DroidFish r1;
        java.lang.String[] r2;

        r0 := @this: org.petero.droidfish.DroidFish$28;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.lang.String[];
        r0.<org.petero.droidfish.DroidFish$28: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$28: java.lang.String[] val$fileNames> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$28 r0;
        android.content.DialogInterface r1;
        int i0;
        java.lang.String r2, r3, r4, $r6, $r11;
        java.lang.String[] $r5;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r13, $r14;
        java.io.File $r8;
        org.petero.droidfish.DroidFish $r15;

        r0 := @this: org.petero.droidfish.DroidFish$28;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        r2 = <java.io.File: java.lang.String separator>;
        $r5 = r0.<org.petero.droidfish.DroidFish$28: java.lang.String[] val$fileNames>;
        $r6 = $r5[i0];
        r3 = virtualinvoke $r6.<java.lang.String: java.lang.String toString()>();
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r11 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$2900()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = r0.<org.petero.droidfish.DroidFish$28: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$3000(org.petero.droidfish.DroidFish,java.lang.String)>($r15, r4);
        return;
    }
}
class org.petero.droidfish.DroidFish$29 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final int val$numFiles;
    final java.lang.String[] val$fileNames;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, int, java.lang.String[])
    {
        org.petero.droidfish.DroidFish$29 r0;
        org.petero.droidfish.DroidFish r1;
        int i0;
        java.lang.String[] r2;

        r0 := @this: org.petero.droidfish.DroidFish$29;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String[];
        r0.<org.petero.droidfish.DroidFish$29: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$29: int val$numFiles> = i0;
        r0.<org.petero.droidfish.DroidFish$29: java.lang.String[] val$fileNames> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$29 r0;
        android.content.DialogInterface r1;
        int i0, $i1;
        java.lang.String r2, r3, r4, $r7, $r12;
        org.petero.droidfish.DroidFish $r5, $r16;
        java.lang.String[] $r6;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14, $r15;
        java.io.File $r9;

        r0 := @this: org.petero.droidfish.DroidFish$29;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $i1 = r0.<org.petero.droidfish.DroidFish$29: int val$numFiles>;
        if i0 < $i1 goto label0;

        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        $r5 = r0.<org.petero.droidfish.DroidFish$29: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r5.<org.petero.droidfish.DroidFish: void showDialog(int)>(10);
        goto label1;

     label0:
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        $r6 = r0.<org.petero.droidfish.DroidFish$29: java.lang.String[] val$fileNames>;
        $r7 = $r6[i0];
        r2 = virtualinvoke $r7.<java.lang.String: java.lang.String toString()>();
        r3 = <java.io.File: java.lang.String separator>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r12 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$2900()>();
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        r4 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        $r16 = r0.<org.petero.droidfish.DroidFish$29: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$3100(org.petero.droidfish.DroidFish,java.lang.String,boolean)>($r16, r4, 0);

     label1:
        return;
    }
}
class org.petero.droidfish.DroidFish$3 extends android.view.GestureDetector$SimpleOnGestureListener
{
    private float scrollX;
    private float scrollY;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$3 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$3;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>();
        r0.<org.petero.droidfish.DroidFish$3: float scrollX> = 0.0F;
        r0.<org.petero.droidfish.DroidFish$3: float scrollY> = 0.0F;
        return;
    }

    public boolean onDown(android.view.MotionEvent)
    {
        org.petero.droidfish.DroidFish$3 r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.DroidFish $r2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish$3;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$1300(org.petero.droidfish.DroidFish)>($r2);
        if $z0 != 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.DroidFish$3: void handleClick(android.view.MotionEvent)>(r1);
        return 1;

     label0:
        r0.<org.petero.droidfish.DroidFish$3: float scrollX> = 0.0F;
        r0.<org.petero.droidfish.DroidFish$3: float scrollY> = 0.0F;
        return 0;
    }

    public boolean onScroll(android.view.MotionEvent, android.view.MotionEvent, float, float)
    {
        org.petero.droidfish.DroidFish$3 r0;
        android.view.MotionEvent r1, r2;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        int i0, i1, $i3, $i4, $i8, $i9, i10, i11, i12;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        org.petero.droidfish.DroidFish $r3, $r4, $r6, $r7, $r8, $r12, $r14, $r17, $r19, $r21, $r28;
        org.petero.droidfish.ChessBoardPlay $r5, $r9, $r13;
        byte $b2, $b5, $b6, $b7, $b13, $b14;
        org.petero.droidfish.GameMode $r18, $r20, $r22, $r24, $r29;
        org.petero.droidfish.gamelogic.DroidChessController $r23, $r25, $r26, $r27, $r32;

        r0 := @this: org.petero.droidfish.DroidFish$3;
        r1 := @parameter0: android.view.MotionEvent;
        r2 := @parameter1: android.view.MotionEvent;
        f0 := @parameter2: float;
        f1 := @parameter3: float;
        $r3 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $z2 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$1300(org.petero.droidfish.DroidFish)>($r3);
        if $z2 != 0 goto label0;

        return 0;

     label0:
        $r4 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r5 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r4);
        virtualinvoke $r5.<org.petero.droidfish.ChessBoardPlay: void cancelLongPress()>();
        $r6 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $z3 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$1400(org.petero.droidfish.DroidFish)>($r6);
        if $z3 == 0 goto label1;

        f0 = neg f0;
        f1 = neg f1;

     label1:
        $r7 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $f3 = staticinvoke <org.petero.droidfish.DroidFish: float access$1500(org.petero.droidfish.DroidFish)>($r7);
        $b2 = $f3 cmpl 0.0F;
        if $b2 <= 0 goto label20;

        $r8 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r9 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r8);
        $i3 = $r9.<org.petero.droidfish.ChessBoardPlay: int sqSize>;
        if $i3 <= 0 goto label20;

        $f4 = r0.<org.petero.droidfish.DroidFish$3: float scrollX>;
        $f5 = $f4 + f0;
        r0.<org.petero.droidfish.DroidFish$3: float scrollX> = $f5;
        $f6 = r0.<org.petero.droidfish.DroidFish$3: float scrollY>;
        $f7 = $f6 + f1;
        r0.<org.petero.droidfish.DroidFish$3: float scrollY> = $f7;
        $r12 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r13 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r12);
        $i4 = $r13.<org.petero.droidfish.ChessBoardPlay: int sqSize>;
        $f8 = (float) $i4;
        $r14 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $f9 = staticinvoke <org.petero.droidfish.DroidFish: float access$1500(org.petero.droidfish.DroidFish)>($r14);
        f2 = $f8 * $f9;
        $f10 = r0.<org.petero.droidfish.DroidFish$3: float scrollX>;
        $f11 = staticinvoke <java.lang.Math: float abs(float)>($f10);
        $f12 = r0.<org.petero.droidfish.DroidFish$3: float scrollY>;
        $f13 = staticinvoke <java.lang.Math: float abs(float)>($f12);
        $b5 = $f11 cmpl $f13;
        if $b5 < 0 goto label15;

        i0 = 0;
        i1 = 0;

     label2:
        $f14 = r0.<org.petero.droidfish.DroidFish$3: float scrollX>;
        $b6 = $f14 cmpl f2;
        if $b6 <= 0 goto label3;

        i0 = i0 + 1;
        $f15 = r0.<org.petero.droidfish.DroidFish$3: float scrollX>;
        $f16 = $f15 - f2;
        r0.<org.petero.droidfish.DroidFish$3: float scrollX> = $f16;
        goto label2;

     label3:
        $f17 = r0.<org.petero.droidfish.DroidFish$3: float scrollX>;
        $f18 = neg f2;
        $b7 = $f17 cmpg $f18;
        if $b7 >= 0 goto label4;

        i1 = i1 + 1;
        $f19 = r0.<org.petero.droidfish.DroidFish$3: float scrollX>;
        $f20 = $f19 + f2;
        r0.<org.petero.droidfish.DroidFish$3: float scrollX> = $f20;
        goto label3;

     label4:
        $i8 = i1 + i0;
        if $i8 <= 0 goto label5;

        r0.<org.petero.droidfish.DroidFish$3: float scrollY> = 0.0F;

     label5:
        $i9 = i0 + i1;
        if $i9 <= 1 goto label10;

        $r17 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r18 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode access$1600(org.petero.droidfish.DroidFish)>($r17);
        z0 = virtualinvoke $r18.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        $r19 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r20 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode access$1600(org.petero.droidfish.DroidFish)>($r19);
        $z4 = virtualinvoke $r20.<org.petero.droidfish.GameMode: boolean playerWhite()>();
        if $z4 != 0 goto label6;

        $r21 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r22 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode access$1600(org.petero.droidfish.DroidFish)>($r21);
        $z5 = virtualinvoke $r22.<org.petero.droidfish.GameMode: boolean playerBlack()>();
        if $z5 == 0 goto label7;

     label6:
        $z6 = 1;
        goto label8;

     label7:
        $z6 = 0;

     label8:
        z1 = $z6;
        if z0 != 0 goto label9;

        if z1 != 0 goto label10;

     label9:
        $r23 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $r24 = new org.petero.droidfish.GameMode;
        specialinvoke $r24.<org.petero.droidfish.GameMode: void <init>(int)>(3);
        virtualinvoke $r23.<org.petero.droidfish.gamelogic.DroidChessController: void setGameMode(org.petero.droidfish.GameMode)>($r24);

     label10:
        i10 = 0;

     label11:
        if i10 >= i0 goto label12;

        $r25 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r25.<org.petero.droidfish.gamelogic.DroidChessController: void redoMove()>();
        i10 = i10 + 1;
        goto label11;

     label12:
        i11 = 0;

     label13:
        if i11 >= i1 goto label14;

        $r26 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r26.<org.petero.droidfish.gamelogic.DroidChessController: void undoMove()>();
        i11 = i11 + 1;
        goto label13;

     label14:
        $r27 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $r28 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r29 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode access$1600(org.petero.droidfish.DroidFish)>($r28);
        virtualinvoke $r27.<org.petero.droidfish.gamelogic.DroidChessController: void setGameMode(org.petero.droidfish.GameMode)>($r29);
        goto label20;

     label15:
        i12 = 0;

     label16:
        $f21 = r0.<org.petero.droidfish.DroidFish$3: float scrollY>;
        $b13 = $f21 cmpl f2;
        if $b13 <= 0 goto label17;

        i12 = i12 + 1;
        $f22 = r0.<org.petero.droidfish.DroidFish$3: float scrollY>;
        $f23 = $f22 - f2;
        r0.<org.petero.droidfish.DroidFish$3: float scrollY> = $f23;
        goto label16;

     label17:
        $f24 = r0.<org.petero.droidfish.DroidFish$3: float scrollY>;
        $f25 = neg f2;
        $b14 = $f24 cmpg $f25;
        if $b14 >= 0 goto label18;

        i12 = i12 + -1;
        $f26 = r0.<org.petero.droidfish.DroidFish$3: float scrollY>;
        $f27 = $f26 + f2;
        r0.<org.petero.droidfish.DroidFish$3: float scrollY> = $f27;
        goto label17;

     label18:
        if i12 == 0 goto label19;

        r0.<org.petero.droidfish.DroidFish$3: float scrollX> = 0.0F;

     label19:
        $r32 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r32.<org.petero.droidfish.gamelogic.DroidChessController: void changeVariation(int)>(i12);

     label20:
        return 1;
    }

    public boolean onSingleTapUp(android.view.MotionEvent)
    {
        org.petero.droidfish.DroidFish$3 r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.DroidFish $r2, $r3;
        boolean $z0;
        org.petero.droidfish.ChessBoardPlay $r4;

        r0 := @this: org.petero.droidfish.DroidFish$3;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$1300(org.petero.droidfish.DroidFish)>($r2);
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $r3 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r4 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r3);
        virtualinvoke $r4.<org.petero.droidfish.ChessBoardPlay: void cancelLongPress()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish$3: void handleClick(android.view.MotionEvent)>(r1);
        return 1;
    }

    public boolean onDoubleTapEvent(android.view.MotionEvent)
    {
        org.petero.droidfish.DroidFish$3 r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.DroidFish $r2;
        boolean $z0;
        int $i0;

        r0 := @this: org.petero.droidfish.DroidFish$3;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$1300(org.petero.droidfish.DroidFish)>($r2);
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        if $i0 != 1 goto label1;

        specialinvoke r0.<org.petero.droidfish.DroidFish$3: void handleClick(android.view.MotionEvent)>(r1);

     label1:
        return 1;
    }

    private final void handleClick(android.view.MotionEvent)
    {
        org.petero.droidfish.DroidFish$3 r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.gamelogic.DroidChessController $r2, $r8;
        int i0, $i1;
        org.petero.droidfish.gamelogic.Move r3;
        boolean $z0;
        org.petero.droidfish.DroidFish $r4, $r6, $r9, $r10;
        org.petero.droidfish.ChessBoardPlay $r5, $r7, $r11;

        r0 := @this: org.petero.droidfish.DroidFish$3;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $z0 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z0 == 0 goto label1;

        $r4 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r5 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r4);
        i0 = virtualinvoke $r5.<org.petero.droidfish.ChessBoardPlay: int eventToSquare(android.view.MotionEvent)>(r1);
        $r6 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r7 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r6);
        r3 = virtualinvoke $r7.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Move mousePressed(int)>(i0);
        if r3 == null goto label0;

        $r8 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.DroidChessController: void makeHumanMove(org.petero.droidfish.gamelogic.Move)>(r3);

     label0:
        $r9 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r10 = r0.<org.petero.droidfish.DroidFish$3: org.petero.droidfish.DroidFish this$0>;
        $r11 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r10);
        $i1 = virtualinvoke $r11.<org.petero.droidfish.ChessBoardPlay: int getSelectedSquare()>();
        staticinvoke <org.petero.droidfish.DroidFish: void access$1700(org.petero.droidfish.DroidFish,int)>($r9, $i1);

     label1:
        return;
    }
}
class org.petero.droidfish.DroidFish$30 extends java.lang.Object implements java.lang.Runnable
{
    final android.widget.EditText val$fileNameView;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, android.widget.EditText)
    {
        org.petero.droidfish.DroidFish$30 r0;
        org.petero.droidfish.DroidFish r1;
        android.widget.EditText r2;

        r0 := @this: org.petero.droidfish.DroidFish$30;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: android.widget.EditText;
        r0.<org.petero.droidfish.DroidFish$30: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$30: android.widget.EditText val$fileNameView> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$30 r0;
        java.lang.String r1, r2, r3, $r13;
        android.widget.EditText $r4;
        android.text.Editable $r5;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r16;
        java.io.File $r10;
        org.petero.droidfish.DroidFish $r17;

        r0 := @this: org.petero.droidfish.DroidFish$30;
        $r4 = r0.<org.petero.droidfish.DroidFish$30: android.widget.EditText val$fileNameView>;
        $r5 = virtualinvoke $r4.<android.widget.EditText: android.text.Editable getText()>();
        r1 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");
        if $z0 != 0 goto label0;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pgn");
        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        r2 = <java.io.File: java.lang.String separator>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r13 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$2900()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        $r17 = r0.<org.petero.droidfish.DroidFish$30: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$3100(org.petero.droidfish.DroidFish,java.lang.String,boolean)>($r17, r3, 0);
        return;
    }
}
class org.petero.droidfish.DroidFish$31 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.lang.Runnable val$savePGN;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.lang.Runnable)
    {
        org.petero.droidfish.DroidFish$31 r0;
        org.petero.droidfish.DroidFish r1;
        java.lang.Runnable r2;

        r0 := @this: org.petero.droidfish.DroidFish$31;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.lang.Runnable;
        r0.<org.petero.droidfish.DroidFish$31: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$31: java.lang.Runnable val$savePGN> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$31 r0;
        android.content.DialogInterface r1;
        int i0;
        java.lang.Runnable $r2;

        r0 := @this: org.petero.droidfish.DroidFish$31;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$31: java.lang.Runnable val$savePGN>;
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();
        return;
    }
}
class org.petero.droidfish.DroidFish$32 extends java.lang.Object implements android.view.View$OnKeyListener
{
    final java.lang.Runnable val$savePGN;
    final android.app.Dialog val$dialog;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.lang.Runnable, android.app.Dialog)
    {
        org.petero.droidfish.DroidFish$32 r0;
        org.petero.droidfish.DroidFish r1;
        java.lang.Runnable r2;
        android.app.Dialog r3;

        r0 := @this: org.petero.droidfish.DroidFish$32;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.lang.Runnable;
        r3 := @parameter2: android.app.Dialog;
        r0.<org.petero.droidfish.DroidFish$32: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$32: java.lang.Runnable val$savePGN> = r2;
        r0.<org.petero.droidfish.DroidFish$32: android.app.Dialog val$dialog> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onKey(android.view.View, int, android.view.KeyEvent)
    {
        org.petero.droidfish.DroidFish$32 r0;
        android.view.View r1;
        int i0, $i1;
        android.view.KeyEvent r2;
        java.lang.Runnable $r3;
        android.app.Dialog $r4;

        r0 := @this: org.petero.droidfish.DroidFish$32;
        r1 := @parameter0: android.view.View;
        i0 := @parameter1: int;
        r2 := @parameter2: android.view.KeyEvent;
        $i1 = virtualinvoke r2.<android.view.KeyEvent: int getAction()>();
        if $i1 != 0 goto label0;

        if i0 != 66 goto label0;

        $r3 = r0.<org.petero.droidfish.DroidFish$32: java.lang.Runnable val$savePGN>;
        interfaceinvoke $r3.<java.lang.Runnable: void run()>();
        $r4 = r0.<org.petero.droidfish.DroidFish$32: android.app.Dialog val$dialog>;
        virtualinvoke $r4.<android.app.Dialog: void cancel()>();
        return 1;

     label0:
        return 0;
    }
}
class org.petero.droidfish.DroidFish$33 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$33 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$33;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$33: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$33 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.ColorTheme $r2;
        org.petero.droidfish.DroidFish $r3, $r5, $r7, $r10;
        android.content.SharedPreferences $r4;
        org.petero.droidfish.ChessBoardPlay $r6;
        org.petero.droidfish.DroidFish$PgnScreenText $r8;
        org.petero.droidfish.gamelogic.DroidChessController $r9;
        android.view.View $r11;

        r0 := @this: org.petero.droidfish.DroidFish$33;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = staticinvoke <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme instance()>();
        $r3 = r0.<org.petero.droidfish.DroidFish$33: org.petero.droidfish.DroidFish this$0>;
        $r4 = $r3.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        virtualinvoke $r2.<org.petero.droidfish.ColorTheme: void setTheme(android.content.SharedPreferences,int)>($r4, i0);
        $r5 = r0.<org.petero.droidfish.DroidFish$33: org.petero.droidfish.DroidFish this$0>;
        $r6 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r5);
        virtualinvoke $r6.<org.petero.droidfish.ChessBoardPlay: void setColors()>();
        $r7 = r0.<org.petero.droidfish.DroidFish$33: org.petero.droidfish.DroidFish this$0>;
        $r8 = $r7.<org.petero.droidfish.DroidFish: org.petero.droidfish.DroidFish$PgnScreenText gameTextListener>;
        virtualinvoke $r8.<org.petero.droidfish.DroidFish$PgnScreenText: void clear()>();
        $r9 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r9.<org.petero.droidfish.gamelogic.DroidChessController: void prefsChanged(boolean)>(0);
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        $r10 = r0.<org.petero.droidfish.DroidFish$33: org.petero.droidfish.DroidFish this$0>;
        $r11 = virtualinvoke $r10.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(16908290);
        staticinvoke <org.petero.droidfish.Util: void overrideFonts(android.view.View)>($r11);
        return;
    }
}
class org.petero.droidfish.DroidFish$34 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$34 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$34;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$34: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$34 r0;
        android.content.DialogInterface r1;
        int i0;
        byte b1;
        boolean z0;
        android.content.SharedPreferences$Editor r2;
        java.lang.String r3;
        org.petero.droidfish.DroidFish $r4, $r9, $r13, $r15;
        android.content.SharedPreferences $r5;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;
        org.petero.droidfish.GameMode $r10, $r14;
        org.petero.droidfish.gamelogic.DroidChessController $r12;

        r0 := @this: org.petero.droidfish.DroidFish$34;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        b1 = -1;
        z0 = 0;
        tableswitch(i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label0:
        b1 = 4;
        goto label6;

     label1:
        b1 = 6;
        goto label6;

     label2:
        b1 = 1;
        z0 = 1;
        goto label6;

     label3:
        b1 = 2;
        z0 = 1;
        goto label6;

     label4:
        b1 = 3;
        goto label6;

     label5:
        b1 = 5;
        goto label6;

     label6:
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        if b1 < 0 goto label7;

        $r4 = r0.<org.petero.droidfish.DroidFish$34: org.petero.droidfish.DroidFish this$0>;
        $r5 = $r4.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r2 = interfaceinvoke $r5.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $r6 = newarray (java.lang.Object)[1];
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b1);
        $r6[0] = $r7;
        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r6);
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gameMode", r3);
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r9 = r0.<org.petero.droidfish.DroidFish$34: org.petero.droidfish.DroidFish this$0>;
        $r10 = new org.petero.droidfish.GameMode;
        specialinvoke $r10.<org.petero.droidfish.GameMode: void <init>(int)>(b1);
        staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode access$1602(org.petero.droidfish.DroidFish,org.petero.droidfish.GameMode)>($r9, $r10);
        $r12 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $r13 = r0.<org.petero.droidfish.DroidFish$34: org.petero.droidfish.DroidFish this$0>;
        $r14 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode access$1600(org.petero.droidfish.DroidFish)>($r13);
        virtualinvoke $r12.<org.petero.droidfish.gamelogic.DroidChessController: void setGameMode(org.petero.droidfish.GameMode)>($r14);
        $r15 = r0.<org.petero.droidfish.DroidFish$34: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$1000(org.petero.droidfish.DroidFish,boolean)>($r15, z0);

     label7:
        return;
    }
}
class org.petero.droidfish.DroidFish$35$1 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.util.TreeMap val$headers;
    final android.widget.TextView val$event;
    final android.widget.TextView val$site;
    final android.widget.TextView val$date;
    final android.widget.TextView val$round;
    final android.widget.TextView val$white;
    final android.widget.TextView val$black;
    final org.petero.droidfish.DroidFish$35 this$1;

    void <init>(org.petero.droidfish.DroidFish$35, java.util.TreeMap, android.widget.TextView, android.widget.TextView, android.widget.TextView, android.widget.TextView, android.widget.TextView, android.widget.TextView)
    {
        org.petero.droidfish.DroidFish$35$1 r0;
        org.petero.droidfish.DroidFish$35 r1;
        java.util.TreeMap r2;
        android.widget.TextView r3, r4, r5, r6, r7, r8;

        r0 := @this: org.petero.droidfish.DroidFish$35$1;
        r1 := @parameter0: org.petero.droidfish.DroidFish$35;
        r2 := @parameter1: java.util.TreeMap;
        r3 := @parameter2: android.widget.TextView;
        r4 := @parameter3: android.widget.TextView;
        r5 := @parameter4: android.widget.TextView;
        r6 := @parameter5: android.widget.TextView;
        r7 := @parameter6: android.widget.TextView;
        r8 := @parameter7: android.widget.TextView;
        r0.<org.petero.droidfish.DroidFish$35$1: org.petero.droidfish.DroidFish$35 this$1> = r1;
        r0.<org.petero.droidfish.DroidFish$35$1: java.util.TreeMap val$headers> = r2;
        r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$event> = r3;
        r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$site> = r4;
        r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$date> = r5;
        r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$round> = r6;
        r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$white> = r7;
        r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$black> = r8;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$35$1 r0;
        android.content.DialogInterface r1;
        int i0;
        java.util.TreeMap $r2, $r8, $r14, $r20, $r26, $r32, $r39;
        android.widget.TextView $r3, $r9, $r15, $r21, $r27, $r33;
        java.lang.CharSequence $r4, $r10, $r16, $r22, $r28, $r34;
        java.lang.String $r5, $r6, $r11, $r12, $r17, $r18, $r23, $r24, $r29, $r30, $r35, $r36;
        org.petero.droidfish.gamelogic.DroidChessController $r38;
        org.petero.droidfish.DroidFish$35 $r40;
        org.petero.droidfish.DroidFish $r41;

        r0 := @this: org.petero.droidfish.DroidFish$35$1;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$35$1: java.util.TreeMap val$headers>;
        $r3 = r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$event>;
        $r4 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();
        virtualinvoke $r2.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Event", $r6);
        $r8 = r0.<org.petero.droidfish.DroidFish$35$1: java.util.TreeMap val$headers>;
        $r9 = r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$site>;
        $r10 = virtualinvoke $r9.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r11 = interfaceinvoke $r10.<java.lang.CharSequence: java.lang.String toString()>();
        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();
        virtualinvoke $r8.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Site", $r12);
        $r14 = r0.<org.petero.droidfish.DroidFish$35$1: java.util.TreeMap val$headers>;
        $r15 = r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$date>;
        $r16 = virtualinvoke $r15.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r17 = interfaceinvoke $r16.<java.lang.CharSequence: java.lang.String toString()>();
        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();
        virtualinvoke $r14.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Date", $r18);
        $r20 = r0.<org.petero.droidfish.DroidFish$35$1: java.util.TreeMap val$headers>;
        $r21 = r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$round>;
        $r22 = virtualinvoke $r21.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r23 = interfaceinvoke $r22.<java.lang.CharSequence: java.lang.String toString()>();
        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String trim()>();
        virtualinvoke $r20.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Round", $r24);
        $r26 = r0.<org.petero.droidfish.DroidFish$35$1: java.util.TreeMap val$headers>;
        $r27 = r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$white>;
        $r28 = virtualinvoke $r27.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r29 = interfaceinvoke $r28.<java.lang.CharSequence: java.lang.String toString()>();
        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String trim()>();
        virtualinvoke $r26.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("White", $r30);
        $r32 = r0.<org.petero.droidfish.DroidFish$35$1: java.util.TreeMap val$headers>;
        $r33 = r0.<org.petero.droidfish.DroidFish$35$1: android.widget.TextView val$black>;
        $r34 = virtualinvoke $r33.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r35 = interfaceinvoke $r34.<java.lang.CharSequence: java.lang.String toString()>();
        $r36 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();
        virtualinvoke $r32.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Black", $r36);
        $r38 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $r39 = r0.<org.petero.droidfish.DroidFish$35$1: java.util.TreeMap val$headers>;
        virtualinvoke $r38.<org.petero.droidfish.gamelogic.DroidChessController: void setHeaders(java.util.Map)>($r39);
        $r40 = r0.<org.petero.droidfish.DroidFish$35$1: org.petero.droidfish.DroidFish$35 this$1>;
        $r41 = $r40.<org.petero.droidfish.DroidFish$35: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$1000(org.petero.droidfish.DroidFish,boolean)>($r41, 1);
        return;
    }
}
class org.petero.droidfish.DroidFish$35$2 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final android.widget.TextView val$preComment;
    final android.widget.TextView val$postComment;
    final android.widget.TextView val$nag;
    final org.petero.droidfish.DroidFish$35 this$1;

    void <init>(org.petero.droidfish.DroidFish$35, android.widget.TextView, android.widget.TextView, android.widget.TextView)
    {
        org.petero.droidfish.DroidFish$35$2 r0;
        org.petero.droidfish.DroidFish$35 r1;
        android.widget.TextView r2, r3, r4;

        r0 := @this: org.petero.droidfish.DroidFish$35$2;
        r1 := @parameter0: org.petero.droidfish.DroidFish$35;
        r2 := @parameter1: android.widget.TextView;
        r3 := @parameter2: android.widget.TextView;
        r4 := @parameter3: android.widget.TextView;
        r0.<org.petero.droidfish.DroidFish$35$2: org.petero.droidfish.DroidFish$35 this$1> = r1;
        r0.<org.petero.droidfish.DroidFish$35$2: android.widget.TextView val$preComment> = r2;
        r0.<org.petero.droidfish.DroidFish$35$2: android.widget.TextView val$postComment> = r3;
        r0.<org.petero.droidfish.DroidFish$35$2: android.widget.TextView val$nag> = r4;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$35$2 r0;
        android.content.DialogInterface r1;
        int i0, i1;
        java.lang.String r2, r3, $r7, $r10, $r13;
        org.petero.droidfish.gamelogic.DroidChessController$CommentInfo r4, $r14;
        android.widget.TextView $r5, $r8, $r11;
        java.lang.CharSequence $r6, $r9, $r12;
        org.petero.droidfish.gamelogic.DroidChessController $r15;

        r0 := @this: org.petero.droidfish.DroidFish$35$2;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r5 = r0.<org.petero.droidfish.DroidFish$35$2: android.widget.TextView val$preComment>;
        $r6 = virtualinvoke $r5.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r7 = interfaceinvoke $r6.<java.lang.CharSequence: java.lang.String toString()>();
        r2 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();
        $r8 = r0.<org.petero.droidfish.DroidFish$35$2: android.widget.TextView val$postComment>;
        $r9 = virtualinvoke $r8.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r10 = interfaceinvoke $r9.<java.lang.CharSequence: java.lang.String toString()>();
        r3 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();
        $r11 = r0.<org.petero.droidfish.DroidFish$35$2: android.widget.TextView val$nag>;
        $r12 = virtualinvoke $r11.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r13 = interfaceinvoke $r12.<java.lang.CharSequence: java.lang.String toString()>();
        i1 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: int strToNag(java.lang.String)>($r13);
        $r14 = new org.petero.droidfish.gamelogic.DroidChessController$CommentInfo;
        specialinvoke $r14.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: void <init>()>();
        r4 = $r14;
        r4.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String preComment> = r2;
        r4.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String postComment> = r3;
        r4.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: int nag> = i1;
        $r15 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r15.<org.petero.droidfish.gamelogic.DroidChessController: void setComments(org.petero.droidfish.gamelogic.DroidChessController$CommentInfo)>(r4);
        return;
    }
}
class org.petero.droidfish.DroidFish$35 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.util.List val$finalActions;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.util.List)
    {
        org.petero.droidfish.DroidFish$35 r0;
        org.petero.droidfish.DroidFish r1;
        java.util.List r2;

        r0 := @this: org.petero.droidfish.DroidFish$35;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.util.List;
        r0.<org.petero.droidfish.DroidFish$35: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$35: java.util.List val$finalActions> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$35 r0;
        android.content.DialogInterface r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.TreeMap r2, $r14;
        android.app.AlertDialog$Builder r3, $r16, $r43, r45;
        android.view.View r4, $r21, $r22, $r23, $r24, $r25, $r26, r48, $r52, $r54, $r56, $r58;
        android.widget.TextView r5, r6, r7, r8, r9, r10, r53, r55, r57, r59;
        java.util.List $r11;
        java.lang.Object $r12, $r27, $r29, $r31, $r33, $r35, $r37;
        java.lang.Integer $r13, $r66;
        org.petero.droidfish.gamelogic.DroidChessController $r15, $r50, $r71, $r72, $r73, $r74;
        org.petero.droidfish.DroidFish $r17, $r19, $r44, $r47;
        java.lang.CharSequence $r28, $r30, $r32, $r34, $r36, $r38;
        org.petero.droidfish.DroidFish$35$1 $r40;
        org.petero.droidfish.gamelogic.DroidChessController$CommentInfo r51;
        java.lang.String $r60, $r61, $r62, $r63, r64;
        java.lang.Object[] $r65;
        org.petero.droidfish.DroidFish$35$2 $r68;

        r0 := @this: org.petero.droidfish.DroidFish$35;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r11 = r0.<org.petero.droidfish.DroidFish$35: java.util.List val$finalActions>;
        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0);
        $r13 = (java.lang.Integer) $r12;
        $i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
        tableswitch($i1)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label0:
        $r14 = new java.util.TreeMap;
        specialinvoke $r14.<java.util.TreeMap: void <init>()>();
        r2 = $r14;
        $r15 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r15.<org.petero.droidfish.gamelogic.DroidChessController: void getHeaders(java.util.Map)>(r2);
        $r16 = new android.app.AlertDialog$Builder;
        $r17 = r0.<org.petero.droidfish.DroidFish$35: org.petero.droidfish.DroidFish this$0>;
        specialinvoke $r16.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r17);
        r3 = $r16;
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099729);
        $r19 = r0.<org.petero.droidfish.DroidFish$35: org.petero.droidfish.DroidFish this$0>;
        r4 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r19, 2130903044, null);
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r4);
        $r21 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131296265);
        r5 = (android.widget.TextView) $r21;
        $r22 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131296266);
        r6 = (android.widget.TextView) $r22;
        $r23 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131296267);
        r7 = (android.widget.TextView) $r23;
        $r24 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131296268);
        r8 = (android.widget.TextView) $r24;
        $r25 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131296269);
        r9 = (android.widget.TextView) $r25;
        $r26 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131296270);
        r10 = (android.widget.TextView) $r26;
        $r27 = virtualinvoke r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("Event");
        $r28 = (java.lang.CharSequence) $r27;
        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r28);
        $r29 = virtualinvoke r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("Site");
        $r30 = (java.lang.CharSequence) $r29;
        virtualinvoke r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r30);
        $r31 = virtualinvoke r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("Date");
        $r32 = (java.lang.CharSequence) $r31;
        virtualinvoke r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r32);
        $r33 = virtualinvoke r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("Round");
        $r34 = (java.lang.CharSequence) $r33;
        virtualinvoke r8.<android.widget.TextView: void setText(java.lang.CharSequence)>($r34);
        $r35 = virtualinvoke r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("White");
        $r36 = (java.lang.CharSequence) $r35;
        virtualinvoke r9.<android.widget.TextView: void setText(java.lang.CharSequence)>($r36);
        $r37 = virtualinvoke r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("Black");
        $r38 = (java.lang.CharSequence) $r37;
        virtualinvoke r10.<android.widget.TextView: void setText(java.lang.CharSequence)>($r38);
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099751, null);
        $r40 = new org.petero.droidfish.DroidFish$35$1;
        specialinvoke $r40.<org.petero.droidfish.DroidFish$35$1: void <init>(org.petero.droidfish.DroidFish$35,java.util.TreeMap,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView)>(r0, r2, r5, r6, r7, r8, r9, r10);
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, $r40);
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();
        goto label7;

     label1:
        $r43 = new android.app.AlertDialog$Builder;
        $r44 = r0.<org.petero.droidfish.DroidFish$35: org.petero.droidfish.DroidFish this$0>;
        specialinvoke $r43.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r44);
        r45 = $r43;
        virtualinvoke r45.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099730);
        $r47 = r0.<org.petero.droidfish.DroidFish$35: org.petero.droidfish.DroidFish this$0>;
        r48 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r47, 2130903043, null);
        virtualinvoke r45.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r48);
        $r50 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        r51 = virtualinvoke $r50.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$CommentInfo getComments()>();
        $r52 = virtualinvoke r48.<android.view.View: android.view.View findViewById(int)>(2131296261);
        r53 = (android.widget.TextView) $r52;
        $r54 = virtualinvoke r48.<android.view.View: android.view.View findViewById(int)>(2131296262);
        r55 = (android.widget.TextView) $r54;
        $r56 = virtualinvoke r48.<android.view.View: android.view.View findViewById(int)>(2131296263);
        r57 = (android.widget.TextView) $r56;
        $r58 = virtualinvoke r48.<android.view.View: android.view.View findViewById(int)>(2131296264);
        r59 = (android.widget.TextView) $r58;
        $r60 = r51.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String preComment>;
        virtualinvoke r53.<android.widget.TextView: void setText(java.lang.CharSequence)>($r60);
        $r61 = r51.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String postComment>;
        virtualinvoke r59.<android.widget.TextView: void setText(java.lang.CharSequence)>($r61);
        $r62 = r51.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String move>;
        virtualinvoke r55.<android.widget.TextView: void setText(java.lang.CharSequence)>($r62);
        $i2 = r51.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: int nag>;
        $r63 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String nagStr(int)>($i2);
        r64 = virtualinvoke $r63.<java.lang.String: java.lang.String trim()>();
        $i3 = virtualinvoke r64.<java.lang.String: int length()>();
        if $i3 != 0 goto label2;

        $i4 = r51.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: int nag>;
        if $i4 <= 0 goto label2;

        $r65 = newarray (java.lang.Object)[1];
        $i5 = r51.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: int nag>;
        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        $r65[0] = $r66;
        r64 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r65);

     label2:
        virtualinvoke r57.<android.widget.TextView: void setText(java.lang.CharSequence)>(r64);
        virtualinvoke r45.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099751, null);
        $r68 = new org.petero.droidfish.DroidFish$35$2;
        specialinvoke $r68.<org.petero.droidfish.DroidFish$35$2: void <init>(org.petero.droidfish.DroidFish$35,android.widget.TextView,android.widget.TextView,android.widget.TextView)>(r0, r53, r59, r57);
        virtualinvoke r45.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, $r68);
        virtualinvoke r45.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();
        goto label7;

     label3:
        $r71 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r71.<org.petero.droidfish.gamelogic.DroidChessController: void removeSubTree()>();
        goto label7;

     label4:
        $r72 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r72.<org.petero.droidfish.gamelogic.DroidChessController: void moveVariation(int)>(-1);
        goto label7;

     label5:
        $r73 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r73.<org.petero.droidfish.gamelogic.DroidChessController: void moveVariation(int)>(1);
        goto label7;

     label6:
        $r74 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r74.<org.petero.droidfish.gamelogic.DroidChessController: void makeHumanNullMove()>();

     label7:
        return;
    }
}
class org.petero.droidfish.DroidFish$36 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.util.List val$finalActions;
    final int val$numPV;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.util.List, int)
    {
        org.petero.droidfish.DroidFish$36 r0;
        org.petero.droidfish.DroidFish r1;
        java.util.List r2;
        int i0;

        r0 := @this: org.petero.droidfish.DroidFish$36;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.util.List;
        i0 := @parameter2: int;
        r0.<org.petero.droidfish.DroidFish$36: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$36: java.util.List val$finalActions> = r2;
        r0.<org.petero.droidfish.DroidFish$36: int val$numPV> = i0;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$36 r0;
        android.content.DialogInterface r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.util.ArrayList r2, r4;
        java.lang.String[] r3, r6;
        java.lang.StringBuilder r5, $r14;
        java.util.List $r7, $r25;
        java.lang.Object $r8, $r13, $r26;
        java.lang.Integer $r9, $r27;
        org.petero.droidfish.DroidFish $r10, $r11, $r24, $r28, $r31, $r33;
        java.lang.String $r12, $r15, $r17, $r21;
        boolean $z0, z1, $z2, $z4;
        org.petero.droidfish.gamelogic.DroidChessController $r20, $r22, $r23;
        android.content.SharedPreferences $r29;
        android.content.SharedPreferences$Editor r30;

        r0 := @this: org.petero.droidfish.DroidFish$36;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r7 = r0.<org.petero.droidfish.DroidFish$36: java.util.List val$finalActions>;
        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);
        $r9 = (java.lang.Integer) $r8;
        $i3 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();
        tableswitch($i3)
        {
            case 0: goto label0;
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            case 4: goto label12;
            default: goto label15;
        };

     label0:
        $r10 = r0.<org.petero.droidfish.DroidFish$36: org.petero.droidfish.DroidFish this$0>;
        r2 = staticinvoke <org.petero.droidfish.DroidFish: java.util.ArrayList access$1800(org.petero.droidfish.DroidFish)>($r10);
        $r11 = r0.<org.petero.droidfish.DroidFish$36: org.petero.droidfish.DroidFish this$0>;
        $r12 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$3200(org.petero.droidfish.DroidFish)>($r11);
        r3 = virtualinvoke $r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");
        i1 = 0;

     label1:
        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        if i1 >= $i4 goto label9;

        $r13 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        r4 = (java.util.ArrayList) $r13;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        r5 = $r14;
        $i5 = lengthof r3;
        if i1 >= $i5 goto label6;

        $r15 = r3[i1];
        r6 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        i2 = 0;

     label2:
        if i2 >= 2 goto label5;

        $i6 = lengthof r6;
        if i2 >= $i6 goto label4;

        if i2 <= 0 goto label3;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label3:
        $r17 = r6[i2];
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label4:
        i2 = i2 + 1;
        goto label2;

     label5:
        $i7 = virtualinvoke r5.<java.lang.StringBuilder: int length()>();
        if $i7 <= 0 goto label6;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label6:
        if i1 != 0 goto label7;

        $z0 = 1;
        goto label8;

     label7:
        $z0 = 0;

     label8:
        z1 = $z0;
        $r20 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $r21 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r20.<org.petero.droidfish.gamelogic.DroidChessController: void addVariation(java.lang.String,java.util.List,boolean)>($r21, r4, z1);
        i1 = i1 + 1;
        goto label1;

     label9:
        goto label15;

     label10:
        $r22 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $i8 = r0.<org.petero.droidfish.DroidFish$36: int val$numPV>;
        $i9 = $i8 - 1;
        virtualinvoke $r22.<org.petero.droidfish.gamelogic.DroidChessController: void setMultiPVMode(int)>($i9);
        goto label15;

     label11:
        $r23 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $i10 = r0.<org.petero.droidfish.DroidFish$36: int val$numPV>;
        $i11 = $i10 + 1;
        virtualinvoke $r23.<org.petero.droidfish.gamelogic.DroidChessController: void setMultiPVMode(int)>($i11);
        goto label15;

     label12:
        $r24 = r0.<org.petero.droidfish.DroidFish$36: org.petero.droidfish.DroidFish this$0>;
        $r25 = r0.<org.petero.droidfish.DroidFish$36: java.util.List val$finalActions>;
        $r26 = interfaceinvoke $r25.<java.util.List: java.lang.Object get(int)>(i0);
        $r27 = (java.lang.Integer) $r26;
        $i12 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();
        if $i12 != 4 goto label13;

        $z2 = 1;
        goto label14;

     label13:
        $z2 = 0;

     label14:
        staticinvoke <org.petero.droidfish.DroidFish: boolean access$3302(org.petero.droidfish.DroidFish,boolean)>($r24, $z2);
        $r28 = r0.<org.petero.droidfish.DroidFish$36: org.petero.droidfish.DroidFish this$0>;
        $r29 = $r28.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r30 = interfaceinvoke $r29.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $r31 = r0.<org.petero.droidfish.DroidFish$36: org.petero.droidfish.DroidFish this$0>;
        $z4 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$3300(org.petero.droidfish.DroidFish)>($r31);
        interfaceinvoke r30.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("showStats", $z4);
        interfaceinvoke r30.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r33 = r0.<org.petero.droidfish.DroidFish$36: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$500(org.petero.droidfish.DroidFish)>($r33);
        goto label15;

     label15:
        return;
    }
}
class org.petero.droidfish.DroidFish$37 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.util.List val$finalActions;
    final int val$currFT;
    final java.lang.String val$currPathName;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.util.List, int, java.lang.String)
    {
        org.petero.droidfish.DroidFish$37 r0;
        org.petero.droidfish.DroidFish r1;
        java.util.List r2;
        int i0;
        java.lang.String r3;

        r0 := @this: org.petero.droidfish.DroidFish$37;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.util.List;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.String;
        r0.<org.petero.droidfish.DroidFish$37: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$37: java.util.List val$finalActions> = r2;
        r0.<org.petero.droidfish.DroidFish$37: int val$currFT> = i0;
        r0.<org.petero.droidfish.DroidFish$37: java.lang.String val$currPathName> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$37 r0;
        android.content.DialogInterface r1;
        int i0, $i1, $i2;
        android.content.Intent r2, $r9, $r14;
        java.util.List $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        org.petero.droidfish.gamelogic.DroidChessController $r6, $r7, $r8;
        org.petero.droidfish.DroidFish $r10, $r15, $r19;
        java.lang.String $r12, $r17;

        r0 := @this: org.petero.droidfish.DroidFish$37;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r3 = r0.<org.petero.droidfish.DroidFish$37: java.util.List val$finalActions>;
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);
        $r5 = (java.lang.Integer) $r4;
        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
        tableswitch($i1)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label6;
        };

     label0:
        $r6 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r6.<org.petero.droidfish.gamelogic.DroidChessController: void gotoMove(int)>(0);
        goto label6;

     label1:
        $r7 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r7.<org.petero.droidfish.gamelogic.DroidChessController: void gotoStartOfVariation()>();
        goto label6;

     label2:
        $r8 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.DroidChessController: void changeVariation(int)>(-1);
        goto label6;

     label3:
        $i2 = r0.<org.petero.droidfish.DroidFish$37: int val$currFT>;
        if $i2 != 1 goto label4;

        $r9 = new android.content.Intent;
        $r10 = r0.<org.petero.droidfish.DroidFish$37: org.petero.droidfish.DroidFish this$0>;
        specialinvoke $r9.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r10, class "org/petero/droidfish/activities/EditPGNLoad");
        r2 = $r9;
        virtualinvoke r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("org.petero.droidfish.loadFilePrevGame");
        $r12 = r0.<org.petero.droidfish.DroidFish$37: java.lang.String val$currPathName>;
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.petero.droidfish.pathname", $r12);
        goto label5;

     label4:
        $r14 = new android.content.Intent;
        $r15 = r0.<org.petero.droidfish.DroidFish$37: org.petero.droidfish.DroidFish this$0>;
        specialinvoke $r14.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r15, class "org/petero/droidfish/activities/LoadScid");
        r2 = $r14;
        virtualinvoke r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("org.petero.droidfish.loadScidPrevGame");
        $r17 = r0.<org.petero.droidfish.DroidFish$37: java.lang.String val$currPathName>;
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.petero.droidfish.pathname", $r17);

     label5:
        $r19 = r0.<org.petero.droidfish.DroidFish$37: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r19.<org.petero.droidfish.DroidFish: void startActivityForResult(android.content.Intent,int)>(r2, 2);

     label6:
        return;
    }
}
class org.petero.droidfish.DroidFish$38 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.util.List val$finalActions;
    final int val$currFT;
    final java.lang.String val$currPathName;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.util.List, int, java.lang.String)
    {
        org.petero.droidfish.DroidFish$38 r0;
        org.petero.droidfish.DroidFish r1;
        java.util.List r2;
        int i0;
        java.lang.String r3;

        r0 := @this: org.petero.droidfish.DroidFish$38;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.util.List;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.String;
        r0.<org.petero.droidfish.DroidFish$38: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$38: java.util.List val$finalActions> = r2;
        r0.<org.petero.droidfish.DroidFish$38: int val$currFT> = i0;
        r0.<org.petero.droidfish.DroidFish$38: java.lang.String val$currPathName> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$38 r0;
        android.content.DialogInterface r1;
        int i0, $i1, $i2;
        android.content.Intent r2, $r8, $r13;
        java.util.List $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        org.petero.droidfish.gamelogic.DroidChessController $r6, $r7;
        org.petero.droidfish.DroidFish $r9, $r14, $r18;
        java.lang.String $r11, $r16;

        r0 := @this: org.petero.droidfish.DroidFish$38;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r3 = r0.<org.petero.droidfish.DroidFish$38: java.util.List val$finalActions>;
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);
        $r5 = (java.lang.Integer) $r4;
        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();
        tableswitch($i1)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            default: goto label5;
        };

     label0:
        $r6 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r6.<org.petero.droidfish.gamelogic.DroidChessController: void gotoMove(int)>(2147483647);
        goto label5;

     label1:
        $r7 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r7.<org.petero.droidfish.gamelogic.DroidChessController: void changeVariation(int)>(1);
        goto label5;

     label2:
        $i2 = r0.<org.petero.droidfish.DroidFish$38: int val$currFT>;
        if $i2 != 1 goto label3;

        $r8 = new android.content.Intent;
        $r9 = r0.<org.petero.droidfish.DroidFish$38: org.petero.droidfish.DroidFish this$0>;
        specialinvoke $r8.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r9, class "org/petero/droidfish/activities/EditPGNLoad");
        r2 = $r8;
        virtualinvoke r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("org.petero.droidfish.loadFileNextGame");
        $r11 = r0.<org.petero.droidfish.DroidFish$38: java.lang.String val$currPathName>;
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.petero.droidfish.pathname", $r11);
        goto label4;

     label3:
        $r13 = new android.content.Intent;
        $r14 = r0.<org.petero.droidfish.DroidFish$38: org.petero.droidfish.DroidFish this$0>;
        specialinvoke $r13.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r14, class "org/petero/droidfish/activities/LoadScid");
        r2 = $r13;
        virtualinvoke r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("org.petero.droidfish.loadScidNextGame");
        $r16 = r0.<org.petero.droidfish.DroidFish$38: java.lang.String val$currPathName>;
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.petero.droidfish.pathname", $r16);

     label4:
        $r18 = r0.<org.petero.droidfish.DroidFish$38: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r18.<org.petero.droidfish.DroidFish: void startActivityForResult(android.content.Intent,int)>(r2, 2);

     label5:
        return;
    }
}
class org.petero.droidfish.DroidFish$39 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.util.List val$actions;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.util.List)
    {
        org.petero.droidfish.DroidFish$39 r0;
        org.petero.droidfish.DroidFish r1;
        java.util.List r2;

        r0 := @this: org.petero.droidfish.DroidFish$39;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.util.List;
        r0.<org.petero.droidfish.DroidFish$39: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$39: java.util.List val$actions> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$39 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.UIAction r2;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: org.petero.droidfish.DroidFish$39;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r3 = r0.<org.petero.droidfish.DroidFish$39: java.util.List val$actions>;
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);
        r2 = (org.petero.droidfish.UIAction) $r4;
        interfaceinvoke r2.<org.petero.droidfish.UIAction: void run()>();
        return;
    }
}
class org.petero.droidfish.DroidFish$4 extends java.lang.Object implements android.view.View$OnTouchListener
{
    final android.view.GestureDetector val$gd;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, android.view.GestureDetector)
    {
        org.petero.droidfish.DroidFish$4 r0;
        org.petero.droidfish.DroidFish r1;
        android.view.GestureDetector r2;

        r0 := @this: org.petero.droidfish.DroidFish$4;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: android.view.GestureDetector;
        r0.<org.petero.droidfish.DroidFish$4: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$4: android.view.GestureDetector val$gd> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        org.petero.droidfish.DroidFish$4 r0;
        android.view.View r1;
        android.view.MotionEvent r2;
        android.view.GestureDetector $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish$4;
        r1 := @parameter0: android.view.View;
        r2 := @parameter1: android.view.MotionEvent;
        $r3 = r0.<org.petero.droidfish.DroidFish$4: android.view.GestureDetector val$gd>;
        $z0 = virtualinvoke $r3.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r2);
        return $z0;
    }
}
class org.petero.droidfish.DroidFish$40 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$40 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$40;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$40: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$40 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.DroidFish $r2, $r3, $r4, $r5;

        r0 := @this: org.petero.droidfish.DroidFish$40;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        lookupswitch(i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            default: goto label2;
        };

     label0:
        $r2 = r0.<org.petero.droidfish.DroidFish$40: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(5);
        $r3 = r0.<org.petero.droidfish.DroidFish$40: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(5);
        goto label2;

     label1:
        $r4 = r0.<org.petero.droidfish.DroidFish$40: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r4.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r5 = r0.<org.petero.droidfish.DroidFish$40: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r5.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);

     label2:
        return;
    }
}
class org.petero.droidfish.DroidFish$41 extends java.lang.Object implements org.petero.droidfish.DroidFish$FileNameFilter
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$41 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$41;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$41: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean accept(java.lang.String)
    {
        org.petero.droidfish.DroidFish$41 r0;
        java.lang.String r1, $r7, $r8;
        java.io.FileInputStream r2, $r5;
        java.io.InputStreamReader r3, $r6;
        char[] r4;
        boolean z0, $z1, $z2, $z3;
        int $i0;
        java.io.IOException $r9, r10;

        r0 := @this: org.petero.droidfish.DroidFish$41;
        r1 := @parameter0: java.lang.String;
        $z1 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$2600(java.lang.String)>(r1);
        if $z1 == 0 goto label0;

        return 0;

     label0:
        $r5 = new java.io.FileInputStream;
        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);
        r2 = $r5;
        $r6 = new java.io.InputStreamReader;
        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);
        r3 = $r6;
        r4 = newarray (char)[4];
        $i0 = virtualinvoke r3.<java.io.InputStreamReader: int read(char[])>(r4);
        if $i0 != 4 goto label1;

        $r7 = "NETE";
        $r8 = new java.lang.String;
        specialinvoke $r8.<java.lang.String: void <init>(char[])>(r4);
        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z2 == 0 goto label1;

        $z3 = 1;
        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;
        virtualinvoke r3.<java.io.InputStreamReader: void close()>();

     label3:
        return z0;

     label4:
        $r9 := @caughtexception;
        r10 = $r9;
        return 0;

        catch java.io.IOException from label0 to label3 with label4;
    }
}
class org.petero.droidfish.DroidFish$42 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final int val$numItems;
    final java.lang.String[] val$ids;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, int, java.lang.String[])
    {
        org.petero.droidfish.DroidFish$42 r0;
        org.petero.droidfish.DroidFish r1;
        int i0;
        java.lang.String[] r2;

        r0 := @this: org.petero.droidfish.DroidFish$42;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String[];
        r0.<org.petero.droidfish.DroidFish$42: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$42: int val$numItems> = i0;
        r0.<org.petero.droidfish.DroidFish$42: java.lang.String[] val$ids> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$42 r0;
        android.content.DialogInterface r1;
        int i0, $i1, $i2, $i3;
        org.petero.droidfish.DroidFish $r2, $r3, $r7, $r8;
        java.lang.String[] $r4;
        java.lang.String $r5;

        r0 := @this: org.petero.droidfish.DroidFish$42;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        if i0 < 0 goto label0;

        $i1 = r0.<org.petero.droidfish.DroidFish$42: int val$numItems>;
        if i0 < $i1 goto label1;

     label0:
        return;

     label1:
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        $i2 = r0.<org.petero.droidfish.DroidFish$42: int val$numItems>;
        $i3 = $i2 - 1;
        if i0 != $i3 goto label2;

        $r2 = r0.<org.petero.droidfish.DroidFish$42: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void showDialog(int)>(22);
        goto label3;

     label2:
        $r3 = r0.<org.petero.droidfish.DroidFish$42: org.petero.droidfish.DroidFish this$0>;
        $r4 = r0.<org.petero.droidfish.DroidFish$42: java.lang.String[] val$ids>;
        $r5 = $r4[i0];
        staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$3402(org.petero.droidfish.DroidFish,java.lang.String)>($r3, $r5);
        $r7 = r0.<org.petero.droidfish.DroidFish$42: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r7.<org.petero.droidfish.DroidFish: void removeDialog(int)>(23);
        $r8 = r0.<org.petero.droidfish.DroidFish$42: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r8.<org.petero.droidfish.DroidFish: void showDialog(int)>(23);

     label3:
        return;
    }
}
class org.petero.droidfish.DroidFish$43 extends java.lang.Object implements android.content.DialogInterface$OnCancelListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$43 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$43;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$43: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onCancel(android.content.DialogInterface)
    {
        org.petero.droidfish.DroidFish$43 r0;
        android.content.DialogInterface r1;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$43;
        r1 := @parameter0: android.content.DialogInterface;
        $r2 = r0.<org.petero.droidfish.DroidFish$43: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(20);
        $r3 = r0.<org.petero.droidfish.DroidFish$43: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(20);
        return;
    }
}
class org.petero.droidfish.DroidFish$44 extends java.lang.Object implements java.lang.Runnable
{
    final android.widget.EditText val$engineNameView;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, android.widget.EditText)
    {
        org.petero.droidfish.DroidFish$44 r0;
        org.petero.droidfish.DroidFish r1;
        android.widget.EditText r2;

        r0 := @this: org.petero.droidfish.DroidFish$44;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: android.widget.EditText;
        r0.<org.petero.droidfish.DroidFish$44: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$44: android.widget.EditText val$engineNameView> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$44 r0;
        java.lang.String r1, r2, r3, $r11;
        java.io.File r4, $r8, $r15;
        boolean z0, $z1, $z2, $z3;
        int i0;
        android.widget.EditText $r5;
        android.text.Editable $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r13, $r14;
        org.petero.droidfish.DroidFish $r16, $r19, $r20, $r21, $r23, $r24;
        android.content.Context $r17;
        android.widget.Toast $r18;

        r0 := @this: org.petero.droidfish.DroidFish$44;
        $r5 = r0.<org.petero.droidfish.DroidFish$44: android.widget.EditText val$engineNameView>;
        $r6 = virtualinvoke $r5.<android.widget.EditText: android.text.Editable getText()>();
        r1 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();
        r2 = <java.io.File: java.lang.String separator>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r11 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$3500()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = new java.io.File;
        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r3);
        r4 = $r15;
        z0 = 1;
        i0 = -1;
        $z1 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");
        if $z1 == 0 goto label0;

        z0 = 0;
        i0 = 2131099817;
        goto label2;

     label0:
        $z2 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$2600(java.lang.String)>(r1);
        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r4.<java.io.File: boolean exists()>();
        if $z3 == 0 goto label2;

     label1:
        z0 = 0;
        i0 = 2131099816;

     label2:
        if z0 != 0 goto label3;

        $r16 = r0.<org.petero.droidfish.DroidFish$44: org.petero.droidfish.DroidFish this$0>;
        $r17 = virtualinvoke $r16.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r18 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r17, i0, 1);
        virtualinvoke $r18.<android.widget.Toast: void show()>();
        $r19 = r0.<org.petero.droidfish.DroidFish$44: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r19.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r20 = r0.<org.petero.droidfish.DroidFish$44: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r20.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return;

     label3:
        $r21 = r0.<org.petero.droidfish.DroidFish$44: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$3402(org.petero.droidfish.DroidFish,java.lang.String)>($r21, r3);
        $r23 = r0.<org.petero.droidfish.DroidFish$44: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r23.<org.petero.droidfish.DroidFish: void removeDialog(int)>(23);
        $r24 = r0.<org.petero.droidfish.DroidFish$44: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r24.<org.petero.droidfish.DroidFish: void showDialog(int)>(23);
        return;
    }
}
class org.petero.droidfish.DroidFish$45 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.lang.Runnable val$createEngine;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.lang.Runnable)
    {
        org.petero.droidfish.DroidFish$45 r0;
        org.petero.droidfish.DroidFish r1;
        java.lang.Runnable r2;

        r0 := @this: org.petero.droidfish.DroidFish$45;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.lang.Runnable;
        r0.<org.petero.droidfish.DroidFish$45: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$45: java.lang.Runnable val$createEngine> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$45 r0;
        android.content.DialogInterface r1;
        int i0;
        java.lang.Runnable $r2;

        r0 := @this: org.petero.droidfish.DroidFish$45;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$45: java.lang.Runnable val$createEngine>;
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();
        return;
    }
}
class org.petero.droidfish.DroidFish$46 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$46 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$46;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$46: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$46 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$46;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$46: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r3 = r0.<org.petero.droidfish.DroidFish$46: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return;
    }
}
class org.petero.droidfish.DroidFish$47 extends java.lang.Object implements android.content.DialogInterface$OnCancelListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$47 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$47;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$47: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onCancel(android.content.DialogInterface)
    {
        org.petero.droidfish.DroidFish$47 r0;
        android.content.DialogInterface r1;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$47;
        r1 := @parameter0: android.content.DialogInterface;
        $r2 = r0.<org.petero.droidfish.DroidFish$47: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r3 = r0.<org.petero.droidfish.DroidFish$47: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return;
    }
}
class org.petero.droidfish.DroidFish$48 extends java.lang.Object implements android.view.View$OnKeyListener
{
    final java.lang.Runnable val$createEngine;
    final android.app.Dialog val$dialog;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.lang.Runnable, android.app.Dialog)
    {
        org.petero.droidfish.DroidFish$48 r0;
        org.petero.droidfish.DroidFish r1;
        java.lang.Runnable r2;
        android.app.Dialog r3;

        r0 := @this: org.petero.droidfish.DroidFish$48;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.lang.Runnable;
        r3 := @parameter2: android.app.Dialog;
        r0.<org.petero.droidfish.DroidFish$48: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$48: java.lang.Runnable val$createEngine> = r2;
        r0.<org.petero.droidfish.DroidFish$48: android.app.Dialog val$dialog> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onKey(android.view.View, int, android.view.KeyEvent)
    {
        org.petero.droidfish.DroidFish$48 r0;
        android.view.View r1;
        int i0, $i1;
        android.view.KeyEvent r2;
        java.lang.Runnable $r3;
        android.app.Dialog $r4;

        r0 := @this: org.petero.droidfish.DroidFish$48;
        r1 := @parameter0: android.view.View;
        i0 := @parameter1: int;
        r2 := @parameter2: android.view.KeyEvent;
        $i1 = virtualinvoke r2.<android.view.KeyEvent: int getAction()>();
        if $i1 != 0 goto label0;

        if i0 != 66 goto label0;

        $r3 = r0.<org.petero.droidfish.DroidFish$48: java.lang.Runnable val$createEngine>;
        interfaceinvoke $r3.<java.lang.Runnable: void run()>();
        $r4 = r0.<org.petero.droidfish.DroidFish$48: android.app.Dialog val$dialog>;
        virtualinvoke $r4.<android.app.Dialog: void cancel()>();
        return 1;

     label0:
        return 0;
    }
}
class org.petero.droidfish.DroidFish$49 extends java.lang.Object implements java.lang.Runnable
{
    final android.widget.EditText val$hostNameView;
    final android.widget.EditText val$portView;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, android.widget.EditText, android.widget.EditText)
    {
        org.petero.droidfish.DroidFish$49 r0;
        org.petero.droidfish.DroidFish r1;
        android.widget.EditText r2, r3;

        r0 := @this: org.petero.droidfish.DroidFish$49;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: android.widget.EditText;
        r3 := @parameter2: android.widget.EditText;
        r0.<org.petero.droidfish.DroidFish$49: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$49: android.widget.EditText val$hostNameView> = r2;
        r0.<org.petero.droidfish.DroidFish$49: android.widget.EditText val$portView> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$49 r0;
        java.lang.String r1, r2, $r11, $r17;
        java.io.File $r3;
        java.io.FileWriter r4, $r9;
        android.widget.EditText $r5, $r7;
        android.text.Editable $r6, $r8;
        org.petero.droidfish.DroidFish $r10, $r12, $r15;
        java.io.IOException $r13, r14;
        android.content.Context $r16;
        android.widget.Toast $r18;

        r0 := @this: org.petero.droidfish.DroidFish$49;
        $r5 = r0.<org.petero.droidfish.DroidFish$49: android.widget.EditText val$hostNameView>;
        $r6 = virtualinvoke $r5.<android.widget.EditText: android.text.Editable getText()>();
        r1 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();
        $r7 = r0.<org.petero.droidfish.DroidFish$49: android.widget.EditText val$portView>;
        $r8 = virtualinvoke $r7.<android.widget.EditText: android.text.Editable getText()>();
        r2 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

     label0:
        $r9 = new java.io.FileWriter;
        $r3 = new java.io.File;
        $r10 = r0.<org.petero.droidfish.DroidFish$49: org.petero.droidfish.DroidFish this$0>;
        $r11 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$3400(org.petero.droidfish.DroidFish)>($r10);
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r11);
        specialinvoke $r9.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r3, 0);
        r4 = $r9;
        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>("NETE\n");
        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>(r1);
        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>("\n");
        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>(r2);
        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>("\n");
        virtualinvoke r4.<java.io.FileWriter: void close()>();
        $r12 = r0.<org.petero.droidfish.DroidFish$49: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2700(org.petero.droidfish.DroidFish,boolean)>($r12, 1);

     label1:
        goto label3;

     label2:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = r0.<org.petero.droidfish.DroidFish$49: org.petero.droidfish.DroidFish this$0>;
        $r16 = virtualinvoke $r15.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r17 = virtualinvoke r14.<java.io.IOException: java.lang.String getMessage()>();
        $r18 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r16, $r17, 1);
        virtualinvoke $r18.<android.widget.Toast: void show()>();

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }
}
class org.petero.droidfish.DroidFish$5 extends org.petero.droidfish.ChessBoard$OnTrackballListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$5 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$5;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$5: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<org.petero.droidfish.ChessBoard$OnTrackballListener: void <init>()>();
        return;
    }

    public void onTrackballEvent(android.view.MotionEvent)
    {
        org.petero.droidfish.DroidFish$5 r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.gamelogic.DroidChessController $r2, $r6;
        org.petero.droidfish.gamelogic.Move r3;
        boolean $z0;
        org.petero.droidfish.DroidFish $r4, $r7, $r8;
        org.petero.droidfish.ChessBoardPlay $r5, $r9;
        int $i0;

        r0 := @this: org.petero.droidfish.DroidFish$5;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $z0 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z0 == 0 goto label1;

        $r4 = r0.<org.petero.droidfish.DroidFish$5: org.petero.droidfish.DroidFish this$0>;
        $r5 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r4);
        r3 = virtualinvoke $r5.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Move handleTrackballEvent(android.view.MotionEvent)>(r1);
        if r3 == null goto label0;

        $r6 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r6.<org.petero.droidfish.gamelogic.DroidChessController: void makeHumanMove(org.petero.droidfish.gamelogic.Move)>(r3);

     label0:
        $r7 = r0.<org.petero.droidfish.DroidFish$5: org.petero.droidfish.DroidFish this$0>;
        $r8 = r0.<org.petero.droidfish.DroidFish$5: org.petero.droidfish.DroidFish this$0>;
        $r9 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)>($r8);
        $i0 = virtualinvoke $r9.<org.petero.droidfish.ChessBoardPlay: int getSelectedSquare()>();
        staticinvoke <org.petero.droidfish.DroidFish: void access$1700(org.petero.droidfish.DroidFish,int)>($r7, $i0);

     label1:
        return;
    }
}
class org.petero.droidfish.DroidFish$50 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.lang.Runnable val$writeConfig;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.lang.Runnable)
    {
        org.petero.droidfish.DroidFish$50 r0;
        org.petero.droidfish.DroidFish r1;
        java.lang.Runnable r2;

        r0 := @this: org.petero.droidfish.DroidFish$50;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.lang.Runnable;
        r0.<org.petero.droidfish.DroidFish$50: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$50: java.lang.Runnable val$writeConfig> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$50 r0;
        android.content.DialogInterface r1;
        int i0;
        java.lang.Runnable $r2;
        org.petero.droidfish.DroidFish $r3, $r4;

        r0 := @this: org.petero.droidfish.DroidFish$50;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$50: java.lang.Runnable val$writeConfig>;
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();
        $r3 = r0.<org.petero.droidfish.DroidFish$50: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r4 = r0.<org.petero.droidfish.DroidFish$50: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r4.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return;
    }
}
class org.petero.droidfish.DroidFish$51 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$51 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$51;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$51: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$51 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$51;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$51: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r3 = r0.<org.petero.droidfish.DroidFish$51: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return;
    }
}
class org.petero.droidfish.DroidFish$52 extends java.lang.Object implements android.content.DialogInterface$OnCancelListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$52 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$52;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$52: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onCancel(android.content.DialogInterface)
    {
        org.petero.droidfish.DroidFish$52 r0;
        android.content.DialogInterface r1;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$52;
        r1 := @parameter0: android.content.DialogInterface;
        $r2 = r0.<org.petero.droidfish.DroidFish$52: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r3 = r0.<org.petero.droidfish.DroidFish$52: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return;
    }
}
class org.petero.droidfish.DroidFish$53 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$53 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$53;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$53: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$53 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$53;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.DroidFish$53: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(24);
        $r3 = r0.<org.petero.droidfish.DroidFish$53: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(24);
        return;
    }
}
class org.petero.droidfish.DroidFish$54 extends java.lang.Object implements android.view.View$OnKeyListener
{
    final java.lang.Runnable val$writeConfig;
    final android.app.Dialog val$dialog;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, java.lang.Runnable, android.app.Dialog)
    {
        org.petero.droidfish.DroidFish$54 r0;
        org.petero.droidfish.DroidFish r1;
        java.lang.Runnable r2;
        android.app.Dialog r3;

        r0 := @this: org.petero.droidfish.DroidFish$54;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: java.lang.Runnable;
        r3 := @parameter2: android.app.Dialog;
        r0.<org.petero.droidfish.DroidFish$54: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$54: java.lang.Runnable val$writeConfig> = r2;
        r0.<org.petero.droidfish.DroidFish$54: android.app.Dialog val$dialog> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onKey(android.view.View, int, android.view.KeyEvent)
    {
        org.petero.droidfish.DroidFish$54 r0;
        android.view.View r1;
        int i0, $i1;
        android.view.KeyEvent r2;
        java.lang.Runnable $r3;
        android.app.Dialog $r4;
        org.petero.droidfish.DroidFish $r5, $r6;

        r0 := @this: org.petero.droidfish.DroidFish$54;
        r1 := @parameter0: android.view.View;
        i0 := @parameter1: int;
        r2 := @parameter2: android.view.KeyEvent;
        $i1 = virtualinvoke r2.<android.view.KeyEvent: int getAction()>();
        if $i1 != 0 goto label0;

        if i0 != 66 goto label0;

        $r3 = r0.<org.petero.droidfish.DroidFish$54: java.lang.Runnable val$writeConfig>;
        interfaceinvoke $r3.<java.lang.Runnable: void run()>();
        $r4 = r0.<org.petero.droidfish.DroidFish$54: android.app.Dialog val$dialog>;
        virtualinvoke $r4.<android.app.Dialog: void cancel()>();
        $r5 = r0.<org.petero.droidfish.DroidFish$54: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r5.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r6 = r0.<org.petero.droidfish.DroidFish$54: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r6.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return 1;

     label0:
        return 0;
    }
}
class org.petero.droidfish.DroidFish$55 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$55 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$55;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$55 r0;
        android.content.DialogInterface r1;
        int i0, i1;
        java.io.File $r2;
        java.lang.String r3, $r6, $r10, r11;
        android.content.SharedPreferences$Editor r4;
        org.petero.droidfish.DroidFish $r5, $r7, $r9, $r12, $r15, $r17, $r18, $r19, $r20;
        android.content.SharedPreferences $r8, $r13, $r16;
        boolean $z1;

        r0 := @this: org.petero.droidfish.DroidFish$55;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = new java.io.File;
        $r5 = r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0>;
        $r6 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$3400(org.petero.droidfish.DroidFish)>($r5);
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r6);
        virtualinvoke $r2.<java.io.File: boolean delete()>();
        $r7 = r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0>;
        $r8 = $r7.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r3 = interfaceinvoke $r8.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("engine", "stockfish");
        $r9 = r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0>;
        $r10 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String access$3400(org.petero.droidfish.DroidFish)>($r9);
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z1 == 0 goto label0;

        r11 = "stockfish";
        $r12 = r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0>;
        $r13 = $r12.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r4 = interfaceinvoke $r13.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("engine", r11);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        interfaceinvoke r1.<android.content.DialogInterface: void dismiss()>();
        $r15 = r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0>;
        $r16 = $r15.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        i1 = interfaceinvoke $r16.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("strength", 1000);
        $r17 = r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2700(org.petero.droidfish.DroidFish,boolean)>($r17, 0);
        $r18 = r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0>;
        staticinvoke <org.petero.droidfish.DroidFish: void access$2800(org.petero.droidfish.DroidFish,java.lang.String,int)>($r18, r11, i1);

     label0:
        interfaceinvoke r1.<android.content.DialogInterface: void cancel()>();
        $r19 = r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r19.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r20 = r0.<org.petero.droidfish.DroidFish$55: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r20.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return;
    }
}
class org.petero.droidfish.DroidFish$56 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$56 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$56;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$56: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.DroidFish$56 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$56;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        interfaceinvoke r1.<android.content.DialogInterface: void cancel()>();
        $r2 = r0.<org.petero.droidfish.DroidFish$56: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r3 = r0.<org.petero.droidfish.DroidFish$56: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return;
    }
}
class org.petero.droidfish.DroidFish$57 extends java.lang.Object implements android.content.DialogInterface$OnCancelListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$57 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$57;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$57: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onCancel(android.content.DialogInterface)
    {
        org.petero.droidfish.DroidFish$57 r0;
        android.content.DialogInterface r1;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$57;
        r1 := @parameter0: android.content.DialogInterface;
        $r2 = r0.<org.petero.droidfish.DroidFish$57: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(21);
        $r3 = r0.<org.petero.droidfish.DroidFish$57: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(21);
        return;
    }
}
class org.petero.droidfish.DroidFish$58 extends java.lang.Object implements java.io.FileFilter
{
    final org.petero.droidfish.DroidFish$FileNameFilter val$filter;
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish, org.petero.droidfish.DroidFish$FileNameFilter)
    {
        org.petero.droidfish.DroidFish$58 r0;
        org.petero.droidfish.DroidFish r1;
        org.petero.droidfish.DroidFish$FileNameFilter r2;

        r0 := @this: org.petero.droidfish.DroidFish$58;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r2 := @parameter1: org.petero.droidfish.DroidFish$FileNameFilter;
        r0.<org.petero.droidfish.DroidFish$58: org.petero.droidfish.DroidFish this$0> = r1;
        r0.<org.petero.droidfish.DroidFish$58: org.petero.droidfish.DroidFish$FileNameFilter val$filter> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean accept(java.io.File)
    {
        org.petero.droidfish.DroidFish$58 r0;
        java.io.File r1;
        boolean $z0, $z1, $z2;
        org.petero.droidfish.DroidFish$FileNameFilter $r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.petero.droidfish.DroidFish$58;
        r1 := @parameter0: java.io.File;
        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $r2 = r0.<org.petero.droidfish.DroidFish$58: org.petero.droidfish.DroidFish$FileNameFilter val$filter>;
        if $r2 == null goto label1;

        $r3 = r0.<org.petero.droidfish.DroidFish$58: org.petero.droidfish.DroidFish$FileNameFilter val$filter>;
        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();
        $z1 = interfaceinvoke $r3.<org.petero.droidfish.DroidFish$FileNameFilter: boolean accept(java.lang.String)>($r4);
        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;
        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }
}
class org.petero.droidfish.DroidFish$59 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$59 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$59;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$59: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.DroidFish$59 r0;
        org.petero.droidfish.gamelogic.DroidChessController $r1;

        r0 := @this: org.petero.droidfish.DroidFish$59;
        $r1 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        virtualinvoke $r1.<org.petero.droidfish.gamelogic.DroidChessController: void updateRemainingTime()>();
        return;
    }
}
class org.petero.droidfish.DroidFish$6 extends java.lang.Object implements android.view.View$OnLongClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$6 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$6;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$6: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onLongClick(android.view.View)
    {
        org.petero.droidfish.DroidFish$6 r0;
        android.view.View r1;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$6;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.DroidFish$6: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(1);
        $r3 = r0.<org.petero.droidfish.DroidFish$6: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(1);
        return 1;
    }
}
class org.petero.droidfish.DroidFish$60 extends java.lang.Object
{
    static final int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState;

    static void <clinit>()
    {
        org.petero.droidfish.gamelogic.Game$GameState[] $r0;
        org.petero.droidfish.gamelogic.Game$GameState $r1, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35, $r39, $r43;
        java.lang.NoSuchFieldError r2, $r5, $r8, r9, $r12, r13, $r16, r17, $r20, r21, $r24, r25, $r28, r29, $r32, r33, $r36, r37, $r40, r41, $r44, r45;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] $r3, $r4, $r6, $r10, $r14, $r18, $r22, $r26, $r30, $r34, $r38, $r42;

        $r0 = staticinvoke <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState[] values()>();
        $i0 = lengthof $r0;
        $r3 = newarray (int)[$i0];
        <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState> = $r3;

     label0:
        $r4 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r1 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        $i1 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r4[$i1] = 1;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;

     label3:
        $r6 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r7 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_MATE>;
        $i2 = virtualinvoke $r7.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r6[$i2] = 2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;

     label6:
        $r10 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r11 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_MATE>;
        $i3 = virtualinvoke $r11.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r10[$i3] = 3;

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;
        r13 = $r12;

     label9:
        $r14 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r15 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_STALEMATE>;
        $i4 = virtualinvoke $r15.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r14[$i4] = 4;

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;
        r17 = $r16;

     label12:
        $r18 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r19 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_STALEMATE>;
        $i5 = virtualinvoke $r19.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r18[$i5] = 5;

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;
        r21 = $r20;

     label15:
        $r22 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r23 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_REP>;
        $i6 = virtualinvoke $r23.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r22[$i6] = 6;

     label16:
        goto label18;

     label17:
        $r24 := @caughtexception;
        r25 = $r24;

     label18:
        $r26 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r27 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_50>;
        $i7 = virtualinvoke $r27.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r26[$i7] = 7;

     label19:
        goto label21;

     label20:
        $r28 := @caughtexception;
        r29 = $r28;

     label21:
        $r30 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r31 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_NO_MATE>;
        $i8 = virtualinvoke $r31.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r30[$i8] = 8;

     label22:
        goto label24;

     label23:
        $r32 := @caughtexception;
        r33 = $r32;

     label24:
        $r34 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r35 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_AGREE>;
        $i9 = virtualinvoke $r35.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r34[$i9] = 9;

     label25:
        goto label27;

     label26:
        $r36 := @caughtexception;
        r37 = $r36;

     label27:
        $r38 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r39 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_WHITE>;
        $i10 = virtualinvoke $r39.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r38[$i10] = 10;

     label28:
        goto label30;

     label29:
        $r40 := @caughtexception;
        r41 = $r40;

     label30:
        $r42 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r43 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_BLACK>;
        $i11 = virtualinvoke $r43.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r42[$i11] = 11;

     label31:
        goto label33;

     label32:
        $r44 := @caughtexception;
        r45 = $r44;

     label33:
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
        catch java.lang.NoSuchFieldError from label15 to label16 with label17;
        catch java.lang.NoSuchFieldError from label18 to label19 with label20;
        catch java.lang.NoSuchFieldError from label21 to label22 with label23;
        catch java.lang.NoSuchFieldError from label24 to label25 with label26;
        catch java.lang.NoSuchFieldError from label27 to label28 with label29;
        catch java.lang.NoSuchFieldError from label30 to label31 with label32;
    }
}
class org.petero.droidfish.DroidFish$7 extends java.lang.Object implements android.view.View$OnLongClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$7 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$7;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$7: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onLongClick(android.view.View)
    {
        org.petero.droidfish.DroidFish$7 r0;
        android.view.View r1;
        org.petero.droidfish.DroidFish $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish$7;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.DroidFish$7: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void removeDialog(int)>(11);
        $r3 = r0.<org.petero.droidfish.DroidFish$7: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r3.<org.petero.droidfish.DroidFish: void showDialog(int)>(11);
        return 1;
    }
}
class org.petero.droidfish.DroidFish$8 extends java.lang.Object implements android.view.View$OnLongClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$8 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$8;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$8: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onLongClick(android.view.View)
    {
        org.petero.droidfish.DroidFish$8 r0;
        android.view.View r1;
        org.petero.droidfish.DroidFish $r2, $r3, $r5, $r7, $r8;
        boolean $z0, $z1, $z2;
        org.petero.droidfish.GameMode $r4;
        java.util.ArrayList $r6;

        r0 := @this: org.petero.droidfish.DroidFish$8;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.DroidFish$8: org.petero.droidfish.DroidFish this$0>;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean access$300(org.petero.droidfish.DroidFish)>($r2);
        if $z0 != 0 goto label0;

        $r3 = r0.<org.petero.droidfish.DroidFish$8: org.petero.droidfish.DroidFish this$0>;
        $r4 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode access$1600(org.petero.droidfish.DroidFish)>($r3);
        $z1 = virtualinvoke $r4.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        if $z1 == 0 goto label1;

     label0:
        $r5 = r0.<org.petero.droidfish.DroidFish$8: org.petero.droidfish.DroidFish this$0>;
        $r6 = staticinvoke <org.petero.droidfish.DroidFish: java.util.ArrayList access$1800(org.petero.droidfish.DroidFish)>($r5);
        $z2 = virtualinvoke $r6.<java.util.ArrayList: boolean isEmpty()>();
        if $z2 != 0 goto label1;

        $r7 = r0.<org.petero.droidfish.DroidFish$8: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r7.<org.petero.droidfish.DroidFish: void removeDialog(int)>(12);
        $r8 = r0.<org.petero.droidfish.DroidFish$8: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r8.<org.petero.droidfish.DroidFish: void showDialog(int)>(12);

     label1:
        return 1;
    }
}
class org.petero.droidfish.DroidFish$9 extends java.lang.Object implements android.view.View$OnClickListener
{
    final org.petero.droidfish.DroidFish this$0;

    void <init>(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish$9 r0;
        org.petero.droidfish.DroidFish r1;

        r0 := @this: org.petero.droidfish.DroidFish$9;
        r1 := @parameter0: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish$9: org.petero.droidfish.DroidFish this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.view.View)
    {
        org.petero.droidfish.DroidFish$9 r0;
        android.view.View r1;
        org.petero.droidfish.DroidFish $r2;

        r0 := @this: org.petero.droidfish.DroidFish$9;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.DroidFish$9: org.petero.droidfish.DroidFish this$0>;
        virtualinvoke $r2.<org.petero.droidfish.DroidFish: void showDialog(int)>(9);
        return;
    }
}
interface  org.petero.droidfish.DroidFish$FileNameFilter extends java.lang.Object
{

    public abstract boolean accept(java.lang.String);
}
final class org.petero.droidfish.DroidFish$PgnScreenText$MoveLink extends android.text.style.ClickableSpan
{
    private org.petero.droidfish.gamelogic.GameTree$Node node;

    void <init>(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.DroidFish$PgnScreenText$MoveLink r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText$MoveLink;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke r0.<android.text.style.ClickableSpan: void <init>()>();
        r0.<org.petero.droidfish.DroidFish$PgnScreenText$MoveLink: org.petero.droidfish.gamelogic.GameTree$Node node> = r1;
        return;
    }

    public void onClick(android.view.View)
    {
        org.petero.droidfish.DroidFish$PgnScreenText$MoveLink r0;
        android.view.View r1;
        org.petero.droidfish.gamelogic.DroidChessController $r2, $r3;
        org.petero.droidfish.gamelogic.GameTree$Node $r4;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText$MoveLink;
        r1 := @parameter0: android.view.View;
        $r2 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        if $r2 == null goto label0;

        $r3 = staticinvoke <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController access$800()>();
        $r4 = r0.<org.petero.droidfish.DroidFish$PgnScreenText$MoveLink: org.petero.droidfish.gamelogic.GameTree$Node node>;
        virtualinvoke $r3.<org.petero.droidfish.gamelogic.DroidChessController: void goNode(org.petero.droidfish.gamelogic.GameTree$Node)>($r4);

     label0:
        return;
    }

    public void updateDrawState(android.text.TextPaint)
    {
        org.petero.droidfish.DroidFish$PgnScreenText$MoveLink r0;
        android.text.TextPaint r1;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText$MoveLink;
        r1 := @parameter0: android.text.TextPaint;
        return;
    }
}
class org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo extends java.lang.Object
{
    int l0;
    int l1;

    void <init>(int, int)
    {
        org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo r0;
        int i0, i1;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo: int l0> = i0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo: int l1> = i1;
        return;
    }
}
class org.petero.droidfish.DroidFish$PgnScreenText extends java.lang.Object implements org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver
{
    private android.text.SpannableStringBuilder sb;
    private int prevType;
    int nestLevel;
    boolean col0;
    org.petero.droidfish.gamelogic.GameTree$Node currNode;
    static final int indentStep;
    int currPos;
    int endPos;
    boolean upToDate;
    org.petero.droidfish.PGNOptions options;
    java.util.HashMap nodeToCharPos;
    int paraStart;
    int paraIndent;
    boolean paraBold;
    boolean pendingNewLine;
    android.text.style.BackgroundColorSpan bgSpan;

    void <init>(org.petero.droidfish.PGNOptions)
    {
        org.petero.droidfish.DroidFish$PgnScreenText r0;
        org.petero.droidfish.PGNOptions r1;
        android.text.SpannableStringBuilder $r2;
        android.text.style.BackgroundColorSpan $r3;
        java.util.HashMap $r4;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText;
        r1 := @parameter0: org.petero.droidfish.PGNOptions;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new android.text.SpannableStringBuilder;
        specialinvoke $r2.<android.text.SpannableStringBuilder: void <init>()>();
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb> = $r2;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType> = 11;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 1;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: org.petero.droidfish.gamelogic.GameTree$Node currNode> = null;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int currPos> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int endPos> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean upToDate> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraStart> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraIndent> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean paraBold> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean pendingNewLine> = 0;
        $r3 = new android.text.style.BackgroundColorSpan;
        specialinvoke $r3.<android.text.style.BackgroundColorSpan: void <init>(int)>(-7829368);
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.style.BackgroundColorSpan bgSpan> = $r3;
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: java.util.HashMap nodeToCharPos> = $r4;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: org.petero.droidfish.PGNOptions options> = r1;
        return;
    }

    public final android.text.SpannableStringBuilder getSpannableData()
    {
        org.petero.droidfish.DroidFish$PgnScreenText r0;
        android.text.SpannableStringBuilder $r1;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText;
        $r1 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        return $r1;
    }

    public final int getCurrPos()
    {
        org.petero.droidfish.DroidFish$PgnScreenText r0;
        int $i0;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText;
        $i0 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int currPos>;
        return $i0;
    }

    public boolean isUpToDate()
    {
        org.petero.droidfish.DroidFish$PgnScreenText r0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText;
        $z0 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean upToDate>;
        return $z0;
    }

    private final void newLine()
    {
        org.petero.droidfish.DroidFish$PgnScreenText r0;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText;
        specialinvoke r0.<org.petero.droidfish.DroidFish$PgnScreenText: void newLine(boolean)>(0);
        return;
    }

    private final void newLine(boolean)
    {
        org.petero.droidfish.DroidFish$PgnScreenText r0;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i8;
        android.text.SpannableStringBuilder $r1, $r2, $r4, $r5, $r7, $r9;
        android.text.style.LeadingMarginSpan$Standard $r3;
        android.text.style.StyleSpan $r6;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText;
        z0 := @parameter0: boolean;
        $z1 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0>;
        if $z1 != 0 goto label3;

        $i2 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraIndent>;
        if $i2 <= 0 goto label0;

        $r1 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        i0 = virtualinvoke $r1.<android.text.SpannableStringBuilder: int length()>();
        $i3 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraIndent>;
        i1 = $i3 * 15;
        $r2 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        $r3 = new android.text.style.LeadingMarginSpan$Standard;
        specialinvoke $r3.<android.text.style.LeadingMarginSpan$Standard: void <init>(int)>(i1);
        $i4 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraStart>;
        virtualinvoke $r2.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r3, $i4, i0, 33);

     label0:
        $z2 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean paraBold>;
        if $z2 == 0 goto label1;

        $r4 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        i5 = virtualinvoke $r4.<android.text.SpannableStringBuilder: int length()>();
        $r5 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        $r6 = new android.text.style.StyleSpan;
        specialinvoke $r6.<android.text.style.StyleSpan: void <init>(int)>(1);
        $i6 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraStart>;
        virtualinvoke $r5.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r6, $i6, i5, 33);

     label1:
        if z0 != 0 goto label2;

        $r7 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r7.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(10);

     label2:
        $r9 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        $i7 = virtualinvoke $r9.<android.text.SpannableStringBuilder: int length()>();
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraStart> = $i7;
        $i8 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel>;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraIndent> = $i8;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean paraBold> = 0;

     label3:
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 1;
        return;
    }

    public void processToken(org.petero.droidfish.gamelogic.GameTree$Node, int, java.lang.String)
    {
        org.petero.droidfish.DroidFish$PgnScreenText r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, $i27;
        java.lang.String r2, $r32, $r51, $r52;
        org.petero.droidfish.PGNOptions $r3;
        org.petero.droidfish.PGNOptions$Viewer $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.text.SpannableStringBuilder $r5, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r26, $r28, $r31, $r34, $r36, $r37, $r39, $r43, $r47, $r49, $r50, $r54, $r56;
        java.util.HashMap $r40;
        org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo $r41;
        org.petero.droidfish.DroidFish$PgnScreenText$MoveLink $r44;
        org.petero.droidfish.ColorTheme $r55;
        android.text.style.ForegroundColorSpan $r57;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        $i4 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType>;
        if $i4 != 5 goto label1;

        if i0 == 4 goto label1;

        $r3 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: org.petero.droidfish.PGNOptions options>;
        $r4 = $r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $z0 = $r4.<org.petero.droidfish.PGNOptions$Viewer: boolean headers>;
        if $z0 == 0 goto label0;

        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        specialinvoke r0.<org.petero.droidfish.DroidFish$PgnScreenText: void newLine()>();
        goto label1;

     label0:
        $r5 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r5.<android.text.SpannableStringBuilder: void clear()>();
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean paraBold> = 0;

     label1:
        $z1 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean pendingNewLine>;
        if $z1 == 0 goto label2;

        if i0 == 7 goto label2;

        specialinvoke r0.<org.petero.droidfish.DroidFish$PgnScreenText: void newLine()>();
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean pendingNewLine> = 0;

     label2:
        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label6;
            case 3: goto label7;
            case 4: goto label8;
            case 5: goto label9;
            case 6: goto label10;
            case 7: goto label12;
            case 8: goto label13;
            case 9: goto label14;
            case 10: goto label17;
            case 11: goto label21;
            default: goto label22;
        };

     label3:
        $r6 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r6.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(" \"");
        $r8 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r8.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r2);
        $r10 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r10.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(34);
        goto label22;

     label4:
        $i5 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType>;
        if $i5 == 6 goto label5;

        $i6 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType>;
        if $i6 == 5 goto label5;

        $z2 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0>;
        if $z2 != 0 goto label5;

        $r12 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r12.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(32);

     label5:
        $r14 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r14.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r2);
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        goto label22;

     label6:
        $r16 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r16.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(46);
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        goto label22;

     label7:
        $r18 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r18.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(" *");
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        goto label22;

     label8:
        $r20 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r20.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(91);
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        goto label22;

     label9:
        $r22 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r22.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>("]\n");
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        goto label22;

     label10:
        $i7 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel>;
        $i8 = $i7 + 1;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel> = $i8;
        $z3 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0>;
        if $z3 == 0 goto label11;

        $i9 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraIndent>;
        $i10 = $i9 + 1;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraIndent> = $i10;

     label11:
        specialinvoke r0.<org.petero.droidfish.DroidFish$PgnScreenText: void newLine()>();
        $r26 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r26.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(40);
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        goto label22;

     label12:
        $r28 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r28.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(41);
        $i11 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel>;
        $i12 = $i11 - 1;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel> = $i12;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean pendingNewLine> = 1;
        goto label22;

     label13:
        $r31 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
        $r32 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String nagStr(int)>($i13);
        virtualinvoke $r31.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r32);
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        goto label22;

     label14:
        $i14 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType>;
        if $i14 == 5 goto label15;

        $i15 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType>;
        if $i15 == 4 goto label15;

        $z4 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0>;
        if $z4 != 0 goto label15;

        $r34 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r34.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(32);

     label15:
        $r36 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        i1 = virtualinvoke $r36.<android.text.SpannableStringBuilder: int length()>();
        $r37 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r37.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r2);
        $r39 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        i2 = virtualinvoke $r39.<android.text.SpannableStringBuilder: int length()>();
        $r40 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: java.util.HashMap nodeToCharPos>;
        $r41 = new org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo;
        specialinvoke $r41.<org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo: void <init>(int,int)>(i1, i2);
        virtualinvoke $r40.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r41);
        $r43 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        $r44 = new org.petero.droidfish.DroidFish$PgnScreenText$MoveLink;
        specialinvoke $r44.<org.petero.droidfish.DroidFish$PgnScreenText$MoveLink: void <init>(org.petero.droidfish.gamelogic.GameTree$Node)>(r1);
        virtualinvoke $r43.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r44, i1, i2, 33);
        $i16 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int endPos>;
        if $i16 >= i1 goto label16;

        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int endPos> = i1;

     label16:
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        $i17 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel>;
        if $i17 != 0 goto label22;

        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean paraBold> = 1;
        goto label22;

     label17:
        $i18 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType>;
        if $i18 != 5 goto label18;

        goto label20;

     label18:
        $i19 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel>;
        if $i19 != 0 goto label19;

        $i20 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel>;
        $i21 = $i20 + 1;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel> = $i21;
        specialinvoke r0.<org.petero.droidfish.DroidFish$PgnScreenText: void newLine()>();
        $i22 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel>;
        $i23 = $i22 - 1;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel> = $i23;
        goto label20;

     label19:
        $i24 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType>;
        if $i24 == 6 goto label20;

        $z5 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0>;
        if $z5 != 0 goto label20;

        $r47 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r47.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(32);

     label20:
        $r49 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        i25 = virtualinvoke $r49.<android.text.SpannableStringBuilder: int length()>();
        $r50 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        $r51 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[ \t\r\n]+", " ");
        $r52 = virtualinvoke $r51.<java.lang.String: java.lang.String trim()>();
        virtualinvoke $r50.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r52);
        $r54 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        i26 = virtualinvoke $r54.<android.text.SpannableStringBuilder: int length()>();
        $r55 = staticinvoke <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme instance()>();
        i3 = virtualinvoke $r55.<org.petero.droidfish.ColorTheme: int getColor(int)>(15);
        $r56 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        $r57 = new android.text.style.ForegroundColorSpan;
        specialinvoke $r57.<android.text.style.ForegroundColorSpan: void <init>(int)>(i3);
        virtualinvoke $r56.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r57, i25, i26, 33);
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 0;
        $i27 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel>;
        if $i27 != 0 goto label22;

        specialinvoke r0.<org.petero.droidfish.DroidFish$PgnScreenText: void newLine()>();
        goto label22;

     label21:
        specialinvoke r0.<org.petero.droidfish.DroidFish$PgnScreenText: void newLine(boolean)>(1);
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean upToDate> = 1;

     label22:
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType> = i0;
        return;
    }

    public void clear()
    {
        org.petero.droidfish.DroidFish$PgnScreenText r0;
        android.text.SpannableStringBuilder $r1;
        java.util.HashMap $r2;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText;
        $r1 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        virtualinvoke $r1.<android.text.SpannableStringBuilder: void clear()>();
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int prevType> = 11;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int nestLevel> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean col0> = 1;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: org.petero.droidfish.gamelogic.GameTree$Node currNode> = null;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int currPos> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int endPos> = 0;
        $r2 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: java.util.HashMap nodeToCharPos>;
        virtualinvoke $r2.<java.util.HashMap: void clear()>();
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraStart> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int paraIndent> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean paraBold> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean pendingNewLine> = 0;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: boolean upToDate> = 0;
        return;
    }

    public void setCurrent(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.DroidFish$PgnScreenText r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1, $r7, $r9;
        org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo r2;
        int i0, $i1, $i2, $i3;
        android.text.SpannableStringBuilder $r3, $r13;
        android.text.style.BackgroundColorSpan $r4, $r12, $r14;
        java.util.HashMap $r5, $r8;
        java.lang.Object $r6, $r10;
        org.petero.droidfish.ColorTheme $r11;

        r0 := @this: org.petero.droidfish.DroidFish$PgnScreenText;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        $r3 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        $r4 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.style.BackgroundColorSpan bgSpan>;
        virtualinvoke $r3.<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>($r4);
        $r5 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: java.util.HashMap nodeToCharPos>;
        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo) $r6;
        if r2 != null goto label0;

        if r1 == null goto label0;

        $r7 = virtualinvoke r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node getParent()>();
        if $r7 == null goto label0;

        $r8 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: java.util.HashMap nodeToCharPos>;
        $r9 = virtualinvoke r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node getParent()>();
        $r10 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);
        r2 = (org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo) $r10;

     label0:
        if r2 == null goto label1;

        $r11 = staticinvoke <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme instance()>();
        i0 = virtualinvoke $r11.<org.petero.droidfish.ColorTheme: int getColor(int)>(6);
        $r12 = new android.text.style.BackgroundColorSpan;
        specialinvoke $r12.<android.text.style.BackgroundColorSpan: void <init>(int)>(i0);
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.style.BackgroundColorSpan bgSpan> = $r12;
        $r13 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder sb>;
        $r14 = r0.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.style.BackgroundColorSpan bgSpan>;
        $i1 = r2.<org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo: int l0>;
        $i2 = r2.<org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo: int l1>;
        virtualinvoke $r13.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>($r14, $i1, $i2, 33);
        $i3 = r2.<org.petero.droidfish.DroidFish$PgnScreenText$NodeInfo: int l0>;
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int currPos> = $i3;
        goto label2;

     label1:
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: int currPos> = 0;

     label2:
        r0.<org.petero.droidfish.DroidFish$PgnScreenText: org.petero.droidfish.gamelogic.GameTree$Node currNode> = r1;
        return;
    }
}
public class org.petero.droidfish.DroidFish extends android.app.Activity implements org.petero.droidfish.GUIInterface
{
    private org.petero.droidfish.ChessBoardPlay cb;
    private static org.petero.droidfish.gamelogic.DroidChessController ctrl;
    private boolean mShowThinking;
    private boolean mShowStats;
    private boolean mWhiteBasedScores;
    private boolean mShowBookHints;
    private int maxNumArrows;
    private org.petero.droidfish.GameMode gameMode;
    private boolean mPonderMode;
    private int mEngineThreads;
    private java.lang.String playerName;
    private boolean boardFlipped;
    private boolean autoSwapSides;
    private boolean playerNameFlip;
    private boolean discardVariations;
    private android.widget.TextView status;
    private android.widget.ScrollView moveListScroll;
    private android.widget.TextView moveList;
    private android.widget.TextView thinking;
    private android.widget.ImageButton custom1Button;
    private android.widget.ImageButton custom2Button;
    private android.widget.ImageButton custom3Button;
    private android.widget.ImageButton modeButton;
    private android.widget.ImageButton undoButton;
    private android.widget.ImageButton redoButton;
    private org.petero.droidfish.ButtonActions custom1ButtonActions;
    private org.petero.droidfish.ButtonActions custom2ButtonActions;
    private org.petero.droidfish.ButtonActions custom3ButtonActions;
    private android.widget.TextView whiteTitleText;
    private android.widget.TextView blackTitleText;
    private android.widget.TextView engineTitleText;
    private android.view.View secondTitleLine;
    private android.widget.TextView whiteFigText;
    private android.widget.TextView blackFigText;
    private android.widget.TextView summaryTitleText;
    android.content.SharedPreferences settings;
    private boolean boardGestures;
    private float scrollSensitivity;
    private boolean invertScrollDirection;
    private boolean leftHanded;
    private boolean soundEnabled;
    private android.media.MediaPlayer moveSound;
    private boolean vibrateEnabled;
    private boolean animateMoves;
    private boolean autoScrollTitle;
    private boolean showMaterialDiff;
    private boolean showVariationLine;
    private static final java.lang.String bookDir;
    private static final java.lang.String pgnDir;
    private static final java.lang.String engineDir;
    private static final java.lang.String gtbDefaultDir;
    private org.petero.droidfish.book.BookOptions bookOptions;
    private org.petero.droidfish.PGNOptions pgnOptions;
    private org.petero.droidfish.EngineOptions engineOptions;
    private long lastVisibleMillis;
    private long lastComputationMillis;
    org.petero.droidfish.DroidFish$PgnScreenText gameTextListener;
    private android.os.PowerManager$WakeLock wakeLock;
    private boolean useWakeLock;
    private android.graphics.Typeface figNotation;
    private android.graphics.Typeface defaultMoveListTypeFace;
    private android.graphics.Typeface defaultThinkingListTypeFace;
    private org.petero.droidfish.ActionFactory actionFactory;
    private static final java.lang.String figurinePieceNames;
    private boolean egtbForceReload;
    private static final int RESULT_EDITBOARD;
    private static final int RESULT_SETTINGS;
    private static final int RESULT_LOAD_PGN;
    private static final int RESULT_SELECT_SCID;
    private static final int RESULT_OI_PGN_SAVE;
    private static final int RESULT_OI_PGN_LOAD;
    private java.lang.String thinkingStr1;
    private java.lang.String thinkingStr2;
    private java.lang.String bookInfoStr;
    private java.lang.String variantStr;
    private java.util.ArrayList pvMoves;
    private java.util.ArrayList bookMoves;
    private java.util.ArrayList variantMoves;
    private static final int PROMOTE_DIALOG;
    private static final int BOARD_MENU_DIALOG;
    private static final int ABOUT_DIALOG;
    private static final int SELECT_MOVE_DIALOG;
    private static final int SELECT_BOOK_DIALOG;
    private static final int SELECT_ENGINE_DIALOG;
    private static final int SELECT_PGN_FILE_DIALOG;
    private static final int SELECT_PGN_FILE_SAVE_DIALOG;
    private static final int SET_COLOR_THEME_DIALOG;
    private static final int GAME_MODE_DIALOG;
    private static final int SELECT_PGN_SAVE_NEWFILE_DIALOG;
    private static final int MOVELIST_MENU_DIALOG;
    private static final int THINKING_MENU_DIALOG;
    private static final int GO_BACK_MENU_DIALOG;
    private static final int GO_FORWARD_MENU_DIALOG;
    private static final int FILE_MENU_DIALOG;
    private static final int NEW_GAME_DIALOG;
    private static final int CUSTOM1_BUTTON_DIALOG;
    private static final int CUSTOM2_BUTTON_DIALOG;
    private static final int CUSTOM3_BUTTON_DIALOG;
    private static final int MANAGE_ENGINES_DIALOG;
    private static final int NETWORK_ENGINE_DIALOG;
    private static final int NEW_NETWORK_ENGINE_DIALOG;
    private static final int NETWORK_ENGINE_CONFIG_DIALOG;
    private static final int DELETE_NETWORK_ENGINE_DIALOG;
    private java.lang.String networkEngineToConfig;
    static final int FT_NONE;
    static final int FT_PGN;
    static final int FT_SCID;
    private boolean notificationActive;
    private android.os.Handler handlerTimer;
    private java.lang.Runnable r;

    public void <init>()
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.book.BookOptions $r1;
        org.petero.droidfish.PGNOptions $r2;
        org.petero.droidfish.EngineOptions $r3;
        org.petero.droidfish.DroidFish$1 $r4;
        java.util.ArrayList $r5;
        android.os.Handler $r6;
        org.petero.droidfish.DroidFish$59 $r7;

        r0 := @this: org.petero.droidfish.DroidFish;
        specialinvoke r0.<android.app.Activity: void <init>()>();
        $r1 = new org.petero.droidfish.book.BookOptions;
        specialinvoke $r1.<org.petero.droidfish.book.BookOptions: void <init>()>();
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions bookOptions> = $r1;
        $r2 = new org.petero.droidfish.PGNOptions;
        specialinvoke $r2.<org.petero.droidfish.PGNOptions: void <init>()>();
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions> = $r2;
        $r3 = new org.petero.droidfish.EngineOptions;
        specialinvoke $r3.<org.petero.droidfish.EngineOptions: void <init>()>();
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions> = $r3;
        r0.<org.petero.droidfish.DroidFish: android.os.PowerManager$WakeLock wakeLock> = null;
        r0.<org.petero.droidfish.DroidFish: boolean useWakeLock> = 0;
        $r4 = new org.petero.droidfish.DroidFish$1;
        specialinvoke $r4.<org.petero.droidfish.DroidFish$1: void <init>(org.petero.droidfish.DroidFish)>(r0);
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ActionFactory actionFactory> = $r4;
        r0.<org.petero.droidfish.DroidFish: boolean egtbForceReload> = 0;
        r0.<org.petero.droidfish.DroidFish: java.lang.String thinkingStr1> = "";
        r0.<org.petero.droidfish.DroidFish: java.lang.String thinkingStr2> = "";
        r0.<org.petero.droidfish.DroidFish: java.lang.String bookInfoStr> = "";
        r0.<org.petero.droidfish.DroidFish: java.lang.String variantStr> = "";
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.DroidFish: java.util.ArrayList pvMoves> = $r5;
        r0.<org.petero.droidfish.DroidFish: java.util.ArrayList bookMoves> = null;
        r0.<org.petero.droidfish.DroidFish: java.util.ArrayList variantMoves> = null;
        r0.<org.petero.droidfish.DroidFish: java.lang.String networkEngineToConfig> = "";
        r0.<org.petero.droidfish.DroidFish: boolean notificationActive> = 0;
        $r6 = new android.os.Handler;
        specialinvoke $r6.<android.os.Handler: void <init>()>();
        r0.<org.petero.droidfish.DroidFish: android.os.Handler handlerTimer> = $r6;
        $r7 = new org.petero.droidfish.DroidFish$59;
        specialinvoke $r7.<org.petero.droidfish.DroidFish$59: void <init>(org.petero.droidfish.DroidFish)>(r0);
        r0.<org.petero.droidfish.DroidFish: java.lang.Runnable r> = $r7;
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        org.petero.droidfish.DroidFish r0;
        android.os.Bundle r1;
        org.petero.droidfish.gamelogic.Pair r2;
        java.lang.String r3, r4, r7;
        android.os.PowerManager r5;
        byte[] r6;
        java.lang.Object $r8, $r9, $r13;
        android.content.SharedPreferences $r10, $r11, $r30;
        org.petero.droidfish.DroidFish$2 $r12;
        android.os.PowerManager$WakeLock $r14, $r15;
        org.petero.droidfish.ButtonActions $r16, $r17, $r18;
        android.content.res.AssetManager $r19;
        android.graphics.Typeface $r20;
        org.petero.droidfish.DroidFish$PgnScreenText $r21, $r26;
        org.petero.droidfish.PGNOptions $r22, $r27;
        org.petero.droidfish.gamelogic.DroidChessController $r23, $r24, $r25, $r28, $r31, $r32, $r33, $r34, $r35;
        org.petero.droidfish.GameMode $r29;
        org.petero.droidfish.gamelogic.ChessParseError $r36, r37;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        r2 = specialinvoke r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.Pair getPgnIntent()>();
        $r8 = r2.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        r3 = (java.lang.String) $r8;
        $r9 = r2.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        r4 = (java.lang.String) $r9;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void createDirectories()>();
        staticinvoke <android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>(r0, 2130968576, 0);
        $r10 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);
        r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings> = $r10;
        $r11 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r12 = new org.petero.droidfish.DroidFish$2;
        specialinvoke $r12.<org.petero.droidfish.DroidFish$2: void <init>(org.petero.droidfish.DroidFish)>(r0);
        interfaceinvoke $r11.<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>($r12);
        $r13 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.Object getSystemService(java.lang.String)>("power");
        r5 = (android.os.PowerManager) $r13;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setWakeLock(boolean)>(0);
        $r14 = virtualinvoke r5.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(10, "droidfish");
        r0.<org.petero.droidfish.DroidFish: android.os.PowerManager$WakeLock wakeLock> = $r14;
        $r15 = r0.<org.petero.droidfish.DroidFish: android.os.PowerManager$WakeLock wakeLock>;
        virtualinvoke $r15.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);
        $r16 = new org.petero.droidfish.ButtonActions;
        specialinvoke $r16.<org.petero.droidfish.ButtonActions: void <init>(java.lang.String,int,int)>("custom1", 17, 2131099742);
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom1ButtonActions> = $r16;
        $r17 = new org.petero.droidfish.ButtonActions;
        specialinvoke $r17.<org.petero.droidfish.ButtonActions: void <init>(java.lang.String,int,int)>("custom2", 18, 2131099742);
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom2ButtonActions> = $r17;
        $r18 = new org.petero.droidfish.ButtonActions;
        specialinvoke $r18.<org.petero.droidfish.ButtonActions: void <init>(java.lang.String,int,int)>("custom3", 19, 2131099742);
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom3ButtonActions> = $r18;
        $r19 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.res.AssetManager getAssets()>();
        $r20 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r19, "fonts/DroidFishChessNotationDark.otf");
        r0.<org.petero.droidfish.DroidFish: android.graphics.Typeface figNotation> = $r20;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setPieceNames(int)>(1);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: boolean requestWindowFeature(int)>(1);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void initUI()>();
        $r21 = new org.petero.droidfish.DroidFish$PgnScreenText;
        $r22 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        specialinvoke $r21.<org.petero.droidfish.DroidFish$PgnScreenText: void <init>(org.petero.droidfish.PGNOptions)>($r22);
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.DroidFish$PgnScreenText gameTextListener> = $r21;
        $r23 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        if $r23 == null goto label0;

        $r24 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r24.<org.petero.droidfish.gamelogic.DroidChessController: void shutdownEngine()>();

     label0:
        $r25 = new org.petero.droidfish.gamelogic.DroidChessController;
        $r26 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.DroidFish$PgnScreenText gameTextListener>;
        $r27 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        specialinvoke $r25.<org.petero.droidfish.gamelogic.DroidChessController: void <init>(org.petero.droidfish.GUIInterface,org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,org.petero.droidfish.PGNOptions)>(r0, $r26, $r27);
        <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl> = $r25;
        r0.<org.petero.droidfish.DroidFish: boolean egtbForceReload> = 1;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void readPrefs()>();
        $r28 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r29 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        virtualinvoke $r28.<org.petero.droidfish.gamelogic.DroidChessController: void newGame(org.petero.droidfish.GameMode)>($r29);
        r6 = null;
        if r1 == null goto label1;

        r6 = virtualinvoke r1.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("gameState");
        goto label2;

     label1:
        $r30 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r7 = interfaceinvoke $r30.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gameState", null);
        if r7 == null goto label2;

        r6 = specialinvoke r0.<org.petero.droidfish.DroidFish: byte[] strToByteArr(java.lang.String)>(r7);

     label2:
        if r6 == null goto label3;

        $r31 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r31.<org.petero.droidfish.gamelogic.DroidChessController: void fromByteArray(byte[])>(r6);

     label3:
        $r32 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r32.<org.petero.droidfish.gamelogic.DroidChessController: void setGuiPaused(boolean)>(1);
        $r33 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r33.<org.petero.droidfish.gamelogic.DroidChessController: void setGuiPaused(boolean)>(0);
        $r34 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r34.<org.petero.droidfish.gamelogic.DroidChessController: void startGame()>();
        if r3 == null goto label7;

     label4:
        $r35 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r35.<org.petero.droidfish.gamelogic.DroidChessController: void setFENOrPGN(java.lang.String)>(r3);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBoardFlip(boolean)>(1);

     label5:
        goto label8;

     label6:
        $r36 := @caughtexception;
        r37 = $r36;
        goto label8;

     label7:
        if r4 == null goto label8;

        specialinvoke r0.<org.petero.droidfish.DroidFish: void loadPGNFromFile(java.lang.String)>(r4);

     label8:
        return;

        catch org.petero.droidfish.gamelogic.ChessParseError from label4 to label5 with label6;
    }

    private final void setPieceNames(int)
    {
        org.petero.droidfish.DroidFish r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: org.petero.droidfish.DroidFish;
        i0 := @parameter0: int;
        if i0 != 2 goto label0;

        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void setPieceNames(java.lang.String)>("\ue055 \ue054 \ue053 \ue052 \ue051 \ue050");
        goto label1;

     label0:
        $r1 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099835);
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void setPieceNames(java.lang.String)>($r1);

     label1:
        return;
    }

    private final void createDirectories()
    {
        org.petero.droidfish.DroidFish r0;
        java.io.File r1, $r4, $r9, $r16, $r23;
        java.lang.String r2, $r8, $r13, $r15, $r20, $r22, $r27, $r29;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r10, $r11, $r12, $r14, $r17, $r18, $r19, $r21, $r24, $r25, $r26, $r28;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        r2 = <java.io.File: java.lang.String separator>;
        $r4 = new java.io.File;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DroidFish");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r8);
        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();
        $r9 = new java.io.File;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r13 = <org.petero.droidfish.DroidFish: java.lang.String pgnDir>;
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r15);
        virtualinvoke $r9.<java.io.File: boolean mkdirs()>();
        $r16 = new java.io.File;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r20 = <org.petero.droidfish.DroidFish: java.lang.String engineDir>;
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r22);
        virtualinvoke $r16.<java.io.File: boolean mkdirs()>();
        $r23 = new java.io.File;
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r27 = <org.petero.droidfish.DroidFish: java.lang.String gtbDefaultDir>;
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>($r29);
        virtualinvoke $r23.<java.io.File: boolean mkdirs()>();
        return;
    }

    private final org.petero.droidfish.gamelogic.Pair getPgnIntent()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r2, r5, $r10, $r11, $r12, $r15;
        android.content.Intent r3;
        android.net.Uri r4, $r13;
        android.content.ContentResolver r6;
        java.io.InputStream r7;
        java.lang.StringBuilder r8, $r14;
        byte[] r9;
        int i0;
        boolean $z0, $z1, $z2;
        java.io.IOException $r17, r18;
        android.content.Context $r19;
        android.widget.Toast $r20;
        org.petero.droidfish.gamelogic.Pair $r21;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 = null;
        r2 = null;

     label0:
        r3 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Intent getIntent()>();
        r4 = virtualinvoke r3.<android.content.Intent: android.net.Uri getData()>();
        if r4 == null goto label6;

        r5 = virtualinvoke r3.<android.content.Intent: java.lang.String getScheme()>();
        $r10 = "file";
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z0 == 0 goto label1;

        r2 = virtualinvoke r4.<android.net.Uri: java.lang.String getEncodedPath()>();
        if r2 == null goto label1;

        r2 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>(r2);

     label1:
        if r2 != null goto label6;

        $r11 = "content";
        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z1 != 0 goto label2;

        $r12 = "file";
        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z2 == 0 goto label6;

     label2:
        r6 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.ContentResolver getContentResolver()>();
        $r13 = virtualinvoke r3.<android.content.Intent: android.net.Uri getData()>();
        r7 = virtualinvoke r6.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r13);
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        r8 = $r14;

     label3:
        r9 = newarray (byte)[16384];
        i0 = virtualinvoke r7.<java.io.InputStream: int read(byte[])>(r9);
        if i0 > 0 goto label4;

        goto label5;

     label4:
        $r15 = new java.lang.String;
        specialinvoke $r15.<java.lang.String: void <init>(byte[],int,int)>(r9, 0, i0);
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        goto label3;

     label5:
        r1 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        goto label8;

     label7:
        $r17 := @caughtexception;
        r18 = $r17;
        $r19 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r20 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r19, 2131099790, 0);
        virtualinvoke $r20.<android.widget.Toast: void show()>();

     label8:
        $r21 = new org.petero.droidfish.gamelogic.Pair;
        specialinvoke $r21.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);
        return $r21;

        catch java.io.IOException from label0 to label6 with label7;
    }

    private final byte[] strToByteArr(java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i10, $i11;
        byte[] r2;
        char $c6, $c9;
        byte $b12;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();
        i0 = $i4 / 2;
        r2 = newarray (byte)[i0];
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $i5 = i1 * 2;
        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);
        i2 = $c6 - 65;
        $i7 = i1 * 2;
        $i8 = $i7 + 1;
        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);
        i3 = $c9 - 65;
        $i10 = i2 * 16;
        $i11 = $i10 + i3;
        $b12 = (byte) $i11;
        r2[i1] = $b12;
        i1 = i1 + 1;
        goto label0;

     label1:
        return r2;
    }

    private final java.lang.String byteArrToString(byte[])
    {
        org.petero.droidfish.DroidFish r0;
        byte[] r1;
        java.lang.StringBuilder $r2, r3;
        int i0, i1, i2, $i5, $i6, $i7, $i8;
        char c3, c4;
        java.lang.String $r6;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: byte[];
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(32768);
        r3 = $r2;
        i0 = lengthof r1;
        i1 = 0;

     label0:
        if i1 >= i0 goto label2;

        i2 = r1[i1];
        if i2 >= 0 goto label1;

        i2 = i2 + 256;

     label1:
        $i5 = i2 / 16;
        $i6 = 65 + $i5;
        c3 = (char) $i6;
        $i7 = i2 & 15;
        $i8 = 65 + $i7;
        c4 = (char) $i8;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);
        i1 = i1 + 1;
        goto label0;

     label2:
        $r6 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r6;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        org.petero.droidfish.DroidFish r0;
        android.content.res.Configuration r1;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: android.content.res.Configuration;
        specialinvoke r0.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r1);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void reInitUI()>();
        return;
    }

    private final void reInitUI()
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.ChessBoardPlay r1, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r14;
        java.lang.String r2;
        android.widget.TextView $r3;
        java.lang.CharSequence $r4;
        float $f0, $f1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.petero.droidfish.gamelogic.Position $r9;
        int $i0;
        org.petero.droidfish.gamelogic.DroidChessController $r15, $r16;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r3 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView status>;
        $r4 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();
        r2 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void initUI()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void readPrefs()>();
        $r5 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $f0 = r1.<org.petero.droidfish.ChessBoardPlay: float cursorX>;
        $r5.<org.petero.droidfish.ChessBoardPlay: float cursorX> = $f0;
        $r6 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $f1 = r1.<org.petero.droidfish.ChessBoardPlay: float cursorY>;
        $r6.<org.petero.droidfish.ChessBoardPlay: float cursorY> = $f1;
        $r7 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $z0 = r1.<org.petero.droidfish.ChessBoardPlay: boolean cursorVisible>;
        $r7.<org.petero.droidfish.ChessBoardPlay: boolean cursorVisible> = $z0;
        $r8 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r9 = r1.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Position pos>;
        virtualinvoke $r8.<org.petero.droidfish.ChessBoardPlay: void setPosition(org.petero.droidfish.gamelogic.Position)>($r9);
        $r10 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $z1 = r1.<org.petero.droidfish.ChessBoardPlay: boolean flipped>;
        virtualinvoke $r10.<org.petero.droidfish.ChessBoardPlay: void setFlipped(boolean)>($z1);
        $r11 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $z2 = r1.<org.petero.droidfish.ChessBoardPlay: boolean drawSquareLabels>;
        virtualinvoke $r11.<org.petero.droidfish.ChessBoardPlay: void setDrawSquareLabels(boolean)>($z2);
        $r12 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $z3 = r1.<org.petero.droidfish.ChessBoardPlay: boolean oneTouchMoves>;
        $r12.<org.petero.droidfish.ChessBoardPlay: boolean oneTouchMoves> = $z3;
        $r13 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $z4 = r1.<org.petero.droidfish.ChessBoardPlay: boolean toggleSelection>;
        $r13.<org.petero.droidfish.ChessBoardPlay: boolean toggleSelection> = $z4;
        $i0 = r1.<org.petero.droidfish.ChessBoardPlay: int selectedSquare>;
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void setSelection(int)>($i0);
        $r14 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $z5 = r1.<org.petero.droidfish.ChessBoardPlay: boolean userSelectedSquare>;
        $r14.<org.petero.droidfish.ChessBoardPlay: boolean userSelectedSquare> = $z5;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setStatusString(java.lang.String)>(r2);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void moveListUpdated()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateThinkingInfo()>();
        $r15 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r15.<org.petero.droidfish.gamelogic.DroidChessController: void updateRemainingTime()>();
        $r16 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r16.<org.petero.droidfish.gamelogic.DroidChessController: void updateMaterialDiffList()>();
        return;
    }

    private final boolean leftHandedView()
    {
        org.petero.droidfish.DroidFish r0;
        android.content.SharedPreferences $r1;
        boolean $z0, $z1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        int $i0;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("leftHanded", 0);
        if $z0 == 0 goto label0;

        $r2 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.res.Resources getResources()>();
        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();
        $i0 = $r3.<android.content.res.Configuration: int orientation>;
        if $i0 != 2 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    private final void handlePrefsChange()
    {
        org.petero.droidfish.DroidFish r0;
        boolean $z0, $z1;
        org.petero.droidfish.gamelogic.DroidChessController $r1;
        org.petero.droidfish.GameMode $r2;

        r0 := @this: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean leftHanded>;
        $z1 = specialinvoke r0.<org.petero.droidfish.DroidFish: boolean leftHandedView()>();
        if $z0 == $z1 goto label0;

        specialinvoke r0.<org.petero.droidfish.DroidFish: void reInitUI()>();
        goto label1;

     label0:
        specialinvoke r0.<org.petero.droidfish.DroidFish: void readPrefs()>();

     label1:
        $r1 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r2 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        virtualinvoke $r1.<org.petero.droidfish.gamelogic.DroidChessController: void setGameMode(org.petero.droidfish.GameMode)>($r2);
        return;
    }

    private final void initUI()
    {
        org.petero.droidfish.DroidFish r0;
        android.view.GestureDetector r1, $r56;
        boolean $z0, $z1;
        int $i0;
        android.view.View $r3, $r4, $r5, $r8, $r11, $r13, $r21, $r29, $r31, $r33, $r35, $r39, $r49, $r68, $r72, $r76, $r80, $r84, $r90;
        android.widget.TextView $r6, $r7, $r9, $r10, $r12, $r14, $r15, $r17, $r18, $r19, $r22, $r23, $r25, $r26, $r27, $r30, $r32, $r36, $r37, $r40, $r41, $r43, $r45, $r46, $r48, $r64, $r66;
        android.graphics.Typeface $r16, $r24, $r38, $r42;
        android.content.res.ColorStateList $r20, $r28;
        android.widget.ScrollView $r34, $r44;
        android.text.method.MovementMethod $r47;
        org.petero.droidfish.ChessBoardPlay $r50, $r51, $r52, $r53, $r54, $r58, $r60, $r62;
        org.petero.droidfish.PGNOptions $r55;
        org.petero.droidfish.DroidFish$3 $r57;
        org.petero.droidfish.DroidFish$4 $r59;
        org.petero.droidfish.DroidFish$5 $r61;
        org.petero.droidfish.DroidFish$6 $r63;
        org.petero.droidfish.DroidFish$7 $r65;
        org.petero.droidfish.DroidFish$8 $r67;
        android.widget.ImageButton $r69, $r71, $r73, $r75, $r77, $r79, $r81, $r82, $r85, $r86, $r88, $r91, $r92, $r94;
        org.petero.droidfish.ButtonActions $r70, $r74, $r78;
        org.petero.droidfish.DroidFish$9 $r83;
        org.petero.droidfish.DroidFish$10 $r87;
        org.petero.droidfish.DroidFish$11 $r89;
        org.petero.droidfish.DroidFish$12 $r93;
        org.petero.droidfish.DroidFish$13 $r95;

        r0 := @this: org.petero.droidfish.DroidFish;
        $z0 = specialinvoke r0.<org.petero.droidfish.DroidFish: boolean leftHandedView()>();
        r0.<org.petero.droidfish.DroidFish: boolean leftHanded> = $z0;
        $z1 = r0.<org.petero.droidfish.DroidFish: boolean leftHanded>;
        if $z1 == 0 goto label0;

        $i0 = 2130903048;
        goto label1;

     label0:
        $i0 = 2130903047;

     label1:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void setContentView(int)>($i0);
        $r3 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(16908290);
        staticinvoke <org.petero.droidfish.Util: void overrideFonts(android.view.View)>($r3);
        $r4 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296284);
        r0.<org.petero.droidfish.DroidFish: android.view.View secondTitleLine> = $r4;
        $r5 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296279);
        $r6 = (android.widget.TextView) $r5;
        r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteTitleText> = $r6;
        $r7 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteTitleText>;
        virtualinvoke $r7.<android.widget.TextView: void setSelected(boolean)>(1);
        $r8 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296281);
        $r9 = (android.widget.TextView) $r8;
        r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackTitleText> = $r9;
        $r10 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackTitleText>;
        virtualinvoke $r10.<android.widget.TextView: void setSelected(boolean)>(1);
        $r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296286);
        $r12 = (android.widget.TextView) $r11;
        r0.<org.petero.droidfish.DroidFish: android.widget.TextView engineTitleText> = $r12;
        $r13 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296285);
        $r14 = (android.widget.TextView) $r13;
        r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteFigText> = $r14;
        $r15 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteFigText>;
        $r16 = r0.<org.petero.droidfish.DroidFish: android.graphics.Typeface figNotation>;
        virtualinvoke $r15.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r16);
        $r17 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteFigText>;
        virtualinvoke $r17.<android.widget.TextView: void setSelected(boolean)>(1);
        $r18 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteFigText>;
        $r19 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteTitleText>;
        $r20 = virtualinvoke $r19.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();
        virtualinvoke $r18.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r20);
        $r21 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296287);
        $r22 = (android.widget.TextView) $r21;
        r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackFigText> = $r22;
        $r23 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackFigText>;
        $r24 = r0.<org.petero.droidfish.DroidFish: android.graphics.Typeface figNotation>;
        virtualinvoke $r23.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r24);
        $r25 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackFigText>;
        virtualinvoke $r25.<android.widget.TextView: void setSelected(boolean)>(1);
        $r26 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackFigText>;
        $r27 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackTitleText>;
        $r28 = virtualinvoke $r27.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();
        virtualinvoke $r26.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r28);
        $r29 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296280);
        $r30 = (android.widget.TextView) $r29;
        r0.<org.petero.droidfish.DroidFish: android.widget.TextView summaryTitleText> = $r30;
        $r31 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296289);
        $r32 = (android.widget.TextView) $r31;
        r0.<org.petero.droidfish.DroidFish: android.widget.TextView status> = $r32;
        $r33 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296298);
        $r34 = (android.widget.ScrollView) $r33;
        r0.<org.petero.droidfish.DroidFish: android.widget.ScrollView moveListScroll> = $r34;
        $r35 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296299);
        $r36 = (android.widget.TextView) $r35;
        r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList> = $r36;
        $r37 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        $r38 = virtualinvoke $r37.<android.widget.TextView: android.graphics.Typeface getTypeface()>();
        r0.<org.petero.droidfish.DroidFish: android.graphics.Typeface defaultMoveListTypeFace> = $r38;
        $r39 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296297);
        $r40 = (android.widget.TextView) $r39;
        r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking> = $r40;
        $r41 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        $r42 = virtualinvoke $r41.<android.widget.TextView: android.graphics.Typeface getTypeface()>();
        r0.<org.petero.droidfish.DroidFish: android.graphics.Typeface defaultThinkingListTypeFace> = $r42;
        $r43 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView status>;
        virtualinvoke $r43.<android.widget.TextView: void setFocusable(boolean)>(0);
        $r44 = r0.<org.petero.droidfish.DroidFish: android.widget.ScrollView moveListScroll>;
        virtualinvoke $r44.<android.widget.ScrollView: void setFocusable(boolean)>(0);
        $r45 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        virtualinvoke $r45.<android.widget.TextView: void setFocusable(boolean)>(0);
        $r46 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        $r47 = staticinvoke <android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>();
        virtualinvoke $r46.<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>($r47);
        $r48 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        virtualinvoke $r48.<android.widget.TextView: void setFocusable(boolean)>(0);
        $r49 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296288);
        $r50 = (org.petero.droidfish.ChessBoardPlay) $r49;
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb> = $r50;
        $r51 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r51.<org.petero.droidfish.ChessBoardPlay: void setFocusable(boolean)>(1);
        $r52 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r52.<org.petero.droidfish.ChessBoardPlay: boolean requestFocus()>();
        $r53 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r53.<org.petero.droidfish.ChessBoardPlay: void setClickable(boolean)>(1);
        $r54 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r55 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        virtualinvoke $r54.<org.petero.droidfish.ChessBoardPlay: void setPgnOptions(org.petero.droidfish.PGNOptions)>($r55);
        $r56 = new android.view.GestureDetector;
        $r57 = new org.petero.droidfish.DroidFish$3;
        specialinvoke $r57.<org.petero.droidfish.DroidFish$3: void <init>(org.petero.droidfish.DroidFish)>(r0);
        specialinvoke $r56.<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener)>($r57);
        r1 = $r56;
        $r58 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r59 = new org.petero.droidfish.DroidFish$4;
        specialinvoke $r59.<org.petero.droidfish.DroidFish$4: void <init>(org.petero.droidfish.DroidFish,android.view.GestureDetector)>(r0, r1);
        virtualinvoke $r58.<org.petero.droidfish.ChessBoardPlay: void setOnTouchListener(android.view.View$OnTouchListener)>($r59);
        $r60 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r61 = new org.petero.droidfish.DroidFish$5;
        specialinvoke $r61.<org.petero.droidfish.DroidFish$5: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke $r60.<org.petero.droidfish.ChessBoardPlay: void setOnTrackballListener(org.petero.droidfish.ChessBoard$OnTrackballListener)>($r61);
        $r62 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r63 = new org.petero.droidfish.DroidFish$6;
        specialinvoke $r63.<org.petero.droidfish.DroidFish$6: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke $r62.<org.petero.droidfish.ChessBoardPlay: void setOnLongClickListener(android.view.View$OnLongClickListener)>($r63);
        $r64 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        $r65 = new org.petero.droidfish.DroidFish$7;
        specialinvoke $r65.<org.petero.droidfish.DroidFish$7: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke $r64.<android.widget.TextView: void setOnLongClickListener(android.view.View$OnLongClickListener)>($r65);
        $r66 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        $r67 = new org.petero.droidfish.DroidFish$8;
        specialinvoke $r67.<org.petero.droidfish.DroidFish$8: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke $r66.<android.widget.TextView: void setOnLongClickListener(android.view.View$OnLongClickListener)>($r67);
        $r68 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296292);
        $r69 = (android.widget.ImageButton) $r68;
        r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton custom1Button> = $r69;
        $r70 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom1ButtonActions>;
        $r71 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton custom1Button>;
        virtualinvoke $r70.<org.petero.droidfish.ButtonActions: void setImageButton(android.widget.ImageButton,android.app.Activity)>($r71, r0);
        $r72 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296291);
        $r73 = (android.widget.ImageButton) $r72;
        r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton custom2Button> = $r73;
        $r74 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom2ButtonActions>;
        $r75 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton custom2Button>;
        virtualinvoke $r74.<org.petero.droidfish.ButtonActions: void setImageButton(android.widget.ImageButton,android.app.Activity)>($r75, r0);
        $r76 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296290);
        $r77 = (android.widget.ImageButton) $r76;
        r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton custom3Button> = $r77;
        $r78 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom3ButtonActions>;
        $r79 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton custom3Button>;
        virtualinvoke $r78.<org.petero.droidfish.ButtonActions: void setImageButton(android.widget.ImageButton,android.app.Activity)>($r79, r0);
        $r80 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296293);
        $r81 = (android.widget.ImageButton) $r80;
        r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton modeButton> = $r81;
        $r82 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton modeButton>;
        $r83 = new org.petero.droidfish.DroidFish$9;
        specialinvoke $r83.<org.petero.droidfish.DroidFish$9: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke $r82.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r83);
        $r84 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296294);
        $r85 = (android.widget.ImageButton) $r84;
        r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton undoButton> = $r85;
        $r86 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton undoButton>;
        $r87 = new org.petero.droidfish.DroidFish$10;
        specialinvoke $r87.<org.petero.droidfish.DroidFish$10: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke $r86.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r87);
        $r88 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton undoButton>;
        $r89 = new org.petero.droidfish.DroidFish$11;
        specialinvoke $r89.<org.petero.droidfish.DroidFish$11: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke $r88.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>($r89);
        $r90 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(2131296295);
        $r91 = (android.widget.ImageButton) $r90;
        r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton redoButton> = $r91;
        $r92 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton redoButton>;
        $r93 = new org.petero.droidfish.DroidFish$12;
        specialinvoke $r93.<org.petero.droidfish.DroidFish$12: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke $r92.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r93);
        $r94 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton redoButton>;
        $r95 = new org.petero.droidfish.DroidFish$13;
        specialinvoke $r95.<org.petero.droidfish.DroidFish$13: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke $r94.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>($r95);
        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        org.petero.droidfish.DroidFish r0;
        android.os.Bundle r1;
        byte[] r2;
        org.petero.droidfish.gamelogic.DroidChessController $r3, $r4;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);
        $r3 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        if $r3 == null goto label0;

        $r4 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        r2 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.DroidChessController: byte[] toByteArray()>();
        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("gameState", r2);

     label0:
        return;
    }

    protected void onResume()
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.gamelogic.DroidChessController $r1, $r2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish;
        r0.<org.petero.droidfish.DroidFish: long lastVisibleMillis> = 0L;
        $r1 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        if $r1 == null goto label0;

        $r2 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: void setGuiPaused(boolean)>(0);

     label0:
        r0.<org.petero.droidfish.DroidFish: boolean notificationActive> = 1;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateNotification()>();
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean useWakeLock>;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setWakeLock(boolean)>($z0);
        specialinvoke r0.<android.app.Activity: void onResume()>();
        return;
    }

    protected void onPause()
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.gamelogic.DroidChessController $r1, $r5, $r6;
        byte[] r2;
        android.content.SharedPreferences$Editor r3;
        java.lang.String r4;
        android.content.SharedPreferences $r7;
        long $l0;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        if $r1 == null goto label0;

        $r5 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.DroidChessController: void setGuiPaused(boolean)>(1);
        $r6 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        r2 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.DroidChessController: byte[] toByteArray()>();
        $r7 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r3 = interfaceinvoke $r7.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        r4 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String byteArrToString(byte[])>(r2);
        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gameState", r4);
        interfaceinvoke r3.<android.content.SharedPreferences$Editor: boolean commit()>();

     label0:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<org.petero.droidfish.DroidFish: long lastVisibleMillis> = $l0;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateNotification()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setWakeLock(boolean)>(0);
        specialinvoke r0.<android.app.Activity: void onPause()>();
        return;
    }

    protected void onDestroy()
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.gamelogic.DroidChessController $r1, $r2;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        if $r1 == null goto label0;

        $r2 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: void shutdownEngine()>();

     label0:
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setNotification(boolean)>(0);
        specialinvoke r0.<android.app.Activity: void onDestroy()>();
        return;
    }

    private final int getIntSetting(java.lang.String, int)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r2, $r6;
        int i0, i1;
        android.content.SharedPreferences $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r3 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r4 = newarray (java.lang.Object)[1];
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r4[0] = $r5;
        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r4);
        r2 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r1, $r6);
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
        return i1;
    }

    private final void readPrefs()
    {
        org.petero.droidfish.DroidFish r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i21;
        java.lang.String r1, r2, r4, r6, $r9, $r14, $r31, $r55, $r73, $r75, $r78;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45;
        android.content.res.Configuration r3;
        java.io.File r5;
        org.petero.droidfish.GameMode $r7;
        android.content.SharedPreferences $r8, $r10, $r11, $r12, $r15, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r29, $r30, $r32, $r33, $r34, $r35, $r40, $r41, $r42, $r43, $r45, $r48, $r51, $r54, $r58, $r60, $r62, $r65, $r67, $r69, $r71, $r72, $r84, $r87, $r90, $r93, $r98, $r101, $r104, $r107, $r110, $r113, $r116, $r119, $r122, $r124, $r136;
        org.petero.droidfish.ChessBoardPlay $r16, $r17, $r19, $r81, $r125;
        org.petero.droidfish.gamelogic.DroidChessController $r27, $r28, $r130;
        float $f0, $f1, $f2, $f3;
        android.content.res.Resources $r36;
        android.widget.TextView $r37, $r38, $r39;
        org.petero.droidfish.ButtonActions $r44, $r47, $r50;
        org.petero.droidfish.ActionFactory $r46, $r49, $r52;
        org.petero.droidfish.book.BookOptions $r53, $r56, $r57, $r59, $r61;
        double $d0, $d1;
        org.petero.droidfish.EngineOptions $r63, $r64, $r66, $r68, $r70, $r80;
        java.lang.StringBuilder $r74, $r76, $r77, $r79;
        org.petero.droidfish.PGNOptions $r82, $r85, $r88, $r91, $r94, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r117, $r120, $r128, $r131, $r134;
        org.petero.droidfish.PGNOptions$Viewer $r83, $r86, $r89, $r92, $r95, $r97, $r129, $r132, $r135;
        org.petero.droidfish.PGNOptions$Import $r100, $r103, $r106;
        org.petero.droidfish.PGNOptions$Export $r109, $r112, $r115, $r118, $r121;
        org.petero.droidfish.ColorTheme $r123;
        android.view.View $r126, $r137;
        org.petero.droidfish.DroidFish$PgnScreenText $r127;
        byte $b22;

        r0 := @this: org.petero.droidfish.DroidFish;
        i0 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("gameMode", 1);
        $r7 = new org.petero.droidfish.GameMode;
        specialinvoke $r7.<org.petero.droidfish.GameMode: void <init>(int)>(i0);
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode> = $r7;
        r1 = r0.<org.petero.droidfish.DroidFish: java.lang.String playerName>;
        $r8 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r9 = interfaceinvoke $r8.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("playerName", "Player");
        r0.<org.petero.droidfish.DroidFish: java.lang.String playerName> = $r9;
        $r10 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z1 = interfaceinvoke $r10.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("boardFlipped", 0);
        r0.<org.petero.droidfish.DroidFish: boolean boardFlipped> = $z1;
        $r11 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z2 = interfaceinvoke $r11.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("autoSwapSides", 0);
        r0.<org.petero.droidfish.DroidFish: boolean autoSwapSides> = $z2;
        $r12 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z3 = interfaceinvoke $r12.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("playerNameFlip", 1);
        r0.<org.petero.droidfish.DroidFish: boolean playerNameFlip> = $z3;
        $r14 = r0.<org.petero.droidfish.DroidFish: java.lang.String playerName>;
        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z4 != 0 goto label0;

        $z5 = 1;
        goto label1;

     label0:
        $z5 = 0;

     label1:
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBoardFlip(boolean)>($z5);
        $r15 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        z0 = interfaceinvoke $r15.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("drawSquareLabels", 0);
        $r16 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r16.<org.petero.droidfish.ChessBoardPlay: void setDrawSquareLabels(boolean)>(z0);
        $r17 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r18 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z6 = interfaceinvoke $r18.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("oneTouchMoves", 0);
        $r17.<org.petero.droidfish.ChessBoardPlay: boolean oneTouchMoves> = $z6;
        $r19 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $i7 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("squareSelectType", 0);
        if $i7 != 1 goto label2;

        $z7 = 1;
        goto label3;

     label2:
        $z7 = 0;

     label3:
        $r19.<org.petero.droidfish.ChessBoardPlay: boolean toggleSelection> = $z7;
        $r20 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z8 = interfaceinvoke $r20.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("showThinking", 0);
        r0.<org.petero.droidfish.DroidFish: boolean mShowThinking> = $z8;
        $r21 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z9 = interfaceinvoke $r21.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("showStats", 1);
        r0.<org.petero.droidfish.DroidFish: boolean mShowStats> = $z9;
        $r22 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z10 = interfaceinvoke $r22.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("whiteBasedScores", 0);
        r0.<org.petero.droidfish.DroidFish: boolean mWhiteBasedScores> = $z10;
        $i8 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("thinkingArrows", 2);
        r0.<org.petero.droidfish.DroidFish: int maxNumArrows> = $i8;
        $r23 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z11 = interfaceinvoke $r23.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("bookHints", 0);
        r0.<org.petero.droidfish.DroidFish: boolean mShowBookHints> = $z11;
        $i9 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("threads", 1);
        r0.<org.petero.droidfish.DroidFish: int mEngineThreads> = $i9;
        $r24 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r2 = interfaceinvoke $r24.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("engine", "stockfish");
        $r25 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        i1 = interfaceinvoke $r25.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("strength", 1000);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEngineStrength(java.lang.String,int)>(r2, i1);
        $r26 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z12 = interfaceinvoke $r26.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("ponderMode", 0);
        r0.<org.petero.droidfish.DroidFish: boolean mPonderMode> = $z12;
        $z13 = r0.<org.petero.droidfish.DroidFish: boolean mPonderMode>;
        if $z13 != 0 goto label4;

        $r27 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r27.<org.petero.droidfish.gamelogic.DroidChessController: void stopPonder()>();

     label4:
        i2 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("timeControl", 120000);
        i3 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("movesPerSession", 60);
        i4 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("timeIncrement", 0);
        $r28 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r28.<org.petero.droidfish.gamelogic.DroidChessController: void setTimeLimit(int,int,int)>(i2, i3, i4);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setSummaryTitle()>();
        $r29 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z14 = interfaceinvoke $r29.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("boardGestures", 1);
        r0.<org.petero.droidfish.DroidFish: boolean boardGestures> = $z14;
        $r30 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r31 = interfaceinvoke $r30.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("scrollSensitivity", "2");
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r31);
        r0.<org.petero.droidfish.DroidFish: float scrollSensitivity> = $f0;
        $r32 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z15 = interfaceinvoke $r32.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("invertScrollDirection", 0);
        r0.<org.petero.droidfish.DroidFish: boolean invertScrollDirection> = $z15;
        $r33 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z16 = interfaceinvoke $r33.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("discardVariations", 0);
        r0.<org.petero.droidfish.DroidFish: boolean discardVariations> = $z16;
        $r34 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        staticinvoke <org.petero.droidfish.Util: void setFullScreenMode(android.app.Activity,android.content.SharedPreferences)>(r0, $r34);
        $r35 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z17 = interfaceinvoke $r35.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("wakeLock", 0);
        r0.<org.petero.droidfish.DroidFish: boolean useWakeLock> = $z17;
        $z18 = r0.<org.petero.droidfish.DroidFish: boolean useWakeLock>;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setWakeLock(boolean)>($z18);
        i5 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("fontSize", 12);
        i6 = i5;
        $r36 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.res.Resources getResources()>();
        r3 = virtualinvoke $r36.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();
        $i10 = r3.<android.content.res.Configuration: int orientation>;
        if $i10 != 1 goto label5;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i6, 16);

     label5:
        $r37 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView status>;
        $f1 = (float) i6;
        virtualinvoke $r37.<android.widget.TextView: void setTextSize(float)>($f1);
        $r38 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        $f2 = (float) i5;
        virtualinvoke $r38.<android.widget.TextView: void setTextSize(float)>($f2);
        $r39 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        $f3 = (float) i5;
        virtualinvoke $r39.<android.widget.TextView: void setTextSize(float)>($f3);
        $r40 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z19 = interfaceinvoke $r40.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("soundEnabled", 0);
        r0.<org.petero.droidfish.DroidFish: boolean soundEnabled> = $z19;
        $r41 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z20 = interfaceinvoke $r41.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("vibrateEnabled", 0);
        r0.<org.petero.droidfish.DroidFish: boolean vibrateEnabled> = $z20;
        $r42 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z21 = interfaceinvoke $r42.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("animateMoves", 1);
        r0.<org.petero.droidfish.DroidFish: boolean animateMoves> = $z21;
        $r43 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z22 = interfaceinvoke $r43.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("autoScrollTitle", 1);
        r0.<org.petero.droidfish.DroidFish: boolean autoScrollTitle> = $z22;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setTitleScrolling()>();
        $r44 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom1ButtonActions>;
        $r45 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r46 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ActionFactory actionFactory>;
        virtualinvoke $r44.<org.petero.droidfish.ButtonActions: void readPrefs(android.content.SharedPreferences,org.petero.droidfish.ActionFactory)>($r45, $r46);
        $r47 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom2ButtonActions>;
        $r48 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r49 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ActionFactory actionFactory>;
        virtualinvoke $r47.<org.petero.droidfish.ButtonActions: void readPrefs(android.content.SharedPreferences,org.petero.droidfish.ActionFactory)>($r48, $r49);
        $r50 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom3ButtonActions>;
        $r51 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r52 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ActionFactory actionFactory>;
        virtualinvoke $r50.<org.petero.droidfish.ButtonActions: void readPrefs(android.content.SharedPreferences,org.petero.droidfish.ActionFactory)>($r51, $r52);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateButtons()>();
        $r53 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions bookOptions>;
        $r54 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r55 = interfaceinvoke $r54.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("bookFile", "");
        $r53.<org.petero.droidfish.book.BookOptions: java.lang.String filename> = $r55;
        $r56 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions bookOptions>;
        $i11 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("bookMaxLength", 1000000);
        $r56.<org.petero.droidfish.book.BookOptions: int maxLength> = $i11;
        $r57 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions bookOptions>;
        $r58 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z23 = interfaceinvoke $r58.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("bookPreferMainLines", 0);
        $r57.<org.petero.droidfish.book.BookOptions: boolean preferMainLines> = $z23;
        $r59 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions bookOptions>;
        $r60 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z24 = interfaceinvoke $r60.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("bookTournamentMode", 0);
        $r59.<org.petero.droidfish.book.BookOptions: boolean tournamentMode> = $z24;
        $r61 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions bookOptions>;
        $r62 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $i12 = interfaceinvoke $r62.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("bookRandom", 500);
        $i13 = $i12 - 500;
        $d0 = (double) $i13;
        $d1 = $d0 * 0.006;
        $r61.<org.petero.droidfish.book.BookOptions: double random> = $d1;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBookOptions()>();
        $r63 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        $i14 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("hashMB", 16);
        $r63.<org.petero.droidfish.EngineOptions: int hashMB> = $i14;
        $r64 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        $r65 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z25 = interfaceinvoke $r65.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("tbHints", 0);
        $r64.<org.petero.droidfish.EngineOptions: boolean hints> = $z25;
        $r66 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        $r67 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z26 = interfaceinvoke $r67.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("tbHintsEdit", 0);
        $r66.<org.petero.droidfish.EngineOptions: boolean hintsEdit> = $z26;
        $r68 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        $r69 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z27 = interfaceinvoke $r69.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("tbRootProbe", 1);
        $r68.<org.petero.droidfish.EngineOptions: boolean rootProbe> = $z27;
        $r70 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        $r71 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z28 = interfaceinvoke $r71.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("tbEngineProbe", 1);
        $r70.<org.petero.droidfish.EngineOptions: boolean engineProbe> = $z28;
        $r72 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r73 = interfaceinvoke $r72.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("gtbPath", "");
        r4 = virtualinvoke $r73.<java.lang.String: java.lang.String trim()>();
        $i15 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i15 != 0 goto label6;

        r5 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        r6 = <java.io.File: java.lang.String separator>;
        $r74 = new java.lang.StringBuilder;
        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();
        $r75 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();
        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);
        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r78 = <org.petero.droidfish.DroidFish: java.lang.String gtbDefaultDir>;
        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);
        r4 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r80 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        $r80.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath> = r4;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEngineOptions(boolean)>(0);
        $r81 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $i16 = virtualinvoke $r81.<org.petero.droidfish.ChessBoardPlay: int getSelectedSquare()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEgtbHints(int)>($i16);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateThinkingInfo()>();
        $r82 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r83 = $r82.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $r84 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z29 = interfaceinvoke $r84.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("viewVariations", 1);
        $r83.<org.petero.droidfish.PGNOptions$Viewer: boolean variations> = $z29;
        $r85 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r86 = $r85.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $r87 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z30 = interfaceinvoke $r87.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("viewComments", 1);
        $r86.<org.petero.droidfish.PGNOptions$Viewer: boolean comments> = $z30;
        $r88 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r89 = $r88.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $r90 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z31 = interfaceinvoke $r90.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("viewNAG", 1);
        $r89.<org.petero.droidfish.PGNOptions$Viewer: boolean nag> = $z31;
        $r91 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r92 = $r91.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $r93 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z32 = interfaceinvoke $r93.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("viewHeaders", 0);
        $r92.<org.petero.droidfish.PGNOptions$Viewer: boolean headers> = $z32;
        $r94 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r95 = $r94.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        i17 = $r95.<org.petero.droidfish.PGNOptions$Viewer: int pieceType>;
        $r96 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r97 = $r96.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $i18 = specialinvoke r0.<org.petero.droidfish.DroidFish: int getIntSetting(java.lang.String,int)>("viewPieceType", 1);
        $r97.<org.petero.droidfish.PGNOptions$Viewer: int pieceType> = $i18;
        $r98 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z33 = interfaceinvoke $r98.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("showVariationLine", 0);
        r0.<org.petero.droidfish.DroidFish: boolean showVariationLine> = $z33;
        $r99 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r100 = $r99.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Import imp>;
        $r101 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z34 = interfaceinvoke $r101.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("importVariations", 1);
        $r100.<org.petero.droidfish.PGNOptions$Import: boolean variations> = $z34;
        $r102 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r103 = $r102.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Import imp>;
        $r104 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z35 = interfaceinvoke $r104.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("importComments", 1);
        $r103.<org.petero.droidfish.PGNOptions$Import: boolean comments> = $z35;
        $r105 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r106 = $r105.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Import imp>;
        $r107 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z36 = interfaceinvoke $r107.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("importNAG", 1);
        $r106.<org.petero.droidfish.PGNOptions$Import: boolean nag> = $z36;
        $r108 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r109 = $r108.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r110 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z37 = interfaceinvoke $r110.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("exportVariations", 1);
        $r109.<org.petero.droidfish.PGNOptions$Export: boolean variations> = $z37;
        $r111 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r112 = $r111.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r113 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z38 = interfaceinvoke $r113.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("exportComments", 1);
        $r112.<org.petero.droidfish.PGNOptions$Export: boolean comments> = $z38;
        $r114 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r115 = $r114.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r116 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z39 = interfaceinvoke $r116.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("exportNAG", 1);
        $r115.<org.petero.droidfish.PGNOptions$Export: boolean nag> = $z39;
        $r117 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r118 = $r117.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r119 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z40 = interfaceinvoke $r119.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("exportPlayerAction", 0);
        $r118.<org.petero.droidfish.PGNOptions$Export: boolean playerAction> = $z40;
        $r120 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r121 = $r120.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r122 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z41 = interfaceinvoke $r122.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("exportTime", 0);
        $r121.<org.petero.droidfish.PGNOptions$Export: boolean clockInfo> = $z41;
        $r123 = staticinvoke <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme instance()>();
        $r124 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        virtualinvoke $r123.<org.petero.droidfish.ColorTheme: void readColors(android.content.SharedPreferences)>($r124);
        $r125 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r125.<org.petero.droidfish.ChessBoardPlay: void setColors()>();
        $r126 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.View findViewById(int)>(16908290);
        staticinvoke <org.petero.droidfish.Util: void overrideFonts(android.view.View)>($r126);
        $r127 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.DroidFish$PgnScreenText gameTextListener>;
        virtualinvoke $r127.<org.petero.droidfish.DroidFish$PgnScreenText: void clear()>();
        $r128 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r129 = $r128.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $i19 = $r129.<org.petero.droidfish.PGNOptions$Viewer: int pieceType>;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setPieceNames(int)>($i19);
        $r130 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r131 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r132 = $r131.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $i20 = $r132.<org.petero.droidfish.PGNOptions$Viewer: int pieceType>;
        if i17 == $i20 goto label7;

        $z42 = 1;
        goto label8;

     label7:
        $z42 = 0;

     label8:
        virtualinvoke $r130.<org.petero.droidfish.gamelogic.DroidChessController: void prefsChanged(boolean)>($z42);
        $r134 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        $r135 = $r134.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $i21 = $r135.<org.petero.droidfish.PGNOptions$Viewer: int pieceType>;
        if $i21 != 2 goto label9;

        $z43 = 1;
        goto label10;

     label9:
        $z43 = 0;

     label10:
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setFigurineNotation(boolean,int)>($z43, i5);
        $r136 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z44 = interfaceinvoke $r136.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("materialDiff", 0);
        r0.<org.petero.droidfish.DroidFish: boolean showMaterialDiff> = $z44;
        $r137 = r0.<org.petero.droidfish.DroidFish: android.view.View secondTitleLine>;
        $z45 = r0.<org.petero.droidfish.DroidFish: boolean showMaterialDiff>;
        if $z45 == 0 goto label11;

        $b22 = 0;
        goto label12;

     label11:
        $b22 = 8;

     label12:
        virtualinvoke $r137.<android.view.View: void setVisibility(int)>($b22);
        return;
    }

    private final void setFigurineNotation(boolean, int)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0;
        int i0;
        float f0, $f1;
        android.widget.TextView $r1, $r3, $r4, $r6, $r7, $r9;
        android.graphics.Typeface $r2, $r5, $r8, $r10;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 := @parameter0: boolean;
        i0 := @parameter1: int;
        if z0 == 0 goto label0;

        $f1 = (float) i0;
        f0 = $f1 * 1.1F;
        $r1 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        $r2 = r0.<org.petero.droidfish.DroidFish: android.graphics.Typeface figNotation>;
        virtualinvoke $r1.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r2);
        $r3 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        virtualinvoke $r3.<android.widget.TextView: void setTextSize(float)>(f0);
        $r4 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        $r5 = r0.<org.petero.droidfish.DroidFish: android.graphics.Typeface figNotation>;
        virtualinvoke $r4.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r5);
        $r6 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        virtualinvoke $r6.<android.widget.TextView: void setTextSize(float)>(f0);
        goto label1;

     label0:
        $r7 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        $r8 = r0.<org.petero.droidfish.DroidFish: android.graphics.Typeface defaultMoveListTypeFace>;
        virtualinvoke $r7.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r8);
        $r9 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        $r10 = r0.<org.petero.droidfish.DroidFish: android.graphics.Typeface defaultThinkingListTypeFace>;
        virtualinvoke $r9.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r10);

     label1:
        return;
    }

    private final void setTitleScrolling()
    {
        org.petero.droidfish.DroidFish r0;
        android.text.TextUtils$TruncateAt r1, $r2;
        boolean $z0;
        android.widget.TextView $r3, $r4, $r5, $r6;

        r0 := @this: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean autoScrollTitle>;
        if $z0 == 0 goto label0;

        $r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;
        goto label1;

     label0:
        $r2 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

     label1:
        r1 = $r2;
        $r3 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteTitleText>;
        virtualinvoke $r3.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>(r1);
        $r4 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackTitleText>;
        virtualinvoke $r4.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>(r1);
        $r5 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteFigText>;
        virtualinvoke $r5.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>(r1);
        $r6 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackFigText>;
        virtualinvoke $r6.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>(r1);
        return;
    }

    private final void updateButtons()
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, $z1, $z2, $z3;
        android.content.res.Resources r1, $r9, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.content.res.Configuration r2;
        android.content.SharedPreferences $r3;
        android.util.DisplayMetrics $r4, $r5;
        float $f0, $f1;
        org.petero.droidfish.ButtonActions $r6, $r7, $r8, $r13, $r15, $r17;
        com.larvalabs.svgandroid.SVG r11;
        android.widget.ImageButton $r12, $r14, $r16, $r18, $r19, $r20;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r3 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        z0 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("largeButtons", 0);
        r1 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.res.Resources getResources()>();
        $r4 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 36.0F, $r4);
        i0 = staticinvoke <java.lang.Math: int round(float)>($f0);
        $r5 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 32.0F, $r5);
        i1 = staticinvoke <java.lang.Math: int round(float)>($f1);
        if z0 == 0 goto label3;

        $r6 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom1ButtonActions>;
        $z1 = virtualinvoke $r6.<org.petero.droidfish.ButtonActions: boolean isEnabled()>();
        if $z1 == 0 goto label2;

        $r7 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom2ButtonActions>;
        $z2 = virtualinvoke $r7.<org.petero.droidfish.ButtonActions: boolean isEnabled()>();
        if $z2 == 0 goto label2;

        $r8 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom3ButtonActions>;
        $z3 = virtualinvoke $r8.<org.petero.droidfish.ButtonActions: boolean isEnabled()>();
        if $z3 == 0 goto label2;

        $r9 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.res.Resources getResources()>();
        r2 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();
        $i2 = r2.<android.content.res.Configuration: int orientation>;
        if $i2 != 2 goto label0;

        $i3 = i0 * 6;
        i0 = $i3 / 5;
        $i4 = i1 * 6;
        i1 = $i4 / 5;
        goto label1;

     label0:
        $i5 = i0 * 5;
        i0 = $i5 / 4;
        $i6 = i1 * 5;
        i1 = $i6 / 4;

     label1:
        goto label3;

     label2:
        $i7 = i0 * 3;
        i0 = $i7 / 2;
        $i8 = i1 * 3;
        i1 = $i8 / 2;

     label3:
        $r10 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.res.Resources getResources()>();
        r11 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG getSVGFromResource(android.content.res.Resources,int)>($r10, 2131034125);
        $r12 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton custom1Button>;
        $r13 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom1ButtonActions>;
        $i9 = virtualinvoke $r13.<org.petero.droidfish.ButtonActions: int getIcon()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setButtonData(android.widget.ImageButton,int,int,int,com.larvalabs.svgandroid.SVG)>($r12, i0, i1, $i9, r11);
        $r14 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton custom2Button>;
        $r15 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom2ButtonActions>;
        $i10 = virtualinvoke $r15.<org.petero.droidfish.ButtonActions: int getIcon()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setButtonData(android.widget.ImageButton,int,int,int,com.larvalabs.svgandroid.SVG)>($r14, i0, i1, $i10, r11);
        $r16 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton custom3Button>;
        $r17 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom3ButtonActions>;
        $i11 = virtualinvoke $r17.<org.petero.droidfish.ButtonActions: int getIcon()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setButtonData(android.widget.ImageButton,int,int,int,com.larvalabs.svgandroid.SVG)>($r16, i0, i1, $i11, r11);
        $r18 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton modeButton>;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setButtonData(android.widget.ImageButton,int,int,int,com.larvalabs.svgandroid.SVG)>($r18, i0, i1, 2131034121, r11);
        $r19 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton undoButton>;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setButtonData(android.widget.ImageButton,int,int,int,com.larvalabs.svgandroid.SVG)>($r19, i0, i1, 2131034119, r11);
        $r20 = r0.<org.petero.droidfish.DroidFish: android.widget.ImageButton redoButton>;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setButtonData(android.widget.ImageButton,int,int,int,com.larvalabs.svgandroid.SVG)>($r20, i0, i1, 2131034123, r11);
        return;
    }

    private final void setButtonData(android.widget.ImageButton, int, int, int, com.larvalabs.svgandroid.SVG)
    {
        org.petero.droidfish.DroidFish r0;
        android.widget.ImageButton r1;
        int i0, i1, i2;
        com.larvalabs.svgandroid.SVG r2, r3;
        android.graphics.drawable.StateListDrawable r4, $r8;
        android.view.ViewGroup$LayoutParams r5;
        android.content.res.Resources $r6;
        org.petero.droidfish.SVGPictureDrawable $r7, $r10;
        int[] $r9;
        android.widget.ImageView$ScaleType $r11;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: android.widget.ImageButton;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        r2 := @parameter4: com.larvalabs.svgandroid.SVG;
        $r6 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.res.Resources getResources()>();
        r3 = staticinvoke <com.larvalabs.svgandroid.SVGParser: com.larvalabs.svgandroid.SVG getSVGFromResource(android.content.res.Resources,int)>($r6, i2);
        $r7 = new org.petero.droidfish.SVGPictureDrawable;
        specialinvoke $r7.<org.petero.droidfish.SVGPictureDrawable: void <init>(com.larvalabs.svgandroid.SVG)>(r3);
        virtualinvoke r1.<android.widget.ImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r7);
        $r8 = new android.graphics.drawable.StateListDrawable;
        specialinvoke $r8.<android.graphics.drawable.StateListDrawable: void <init>()>();
        r4 = $r8;
        $r9 = newarray (int)[1];
        $r9[0] = 16842919;
        $r10 = new org.petero.droidfish.SVGPictureDrawable;
        specialinvoke $r10.<org.petero.droidfish.SVGPictureDrawable: void <init>(com.larvalabs.svgandroid.SVG)>(r2);
        virtualinvoke r4.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r9, $r10);
        virtualinvoke r1.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>(r4);
        r5 = virtualinvoke r1.<android.widget.ImageButton: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        r5.<android.view.ViewGroup$LayoutParams: int height> = i1;
        r5.<android.view.ViewGroup$LayoutParams: int width> = i0;
        virtualinvoke r1.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);
        virtualinvoke r1.<android.widget.ImageButton: void setPadding(int,int,int,int)>(0, 0, 0, 0);
        $r11 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType FIT_XY>;
        virtualinvoke r1.<android.widget.ImageButton: void setScaleType(android.widget.ImageView$ScaleType)>($r11);
        return;
    }

    private final synchronized void setWakeLock(boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, $z1;
        android.os.PowerManager$WakeLock r1;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 := @parameter0: boolean;
        r1 = r0.<org.petero.droidfish.DroidFish: android.os.PowerManager$WakeLock wakeLock>;
        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();
        if $z1 == 0 goto label0;

        virtualinvoke r1.<android.os.PowerManager$WakeLock: void release()>();

     label0:
        if z0 == 0 goto label1;

        virtualinvoke r1.<android.os.PowerManager$WakeLock: void acquire()>();

     label1:
        return;
    }

    private final void setEngineStrength(java.lang.String, int)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        int i0;
        org.petero.droidfish.gamelogic.DroidChessController $r2;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: void setEngineStrength(java.lang.String,int)>(r1, i0);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEngineTitle(java.lang.String,int)>(r1, i0);
        return;
    }

    private final void setEngineTitle(java.lang.String, int)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r2, r5, $r11;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, z4;
        android.widget.TextView $r3, $r8, $r12;
        org.petero.droidfish.gamelogic.DroidChessController $r6, $r7;
        java.lang.Object[] $r9;
        java.lang.Integer $r10;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");
        if $z0 == 0 goto label0;

        i1 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(47);
        $i2 = i1 + 1;
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i2);
        $r3 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView engineTitleText>;
        virtualinvoke $r3.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);
        goto label6;

     label0:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("cuckoochess");
        if $z1 == 0 goto label1;

        $i3 = 2131099820;
        goto label2;

     label1:
        $i3 = 2131099819;

     label2:
        r5 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>($i3);
        $r6 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        if $r6 == null goto label3;

        $r7 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $z2 = virtualinvoke $r7.<org.petero.droidfish.gamelogic.DroidChessController: boolean analysisMode()>();
        if $z2 == 0 goto label3;

        $z3 = 1;
        goto label4;

     label3:
        $z3 = 0;

     label4:
        z4 = $z3;
        if i0 >= 1000 goto label5;

        if z4 != 0 goto label5;

        $r8 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView engineTitleText>;
        $r9 = newarray (java.lang.Object)[2];
        $r9[0] = r5;
        $i4 = i0 / 10;
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        $r9[1] = $r10;
        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: %d%%", $r9);
        virtualinvoke $r8.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);
        goto label6;

     label5:
        $r12 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView engineTitleText>;
        virtualinvoke $r12.<android.widget.TextView: void setText(java.lang.CharSequence)>(r5);

     label6:
        return;
    }

    private final void setSummaryTitle()
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.gamelogic.DroidChessController $r1;
        int[] r2;
        java.lang.StringBuilder r3, $r4;
        int i0, i1, i2, $i4, $i5;
        long $l3;
        java.lang.String $r7, $r12;
        android.widget.TextView $r11;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        r2 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.DroidChessController: int[] getTimeLimit()>();
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r3 = $r4;
        i0 = r2[0];
        i1 = r2[1];
        i2 = r2[2];
        if i1 <= 0 goto label0;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label0:
        $l3 = (long) i0;
        $r7 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String timeToString(long)>($l3);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        if i2 > 0 goto label1;

        if i1 > 0 goto label2;

     label1:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");
        $i4 = r2[2];
        $i5 = $i4 / 1000;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

     label2:
        $r11 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView summaryTitleText>;
        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<android.widget.TextView: void setText(java.lang.CharSequence)>($r12);
        return;
    }

    public void updateEngineTitle()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        int i0;
        android.content.SharedPreferences $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r2 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r1 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("engine", "stockfish");
        $r3 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("strength", 1000);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEngineTitle(java.lang.String,int)>(r1, i0);
        return;
    }

    public void updateMaterialDifferenceTitle(org.petero.droidfish.Util$MaterialDiff)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.Util$MaterialDiff r1;
        android.widget.TextView $r2, $r4;
        java.lang.CharSequence $r3, $r5;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: org.petero.droidfish.Util$MaterialDiff;
        $r2 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteFigText>;
        $r3 = r1.<org.petero.droidfish.Util$MaterialDiff: java.lang.CharSequence white>;
        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);
        $r4 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackFigText>;
        $r5 = r1.<org.petero.droidfish.Util$MaterialDiff: java.lang.CharSequence black>;
        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r5);
        return;
    }

    private final void setBookOptions()
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.book.BookOptions $r1, r2, $r5;
        java.io.File r3;
        java.lang.String r4, $r6, $r8, $r13, $r15;
        int $i0;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r14;
        org.petero.droidfish.gamelogic.DroidChessController $r16;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = new org.petero.droidfish.book.BookOptions;
        $r5 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions bookOptions>;
        specialinvoke $r1.<org.petero.droidfish.book.BookOptions: void <init>(org.petero.droidfish.book.BookOptions)>($r5);
        r2 = $r1;
        $r6 = r2.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        r4 = <java.io.File: java.lang.String separator>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DroidFish");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r13 = r2.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        r2.<org.petero.droidfish.book.BookOptions: java.lang.String filename> = $r15;

     label0:
        $r16 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r16.<org.petero.droidfish.gamelogic.DroidChessController: void setBookOptions(org.petero.droidfish.book.BookOptions)>(r2);
        return;
    }

    private final void setEngineOptions(boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, $z1;
        org.petero.droidfish.EngineOptions $r1, $r3, $r5;
        org.petero.droidfish.gamelogic.DroidChessController $r2;
        org.petero.droidfish.gtb.Probe $r4;
        java.lang.String $r6;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 := @parameter0: boolean;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void computeNetEngineID()>();
        $r2 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r1 = new org.petero.droidfish.EngineOptions;
        $r3 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        specialinvoke $r1.<org.petero.droidfish.EngineOptions: void <init>(org.petero.droidfish.EngineOptions)>($r3);
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: void setEngineOptions(org.petero.droidfish.EngineOptions,boolean)>($r1, z0);
        $r4 = staticinvoke <org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.Probe getInstance()>();
        $r5 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        $r6 = $r5.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        $z1 = r0.<org.petero.droidfish.DroidFish: boolean egtbForceReload>;
        virtualinvoke $r4.<org.petero.droidfish.gtb.Probe: void setPath(java.lang.String,boolean)>($r6, $z1);
        r0.<org.petero.droidfish.DroidFish: boolean egtbForceReload> = 0;
        return;
    }

    private final void computeNetEngineID()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r2, $r6, $r9;
        java.lang.String[] r3;
        android.content.SharedPreferences $r4;
        int $i0;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.io.IOException $r11, r12;
        org.petero.droidfish.EngineOptions $r13;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 = "";

     label0:
        $r4 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r2 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("engine", "stockfish");
        r3 = staticinvoke <org.petero.droidfish.Util: java.lang.String[] readFile(java.lang.String)>(r2);
        $i0 = lengthof r3;
        if $i0 < 3 goto label1;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = r3[1];
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
        $r9 = r3[2];
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        goto label3;

     label2:
        $r11 := @caughtexception;
        r12 = $r11;

     label3:
        $r13 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        $r13.<org.petero.droidfish.EngineOptions: java.lang.String networkID> = r1;
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    private final void setEgtbHints(int)
    {
        org.petero.droidfish.DroidFish r0;
        int i0, $i1, $i2;
        org.petero.droidfish.gtb.Probe r1;
        java.util.ArrayList r2, r3, $r11;
        java.util.Iterator r4;
        org.petero.droidfish.gamelogic.Pair r5;
        org.petero.droidfish.EngineOptions $r6;
        boolean $z0, $z1;
        org.petero.droidfish.ChessBoardPlay $r7, $r8, $r10, $r18;
        org.petero.droidfish.gamelogic.Position $r9;
        java.lang.Object $r12, $r14, $r16;
        org.petero.droidfish.ChessBoard$SquareDecoration $r13;
        java.lang.Integer $r15, $r17;

        r0 := @this: org.petero.droidfish.DroidFish;
        i0 := @parameter0: int;
        $r6 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.EngineOptions engineOptions>;
        $z0 = $r6.<org.petero.droidfish.EngineOptions: boolean hints>;
        if $z0 == 0 goto label0;

        if i0 >= 0 goto label1;

     label0:
        $r7 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r7.<org.petero.droidfish.ChessBoardPlay: void setSquareDecorations(java.util.ArrayList)>(null);
        return;

     label1:
        r1 = staticinvoke <org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.Probe getInstance()>();
        $r8 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r9 = $r8.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Position pos>;
        r2 = virtualinvoke r1.<org.petero.droidfish.gtb.Probe: java.util.ArrayList movePieceProbe(org.petero.droidfish.gamelogic.Position,int)>($r9, i0);
        if r2 != null goto label2;

        $r10 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r10.<org.petero.droidfish.ChessBoardPlay: void setSquareDecorations(java.util.ArrayList)>(null);
        return;

     label2:
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r3 = $r11;
        r4 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label4;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.petero.droidfish.gamelogic.Pair) $r12;
        $r13 = new org.petero.droidfish.ChessBoard$SquareDecoration;
        $r14 = r5.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        $r15 = (java.lang.Integer) $r14;
        $i1 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();
        $r16 = r5.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        $r17 = (java.lang.Integer) $r16;
        $i2 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();
        specialinvoke $r13.<org.petero.droidfish.ChessBoard$SquareDecoration: void <init>(int,int)>($i1, $i2);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);
        goto label3;

     label4:
        $r18 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r18.<org.petero.droidfish.ChessBoardPlay: void setSquareDecorations(java.util.ArrayList)>(r3);
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        org.petero.droidfish.DroidFish r0;
        android.view.Menu r1;
        android.view.MenuInflater $r2;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: android.view.Menu;
        $r2 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.view.MenuInflater getMenuInflater()>();
        virtualinvoke $r2.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131230721, r1);
        return 1;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        org.petero.droidfish.DroidFish r0;
        android.view.Menu r1;
        android.view.MenuItem r2;
        boolean $z0;
        int $i0;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: android.view.Menu;
        r2 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131296308);
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean boardGestures>;
        if $z0 == 0 goto label0;

        $i0 = 2131099852;
        goto label1;

     label0:
        $i0 = 2131099679;

     label1:
        interfaceinvoke r2.<android.view.MenuItem: android.view.MenuItem setTitle(int)>($i0);
        return 1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        org.petero.droidfish.DroidFish r0;
        android.view.MenuItem r1;
        android.content.Intent r2, $r3, $r7, r8;
        int $i0;
        org.petero.droidfish.gamelogic.DroidChessController $r4, $r9, $r10, $r11, $r12, $r15, $r16;
        java.lang.String $r5;
        boolean $z0, $z1, $z2;
        android.content.Context $r13;
        android.widget.Toast $r14;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: android.view.MenuItem;
        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();
        tableswitch($i0)
        {
            case 2131296307: goto label0;
            case 2131296308: goto label3;
            case 2131296309: goto label9;
            case 2131296310: goto label1;
            case 2131296311: goto label2;
            case 2131296312: goto label4;
            case 2131296313: goto label5;
            case 2131296314: goto label6;
            case 2131296315: goto label11;
            case 2131296316: goto label12;
            case 2131296317: goto label13;
            case 2131296318: goto label14;
            default: goto label15;
        };

     label0:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void showDialog(int)>(16);
        return 1;

     label1:
        $r3 = new android.content.Intent;
        specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "org/petero/droidfish/activities/EditBoard");
        r2 = $r3;
        $r4 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r5 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String getFEN()>();
        virtualinvoke r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>($r5);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void startActivityForResult(android.content.Intent,int)>(r2, 0);
        return 1;

     label2:
        $r7 = new android.content.Intent;
        specialinvoke $r7.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "org/petero/droidfish/activities/Preferences");
        r8 = $r7;
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void startActivityForResult(android.content.Intent,int)>(r8, 1);
        return 1;

     label3:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void removeDialog(int)>(15);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void showDialog(int)>(15);
        return 1;

     label4:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void showDialog(int)>(3);
        return 1;

     label5:
        $r9 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r9.<org.petero.droidfish.gamelogic.DroidChessController: void stopSearch()>();
        return 1;

     label6:
        $r10 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $z0 = virtualinvoke $r10.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z0 == 0 goto label8;

        $r11 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $z1 = virtualinvoke $r11.<org.petero.droidfish.gamelogic.DroidChessController: boolean claimDrawIfPossible()>();
        if $z1 == 0 goto label7;

        $r12 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r12.<org.petero.droidfish.gamelogic.DroidChessController: void stopPonder()>();
        goto label8;

     label7:
        $r13 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r14 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r13, 2131099661, 0);
        virtualinvoke $r14.<android.widget.Toast: void show()>();

     label8:
        return 1;

     label9:
        $r15 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $z2 = virtualinvoke $r15.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z2 == 0 goto label10;

        $r16 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r16.<org.petero.droidfish.gamelogic.DroidChessController: void resignGame()>();

     label10:
        return 1;

     label11:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void removeDialog(int)>(4);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void showDialog(int)>(4);
        return 1;

     label12:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void showDialog(int)>(20);
        return 1;

     label13:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void showDialog(int)>(8);
        return 1;

     label14:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void showDialog(int)>(2);
        return 1;

     label15:
        return 0;
    }

    protected void onActivityResult(int, int, android.content.Intent)
    {
        org.petero.droidfish.DroidFish r0;
        int i0, i1, i2, $i3;
        android.content.Intent r1, r3, $r21;
        java.lang.String r2, r7, $r14, r16, r25, r27;
        org.petero.droidfish.gamelogic.DroidChessController $r4, $r8, $r10;
        org.petero.droidfish.gamelogic.ChessParseError $r5, r6, $r11, r12;
        org.petero.droidfish.GameMode $r9;
        android.content.Context $r13;
        android.widget.Toast $r15;
        android.content.SharedPreferences $r17;
        android.content.SharedPreferences$Editor r18;
        android.net.Uri $r24, $r26;
        boolean $z1;
        java.lang.StringBuilder $r28, $r29, $r30;

        r0 := @this: org.petero.droidfish.DroidFish;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r1 := @parameter2: android.content.Intent;
        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label0;
            case 2: goto label5;
            case 3: goto label10;
            case 4: goto label14;
            case 5: goto label12;
            default: goto label16;
        };

     label0:
        specialinvoke r0.<org.petero.droidfish.DroidFish: void handlePrefsChange()>();
        goto label16;

     label1:
        if i1 != -1 goto label16;

     label2:
        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();
        $r4 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.DroidChessController: void setFENOrPGN(java.lang.String)>(r2);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBoardFlip(boolean)>(0);

     label3:
        goto label16;

     label4:
        $r5 := @caughtexception;
        r6 = $r5;
        goto label16;

     label5:
        if i1 != -1 goto label16;

     label6:
        r7 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();
        $r8 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r9 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode getGameMode()>();
        i2 = virtualinvoke $r9.<org.petero.droidfish.GameMode: int getModeNr()>();
        if i2 == 4 goto label7;

        if i2 == 6 goto label7;

        specialinvoke r0.<org.petero.droidfish.DroidFish: void newGameMode(int)>(6);

     label7:
        $r10 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r10.<org.petero.droidfish.gamelogic.DroidChessController: void setFENOrPGN(java.lang.String)>(r7);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBoardFlip(boolean)>(1);

     label8:
        goto label16;

     label9:
        $r11 := @caughtexception;
        r12 = $r11;
        $r13 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r14 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getParseErrString(org.petero.droidfish.gamelogic.ChessParseError)>(r12);
        $r15 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r13, $r14, 0);
        virtualinvoke $r15.<android.widget.Toast: void show()>();
        goto label16;

     label10:
        if i1 != -1 goto label16;

        r16 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();
        if r16 == null goto label11;

        $r17 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r18 = interfaceinvoke $r17.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        interfaceinvoke r18.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("currentScidFile", r16);
        interfaceinvoke r18.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("currFT", 2);
        interfaceinvoke r18.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r21 = new android.content.Intent;
        specialinvoke $r21.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "org/petero/droidfish/activities/LoadScid");
        r3 = $r21;
        virtualinvoke r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("org.petero.droidfish.loadScid");
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.petero.droidfish.pathname", r16);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void startActivityForResult(android.content.Intent,int)>(r3, 2);

     label11:
        goto label16;

     label12:
        if i1 != -1 goto label16;

        $r24 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();
        r25 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String getFilePathFromUri(android.net.Uri)>($r24);
        if r25 == null goto label13;

        specialinvoke r0.<org.petero.droidfish.DroidFish: void loadPGNFromFile(java.lang.String)>(r25);

     label13:
        goto label16;

     label14:
        if i1 != -1 goto label16;

        $r26 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();
        r27 = staticinvoke <org.petero.droidfish.DroidFish: java.lang.String getFilePathFromUri(android.net.Uri)>($r26);
        if r27 == null goto label16;

        $i3 = virtualinvoke r27.<java.lang.String: int length()>();
        if $i3 <= 0 goto label15;

        $z1 = virtualinvoke r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");
        if $z1 != 0 goto label15;

        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".pgn");
        r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        specialinvoke r0.<org.petero.droidfish.DroidFish: void savePGNToFile(java.lang.String,boolean)>(r27, 0);

     label16:
        return;

        catch org.petero.droidfish.gamelogic.ChessParseError from label2 to label3 with label4;
        catch org.petero.droidfish.gamelogic.ChessParseError from label6 to label8 with label9;
    }

    private final void newGameMode(int)
    {
        org.petero.droidfish.DroidFish r0;
        int i0;
        android.content.SharedPreferences$Editor r1;
        java.lang.String r2;
        android.content.SharedPreferences $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        org.petero.droidfish.GameMode $r7, $r9;
        org.petero.droidfish.gamelogic.DroidChessController $r8;

        r0 := @this: org.petero.droidfish.DroidFish;
        i0 := @parameter0: int;
        $r3 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r1 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $r4 = newarray (java.lang.Object)[1];
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r4[0] = $r5;
        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r4);
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gameMode", r2);
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r7 = new org.petero.droidfish.GameMode;
        specialinvoke $r7.<org.petero.droidfish.GameMode: void <init>(int)>(i0);
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode> = $r7;
        $r8 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r9 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.DroidChessController: void setGameMode(org.petero.droidfish.GameMode)>($r9);
        return;
    }

    private static java.lang.String getFilePathFromUri(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String $r1;

        r0 := @parameter0: android.net.Uri;
        if r0 != null goto label0;

        return null;

     label0:
        $r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getPath()>();
        return $r1;
    }

    private final java.lang.String getParseErrString(org.petero.droidfish.gamelogic.ChessParseError)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.gamelogic.ChessParseError r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: org.petero.droidfish.gamelogic.ChessParseError;
        $i0 = r1.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId>;
        if $i0 != -1 goto label0;

        $r2 = virtualinvoke r1.<org.petero.droidfish.gamelogic.ChessParseError: java.lang.String getMessage()>();
        return $r2;

     label0:
        $i1 = r1.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId>;
        $r3 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>($i1);
        return $r3;
    }

    private final int nameMatchScore(java.lang.String, java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r2, r3, r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        if r1 != null goto label0;

        return 0;

     label0:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z0 == 0 goto label1;

        return 6;

     label1:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z1 == 0 goto label2;

        return 5;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r2);
        if $z2 == 0 goto label3;

        return 4;

     label3:
        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>(r4);
        if $z3 == 0 goto label4;

        return 3;

     label4:
        $z4 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(r2);
        if $z4 == 0 goto label5;

        return 2;

     label5:
        $z5 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(r4);
        if $z5 == 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    private final void setBoardFlip()
    {
        org.petero.droidfish.DroidFish r0;

        r0 := @this: org.petero.droidfish.DroidFish;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBoardFlip(boolean)>(0);
        return;
    }

    private final void setBooleanPref(java.lang.String, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        boolean z0;
        android.content.SharedPreferences$Editor r2;
        android.content.SharedPreferences $r3;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r3 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r2 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>(r1, z0);
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: boolean commit()>();
        return;
    }

    private final boolean toggleBooleanPref(java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        boolean z0, $z1, $z2;
        android.content.SharedPreferences $r2;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $z1 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>(r1, 0);
        if $z1 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        z0 = $z2;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBooleanPref(java.lang.String,boolean)>(r1, z0);
        return z0;
    }

    private final void setBoardFlip(boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.util.TreeMap r1, $r3;
        int i0, i1;
        org.petero.droidfish.gamelogic.DroidChessController $r2, $r4;
        java.lang.Object $r5, $r8;
        java.lang.String $r6, $r7, $r9, $r10;
        org.petero.droidfish.GameMode $r11, $r14, $r15, $r18, $r19;
        org.petero.droidfish.ChessBoardPlay $r12, $r16, $r20, $r22;
        org.petero.droidfish.gamelogic.Position $r13, $r17, $r21;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 := @parameter0: boolean;
        z1 = r0.<org.petero.droidfish.DroidFish: boolean boardFlipped>;
        $z2 = r0.<org.petero.droidfish.DroidFish: boolean playerNameFlip>;
        if $z2 == 0 goto label4;

        if z0 == 0 goto label4;

        $r2 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        if $r2 == null goto label4;

        $r3 = new java.util.TreeMap;
        specialinvoke $r3.<java.util.TreeMap: void <init>()>();
        r1 = $r3;
        $r4 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.DroidChessController: void getHeaders(java.util.Map)>(r1);
        $r5 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("White");
        $r6 = (java.lang.String) $r5;
        $r7 = r0.<org.petero.droidfish.DroidFish: java.lang.String playerName>;
        i0 = specialinvoke r0.<org.petero.droidfish.DroidFish: int nameMatchScore(java.lang.String,java.lang.String)>($r6, $r7);
        $r8 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("Black");
        $r9 = (java.lang.String) $r8;
        $r10 = r0.<org.petero.droidfish.DroidFish: java.lang.String playerName>;
        i1 = specialinvoke r0.<org.petero.droidfish.DroidFish: int nameMatchScore(java.lang.String,java.lang.String)>($r9, $r10);
        if z1 == 0 goto label0;

        if i0 > i1 goto label1;

     label0:
        if z1 != 0 goto label4;

        if i0 >= i1 goto label4;

     label1:
        if z1 != 0 goto label2;

        $z3 = 1;
        goto label3;

     label2:
        $z3 = 0;

     label3:
        z1 = $z3;
        r0.<org.petero.droidfish.DroidFish: boolean boardFlipped> = z1;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBooleanPref(java.lang.String,boolean)>("boardFlipped", z1);

     label4:
        $z4 = r0.<org.petero.droidfish.DroidFish: boolean autoSwapSides>;
        if $z4 == 0 goto label15;

        $r11 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z5 = virtualinvoke $r11.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        if $z5 == 0 goto label7;

        $r12 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r13 = $r12.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Position pos>;
        $z6 = $r13.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z6 != 0 goto label5;

        $z7 = 1;
        goto label6;

     label5:
        $z7 = 0;

     label6:
        z1 = $z7;
        goto label15;

     label7:
        $r14 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z8 = virtualinvoke $r14.<org.petero.droidfish.GameMode: boolean playerWhite()>();
        if $z8 == 0 goto label10;

        $r15 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z9 = virtualinvoke $r15.<org.petero.droidfish.GameMode: boolean playerBlack()>();
        if $z9 == 0 goto label10;

        $r16 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r17 = $r16.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Position pos>;
        $z10 = $r17.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z10 != 0 goto label8;

        $z11 = 1;
        goto label9;

     label8:
        $z11 = 0;

     label9:
        z1 = $z11;
        goto label15;

     label10:
        $r18 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z12 = virtualinvoke $r18.<org.petero.droidfish.GameMode: boolean playerWhite()>();
        if $z12 == 0 goto label11;

        z1 = 0;
        goto label15;

     label11:
        $r19 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z13 = virtualinvoke $r19.<org.petero.droidfish.GameMode: boolean playerBlack()>();
        if $z13 == 0 goto label12;

        z1 = 1;
        goto label15;

     label12:
        $r20 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r21 = $r20.<org.petero.droidfish.ChessBoardPlay: org.petero.droidfish.gamelogic.Position pos>;
        $z14 = $r21.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z14 != 0 goto label13;

        $z15 = 1;
        goto label14;

     label13:
        $z15 = 0;

     label14:
        z1 = $z15;

     label15:
        $r22 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r22.<org.petero.droidfish.ChessBoardPlay: void setFlipped(boolean)>(z1);
        return;
    }

    public void setSelection(int)
    {
        org.petero.droidfish.DroidFish r0;
        int i0;
        org.petero.droidfish.ChessBoardPlay $r1, $r2;

        r0 := @this: org.petero.droidfish.DroidFish;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r1.<org.petero.droidfish.ChessBoardPlay: void setSelection(int)>(i0);
        $r2 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $r2.<org.petero.droidfish.ChessBoardPlay: boolean userSelectedSquare> = 0;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEgtbHints(int)>(i0);
        return;
    }

    public void setStatus(org.petero.droidfish.GUIInterface$GameStatus)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.GUIInterface$GameStatus r1;
        int[] $r2;
        java.lang.String r3, $r9, r11, $r15, $r20, $r26, $r32, $r35, $r39, $r42, $r46;
        org.petero.droidfish.gamelogic.Game$GameState $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r43, $r44, $r45, $r47, $r48;
        java.lang.RuntimeException $r49;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: org.petero.droidfish.GUIInterface$GameStatus;
        $r2 = <org.petero.droidfish.DroidFish$60: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r4 = r1.<org.petero.droidfish.GUIInterface$GameStatus: org.petero.droidfish.gamelogic.Game$GameState state>;
        $i0 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $i1 = $r2[$i0];
        tableswitch($i1)
        {
            case 1: goto label0;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label7;
            case 6: goto label8;
            case 7: goto label9;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            default: goto label14;
        };

     label0:
        $i2 = r1.<org.petero.droidfish.GUIInterface$GameStatus: int moveNr>;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        r3 = virtualinvoke $r5.<java.lang.Integer: java.lang.String toString()>();
        $z0 = r1.<org.petero.droidfish.GUIInterface$GameStatus: boolean white>;
        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");
        $r9 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099767);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label2;

     label1:
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("... ");
        $r15 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099768);
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        r11 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $z1 = r1.<org.petero.droidfish.GUIInterface$GameStatus: boolean ponder>;
        if $z1 == 0 goto label3;

        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");
        $r20 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099769);
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        r11 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $z2 = r1.<org.petero.droidfish.GUIInterface$GameStatus: boolean thinking>;
        if $z2 == 0 goto label4;

        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");
        $r26 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099770);
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        r11 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $z3 = r1.<org.petero.droidfish.GUIInterface$GameStatus: boolean analyzing>;
        if $z3 == 0 goto label15;

        $r29 = new java.lang.StringBuilder;
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");
        $r32 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099771);
        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        r11 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label15;

     label5:
        r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099772);
        goto label15;

     label6:
        r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099773);
        goto label15;

     label7:
        r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099774);
        goto label15;

     label8:
        r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099775);
        $r35 = r1.<org.petero.droidfish.GUIInterface$GameStatus: java.lang.String drawInfo>;
        $i3 = virtualinvoke $r35.<java.lang.String: int length()>();
        if $i3 <= 0 goto label15;

        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");
        $r39 = r1.<org.petero.droidfish.GUIInterface$GameStatus: java.lang.String drawInfo>;
        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r11 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label15;

     label9:
        r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099776);
        $r42 = r1.<org.petero.droidfish.GUIInterface$GameStatus: java.lang.String drawInfo>;
        $i4 = virtualinvoke $r42.<java.lang.String: int length()>();
        if $i4 <= 0 goto label15;

        $r43 = new java.lang.StringBuilder;
        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");
        $r46 = r1.<org.petero.droidfish.GUIInterface$GameStatus: java.lang.String drawInfo>;
        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);
        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r11 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label15;

     label10:
        r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099777);
        goto label15;

     label11:
        r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099778);
        goto label15;

     label12:
        r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099779);
        goto label15;

     label13:
        r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099780);
        goto label15;

     label14:
        $r49 = new java.lang.RuntimeException;
        specialinvoke $r49.<java.lang.RuntimeException: void <init>()>();
        throw $r49;

     label15:
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setStatusString(java.lang.String)>(r11);
        return;
    }

    private final void setStatusString(java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        android.widget.TextView $r2;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView status>;
        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);
        return;
    }

    public void moveListUpdated()
    {
        org.petero.droidfish.DroidFish r0;
        android.text.Layout r1;
        int i0, i1, i2, $i3;
        android.widget.TextView $r2, $r5, $r7;
        org.petero.droidfish.DroidFish$PgnScreenText $r3, $r6;
        android.text.SpannableStringBuilder $r4;
        double $d0, $d1, $d2, $d3;
        android.widget.ScrollView $r8;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r2 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        $r3 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.DroidFish$PgnScreenText gameTextListener>;
        $r4 = virtualinvoke $r3.<org.petero.droidfish.DroidFish$PgnScreenText: android.text.SpannableStringBuilder getSpannableData()>();
        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r4);
        $r5 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        r1 = virtualinvoke $r5.<android.widget.TextView: android.text.Layout getLayout()>();
        if r1 == null goto label0;

        $r6 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.DroidFish$PgnScreenText gameTextListener>;
        i0 = virtualinvoke $r6.<org.petero.droidfish.DroidFish$PgnScreenText: int getCurrPos()>();
        i1 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>(i0);
        $d0 = (double) i1;
        $d1 = $d0 - 1.5;
        $r7 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView moveList>;
        $i3 = virtualinvoke $r7.<android.widget.TextView: int getLineHeight()>();
        $d2 = (double) $i3;
        $d3 = $d1 * $d2;
        i2 = (int) $d3;
        $r8 = r0.<org.petero.droidfish.DroidFish: android.widget.ScrollView moveListScroll>;
        virtualinvoke $r8.<android.widget.ScrollView: void scrollTo(int,int)>(0, i2);

     label0:
        return;
    }

    public boolean whiteBasedScores()
    {
        org.petero.droidfish.DroidFish r0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean mWhiteBasedScores>;
        return $z0;
    }

    public boolean ponderMode()
    {
        org.petero.droidfish.DroidFish r0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean mPonderMode>;
        return $z0;
    }

    public int engineThreads()
    {
        org.petero.droidfish.DroidFish r0;
        int $i0;

        r0 := @this: org.petero.droidfish.DroidFish;
        $i0 = r0.<org.petero.droidfish.DroidFish: int mEngineThreads>;
        return $i0;
    }

    public android.content.Context getContext()
    {
        org.petero.droidfish.DroidFish r0;
        android.content.Context $r1;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        return $r1;
    }

    public java.lang.String playerName()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String $r1;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: java.lang.String playerName>;
        return $r1;
    }

    public boolean discardVariations()
    {
        org.petero.droidfish.DroidFish r0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean discardVariations>;
        return $z0;
    }

    public void setAnimMove(org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.gamelogic.Position r1;
        org.petero.droidfish.gamelogic.Move r2;
        boolean z0, $z1;
        org.petero.droidfish.ChessBoardPlay $r3;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r2 := @parameter1: org.petero.droidfish.gamelogic.Move;
        z0 := @parameter2: boolean;
        $z1 = r0.<org.petero.droidfish.DroidFish: boolean animateMoves>;
        if $z1 == 0 goto label0;

        if r2 == null goto label0;

        $r3 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r3.<org.petero.droidfish.ChessBoardPlay: void setAnimMove(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean)>(r1, r2, z0);

     label0:
        return;
    }

    public void setPosition(org.petero.droidfish.gamelogic.Position, java.lang.String, java.util.ArrayList)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.gamelogic.Position r1;
        java.lang.String r2;
        java.util.ArrayList r3;
        org.petero.droidfish.ChessBoardPlay $r4, $r5;
        int $i0;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.ArrayList;
        r0.<org.petero.droidfish.DroidFish: java.lang.String variantStr> = r2;
        r0.<org.petero.droidfish.DroidFish: java.util.ArrayList variantMoves> = r3;
        $r4 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r4.<org.petero.droidfish.ChessBoardPlay: void setPosition(org.petero.droidfish.gamelogic.Position)>(r1);
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBoardFlip()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateThinkingInfo()>();
        $r5 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        $i0 = virtualinvoke $r5.<org.petero.droidfish.ChessBoardPlay: int getSelectedSquare()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEgtbHints(int)>($i0);
        return;
    }

    public void setThinkingInfo(java.lang.String, java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r2, r3;
        java.util.ArrayList r4, r5;
        org.petero.droidfish.gamelogic.DroidChessController $r6;
        boolean $z0;
        long $l0;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        r4 := @parameter3: java.util.ArrayList;
        r5 := @parameter4: java.util.ArrayList;
        r0.<org.petero.droidfish.DroidFish: java.lang.String thinkingStr1> = r1;
        r0.<org.petero.droidfish.DroidFish: java.lang.String thinkingStr2> = r2;
        r0.<org.petero.droidfish.DroidFish: java.lang.String bookInfoStr> = r3;
        r0.<org.petero.droidfish.DroidFish: java.util.ArrayList pvMoves> = r4;
        r0.<org.petero.droidfish.DroidFish: java.util.ArrayList bookMoves> = r5;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateThinkingInfo()>();
        $r6 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $z0 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.DroidChessController: boolean computerBusy()>();
        if $z0 == 0 goto label0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r0.<org.petero.droidfish.DroidFish: long lastComputationMillis> = $l0;
        goto label1;

     label0:
        r0.<org.petero.droidfish.DroidFish: long lastComputationMillis> = 0L;

     label1:
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateNotification()>();
        return;
    }

    private final void updateThinkingInfo()
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12;
        java.lang.String r1, $r12, $r15, r16, $r22, $r24, $r26, $r28, r30, $r33, r34, $r40, $r42, $r44, $r46, r48;
        android.widget.TextView$BufferType $r2;
        java.util.ArrayList r3, r5, $r55, $r58, $r59;
        java.util.Iterator r4;
        org.petero.droidfish.GameMode $r6, $r53;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r13, $r17, $r18, $r19, $r20, $r21, $r23, $r25, $r27, $r29, $r35, $r36, $r37, $r38, $r39, $r41, $r43, $r45, $r47;
        android.widget.TextView $r14, $r31, $r49, $r51;
        android.text.Spanned $r32, $r50;
        byte $b4;
        java.util.List r52;
        java.lang.Object $r54, $r56, $r57;
        org.petero.droidfish.ChessBoardPlay $r60;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 = 1;
        r1 = "";
        $z1 = r0.<org.petero.droidfish.DroidFish: boolean mShowThinking>;
        if $z1 != 0 goto label0;

        $r6 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z2 = virtualinvoke $r6.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        if $z2 == 0 goto label3;

     label0:
        r1 = r0.<org.petero.droidfish.DroidFish: java.lang.String thinkingStr1>;
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 <= 0 goto label1;

        z0 = 0;

     label1:
        $z3 = r0.<org.petero.droidfish.DroidFish: boolean mShowStats>;
        if $z3 == 0 goto label3;

        if z0 != 0 goto label2;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = r0.<org.petero.droidfish.DroidFish: java.lang.String thinkingStr2>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i1 <= 0 goto label3;

        z0 = 0;

     label3:
        $r14 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        $r2 = <android.widget.TextView$BufferType: android.widget.TextView$BufferType SPANNABLE>;
        virtualinvoke $r14.<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>(r1, $r2);
        $z4 = r0.<org.petero.droidfish.DroidFish: boolean mShowBookHints>;
        if $z4 == 0 goto label5;

        $r15 = r0.<org.petero.droidfish.DroidFish: java.lang.String bookInfoStr>;
        $i2 = virtualinvoke $r15.<java.lang.String: int length()>();
        if $i2 <= 0 goto label5;

        r16 = "";
        if z0 != 0 goto label4;

        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br>");
        r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);
        $r22 = <org.petero.droidfish.Util: java.lang.String boldStart>;
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);
        $r24 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099781);
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = <org.petero.droidfish.Util: java.lang.String boldStop>;
        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = r0.<org.petero.droidfish.DroidFish: java.lang.String bookInfoStr>;
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);
        r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        $r31 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        $r32 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>(r30);
        virtualinvoke $r31.<android.widget.TextView: void append(java.lang.CharSequence)>($r32);
        z0 = 0;

     label5:
        $z5 = r0.<org.petero.droidfish.DroidFish: boolean showVariationLine>;
        if $z5 == 0 goto label7;

        $r33 = r0.<org.petero.droidfish.DroidFish: java.lang.String variantStr>;
        $i3 = virtualinvoke $r33.<java.lang.String: int indexOf(int)>(32);
        if $i3 < 0 goto label7;

        r34 = "";
        if z0 != 0 goto label6;

        $r35 = new java.lang.StringBuilder;
        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br>");
        r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);
        $r40 = <org.petero.droidfish.Util: java.lang.String boldStart>;
        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
        $r42 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099791);
        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
        $r44 = <org.petero.droidfish.Util: java.lang.String boldStop>;
        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
        $r46 = r0.<org.petero.droidfish.DroidFish: java.lang.String variantStr>;
        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);
        r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();
        $r49 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        $r50 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>(r48);
        virtualinvoke $r49.<android.widget.TextView: void append(java.lang.CharSequence)>($r50);
        z0 = 0;

     label7:
        $r51 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView thinking>;
        if z0 == 0 goto label8;

        $b4 = 8;
        goto label9;

     label8:
        $b4 = 0;

     label9:
        virtualinvoke $r51.<android.widget.TextView: void setVisibility(int)>($b4);
        r52 = null;
        $z6 = r0.<org.petero.droidfish.DroidFish: boolean mShowThinking>;
        if $z6 != 0 goto label10;

        $r53 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z7 = virtualinvoke $r53.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        if $z7 == 0 goto label14;

     label10:
        r3 = r0.<org.petero.droidfish.DroidFish: java.util.ArrayList pvMoves>;
        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        if $i5 != 1 goto label11;

        $r54 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(0);
        r52 = (java.util.List) $r54;
        goto label14;

     label11:
        $i6 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        if $i6 <= 1 goto label14;

        $r55 = new java.util.ArrayList;
        specialinvoke $r55.<java.util.ArrayList: void <init>()>();
        r52 = $r55;
        r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label12:
        $z8 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z8 == 0 goto label14;

        $r56 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (java.util.ArrayList) $r56;
        $z9 = virtualinvoke r5.<java.util.ArrayList: boolean isEmpty()>();
        if $z9 != 0 goto label13;

        $r57 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(0);
        interfaceinvoke r52.<java.util.List: boolean add(java.lang.Object)>($r57);

     label13:
        goto label12;

     label14:
        if r52 != null goto label15;

        $z11 = r0.<org.petero.droidfish.DroidFish: boolean mShowBookHints>;
        if $z11 == 0 goto label15;

        r52 = r0.<org.petero.droidfish.DroidFish: java.util.ArrayList bookMoves>;

     label15:
        if r52 == null goto label16;

        $z12 = interfaceinvoke r52.<java.util.List: boolean isEmpty()>();
        if $z12 == 0 goto label17;

     label16:
        $r58 = r0.<org.petero.droidfish.DroidFish: java.util.ArrayList variantMoves>;
        if $r58 == null goto label17;

        $r59 = r0.<org.petero.droidfish.DroidFish: java.util.ArrayList variantMoves>;
        $i7 = virtualinvoke $r59.<java.util.ArrayList: int size()>();
        if $i7 <= 1 goto label17;

        r52 = r0.<org.petero.droidfish.DroidFish: java.util.ArrayList variantMoves>;

     label17:
        if r52 == null goto label18;

        $i8 = interfaceinvoke r52.<java.util.List: int size()>();
        $i9 = r0.<org.petero.droidfish.DroidFish: int maxNumArrows>;
        if $i8 <= $i9 goto label18;

        $i10 = r0.<org.petero.droidfish.DroidFish: int maxNumArrows>;
        r52 = interfaceinvoke r52.<java.util.List: java.util.List subList(int,int)>(0, $i10);

     label18:
        $r60 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        virtualinvoke $r60.<org.petero.droidfish.ChessBoardPlay: void setMoveHints(java.util.List)>(r52);
        return;
    }

    private final void startNewGame(int)
    {
        org.petero.droidfish.DroidFish r0;
        int i0;
        byte b1, $b2;
        android.content.SharedPreferences$Editor r1;
        java.lang.String r2;
        android.content.SharedPreferences $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        org.petero.droidfish.GameMode $r7, $r9;
        org.petero.droidfish.gamelogic.DroidChessController $r8, $r10;

        r0 := @this: org.petero.droidfish.DroidFish;
        i0 := @parameter0: int;
        if i0 == 2 goto label2;

        if i0 != 0 goto label0;

        $b2 = 1;
        goto label1;

     label0:
        $b2 = 2;

     label1:
        b1 = $b2;
        $r3 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r1 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $r4 = newarray (java.lang.Object)[1];
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b1);
        $r4[0] = $r5;
        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r4);
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("gameMode", r2);
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r7 = new org.petero.droidfish.GameMode;
        specialinvoke $r7.<org.petero.droidfish.GameMode: void <init>(int)>(b1);
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode> = $r7;

     label2:
        $r8 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r9 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.DroidChessController: void newGame(org.petero.droidfish.GameMode)>($r9);
        $r10 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r10.<org.petero.droidfish.gamelogic.DroidChessController: void startGame()>();
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBoardFlip(boolean)>(1);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void updateEngineTitle()>();
        return;
    }

    protected android.app.Dialog onCreateDialog(int)
    {
        org.petero.droidfish.DroidFish r0;
        int i0;
        android.app.Dialog $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r21, $r23, $r24, $r25, $r26, $r27, $r28;
        boolean $z0;
        org.petero.droidfish.ButtonActions $r18, $r20, $r22;

        r0 := @this: org.petero.droidfish.DroidFish;
        i0 := @parameter0: int;
        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label6;
            case 3: goto label7;
            case 4: goto label8;
            case 5: goto label9;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label13;
            case 9: goto label14;
            case 10: goto label12;
            case 11: goto label15;
            case 12: goto label16;
            case 13: goto label17;
            case 14: goto label18;
            case 15: goto label3;
            case 16: goto label0;
            case 17: goto label19;
            case 18: goto label20;
            case 19: goto label21;
            case 20: goto label22;
            case 21: goto label23;
            case 22: goto label24;
            case 23: goto label25;
            case 24: goto label26;
            default: goto label27;
        };

     label0:
        $r1 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog newGameDialog()>();
        return $r1;

     label1:
        $r2 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog promoteDialog()>();
        return $r2;

     label2:
        $r3 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog boardMenuDialog()>();
        return $r3;

     label3:
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean boardGestures>;
        if $z0 == 0 goto label4;

        $r4 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog fileMenuDialog()>();
        goto label5;

     label4:
        $r4 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog boardMenuDialog()>();

     label5:
        return $r4;

     label6:
        $r5 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog aboutDialog()>();
        return $r5;

     label7:
        $r6 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog selectMoveDialog()>();
        return $r6;

     label8:
        $r7 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog selectBookDialog()>();
        return $r7;

     label9:
        $r8 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog selectEngineDialog()>();
        return $r8;

     label10:
        $r9 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog selectPgnFileDialog()>();
        return $r9;

     label11:
        $r10 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog selectPgnFileSaveDialog()>();
        return $r10;

     label12:
        $r11 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog selectPgnSaveNewFileDialog()>();
        return $r11;

     label13:
        $r12 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog setColorThemeDialog()>();
        return $r12;

     label14:
        $r13 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog gameModeDialog()>();
        return $r13;

     label15:
        $r14 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog moveListMenuDialog()>();
        return $r14;

     label16:
        $r15 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog thinkingMenuDialog()>();
        return $r15;

     label17:
        $r16 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog goBackMenuDialog()>();
        return $r16;

     label18:
        $r17 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog goForwardMenuDialog()>();
        return $r17;

     label19:
        $r18 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom1ButtonActions>;
        $r19 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog makeButtonDialog(org.petero.droidfish.ButtonActions)>($r18);
        return $r19;

     label20:
        $r20 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom2ButtonActions>;
        $r21 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog makeButtonDialog(org.petero.droidfish.ButtonActions)>($r20);
        return $r21;

     label21:
        $r22 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ButtonActions custom3ButtonActions>;
        $r23 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog makeButtonDialog(org.petero.droidfish.ButtonActions)>($r22);
        return $r23;

     label22:
        $r24 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog manageEnginesDialog()>();
        return $r24;

     label23:
        $r25 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog networkEngineDialog()>();
        return $r25;

     label24:
        $r26 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog newNetworkEngineDialog()>();
        return $r26;

     label25:
        $r27 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog networkEngineConfigDialog()>();
        return $r27;

     label26:
        $r28 = specialinvoke r0.<org.petero.droidfish.DroidFish: android.app.Dialog deleteNetworkEngineDialog()>();
        return $r28;

     label27:
        return null;
    }

    private final android.app.Dialog newGameDialog()
    {
        org.petero.droidfish.DroidFish r0;
        android.app.AlertDialog$Builder $r1, r2;
        org.petero.droidfish.DroidFish$14 $r5;
        org.petero.droidfish.DroidFish$15 $r7;
        org.petero.droidfish.DroidFish$16 $r9;
        android.app.AlertDialog $r11;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = new android.app.AlertDialog$Builder;
        specialinvoke $r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r1;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099851);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2131099833);
        $r5 = new org.petero.droidfish.DroidFish$14;
        specialinvoke $r5.<org.petero.droidfish.DroidFish$14: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131099752, $r5);
        $r7 = new org.petero.droidfish.DroidFish$15;
        specialinvoke $r7.<org.petero.droidfish.DroidFish$15: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131099694, $r7);
        $r9 = new org.petero.droidfish.DroidFish$16;
        specialinvoke $r9.<org.petero.droidfish.DroidFish$16: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099695, $r9);
        $r11 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return $r11;
    }

    private final android.app.Dialog promoteDialog()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.CharSequence[] r1, $r4;
        android.app.AlertDialog$Builder r2, $r9;
        android.app.AlertDialog r3;
        java.lang.String $r5, $r6, $r7, $r8;
        org.petero.droidfish.DroidFish$17 $r11;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r4 = newarray (java.lang.CharSequence)[4];
        $r5 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099662);
        $r4[0] = $r5;
        $r6 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099663);
        $r4[1] = $r6;
        $r7 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099664);
        $r4[2] = $r7;
        $r8 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099665);
        $r4[3] = $r8;
        r1 = $r4;
        $r9 = new android.app.AlertDialog$Builder;
        specialinvoke $r9.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r9;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099666);
        $r11 = new org.petero.droidfish.DroidFish$17;
        specialinvoke $r11.<org.petero.droidfish.DroidFish$17: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r1, $r11);
        r3 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r3;
    }

    private final android.app.Dialog boardMenuDialog()
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, z1, $z14;
        byte b0, b1, b2, b3, b4;
        java.util.ArrayList r1, r2, r3, $r6, $r7;
        android.app.AlertDialog$Builder r4, $r22;
        android.app.AlertDialog r5;
        java.lang.String $r8, $r10, $r12, $r14, $r16, $r18, $r20;
        java.lang.Integer $r9, $r11, $r13, $r15, $r17, $r19, $r21;
        int $i5;
        java.lang.CharSequence[] $r24, $r26;
        java.lang.Object[] $r25;
        org.petero.droidfish.DroidFish$18 $r27;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 = 0;
        z1 = 1;
        b0 = 2;
        b1 = 3;
        b2 = 4;
        b3 = 5;
        b4 = 6;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r1 = $r6;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r2 = $r7;
        $r8 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099667);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8);
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9);
        $r10 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099668);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);
        $r12 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099669);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13);
        $r14 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099670);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r15);
        $r16 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099672);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r16);
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r17);
        $r18 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099674);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r18);
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r19);
        $z14 = specialinvoke r0.<org.petero.droidfish.DroidFish: boolean hasScidProvider()>();
        if $z14 == 0 goto label0;

        $r20 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099673);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r20);
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r21);

     label0:
        r3 = r2;
        $r22 = new android.app.AlertDialog$Builder;
        specialinvoke $r22.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r4 = $r22;
        virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099679);
        $i5 = interfaceinvoke r1.<java.util.List: int size()>();
        $r24 = newarray (java.lang.CharSequence)[$i5];
        $r25 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r24);
        $r26 = (java.lang.CharSequence[]) $r25;
        $r27 = new org.petero.droidfish.DroidFish$18;
        specialinvoke $r27.<org.petero.droidfish.DroidFish$18: void <init>(org.petero.droidfish.DroidFish,java.util.List)>(r0, r3);
        virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r26, $r27);
        r5 = virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r5;
    }

    private final void shareGame()
    {
        org.petero.droidfish.DroidFish r0;
        android.content.Intent $r1, r2, $r9;
        org.petero.droidfish.gamelogic.DroidChessController $r5;
        java.lang.String $r6, $r8;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = new android.content.Intent;
        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEND");
        r2 = $r1;
        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(524288);
        virtualinvoke r2.<android.content.Intent: android.content.Intent setType(java.lang.String)>("text/plain");
        $r5 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r6 = virtualinvoke $r5.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String getPGN()>();
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TEXT", $r6);
        $r8 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099671);
        $r9 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>(r2, $r8);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void startActivity(android.content.Intent)>($r9);
        return;
    }

    private final android.app.Dialog fileMenuDialog()
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, z1, $z6;
        byte b0;
        java.util.ArrayList r1, r2, r3, $r6, $r7;
        android.app.AlertDialog$Builder r4, $r14;
        android.app.AlertDialog r5;
        java.lang.String $r8, $r10, $r12;
        java.lang.Integer $r9, $r11, $r13;
        int $i1;
        java.lang.CharSequence[] $r16, $r18;
        java.lang.Object[] $r17;
        org.petero.droidfish.DroidFish$19 $r19;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 = 0;
        z1 = 1;
        b0 = 2;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r1 = $r6;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r2 = $r7;
        $r8 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099672);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8);
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9);
        $r10 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099674);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);
        $z6 = specialinvoke r0.<org.petero.droidfish.DroidFish: boolean hasScidProvider()>();
        if $z6 == 0 goto label0;

        $r12 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099673);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13);

     label0:
        r3 = r2;
        $r14 = new android.app.AlertDialog$Builder;
        specialinvoke $r14.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r4 = $r14;
        virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099680);
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();
        $r16 = newarray (java.lang.CharSequence)[$i1];
        $r17 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r16);
        $r18 = (java.lang.CharSequence[]) $r17;
        $r19 = new org.petero.droidfish.DroidFish$19;
        specialinvoke $r19.<org.petero.droidfish.DroidFish$19: void <init>(org.petero.droidfish.DroidFish,java.util.List)>(r0, r3);
        virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r18, $r19);
        r5 = virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r5;
    }

    private final android.app.Dialog aboutDialog()
    {
        org.petero.droidfish.DroidFish r0;
        android.app.AlertDialog$Builder $r1, r2;
        java.lang.String r3, r5, r10, $r17, $r29;
        android.webkit.WebView r4, $r11;
        java.io.InputStream r6;
        java.io.InputStreamReader r7, $r14;
        java.io.BufferedReader r8, $r15;
        java.lang.StringBuilder r9, $r16, $r26, $r27, $r28, $r30;
        android.content.res.Resources $r13;
        java.io.UnsupportedEncodingException $r20, r21;
        java.io.IOException $r22, r23;
        android.content.pm.PackageManager $r24;
        android.content.pm.PackageInfo r25;
        android.content.pm.PackageManager$NameNotFoundException $r31, r32;
        android.app.AlertDialog r34;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = new android.app.AlertDialog$Builder;
        specialinvoke $r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r1;
        r3 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099648);
        $r11 = new android.webkit.WebView;
        specialinvoke $r11.<android.webkit.WebView: void <init>(android.content.Context)>(r0);
        r4 = $r11;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r4);
        r5 = "";

     label0:
        $r13 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.res.Resources getResources()>();
        r6 = virtualinvoke $r13.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(2131034112);
        $r14 = new java.io.InputStreamReader;
        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r6, "UTF-8");
        r7 = $r14;
        $r15 = new java.io.BufferedReader;
        specialinvoke $r15.<java.io.BufferedReader: void <init>(java.io.Reader)>(r7);
        r8 = $r15;
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        r9 = $r16;

     label1:
        $r17 = virtualinvoke r8.<java.io.BufferedReader: java.lang.String readLine()>();
        r10 = $r17;
        if $r17 == null goto label2;

        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        goto label1;

     label2:
        virtualinvoke r8.<java.io.BufferedReader: void close()>();
        r5 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        goto label6;

     label4:
        $r20 := @caughtexception;
        r21 = $r20;
        goto label6;

     label5:
        $r22 := @caughtexception;
        r23 = $r22;

     label6:
        virtualinvoke r4.<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, r5, "text/html", "utf-8", null);

     label7:
        $r24 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.pm.PackageManager getPackageManager()>();
        r25 = virtualinvoke $r24.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("org.petero.droidfish", 0);
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r29 = r25.<android.content.pm.PackageInfo: java.lang.String versionName>;
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        r3 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        goto label10;

     label9:
        $r31 := @caughtexception;
        r32 = $r31;

     label10:
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>(r3);
        r34 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r34;

        catch java.io.UnsupportedEncodingException from label0 to label3 with label4;
        catch java.io.IOException from label0 to label3 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label7 to label8 with label9;
    }

    private final android.app.Dialog selectMoveDialog()
    {
        org.petero.droidfish.DroidFish r0;
        android.view.View r1, $r9;
        android.app.AlertDialog$Builder r2, $r6;
        android.widget.EditText r3;
        org.petero.droidfish.DroidFish$20 r4, $r10;
        android.app.AlertDialog r5;
        org.petero.droidfish.DroidFish$21 $r11;
        org.petero.droidfish.DroidFish$22 $r14;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>(r0, 2130903052, null);
        $r6 = new android.app.AlertDialog$Builder;
        specialinvoke $r6.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r6;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r1);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099681);
        $r9 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131296304);
        r3 = (android.widget.EditText) $r9;
        virtualinvoke r3.<android.widget.EditText: void setText(java.lang.CharSequence)>("1");
        $r10 = new org.petero.droidfish.DroidFish$20;
        specialinvoke $r10.<org.petero.droidfish.DroidFish$20: void <init>(org.petero.droidfish.DroidFish,android.widget.EditText)>(r0, r3);
        r4 = $r10;
        $r11 = new org.petero.droidfish.DroidFish$21;
        specialinvoke $r11.<org.petero.droidfish.DroidFish$21: void <init>(org.petero.droidfish.DroidFish,java.lang.Runnable)>(r0, r4);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, $r11);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099751, null);
        r5 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        $r14 = new org.petero.droidfish.DroidFish$22;
        specialinvoke $r14.<org.petero.droidfish.DroidFish$22: void <init>(org.petero.droidfish.DroidFish,java.lang.Runnable,android.app.AlertDialog)>(r0, r4, r5);
        virtualinvoke r3.<android.widget.EditText: void setOnKeyListener(android.view.View$OnKeyListener)>($r14);
        return r5;
    }

    private final android.app.Dialog selectBookDialog()
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.DroidFish$23 $r1;
        java.lang.String[] r2;
        int i0, i1, i2, i3, $i4;
        java.lang.CharSequence[] r3, r7;
        android.app.AlertDialog r4;
        java.lang.String $r5, $r6, $r9;
        org.petero.droidfish.book.BookOptions $r8;
        java.lang.CharSequence $r10;
        boolean $z0;
        android.app.AlertDialog$Builder $r11, r12;
        org.petero.droidfish.DroidFish$24 $r14;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = new org.petero.droidfish.DroidFish$23;
        specialinvoke $r1.<org.petero.droidfish.DroidFish$23: void <init>(org.petero.droidfish.DroidFish)>(r0);
        r2 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String[] findFilesInDirectory(java.lang.String,org.petero.droidfish.DroidFish$FileNameFilter)>("DroidFish", $r1);
        i0 = lengthof r2;
        $i4 = i0 + 1;
        r3 = newarray (java.lang.CharSequence)[$i4];
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $r5 = r2[i1];
        r3[i1] = $r5;
        i1 = i1 + 1;
        goto label0;

     label1:
        $r6 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099705);
        r3[i0] = $r6;
        r7 = r3;
        i2 = i0;
        i3 = 0;

     label2:
        if i3 >= i0 goto label4;

        $r8 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions bookOptions>;
        $r9 = $r8.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        $r10 = r3[i3];
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z0 == 0 goto label3;

        i2 = i3;
        goto label4;

     label3:
        i3 = i3 + 1;
        goto label2;

     label4:
        $r11 = new android.app.AlertDialog$Builder;
        specialinvoke $r11.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r12 = $r11;
        virtualinvoke r12.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099706);
        $r14 = new org.petero.droidfish.DroidFish$24;
        specialinvoke $r14.<org.petero.droidfish.DroidFish$24: void <init>(org.petero.droidfish.DroidFish,int,java.lang.CharSequence[])>(r0, i0, r7);
        virtualinvoke r12.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>(r3, i2, $r14);
        r4 = virtualinvoke r12.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r4;
    }

    private static final boolean internalEngine(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;
        $r1 = "cuckoochess";
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);
        if $z0 != 0 goto label0;

        $r2 = "stockfish";
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);
        if $z1 == 0 goto label1;

     label0:
        $z2 = 1;
        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private final android.app.Dialog selectEngineDialog()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String $r1, r6, r7, $r9, $r10, $r11, $r16, $r21, $r23, $r24, r26, $r27;
        org.petero.droidfish.DroidFish$25 $r2;
        java.lang.String[] r3, r4, r5;
        int i0, i1, i2, i3, i4, i5, $i6, i8;
        boolean z0, $z1, $z2;
        android.app.AlertDialog r8;
        byte $b7;
        java.lang.StringBuilder $r12, $r14, $r15, $r17, $r18, $r19, $r20, $r22;
        java.io.File $r13;
        org.petero.droidfish.gamelogic.DroidChessController $r25;
        android.app.AlertDialog$Builder $r28, r29;
        org.petero.droidfish.DroidFish$26 $r31;
        org.petero.droidfish.DroidFish$27 $r33;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = <org.petero.droidfish.DroidFish: java.lang.String engineDir>;
        $r2 = new org.petero.droidfish.DroidFish$25;
        specialinvoke $r2.<org.petero.droidfish.DroidFish$25: void <init>(org.petero.droidfish.DroidFish)>(r0);
        r3 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String[] findFilesInDirectory(java.lang.String,org.petero.droidfish.DroidFish$FileNameFilter)>($r1, $r2);
        i0 = lengthof r3;
        $r9 = staticinvoke <org.petero.droidfish.engine.EngineUtil: java.lang.String internalStockFishName()>();
        if $r9 == null goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        $i6 = i0 + 1;
        if z0 == 0 goto label2;

        $b7 = 1;
        goto label3;

     label2:
        $b7 = 0;

     label3:
        i1 = $i6 + $b7;
        r4 = newarray (java.lang.String)[i1];
        r5 = newarray (java.lang.String)[i1];
        i2 = 0;
        if z0 == 0 goto label4;

        r5[i2] = "stockfish";
        $r10 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099819);
        r4[i2] = $r10;
        i2 = i2 + 1;

     label4:
        r5[i2] = "cuckoochess";
        $r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099820);
        r4[i2] = $r11;
        i8 = i2 + 1;
        r6 = <java.io.File: java.lang.String separator>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r16 = <org.petero.droidfish.DroidFish: java.lang.String engineDir>;
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        i3 = 0;

     label5:
        if i3 >= i0 goto label6;

        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r21 = r3[i3];
        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        r5[i8] = $r23;
        $r24 = r3[i3];
        r4[i8] = $r24;
        i8 = i8 + 1;
        i3 = i3 + 1;
        goto label5;

     label6:
        $r25 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        r26 = virtualinvoke $r25.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String getEngine()>();
        i4 = 0;
        i5 = 0;

     label7:
        if i5 >= i1 goto label9;

        $r27 = r5[i5];
        $z2 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r26);
        if $z2 == 0 goto label8;

        i4 = i5;
        goto label9;

     label8:
        i5 = i5 + 1;
        goto label7;

     label9:
        $r28 = new android.app.AlertDialog$Builder;
        specialinvoke $r28.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r29 = $r28;
        virtualinvoke r29.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099707);
        $r31 = new org.petero.droidfish.DroidFish$26;
        specialinvoke $r31.<org.petero.droidfish.DroidFish$26: void <init>(org.petero.droidfish.DroidFish,int,java.lang.String[])>(r0, i1, r5);
        virtualinvoke r29.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>(r4, i4, $r31);
        $r33 = new org.petero.droidfish.DroidFish$27;
        specialinvoke $r33.<org.petero.droidfish.DroidFish$27: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r29.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r33);
        r8 = virtualinvoke r29.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r8;
    }

    private final android.app.Dialog selectPgnFileDialog()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String $r1, r11, r13, $r14;
        java.lang.String[] r2;
        int i0, i1, i2;
        android.app.AlertDialog$Builder r3, $r7, $r8, $r15, r16;
        android.app.AlertDialog r4, r6;
        org.petero.droidfish.DroidFish$28 $r5;
        android.content.SharedPreferences $r10;
        java.io.File $r12;
        boolean $z0;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = <org.petero.droidfish.DroidFish: java.lang.String pgnDir>;
        r2 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String[] findFilesInDirectory(java.lang.String,org.petero.droidfish.DroidFish$FileNameFilter)>($r1, null);
        i0 = lengthof r2;
        if i0 != 0 goto label0;

        $r7 = new android.app.AlertDialog$Builder;
        specialinvoke $r7.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r3 = $r7;
        $r8 = virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099648);
        virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2131099717);
        r4 = virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r4;

     label0:
        i2 = 0;
        $r10 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r11 = interfaceinvoke $r10.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("currentPGNFile", "");
        $r12 = new java.io.File;
        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(r11);
        r13 = virtualinvoke $r12.<java.io.File: java.lang.String getName()>();
        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r14 = r2[i1];
        $z0 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);
        if $z0 == 0 goto label2;

        i2 = i1;
        goto label3;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        $r15 = new android.app.AlertDialog$Builder;
        specialinvoke $r15.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r16 = $r15;
        virtualinvoke r16.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099708);
        $r5 = new org.petero.droidfish.DroidFish$28;
        specialinvoke $r5.<org.petero.droidfish.DroidFish$28: void <init>(org.petero.droidfish.DroidFish,java.lang.String[])>(r0, r2);
        virtualinvoke r16.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>(r2, i2, $r5);
        r6 = virtualinvoke r16.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r6;
    }

    private final android.app.Dialog selectPgnFileSaveDialog()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String $r1, r3, r8, $r9, $r11, $r12;
        java.lang.String[] r2;
        int i0, i1, i2, i3, $i4;
        android.app.AlertDialog$Builder r4, $r14;
        android.app.AlertDialog r5;
        android.content.SharedPreferences $r6;
        java.io.File $r7;
        boolean $z0;
        java.lang.CharSequence[] r10, r13;
        org.petero.droidfish.DroidFish$29 $r16;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = <org.petero.droidfish.DroidFish: java.lang.String pgnDir>;
        r2 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String[] findFilesInDirectory(java.lang.String,org.petero.droidfish.DroidFish$FileNameFilter)>($r1, null);
        i0 = lengthof r2;
        i1 = 0;
        $r6 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r3 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("currentPGNFile", "");
        $r7 = new java.io.File;
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r3);
        r8 = virtualinvoke $r7.<java.io.File: java.lang.String getName()>();
        i2 = 0;

     label0:
        if i2 >= i0 goto label2;

        $r9 = r2[i2];
        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        if $z0 == 0 goto label1;

        i1 = i2;
        goto label2;

     label1:
        i2 = i2 + 1;
        goto label0;

     label2:
        $i4 = i0 + 1;
        r10 = newarray (java.lang.CharSequence)[$i4];
        i3 = 0;

     label3:
        if i3 >= i0 goto label4;

        $r11 = r2[i3];
        r10[i3] = $r11;
        i3 = i3 + 1;
        goto label3;

     label4:
        $r12 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099714);
        r10[i0] = $r12;
        r13 = r10;
        $r14 = new android.app.AlertDialog$Builder;
        specialinvoke $r14.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r4 = $r14;
        virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099709);
        $r16 = new org.petero.droidfish.DroidFish$29;
        specialinvoke $r16.<org.petero.droidfish.DroidFish$29: void <init>(org.petero.droidfish.DroidFish,int,java.lang.String[])>(r0, i0, r2);
        virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>(r13, i1, $r16);
        r5 = virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r5;
    }

    private final android.app.Dialog selectPgnSaveNewFileDialog()
    {
        org.petero.droidfish.DroidFish r0;
        android.view.View r1, $r9;
        android.app.AlertDialog$Builder r2, $r6;
        android.widget.EditText r3;
        org.petero.droidfish.DroidFish$30 r4, $r10;
        android.app.AlertDialog r5;
        org.petero.droidfish.DroidFish$31 $r11;
        org.petero.droidfish.DroidFish$32 $r14;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>(r0, 2130903041, null);
        $r6 = new android.app.AlertDialog$Builder;
        specialinvoke $r6.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r6;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r1);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099709);
        $r9 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131296257);
        r3 = (android.widget.EditText) $r9;
        virtualinvoke r3.<android.widget.EditText: void setText(java.lang.CharSequence)>("");
        $r10 = new org.petero.droidfish.DroidFish$30;
        specialinvoke $r10.<org.petero.droidfish.DroidFish$30: void <init>(org.petero.droidfish.DroidFish,android.widget.EditText)>(r0, r3);
        r4 = $r10;
        $r11 = new org.petero.droidfish.DroidFish$31;
        specialinvoke $r11.<org.petero.droidfish.DroidFish$31: void <init>(org.petero.droidfish.DroidFish,java.lang.Runnable)>(r0, r4);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, $r11);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099751, null);
        r5 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        $r14 = new org.petero.droidfish.DroidFish$32;
        specialinvoke $r14.<org.petero.droidfish.DroidFish$32: void <init>(org.petero.droidfish.DroidFish,java.lang.Runnable,android.app.Dialog)>(r0, r4, r5);
        virtualinvoke r3.<android.widget.EditText: void setOnKeyListener(android.view.View$OnKeyListener)>($r14);
        return r5;
    }

    private final android.app.Dialog setColorThemeDialog()
    {
        org.petero.droidfish.DroidFish r0;
        android.app.AlertDialog$Builder $r1, r2;
        org.petero.droidfish.DroidFish$33 $r3;
        java.lang.String[] $r5;
        android.app.AlertDialog $r7;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = new android.app.AlertDialog$Builder;
        specialinvoke $r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r1;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099719);
        $r5 = <org.petero.droidfish.ColorTheme: java.lang.String[] themeNames>;
        $r3 = new org.petero.droidfish.DroidFish$33;
        specialinvoke $r3.<org.petero.droidfish.DroidFish$33: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>($r5, -1, $r3);
        $r7 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return $r7;
    }

    private final android.app.Dialog gameModeDialog()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.CharSequence[] r1, $r4;
        android.app.AlertDialog$Builder r2, $r11;
        android.app.AlertDialog r3;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10;
        org.petero.droidfish.DroidFish$34 $r13;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r4 = newarray (java.lang.CharSequence)[6];
        $r5 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099722);
        $r4[0] = $r5;
        $r6 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099721);
        $r4[1] = $r6;
        $r7 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099723);
        $r4[2] = $r7;
        $r8 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099724);
        $r4[3] = $r8;
        $r9 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099725);
        $r4[4] = $r9;
        $r10 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099726);
        $r4[5] = $r10;
        r1 = $r4;
        $r11 = new android.app.AlertDialog$Builder;
        specialinvoke $r11.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r11;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099720);
        $r13 = new org.petero.droidfish.DroidFish$34;
        specialinvoke $r13.<org.petero.droidfish.DroidFish$34: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r1, $r13);
        r3 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r3;
    }

    private final android.app.Dialog moveListMenuDialog()
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, z1, z2, $z5, $z14, $z15, $z16, $z17, $z18;
        byte b0, b1, b2, b3;
        java.util.ArrayList r1, r2, r3, $r6, $r7;
        android.app.AlertDialog$Builder r4, $r26;
        android.app.AlertDialog r5;
        java.lang.String $r8, $r11, $r13, $r16, $r18, $r24;
        java.lang.Integer $r9, $r12, $r14, $r17, $r19, $r25;
        org.petero.droidfish.gamelogic.DroidChessController $r10, $r15;
        int $i4, $i5;
        org.petero.droidfish.GameMode $r20, $r21, $r22, $r23;
        java.lang.CharSequence[] $r28, $r30;
        java.lang.Object[] $r29;
        org.petero.droidfish.DroidFish$35 $r31;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 = 0;
        z1 = 1;
        b0 = 2;
        b1 = 3;
        b2 = 4;
        b3 = 5;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r1 = $r6;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r2 = $r7;
        $r8 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099729);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r8);
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r9);
        $r10 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $z5 = virtualinvoke $r10.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z5 == 0 goto label0;

        $r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099730);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r11);
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

     label0:
        $r13 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099675);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r13);
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);
        $r15 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $i4 = virtualinvoke $r15.<org.petero.droidfish.gamelogic.DroidChessController: int numVariations()>();
        if $i4 <= 1 goto label1;

        $r16 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099676);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r16);
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r17);
        $r18 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099677);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r18);
        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r19);

     label1:
        $r20 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z14 = virtualinvoke $r20.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        if $z14 != 0 goto label2;

        $r21 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z15 = virtualinvoke $r21.<org.petero.droidfish.GameMode: boolean playerWhite()>();
        if $z15 == 0 goto label3;

        $r22 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z16 = virtualinvoke $r22.<org.petero.droidfish.GameMode: boolean playerBlack()>();
        if $z16 == 0 goto label3;

        $r23 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z17 = virtualinvoke $r23.<org.petero.droidfish.GameMode: boolean clocksActive()>();
        if $z17 != 0 goto label3;

     label2:
        $z18 = 1;
        goto label4;

     label3:
        $z18 = 0;

     label4:
        z2 = $z18;
        if z2 == 0 goto label5;

        $r24 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099678);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r24);
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r25);

     label5:
        r3 = r2;
        $r26 = new android.app.AlertDialog$Builder;
        specialinvoke $r26.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r4 = $r26;
        virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099728);
        $i5 = interfaceinvoke r1.<java.util.List: int size()>();
        $r28 = newarray (java.lang.CharSequence)[$i5];
        $r29 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r28);
        $r30 = (java.lang.CharSequence[]) $r29;
        $r31 = new org.petero.droidfish.DroidFish$35;
        specialinvoke $r31.<org.petero.droidfish.DroidFish$35: void <init>(org.petero.droidfish.DroidFish,java.util.List)>(r0, r3);
        virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r30, $r31);
        r5 = virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r5;
    }

    private final android.app.Dialog thinkingMenuDialog()
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, z1, $z4, $z9;
        byte b0, b1, b2;
        java.util.ArrayList r1, r2, $r5, $r6, r21;
        int i3, i4, $i5, $i6;
        android.app.AlertDialog$Builder r3, $r22;
        android.app.AlertDialog r4;
        java.lang.String $r7, $r12, $r14, $r16, $r17, $r19;
        java.lang.Integer $r8, $r13, $r15, $r18, $r20;
        org.petero.droidfish.gamelogic.DroidChessController $r9, $r11;
        org.petero.droidfish.GameMode $r10;
        java.lang.CharSequence[] $r24, $r26;
        java.lang.Object[] $r25;
        org.petero.droidfish.DroidFish$36 $r27;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 = 0;
        z1 = 1;
        b0 = 2;
        b1 = 3;
        b2 = 4;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        r1 = $r5;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r2 = $r6;
        $r7 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099792);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8);
        $r9 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        i3 = virtualinvoke $r9.<org.petero.droidfish.gamelogic.DroidChessController: int getNumPV()>();
        $r10 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z4 = virtualinvoke $r10.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        if $z4 == 0 goto label1;

        $r11 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        i4 = virtualinvoke $r11.<org.petero.droidfish.gamelogic.DroidChessController: int maxPV()>();
        if i3 <= 1 goto label0;

        $r12 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099793);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13);

     label0:
        if i3 >= i4 goto label1;

        $r14 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099794);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r15);

     label1:
        $r16 = r0.<org.petero.droidfish.DroidFish: java.lang.String thinkingStr1>;
        $i5 = virtualinvoke $r16.<java.lang.String: int length()>();
        if $i5 <= 0 goto label3;

        $z9 = r0.<org.petero.droidfish.DroidFish: boolean mShowStats>;
        if $z9 == 0 goto label2;

        $r17 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099795);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r17);
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r18);
        goto label3;

     label2:
        $r19 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099796);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r19);
        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r20);

     label3:
        r21 = r2;
        $r22 = new android.app.AlertDialog$Builder;
        specialinvoke $r22.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r3 = $r22;
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099727);
        $i6 = interfaceinvoke r1.<java.util.List: int size()>();
        $r24 = newarray (java.lang.CharSequence)[$i6];
        $r25 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r24);
        $r26 = (java.lang.CharSequence[]) $r25;
        $r27 = new org.petero.droidfish.DroidFish$36;
        specialinvoke $r27.<org.petero.droidfish.DroidFish$36: void <init>(org.petero.droidfish.DroidFish,java.util.List,int)>(r0, r21, i3);
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r26, $r27);
        r4 = virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r4;
    }

    private final android.app.Dialog goBackMenuDialog()
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, z1;
        byte b0, b1;
        java.util.ArrayList r1, r2, r4, $r7, $r8;
        int i2, $i3, $i4;
        java.lang.String r3, $r9, $r11, $r14, $r16;
        android.app.AlertDialog$Builder r5, $r18;
        android.app.AlertDialog r6;
        java.lang.Integer $r10, $r12, $r15, $r17;
        org.petero.droidfish.gamelogic.DroidChessController $r13;
        java.lang.CharSequence[] $r20, $r22;
        java.lang.Object[] $r21;
        org.petero.droidfish.DroidFish$37 $r23;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 = 0;
        z1 = 1;
        b0 = 2;
        b1 = 3;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r1 = $r7;
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r2 = $r8;
        $r9 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099733);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);
        $r11 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099734);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r11);
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);
        $r13 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $i3 = virtualinvoke $r13.<org.petero.droidfish.gamelogic.DroidChessController: int currVariation()>();
        if $i3 <= 0 goto label0;

        $r14 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099735);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r15);

     label0:
        i2 = specialinvoke r0.<org.petero.droidfish.DroidFish: int currFileType()>();
        r3 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String currPathName()>();
        if i2 == 0 goto label1;

        $r16 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099736);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r16);
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r17);

     label1:
        r4 = r2;
        $r18 = new android.app.AlertDialog$Builder;
        specialinvoke $r18.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r5 = $r18;
        virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099731);
        $i4 = interfaceinvoke r1.<java.util.List: int size()>();
        $r20 = newarray (java.lang.CharSequence)[$i4];
        $r21 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r20);
        $r22 = (java.lang.CharSequence[]) $r21;
        $r23 = new org.petero.droidfish.DroidFish$37;
        specialinvoke $r23.<org.petero.droidfish.DroidFish$37: void <init>(org.petero.droidfish.DroidFish,java.util.List,int,java.lang.String)>(r0, r4, i2, r3);
        virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r22, $r23);
        r6 = virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r6;
    }

    private final android.app.Dialog goForwardMenuDialog()
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, z1;
        byte b0;
        java.util.ArrayList r1, r2, r4, $r7, $r8;
        int i1, $i2, $i3, $i4, $i5;
        java.lang.String r3, $r9, $r13, $r15;
        android.app.AlertDialog$Builder r5, $r17;
        android.app.AlertDialog r6;
        java.lang.Integer $r10, $r14, $r16;
        org.petero.droidfish.gamelogic.DroidChessController $r11, $r12;
        java.lang.CharSequence[] $r19, $r21;
        java.lang.Object[] $r20;
        org.petero.droidfish.DroidFish$38 $r22;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 = 0;
        z1 = 1;
        b0 = 2;
        $r7 = new java.util.ArrayList;
        specialinvoke $r7.<java.util.ArrayList: void <init>()>();
        r1 = $r7;
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r2 = $r8;
        $r9 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099737);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r9);
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);
        $r11 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $i2 = virtualinvoke $r11.<org.petero.droidfish.gamelogic.DroidChessController: int currVariation()>();
        $r12 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $i3 = virtualinvoke $r12.<org.petero.droidfish.gamelogic.DroidChessController: int numVariations()>();
        $i4 = $i3 - 1;
        if $i2 >= $i4 goto label0;

        $r13 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099738);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r13);
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label0:
        i1 = specialinvoke r0.<org.petero.droidfish.DroidFish: int currFileType()>();
        r3 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String currPathName()>();
        if i1 == 0 goto label1;

        $r15 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099739);
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r15);
        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r16);

     label1:
        r4 = r2;
        $r17 = new android.app.AlertDialog$Builder;
        specialinvoke $r17.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r5 = $r17;
        virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099732);
        $i5 = interfaceinvoke r1.<java.util.List: int size()>();
        $r19 = newarray (java.lang.CharSequence)[$i5];
        $r20 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r19);
        $r21 = (java.lang.CharSequence[]) $r20;
        $r22 = new org.petero.droidfish.DroidFish$38;
        specialinvoke $r22.<org.petero.droidfish.DroidFish$38: void <init>(org.petero.droidfish.DroidFish,java.util.List,int,java.lang.String)>(r0, r4, i1, r3);
        virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r21, $r22);
        r6 = virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r6;
    }

    private android.app.Dialog makeButtonDialog(org.petero.droidfish.ButtonActions)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.ButtonActions r1;
        java.util.ArrayList $r2, r3, r4, $r8, $r10;
        java.util.HashSet r5, $r9;
        java.util.Iterator r6;
        org.petero.droidfish.UIAction r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r11;
        java.lang.String $r12, $r13, $r14;
        int $i0, $i1, $i2;
        android.app.AlertDialog$Builder $r15, r16;
        java.lang.CharSequence[] $r18, $r20;
        java.lang.Object[] $r19;
        org.petero.droidfish.DroidFish$39 $r21;
        android.app.AlertDialog $r23;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: org.petero.droidfish.ButtonActions;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r4 = $r8;
        $r9 = new java.util.HashSet;
        specialinvoke $r9.<java.util.HashSet: void <init>()>();
        r5 = $r9;
        $r10 = virtualinvoke r1.<org.petero.droidfish.ButtonActions: java.util.ArrayList getMenuActions()>();
        r6 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (org.petero.droidfish.UIAction) $r11;
        if r7 == null goto label1;

        $z1 = interfaceinvoke r7.<org.petero.droidfish.UIAction: boolean enabled()>();
        if $z1 == 0 goto label1;

        $r12 = interfaceinvoke r7.<org.petero.droidfish.UIAction: java.lang.String getId()>();
        $z2 = virtualinvoke r5.<java.util.HashSet: boolean contains(java.lang.Object)>($r12);
        if $z2 != 0 goto label1;

        $i0 = interfaceinvoke r7.<org.petero.droidfish.UIAction: int getName()>();
        $r13 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>($i0);
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r13);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r7);
        $r14 = interfaceinvoke r7.<org.petero.droidfish.UIAction: java.lang.String getId()>();
        virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>($r14);

     label1:
        goto label0;

     label2:
        $r15 = new android.app.AlertDialog$Builder;
        specialinvoke $r15.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r16 = $r15;
        $i1 = virtualinvoke r1.<org.petero.droidfish.ButtonActions: int getMenuTitle()>();
        virtualinvoke r16.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>($i1);
        $i2 = interfaceinvoke r3.<java.util.List: int size()>();
        $r18 = newarray (java.lang.CharSequence)[$i2];
        $r19 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r18);
        $r20 = (java.lang.CharSequence[]) $r19;
        $r21 = new org.petero.droidfish.DroidFish$39;
        specialinvoke $r21.<org.petero.droidfish.DroidFish$39: void <init>(org.petero.droidfish.DroidFish,java.util.List)>(r0, r4);
        virtualinvoke r16.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r20, $r21);
        $r23 = virtualinvoke r16.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return $r23;
    }

    private final android.app.Dialog manageEnginesDialog()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.CharSequence[] r1, $r4;
        android.app.AlertDialog$Builder r2, $r7;
        android.app.AlertDialog r3;
        java.lang.String $r5, $r6;
        org.petero.droidfish.DroidFish$40 $r9;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r4 = newarray (java.lang.CharSequence)[2];
        $r5 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099821);
        $r4[0] = $r5;
        $r6 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099822);
        $r4[1] = $r6;
        r1 = $r4;
        $r7 = new android.app.AlertDialog$Builder;
        specialinvoke $r7.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r7;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099860);
        $r9 = new org.petero.droidfish.DroidFish$40;
        specialinvoke $r9.<org.petero.droidfish.DroidFish$40: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r1, $r9);
        r3 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r3;
    }

    private final android.app.Dialog networkEngineDialog()
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String $r1, r6, r7, $r13, $r18, $r20, $r21, $r22, r24, $r25;
        org.petero.droidfish.DroidFish$41 $r2;
        java.lang.String[] r3, r4, r5;
        int i0, i1, i2, i3, i4, i5, i6;
        android.app.AlertDialog r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r19;
        java.io.File $r10;
        org.petero.droidfish.gamelogic.DroidChessController $r23;
        boolean $z0;
        android.app.AlertDialog$Builder $r26, r27;
        org.petero.droidfish.DroidFish$42 $r29;
        org.petero.droidfish.DroidFish$43 $r31;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = <org.petero.droidfish.DroidFish: java.lang.String engineDir>;
        $r2 = new org.petero.droidfish.DroidFish$41;
        specialinvoke $r2.<org.petero.droidfish.DroidFish$41: void <init>(org.petero.droidfish.DroidFish)>(r0);
        r3 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String[] findFilesInDirectory(java.lang.String,org.petero.droidfish.DroidFish$FileNameFilter)>($r1, $r2);
        i0 = lengthof r3;
        i1 = i0 + 1;
        r4 = newarray (java.lang.String)[i1];
        r5 = newarray (java.lang.String)[i1];
        i2 = 0;
        r6 = <java.io.File: java.lang.String separator>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r13 = <org.petero.droidfish.DroidFish: java.lang.String engineDir>;
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        i3 = 0;

     label0:
        if i3 >= i0 goto label1;

        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        $r18 = r3[i3];
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        r5[i2] = $r20;
        $r21 = r3[i3];
        r4[i2] = $r21;
        i2 = i2 + 1;
        i3 = i3 + 1;
        goto label0;

     label1:
        r5[i2] = "";
        $r22 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099715);
        r4[i2] = $r22;
        i6 = i2 + 1;
        $r23 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        r24 = virtualinvoke $r23.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String getEngine()>();
        i4 = 0;
        i5 = 0;

     label2:
        if i5 >= i1 goto label4;

        $r25 = r5[i5];
        $z0 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r24);
        if $z0 == 0 goto label3;

        i4 = i5;
        goto label4;

     label3:
        i5 = i5 + 1;
        goto label2;

     label4:
        $r26 = new android.app.AlertDialog$Builder;
        specialinvoke $r26.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r27 = $r26;
        virtualinvoke r27.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099822);
        $r29 = new org.petero.droidfish.DroidFish$42;
        specialinvoke $r29.<org.petero.droidfish.DroidFish$42: void <init>(org.petero.droidfish.DroidFish,int,java.lang.String[])>(r0, i1, r5);
        virtualinvoke r27.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>(r4, i4, $r29);
        $r31 = new org.petero.droidfish.DroidFish$43;
        specialinvoke $r31.<org.petero.droidfish.DroidFish$43: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r27.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r31);
        r8 = virtualinvoke r27.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r8;
    }

    private final android.app.Dialog newNetworkEngineDialog()
    {
        org.petero.droidfish.DroidFish r0;
        android.view.View r1, $r9;
        android.app.AlertDialog$Builder r2, $r6;
        android.widget.EditText r3;
        org.petero.droidfish.DroidFish$44 r4, $r10;
        android.app.AlertDialog r5;
        org.petero.droidfish.DroidFish$45 $r11;
        org.petero.droidfish.DroidFish$46 $r13;
        org.petero.droidfish.DroidFish$47 $r15;
        org.petero.droidfish.DroidFish$48 $r17;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>(r0, 2130903040, null);
        $r6 = new android.app.AlertDialog$Builder;
        specialinvoke $r6.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r6;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r1);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099823);
        $r9 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131296256);
        r3 = (android.widget.EditText) $r9;
        virtualinvoke r3.<android.widget.EditText: void setText(java.lang.CharSequence)>("");
        $r10 = new org.petero.droidfish.DroidFish$44;
        specialinvoke $r10.<org.petero.droidfish.DroidFish$44: void <init>(org.petero.droidfish.DroidFish,android.widget.EditText)>(r0, r3);
        r4 = $r10;
        $r11 = new org.petero.droidfish.DroidFish$45;
        specialinvoke $r11.<org.petero.droidfish.DroidFish$45: void <init>(org.petero.droidfish.DroidFish,java.lang.Runnable)>(r0, r4);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, $r11);
        $r13 = new org.petero.droidfish.DroidFish$46;
        specialinvoke $r13.<org.petero.droidfish.DroidFish$46: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099751, $r13);
        $r15 = new org.petero.droidfish.DroidFish$47;
        specialinvoke $r15.<org.petero.droidfish.DroidFish$47: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r15);
        r5 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        $r17 = new org.petero.droidfish.DroidFish$48;
        specialinvoke $r17.<org.petero.droidfish.DroidFish$48: void <init>(org.petero.droidfish.DroidFish,java.lang.Runnable,android.app.Dialog)>(r0, r4, r5);
        virtualinvoke r3.<android.widget.EditText: void setOnKeyListener(android.view.View$OnKeyListener)>($r17);
        return r5;
    }

    private final android.app.Dialog networkEngineConfigDialog()
    {
        org.petero.droidfish.DroidFish r0;
        android.view.View r1, $r12, $r13;
        android.app.AlertDialog$Builder r2, $r9;
        android.widget.EditText r3, r4;
        java.lang.String r5, r6, $r14, $r15;
        java.lang.String[] r7;
        android.app.AlertDialog r8;
        int $i0, $i1, $i2;
        boolean $z0;
        java.io.IOException $r16, r17;
        org.petero.droidfish.DroidFish$49 $r18, r19;
        org.petero.droidfish.DroidFish$50 $r20;
        org.petero.droidfish.DroidFish$51 $r22;
        org.petero.droidfish.DroidFish$52 $r24;
        org.petero.droidfish.DroidFish$53 $r26;
        org.petero.droidfish.DroidFish$54 $r28;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>(r0, 2130903049, null);
        $r9 = new android.app.AlertDialog$Builder;
        specialinvoke $r9.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r9;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r1);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099822);
        $r12 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131296300);
        r3 = (android.widget.EditText) $r12;
        $r13 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131296301);
        r4 = (android.widget.EditText) $r13;
        r5 = "";
        r6 = "0";

     label0:
        $r14 = r0.<org.petero.droidfish.DroidFish: java.lang.String networkEngineToConfig>;
        r7 = staticinvoke <org.petero.droidfish.Util: java.lang.String[] readFile(java.lang.String)>($r14);
        $i0 = lengthof r7;
        if $i0 < 1 goto label2;

        $r15 = r7[0];
        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("NETE");
        if $z0 == 0 goto label2;

        $i1 = lengthof r7;
        if $i1 <= 1 goto label1;

        r5 = r7[1];

     label1:
        $i2 = lengthof r7;
        if $i2 <= 2 goto label2;

        r6 = r7[2];

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;
        r17 = $r16;

     label4:
        virtualinvoke r3.<android.widget.EditText: void setText(java.lang.CharSequence)>(r5);
        virtualinvoke r4.<android.widget.EditText: void setText(java.lang.CharSequence)>(r6);
        $r18 = new org.petero.droidfish.DroidFish$49;
        specialinvoke $r18.<org.petero.droidfish.DroidFish$49: void <init>(org.petero.droidfish.DroidFish,android.widget.EditText,android.widget.EditText)>(r0, r3, r4);
        r19 = $r18;
        $r20 = new org.petero.droidfish.DroidFish$50;
        specialinvoke $r20.<org.petero.droidfish.DroidFish$50: void <init>(org.petero.droidfish.DroidFish,java.lang.Runnable)>(r0, r19);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(17039370, $r20);
        $r22 = new org.petero.droidfish.DroidFish$51;
        specialinvoke $r22.<org.petero.droidfish.DroidFish$51: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099751, $r22);
        $r24 = new org.petero.droidfish.DroidFish$52;
        specialinvoke $r24.<org.petero.droidfish.DroidFish$52: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r24);
        $r26 = new org.petero.droidfish.DroidFish$53;
        specialinvoke $r26.<org.petero.droidfish.DroidFish$53: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131099800, $r26);
        r8 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        $r28 = new org.petero.droidfish.DroidFish$54;
        specialinvoke $r28.<org.petero.droidfish.DroidFish$54: void <init>(org.petero.droidfish.DroidFish,java.lang.Runnable,android.app.Dialog)>(r0, r19, r8);
        virtualinvoke r4.<android.widget.EditText: void setOnKeyListener(android.view.View$OnKeyListener)>($r28);
        return r8;

        catch java.io.IOException from label0 to label2 with label3;
    }

    private android.app.Dialog deleteNetworkEngineDialog()
    {
        org.petero.droidfish.DroidFish r0;
        android.app.AlertDialog$Builder $r1, r2;
        java.lang.String r3, $r7, $r11;
        android.app.AlertDialog r4;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r6, $r8, $r9, $r10;
        org.petero.droidfish.DroidFish$55 $r13;
        org.petero.droidfish.DroidFish$56 $r15;
        org.petero.droidfish.DroidFish$57 $r17;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = new android.app.AlertDialog$Builder;
        specialinvoke $r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r1;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099824);
        r3 = r0.<org.petero.droidfish.DroidFish: java.lang.String networkEngineToConfig>;
        $i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(47);
        if $i0 < 0 goto label0;

        $i1 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(47);
        $i2 = $i1 + 1;
        r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i2);

     label0:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099827);
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>($r11);
        $r13 = new org.petero.droidfish.DroidFish$55;
        specialinvoke $r13.<org.petero.droidfish.DroidFish$55: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131099752, $r13);
        $r15 = new org.petero.droidfish.DroidFish$56;
        specialinvoke $r15.<org.petero.droidfish.DroidFish$56: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099753, $r15);
        $r17 = new org.petero.droidfish.DroidFish$57;
        specialinvoke $r17.<org.petero.droidfish.DroidFish$57: void <init>(org.petero.droidfish.DroidFish)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r17);
        r4 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r4;
    }

    private void selectPgnFile(boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, $z1;
        java.lang.String r1, r2, r3, r5, r6, $r16;
        byte b0, b1, $b4, $b5;
        android.content.Intent r4, $r10;
        android.content.ActivityNotFoundException r7, $r25;
        int $i2, $i3;
        android.content.SharedPreferences $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r17, $r18, $r19;
        java.io.File $r13, $r20;
        android.net.Uri $r21;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 := @parameter0: boolean;
        r1 = "org.openintents.action.PICK_FILE";
        if z0 == 0 goto label0;

        $i2 = 2131099709;
        goto label1;

     label0:
        $i2 = 2131099708;

     label1:
        r2 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>($i2);
        if z0 == 0 goto label2;

        $i3 = 2131099711;
        goto label3;

     label2:
        $i3 = 2131099710;

     label3:
        r3 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>($i3);
        if z0 == 0 goto label4;

        $b4 = 4;
        goto label5;

     label4:
        $b4 = 5;

     label5:
        b0 = $b4;
        if z0 == 0 goto label6;

        $b5 = 7;
        goto label7;

     label6:
        $b5 = 6;

     label7:
        b1 = $b5;
        $r10 = new android.content.Intent;
        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>(r1);
        r4 = $r10;
        $r11 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r5 = interfaceinvoke $r11.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("currentPGNFile", "");
        r6 = <java.io.File: java.lang.String separator>;
        $z1 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>(r6);
        if $z1 != 0 goto label8;

        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r16 = <org.petero.droidfish.DroidFish: java.lang.String pgnDir>;
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        r5 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        $r20 = new java.io.File;
        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>(r5);
        $r21 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r20);
        virtualinvoke r4.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r21);
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.openintents.extra.TITLE", r2);
        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.openintents.extra.BUTTON_TEXT", r3);

     label9:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void startActivityForResult(android.content.Intent,int)>(r4, b0);

     label10:
        goto label12;

     label11:
        $r25 := @caughtexception;
        r7 = $r25;
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void removeDialog(int)>(b1);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void showDialog(int)>(b1);

     label12:
        return;

        catch android.content.ActivityNotFoundException from label9 to label10 with label11;
    }

    private final boolean hasScidProvider()
    {
        org.petero.droidfish.DroidFish r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.content.pm.ProviderInfo r3;
        android.content.pm.PackageManager $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r4 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.pm.PackageManager getPackageManager()>();
        r1 = virtualinvoke $r4.<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>(null, 0, 0);
        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (android.content.pm.ProviderInfo) $r5;
        $r6 = r3.<android.content.pm.ProviderInfo: java.lang.String authority>;
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("org.scid.database.scidprovider");
        if $z1 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    private final void selectScidFile()
    {
        org.petero.droidfish.DroidFish r0;
        android.content.Intent $r1, r2;
        android.content.ActivityNotFoundException r3, $r7;
        android.content.ComponentName $r4;
        android.content.Context $r8;
        java.lang.String $r9;
        android.widget.Toast $r10;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = new android.content.Intent;
        specialinvoke $r1.<android.content.Intent: void <init>()>();
        r2 = $r1;
        $r4 = new android.content.ComponentName;
        specialinvoke $r4.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("org.scid.android", "org.scid.android.SelectFileActivity");
        virtualinvoke r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r4);
        virtualinvoke r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>(".si4");

     label0:
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void startActivityForResult(android.content.Intent,int)>(r2, 3);

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r3 = $r7;
        $r8 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r9 = virtualinvoke r3.<android.content.ActivityNotFoundException: java.lang.String getMessage()>();
        $r10 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r8, $r9, 1);
        virtualinvoke $r10.<android.widget.Toast: void show()>();

     label3:
        return;

        catch android.content.ActivityNotFoundException from label0 to label1 with label2;
    }

    private final int currFileType()
    {
        org.petero.droidfish.DroidFish r0;
        int i0;
        org.petero.droidfish.GameMode $r1;
        boolean $z0;
        android.content.SharedPreferences $r2;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        $z0 = virtualinvoke $r1.<org.petero.droidfish.GameMode: boolean clocksActive()>();
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $r2 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        i0 = interfaceinvoke $r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("currFT", 0);
        return i0;
    }

    private final java.lang.String currPathName()
    {
        org.petero.droidfish.DroidFish r0;
        int i0;
        java.lang.String r1, r2, $r9, $r14;
        android.content.SharedPreferences $r3, $r4, $r13;
        boolean $z0;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.io.File $r6;

        r0 := @this: org.petero.droidfish.DroidFish;
        $r3 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        i0 = interfaceinvoke $r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("currFT", 0);
        lookupswitch(i0)
        {
            case 1: goto label0;
            case 2: goto label2;
            default: goto label3;
        };

     label0:
        $r4 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r1 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("currentPGNFile", "");
        r2 = <java.io.File: java.lang.String separator>;
        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(r2);
        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r9 = <org.petero.droidfish.DroidFish: java.lang.String pgnDir>;
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r1;

     label2:
        $r13 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        $r14 = interfaceinvoke $r13.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("currentScidFile", "");
        return $r14;

     label3:
        return "";
    }

    private final java.lang.String[] findFilesInDirectory(java.lang.String, org.petero.droidfish.DroidFish$FileNameFilter)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r4, $r10, $r14, $r17;
        org.petero.droidfish.DroidFish$FileNameFilter r2;
        java.io.File r3, r6, $r9, $r16;
        java.lang.StringBuilder $r5, $r11, $r12, $r13;
        java.io.File[] r7;
        int i0, i1, $i2;
        java.lang.String[] r8;
        org.petero.droidfish.DroidFish$58 $r15;
        java.util.Comparator $r18;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.petero.droidfish.DroidFish$FileNameFilter;
        r3 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();
        r4 = <java.io.File: java.lang.String separator>;
        $r9 = new java.io.File;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();
        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r14);
        r6 = $r9;
        $r15 = new org.petero.droidfish.DroidFish$58;
        specialinvoke $r15.<org.petero.droidfish.DroidFish$58: void <init>(org.petero.droidfish.DroidFish,org.petero.droidfish.DroidFish$FileNameFilter)>(r0, r2);
        r7 = virtualinvoke r6.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r15);
        if r7 != null goto label0;

        r7 = newarray (java.io.File)[0];

     label0:
        i0 = lengthof r7;
        r8 = newarray (java.lang.String)[i0];
        i1 = 0;

     label1:
        $i2 = lengthof r7;
        if i1 >= $i2 goto label2;

        $r16 = r7[i1];
        $r17 = virtualinvoke $r16.<java.io.File: java.lang.String getName()>();
        r8[i1] = $r17;
        i1 = i1 + 1;
        goto label1;

     label2:
        $r18 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;
        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r8, $r18);
        return r8;
    }

    private final void savePGNToFile(java.lang.String, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r3;
        boolean z0;
        org.petero.droidfish.gamelogic.DroidChessController $r2;
        android.content.SharedPreferences$Editor r4;
        android.content.Intent r5, $r9;
        android.content.SharedPreferences $r6;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        r3 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String getPGN()>();
        $r6 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r4 = interfaceinvoke $r6.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("currentPGNFile", r1);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("currFT", 1);
        interfaceinvoke r4.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r9 = new android.content.Intent;
        specialinvoke $r9.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "org/petero/droidfish/activities/EditPGNSave");
        r5 = $r9;
        virtualinvoke r5.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("org.petero.droidfish.saveFile");
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.petero.droidfish.pathname", r1);
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.petero.droidfish.pgn", r3);
        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("org.petero.droidfish.silent", z0);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void startActivity(android.content.Intent)>(r5);
        return;
    }

    private final void loadPGNFromFile(java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        android.content.SharedPreferences$Editor r2;
        android.content.Intent r3, $r7;
        android.content.SharedPreferences $r4;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.petero.droidfish.DroidFish: android.content.SharedPreferences settings>;
        r2 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("currentPGNFile", r1);
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("currFT", 1);
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: boolean commit()>();
        $r7 = new android.content.Intent;
        specialinvoke $r7.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "org/petero/droidfish/activities/EditPGNLoad");
        r3 = $r7;
        virtualinvoke r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("org.petero.droidfish.loadFile");
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("org.petero.droidfish.pathname", r1);
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void startActivityForResult(android.content.Intent,int)>(r3, 2);
        return;
    }

    public void requestPromotePiece()
    {
        org.petero.droidfish.DroidFish r0;

        r0 := @this: org.petero.droidfish.DroidFish;
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void showDialog(int)>(0);
        return;
    }

    public void reportInvalidMove(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.gamelogic.Move r1;
        java.lang.String r2, $r4, $r5, $r6;
        java.lang.Object[] $r3;
        int $i0, $i1;
        android.content.Context $r7;
        android.widget.Toast $r8;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        $r3 = newarray (java.lang.Object)[3];
        $r4 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099782);
        $r3[0] = $r4;
        $i0 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $r5 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String squareToString(int)>($i0);
        $r3[1] = $r5;
        $i1 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $r6 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String squareToString(int)>($i1);
        $r3[2] = $r6;
        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s %s-%s", $r3);
        $r7 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r8 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r7, r2, 0);
        virtualinvoke $r8.<android.widget.Toast: void show()>();
        return;
    }

    public void reportEngineName(java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r2, $r4;
        java.lang.Object[] $r3;
        android.content.Context $r5;
        android.widget.Toast $r6;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        $r3 = newarray (java.lang.Object)[2];
        $r4 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099814);
        $r3[0] = $r4;
        $r3[1] = r1;
        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: %s", $r3);
        $r5 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r5, r2, 0);
        virtualinvoke $r6.<android.widget.Toast: void show()>();
        return;
    }

    public void reportEngineError(java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1, r2, $r4;
        java.lang.Object[] $r3;
        android.content.Context $r5;
        android.widget.Toast $r6;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.String;
        $r3 = newarray (java.lang.Object)[2];
        $r4 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099818);
        $r3[0] = $r4;
        $r3[1] = r1;
        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: %s", $r3);
        $r5 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r5, r2, 1);
        virtualinvoke $r6.<android.widget.Toast: void show()>();
        return;
    }

    public void computerMoveMade()
    {
        org.petero.droidfish.DroidFish r0;
        android.os.Vibrator r1;
        boolean $z0, $z1;
        android.media.MediaPlayer $r2, $r3, $r4, $r5;
        java.lang.Object $r6;

        r0 := @this: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean soundEnabled>;
        if $z0 == 0 goto label1;

        $r2 = r0.<org.petero.droidfish.DroidFish: android.media.MediaPlayer moveSound>;
        if $r2 == null goto label0;

        $r3 = r0.<org.petero.droidfish.DroidFish: android.media.MediaPlayer moveSound>;
        virtualinvoke $r3.<android.media.MediaPlayer: void release()>();

     label0:
        $r4 = staticinvoke <android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>(r0, 2131034122);
        r0.<org.petero.droidfish.DroidFish: android.media.MediaPlayer moveSound> = $r4;
        $r5 = r0.<org.petero.droidfish.DroidFish: android.media.MediaPlayer moveSound>;
        virtualinvoke $r5.<android.media.MediaPlayer: void start()>();

     label1:
        $z1 = r0.<org.petero.droidfish.DroidFish: boolean vibrateEnabled>;
        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.Object getSystemService(java.lang.String)>("vibrator");
        r1 = (android.os.Vibrator) $r6;
        virtualinvoke r1.<android.os.Vibrator: void vibrate(long)>(500L);

     label2:
        return;
    }

    public void runOnUIThread(java.lang.Runnable)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.Runnable r1;

        r0 := @this: org.petero.droidfish.DroidFish;
        r1 := @parameter0: java.lang.Runnable;
        virtualinvoke r0.<org.petero.droidfish.DroidFish: void runOnUiThread(java.lang.Runnable)>(r1);
        return;
    }

    private final void updateNotification()
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, $z1;
        long $l0, $l2, $l3, $l4;
        byte $b1, $b5;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 = 0;
        $l0 = r0.<org.petero.droidfish.DroidFish: long lastVisibleMillis>;
        $b1 = $l0 cmp 0L;
        if $b1 == 0 goto label2;

        $l2 = r0.<org.petero.droidfish.DroidFish: long lastComputationMillis>;
        $l3 = r0.<org.petero.droidfish.DroidFish: long lastVisibleMillis>;
        $l4 = $l3 + 90000L;
        $b5 = $l2 cmp $l4;
        if $b5 < 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;

     label2:
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setNotification(boolean)>(z0);
        return;
    }

    private final void setNotification(boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0, z1, $z2;
        java.lang.String r1, r3, r6, r7;
        android.app.NotificationManager r2;
        int i0, $i2, $i3;
        long l1;
        android.app.Notification r4, $r11;
        android.content.Context r5;
        android.content.Intent r8, $r13;
        android.app.PendingIntent r9;
        java.lang.Object $r10;

        r0 := @this: org.petero.droidfish.DroidFish;
        z0 := @parameter0: boolean;
        $z2 = r0.<org.petero.droidfish.DroidFish: boolean notificationActive>;
        if $z2 != z0 goto label0;

        return;

     label0:
        r0.<org.petero.droidfish.DroidFish: boolean notificationActive> = z0;
        z1 = 1;
        r1 = "notification";
        $r10 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.Object getSystemService(java.lang.String)>(r1);
        r2 = (android.app.NotificationManager) $r10;
        if z0 == 0 goto label1;

        i0 = 2130837504;
        r3 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099797);
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r11 = new android.app.Notification;
        specialinvoke $r11.<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>(i0, r3, l1);
        r4 = $r11;
        $i2 = r4.<android.app.Notification: int flags>;
        $i3 = $i2 | 2;
        r4.<android.app.Notification: int flags> = $i3;
        r5 = virtualinvoke r0.<org.petero.droidfish.DroidFish: android.content.Context getApplicationContext()>();
        r6 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099798);
        r7 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099799);
        $r13 = new android.content.Intent;
        specialinvoke $r13.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "org/petero/droidfish/activities/CPUWarning");
        r8 = $r13;
        r9 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>(r0, 0, r8, 0);
        virtualinvoke r4.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>(r5, r6, r7, r9);
        virtualinvoke r2.<android.app.NotificationManager: void notify(int,android.app.Notification)>(1, r4);
        goto label2;

     label1:
        virtualinvoke r2.<android.app.NotificationManager: void cancel(int)>(1);

     label2:
        return;
    }

    private final java.lang.String timeToString(long)
    {
        org.petero.droidfish.DroidFish r0;
        long l0, $l3;
        int i1, i2, $i4, i5;
        boolean z0;
        java.lang.StringBuilder r1, $r2;
        double $d0, $d1, $d2;
        java.lang.String $r8;

        r0 := @this: org.petero.droidfish.DroidFish;
        l0 := @parameter0: long;
        $l3 = l0 + 999L;
        $d0 = (double) $l3;
        $d1 = $d0 / 1000.0;
        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d1);
        i1 = (int) $d2;
        z0 = 0;
        if i1 >= 0 goto label0;

        z0 = 1;
        i1 = neg i1;

     label0:
        i2 = i1 / 60;
        $i4 = i2 * 60;
        i5 = i1 - $i4;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        r1 = $r2;
        if z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
        if i5 >= 10 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;
    }

    public void setRemainingTime(long, long, long)
    {
        org.petero.droidfish.DroidFish r0;
        long l0, l1, l2;
        org.petero.droidfish.gamelogic.DroidChessController $r1, $r21;
        java.lang.StringBuilder $r2, $r7, $r8, $r10, $r13, $r15, $r16, $r18;
        java.util.TreeMap r3, $r20;
        org.petero.droidfish.GameMode $r4;
        boolean $z0;
        android.widget.TextView $r5, $r12, $r22, $r25;
        java.lang.String $r6, $r9, $r11, $r14, $r17, $r19;
        java.lang.Object $r23, $r26;
        java.lang.CharSequence $r24, $r27;
        android.os.Handler $r28, $r30;
        java.lang.Runnable $r29, $r31;
        byte $b3;

        r0 := @this: org.petero.droidfish.DroidFish;
        l0 := @parameter0: long;
        l1 := @parameter1: long;
        l2 := @parameter2: long;
        $r1 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        $r4 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode getGameMode()>();
        $z0 = virtualinvoke $r4.<org.petero.droidfish.GameMode: boolean clocksActive()>();
        if $z0 == 0 goto label0;

        $r5 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteTitleText>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099696);
        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r9 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String timeToString(long)>(l0);
        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);
        $r12 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackTitleText>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getString(int)>(2131099697);
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r17 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String timeToString(long)>(l1);
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<android.widget.TextView: void setText(java.lang.CharSequence)>($r19);
        goto label1;

     label0:
        $r20 = new java.util.TreeMap;
        specialinvoke $r20.<java.util.TreeMap: void <init>()>();
        r3 = $r20;
        $r21 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        virtualinvoke $r21.<org.petero.droidfish.gamelogic.DroidChessController: void getHeaders(java.util.Map)>(r3);
        $r22 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView whiteTitleText>;
        $r23 = virtualinvoke r3.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("White");
        $r24 = (java.lang.CharSequence) $r23;
        virtualinvoke $r22.<android.widget.TextView: void setText(java.lang.CharSequence)>($r24);
        $r25 = r0.<org.petero.droidfish.DroidFish: android.widget.TextView blackTitleText>;
        $r26 = virtualinvoke r3.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>("Black");
        $r27 = (java.lang.CharSequence) $r26;
        virtualinvoke $r25.<android.widget.TextView: void setText(java.lang.CharSequence)>($r27);

     label1:
        $r28 = r0.<org.petero.droidfish.DroidFish: android.os.Handler handlerTimer>;
        $r29 = r0.<org.petero.droidfish.DroidFish: java.lang.Runnable r>;
        virtualinvoke $r28.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r29);
        $b3 = l2 cmp 0L;
        if $b3 <= 0 goto label2;

        $r30 = r0.<org.petero.droidfish.DroidFish: android.os.Handler handlerTimer>;
        $r31 = r0.<org.petero.droidfish.DroidFish: java.lang.Runnable r>;
        virtualinvoke $r30.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r31, l2);

     label2:
        return;
    }

    static boolean access$002(org.petero.droidfish.DroidFish, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        z0 := @parameter1: boolean;
        r0.<org.petero.droidfish.DroidFish: boolean boardFlipped> = z0;
        return z0;
    }

    static org.petero.droidfish.ChessBoardPlay access$100(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.ChessBoardPlay $r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.ChessBoardPlay cb>;
        return $r1;
    }

    static boolean access$000(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean boardFlipped>;
        return $z0;
    }

    static void access$200(org.petero.droidfish.DroidFish, java.lang.String, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        r1 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBooleanPref(java.lang.String,boolean)>(r1, z0);
        return;
    }

    static boolean access$302(org.petero.droidfish.DroidFish, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        z0 := @parameter1: boolean;
        r0.<org.petero.droidfish.DroidFish: boolean mShowThinking> = z0;
        return z0;
    }

    static boolean access$400(org.petero.droidfish.DroidFish, java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        r1 := @parameter1: java.lang.String;
        $z0 = specialinvoke r0.<org.petero.droidfish.DroidFish: boolean toggleBooleanPref(java.lang.String)>(r1);
        return $z0;
    }

    static void access$500(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateThinkingInfo()>();
        return;
    }

    static boolean access$602(org.petero.droidfish.DroidFish, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        z0 := @parameter1: boolean;
        r0.<org.petero.droidfish.DroidFish: boolean mShowBookHints> = z0;
        return z0;
    }

    static org.petero.droidfish.PGNOptions access$700(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.PGNOptions $r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.PGNOptions pgnOptions>;
        return $r1;
    }

    static org.petero.droidfish.gamelogic.DroidChessController access$800()
    {
        org.petero.droidfish.gamelogic.DroidChessController $r0;

        $r0 = <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl>;
        return $r0;
    }

    static void access$900(org.petero.droidfish.DroidFish, int)
    {
        org.petero.droidfish.DroidFish r0;
        int i0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        i0 := @parameter1: int;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void newGameMode(int)>(i0);
        return;
    }

    static void access$1000(org.petero.droidfish.DroidFish, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        z0 := @parameter1: boolean;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBoardFlip(boolean)>(z0);
        return;
    }

    static void access$1100(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void updateButtons()>();
        return;
    }

    static void access$1200(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void handlePrefsChange()>();
        return;
    }

    static boolean access$1300(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean boardGestures>;
        return $z0;
    }

    static boolean access$1400(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean invertScrollDirection>;
        return $z0;
    }

    static float access$1500(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        float $f0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $f0 = r0.<org.petero.droidfish.DroidFish: float scrollSensitivity>;
        return $f0;
    }

    static org.petero.droidfish.GameMode access$1600(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.GameMode $r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode>;
        return $r1;
    }

    static void access$1700(org.petero.droidfish.DroidFish, int)
    {
        org.petero.droidfish.DroidFish r0;
        int i0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        i0 := @parameter1: int;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEgtbHints(int)>(i0);
        return;
    }

    static boolean access$300(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean mShowThinking>;
        return $z0;
    }

    static java.util.ArrayList access$1800(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: java.util.ArrayList pvMoves>;
        return $r1;
    }

    static void access$1900(org.petero.droidfish.DroidFish, int)
    {
        org.petero.droidfish.DroidFish r0;
        int i0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        i0 := @parameter1: int;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void startNewGame(int)>(i0);
        return;
    }

    static java.lang.String access$2000(org.petero.droidfish.DroidFish, org.petero.droidfish.gamelogic.ChessParseError)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.gamelogic.ChessParseError r1;
        java.lang.String $r2;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        r1 := @parameter1: org.petero.droidfish.gamelogic.ChessParseError;
        $r2 = specialinvoke r0.<org.petero.droidfish.DroidFish: java.lang.String getParseErrString(org.petero.droidfish.gamelogic.ChessParseError)>(r1);
        return $r2;
    }

    static void access$2100(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void shareGame()>();
        return;
    }

    static void access$2200(org.petero.droidfish.DroidFish, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        z0 := @parameter1: boolean;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void selectPgnFile(boolean)>(z0);
        return;
    }

    static void access$2300(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void selectScidFile()>();
        return;
    }

    static org.petero.droidfish.book.BookOptions access$2400(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.book.BookOptions $r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.book.BookOptions bookOptions>;
        return $r1;
    }

    static void access$2500(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setBookOptions()>();
        return;
    }

    static boolean access$2600(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $z0 = staticinvoke <org.petero.droidfish.DroidFish: boolean internalEngine(java.lang.String)>(r0);
        return $z0;
    }

    static void access$2700(org.petero.droidfish.DroidFish, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        z0 := @parameter1: boolean;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEngineOptions(boolean)>(z0);
        return;
    }

    static void access$2800(org.petero.droidfish.DroidFish, java.lang.String, int)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        r1 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void setEngineStrength(java.lang.String,int)>(r1, i0);
        return;
    }

    static java.lang.String access$2900()
    {
        java.lang.String $r0;

        $r0 = <org.petero.droidfish.DroidFish: java.lang.String pgnDir>;
        return $r0;
    }

    static void access$3000(org.petero.droidfish.DroidFish, java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        r1 := @parameter1: java.lang.String;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void loadPGNFromFile(java.lang.String)>(r1);
        return;
    }

    static void access$3100(org.petero.droidfish.DroidFish, java.lang.String, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        r1 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        specialinvoke r0.<org.petero.droidfish.DroidFish: void savePGNToFile(java.lang.String,boolean)>(r1, z0);
        return;
    }

    static org.petero.droidfish.GameMode access$1602(org.petero.droidfish.DroidFish, org.petero.droidfish.GameMode)
    {
        org.petero.droidfish.DroidFish r0;
        org.petero.droidfish.GameMode r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        r1 := @parameter1: org.petero.droidfish.GameMode;
        r0.<org.petero.droidfish.DroidFish: org.petero.droidfish.GameMode gameMode> = r1;
        return r1;
    }

    static java.lang.String access$3200(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String $r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: java.lang.String thinkingStr1>;
        return $r1;
    }

    static boolean access$3302(org.petero.droidfish.DroidFish, boolean)
    {
        org.petero.droidfish.DroidFish r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        z0 := @parameter1: boolean;
        r0.<org.petero.droidfish.DroidFish: boolean mShowStats> = z0;
        return z0;
    }

    static boolean access$3300(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $z0 = r0.<org.petero.droidfish.DroidFish: boolean mShowStats>;
        return $z0;
    }

    static java.lang.String access$3402(org.petero.droidfish.DroidFish, java.lang.String)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        r1 := @parameter1: java.lang.String;
        r0.<org.petero.droidfish.DroidFish: java.lang.String networkEngineToConfig> = r1;
        return r1;
    }

    static java.lang.String access$3500()
    {
        java.lang.String $r0;

        $r0 = <org.petero.droidfish.DroidFish: java.lang.String engineDir>;
        return $r0;
    }

    static java.lang.String access$3400(org.petero.droidfish.DroidFish)
    {
        org.petero.droidfish.DroidFish r0;
        java.lang.String $r1;

        r0 := @parameter0: org.petero.droidfish.DroidFish;
        $r1 = r0.<org.petero.droidfish.DroidFish: java.lang.String networkEngineToConfig>;
        return $r1;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16;
        java.lang.String $r2, $r5, $r8, $r11, $r14, $r17;

        <org.petero.droidfish.DroidFish: org.petero.droidfish.gamelogic.DroidChessController ctrl> = null;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DroidFish");
        $r2 = <java.io.File: java.lang.String separator>;
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pgn");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        <org.petero.droidfish.DroidFish: java.lang.String pgnDir> = $r5;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DroidFish");
        $r8 = <java.io.File: java.lang.String separator>;
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uci");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        <org.petero.droidfish.DroidFish: java.lang.String engineDir> = $r11;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DroidFish");
        $r14 = <java.io.File: java.lang.String separator>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gtb");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        <org.petero.droidfish.DroidFish: java.lang.String gtbDefaultDir> = $r17;
        return;
    }
}
public final class org.petero.droidfish.EngineOptions extends java.lang.Object
{
    public int hashMB;
    public boolean hints;
    public boolean hintsEdit;
    public boolean rootProbe;
    public boolean engineProbe;
    public java.lang.String gtbPath;
    public java.lang.String networkID;

    public void <init>()
    {
        org.petero.droidfish.EngineOptions r0;

        r0 := @this: org.petero.droidfish.EngineOptions;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.EngineOptions: int hashMB> = 16;
        r0.<org.petero.droidfish.EngineOptions: boolean hints> = 0;
        r0.<org.petero.droidfish.EngineOptions: boolean hintsEdit> = 0;
        r0.<org.petero.droidfish.EngineOptions: boolean rootProbe> = 0;
        r0.<org.petero.droidfish.EngineOptions: boolean engineProbe> = 0;
        r0.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath> = "";
        r0.<org.petero.droidfish.EngineOptions: java.lang.String networkID> = "";
        return;
    }

    public void <init>(org.petero.droidfish.EngineOptions)
    {
        org.petero.droidfish.EngineOptions r0, r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r2, $r3;

        r0 := @this: org.petero.droidfish.EngineOptions;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $i0 = r1.<org.petero.droidfish.EngineOptions: int hashMB>;
        r0.<org.petero.droidfish.EngineOptions: int hashMB> = $i0;
        $z0 = r1.<org.petero.droidfish.EngineOptions: boolean hints>;
        r0.<org.petero.droidfish.EngineOptions: boolean hints> = $z0;
        $z1 = r1.<org.petero.droidfish.EngineOptions: boolean hintsEdit>;
        r0.<org.petero.droidfish.EngineOptions: boolean hintsEdit> = $z1;
        $z2 = r1.<org.petero.droidfish.EngineOptions: boolean rootProbe>;
        r0.<org.petero.droidfish.EngineOptions: boolean rootProbe> = $z2;
        $z3 = r1.<org.petero.droidfish.EngineOptions: boolean engineProbe>;
        r0.<org.petero.droidfish.EngineOptions: boolean engineProbe> = $z3;
        $r2 = r1.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        r0.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath> = $r2;
        $r3 = r1.<org.petero.droidfish.EngineOptions: java.lang.String networkID>;
        r0.<org.petero.droidfish.EngineOptions: java.lang.String networkID> = $r3;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.petero.droidfish.EngineOptions r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.String $r5, $r6, $r7, $r8;

        r0 := @this: org.petero.droidfish.EngineOptions;
        r1 := @parameter0: java.lang.Object;
        if r1 == null goto label0;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label1;

     label0:
        return 0;

     label1:
        r2 = (org.petero.droidfish.EngineOptions) r1;
        $i0 = r0.<org.petero.droidfish.EngineOptions: int hashMB>;
        $i1 = r2.<org.petero.droidfish.EngineOptions: int hashMB>;
        if $i0 != $i1 goto label2;

        $z0 = r0.<org.petero.droidfish.EngineOptions: boolean hints>;
        $z1 = r2.<org.petero.droidfish.EngineOptions: boolean hints>;
        if $z0 != $z1 goto label2;

        $z2 = r0.<org.petero.droidfish.EngineOptions: boolean hintsEdit>;
        $z3 = r2.<org.petero.droidfish.EngineOptions: boolean hintsEdit>;
        if $z2 != $z3 goto label2;

        $z4 = r0.<org.petero.droidfish.EngineOptions: boolean rootProbe>;
        $z5 = r2.<org.petero.droidfish.EngineOptions: boolean rootProbe>;
        if $z4 != $z5 goto label2;

        $z6 = r0.<org.petero.droidfish.EngineOptions: boolean engineProbe>;
        $z7 = r2.<org.petero.droidfish.EngineOptions: boolean engineProbe>;
        if $z6 != $z7 goto label2;

        $r5 = r0.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        $r6 = r2.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        $z8 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z8 == 0 goto label2;

        $r7 = r0.<org.petero.droidfish.EngineOptions: java.lang.String networkID>;
        $r8 = r2.<org.petero.droidfish.EngineOptions: java.lang.String networkID>;
        $z9 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z9 == 0 goto label2;

        $z10 = 1;
        goto label3;

     label2:
        $z10 = 0;

     label3:
        return $z10;
    }

    public int hashCode()
    {
        org.petero.droidfish.EngineOptions r0;

        r0 := @this: org.petero.droidfish.EngineOptions;
        return 0;
    }
}
public final class org.petero.droidfish.GUIInterface$GameStatus extends java.lang.Object
{
    public org.petero.droidfish.gamelogic.Game$GameState state;
    public int moveNr;
    public java.lang.String drawInfo;
    public boolean white;
    public boolean ponder;
    public boolean thinking;
    public boolean analyzing;

    public void <init>()
    {
        org.petero.droidfish.GUIInterface$GameStatus r0;
        org.petero.droidfish.gamelogic.Game$GameState $r1;

        r0 := @this: org.petero.droidfish.GUIInterface$GameStatus;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        r0.<org.petero.droidfish.GUIInterface$GameStatus: org.petero.droidfish.gamelogic.Game$GameState state> = $r1;
        r0.<org.petero.droidfish.GUIInterface$GameStatus: int moveNr> = 0;
        r0.<org.petero.droidfish.GUIInterface$GameStatus: java.lang.String drawInfo> = "";
        r0.<org.petero.droidfish.GUIInterface$GameStatus: boolean white> = 0;
        r0.<org.petero.droidfish.GUIInterface$GameStatus: boolean ponder> = 0;
        r0.<org.petero.droidfish.GUIInterface$GameStatus: boolean thinking> = 0;
        r0.<org.petero.droidfish.GUIInterface$GameStatus: boolean analyzing> = 0;
        return;
    }
}
public interface  org.petero.droidfish.GUIInterface extends java.lang.Object
{

    public abstract void setPosition(org.petero.droidfish.gamelogic.Position, java.lang.String, java.util.ArrayList);

    public abstract void setSelection(int);

    public abstract void setStatus(org.petero.droidfish.GUIInterface$GameStatus);

    public abstract void moveListUpdated();

    public abstract void setThinkingInfo(java.lang.String, java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList);

    public abstract void requestPromotePiece();

    public abstract void runOnUIThread(java.lang.Runnable);

    public abstract void reportInvalidMove(org.petero.droidfish.gamelogic.Move);

    public abstract void reportEngineName(java.lang.String);

    public abstract void reportEngineError(java.lang.String);

    public abstract void computerMoveMade();

    public abstract void setRemainingTime(long, long, long);

    public abstract void updateEngineTitle();

    public abstract void updateMaterialDifferenceTitle(org.petero.droidfish.Util$MaterialDiff);

    public abstract void setAnimMove(org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move, boolean);

    public abstract boolean whiteBasedScores();

    public abstract boolean ponderMode();

    public abstract int engineThreads();

    public abstract android.content.Context getContext();

    public abstract java.lang.String playerName();

    public abstract boolean discardVariations();
}
public class org.petero.droidfish.GameMode extends java.lang.Object
{
    private final int modeNr;
    public static final int PLAYER_WHITE;
    public static final int PLAYER_BLACK;
    public static final int TWO_PLAYERS;
    public static final int ANALYSIS;
    public static final int TWO_COMPUTERS;
    public static final int EDIT_GAME;

    public void <init>(int)
    {
        org.petero.droidfish.GameMode r0;
        int i0;

        r0 := @this: org.petero.droidfish.GameMode;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.GameMode: int modeNr> = i0;
        return;
    }

    public int getModeNr()
    {
        org.petero.droidfish.GameMode r0;
        int $i0;

        r0 := @this: org.petero.droidfish.GameMode;
        $i0 = r0.<org.petero.droidfish.GameMode: int modeNr>;
        return $i0;
    }

    public final boolean playerWhite()
    {
        org.petero.droidfish.GameMode r0;
        int $i0;

        r0 := @this: org.petero.droidfish.GameMode;
        $i0 = r0.<org.petero.droidfish.GameMode: int modeNr>;
        tableswitch($i0)
        {
            case 1: goto label0;
            case 2: goto label1;
            case 3: goto label0;
            case 4: goto label0;
            case 5: goto label1;
            case 6: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }

    public final boolean playerBlack()
    {
        org.petero.droidfish.GameMode r0;
        int $i0;

        r0 := @this: org.petero.droidfish.GameMode;
        $i0 = r0.<org.petero.droidfish.GameMode: int modeNr>;
        tableswitch($i0)
        {
            case 2: goto label0;
            case 3: goto label0;
            case 4: goto label0;
            case 5: goto label1;
            case 6: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }

    public final boolean analysisMode()
    {
        org.petero.droidfish.GameMode r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.GameMode;
        $i0 = r0.<org.petero.droidfish.GameMode: int modeNr>;
        if $i0 != 4 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean humansTurn(boolean)
    {
        org.petero.droidfish.GameMode r0;
        boolean z0, $z1;

        r0 := @this: org.petero.droidfish.GameMode;
        z0 := @parameter0: boolean;
        if z0 == 0 goto label0;

        $z1 = virtualinvoke r0.<org.petero.droidfish.GameMode: boolean playerWhite()>();
        goto label1;

     label0:
        $z1 = virtualinvoke r0.<org.petero.droidfish.GameMode: boolean playerBlack()>();

     label1:
        return $z1;
    }

    public final boolean clocksActive()
    {
        org.petero.droidfish.GameMode r0;
        int $i0;

        r0 := @this: org.petero.droidfish.GameMode;
        $i0 = r0.<org.petero.droidfish.GameMode: int modeNr>;
        tableswitch($i0)
        {
            case 1: goto label0;
            case 2: goto label0;
            case 3: goto label0;
            case 4: goto label1;
            case 5: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        org.petero.droidfish.GameMode r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.GameMode;
        r1 := @parameter0: java.lang.Object;
        if r1 == null goto label0;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label1;

     label0:
        return 0;

     label1:
        r2 = (org.petero.droidfish.GameMode) r1;
        $i0 = r0.<org.petero.droidfish.GameMode: int modeNr>;
        $i1 = r2.<org.petero.droidfish.GameMode: int modeNr>;
        if $i0 != $i1 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public int hashCode()
    {
        org.petero.droidfish.GameMode r0;
        int $i0;

        r0 := @this: org.petero.droidfish.GameMode;
        $i0 = r0.<org.petero.droidfish.GameMode: int modeNr>;
        return $i0;
    }
}
public class org.petero.droidfish.MyScrollView extends android.widget.ScrollView
{

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        org.petero.droidfish.MyScrollView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: org.petero.droidfish.MyScrollView;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        specialinvoke r0.<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);
        return;
    }

    protected void onMeasure(int, int)
    {
        org.petero.droidfish.MyScrollView r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.view.ViewParent $r1, $r2;
        boolean $z0;
        android.view.View $r3;

        r0 := @this: org.petero.droidfish.MyScrollView;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        specialinvoke r0.<android.widget.ScrollView: void onMeasure(int,int)>(i0, i1);
        i2 = virtualinvoke r0.<org.petero.droidfish.MyScrollView: int getMeasuredWidth()>();
        i3 = virtualinvoke r0.<org.petero.droidfish.MyScrollView: int getMeasuredHeight()>();
        $r1 = virtualinvoke r0.<org.petero.droidfish.MyScrollView: android.view.ViewParent getParent()>();
        $z0 = $r1 instanceof android.view.View;
        if $z0 == 0 goto label0;

        $r2 = virtualinvoke r0.<org.petero.droidfish.MyScrollView: android.view.ViewParent getParent()>();
        $r3 = (android.view.View) $r2;
        i4 = virtualinvoke $r3.<android.view.View: int getHeight()>();
        if i4 <= 0 goto label0;

        $i5 = i4 * 3;
        $i6 = $i5 / 4;
        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i6);

     label0:
        virtualinvoke r0.<org.petero.droidfish.MyScrollView: void setMeasuredDimension(int,int)>(i2, i3);
        return;
    }
}
public class org.petero.droidfish.PGNOptions$Export extends java.lang.Object
{
    public boolean variations;
    public boolean comments;
    public boolean nag;
    public boolean playerAction;
    public boolean clockInfo;
    public boolean pgnPromotions;
    public boolean moveNrAfterNag;
    public int pieceType;

    public void <init>()
    {
        org.petero.droidfish.PGNOptions$Export r0;

        r0 := @this: org.petero.droidfish.PGNOptions$Export;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class org.petero.droidfish.PGNOptions$Import extends java.lang.Object
{
    public boolean variations;
    public boolean comments;
    public boolean nag;

    public void <init>()
    {
        org.petero.droidfish.PGNOptions$Import r0;

        r0 := @this: org.petero.droidfish.PGNOptions$Import;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class org.petero.droidfish.PGNOptions$Viewer extends java.lang.Object
{
    public boolean variations;
    public boolean comments;
    public boolean nag;
    public boolean headers;
    public int pieceType;

    public void <init>()
    {
        org.petero.droidfish.PGNOptions$Viewer r0;

        r0 := @this: org.petero.droidfish.PGNOptions$Viewer;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class org.petero.droidfish.PGNOptions extends java.lang.Object
{
    public static final int PT_ENGLISH;
    public static final int PT_LOCAL;
    public static final int PT_FIGURINE;
    public org.petero.droidfish.PGNOptions$Viewer view;
    public org.petero.droidfish.PGNOptions$Import imp;
    public org.petero.droidfish.PGNOptions$Export exp;

    public void <init>()
    {
        org.petero.droidfish.PGNOptions r0;
        org.petero.droidfish.PGNOptions$Viewer $r1;
        org.petero.droidfish.PGNOptions$Import $r2;
        org.petero.droidfish.PGNOptions$Export $r3, $r4, $r5;

        r0 := @this: org.petero.droidfish.PGNOptions;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new org.petero.droidfish.PGNOptions$Viewer;
        specialinvoke $r1.<org.petero.droidfish.PGNOptions$Viewer: void <init>()>();
        r0.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view> = $r1;
        $r2 = new org.petero.droidfish.PGNOptions$Import;
        specialinvoke $r2.<org.petero.droidfish.PGNOptions$Import: void <init>()>();
        r0.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Import imp> = $r2;
        $r3 = new org.petero.droidfish.PGNOptions$Export;
        specialinvoke $r3.<org.petero.droidfish.PGNOptions$Export: void <init>()>();
        r0.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp> = $r3;
        $r4 = r0.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r4.<org.petero.droidfish.PGNOptions$Export: boolean moveNrAfterNag> = 1;
        $r5 = r0.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r5.<org.petero.droidfish.PGNOptions$Export: int pieceType> = 0;
        return;
    }
}
public class org.petero.droidfish.SVGPictureDrawable extends android.graphics.drawable.PictureDrawable
{
    private final int iWidth;
    private final int iHeight;
    private android.graphics.Rect cachedBounds;
    private android.graphics.Bitmap cachedBitmap;

    public void <init>(com.larvalabs.svgandroid.SVG)
    {
        org.petero.droidfish.SVGPictureDrawable r0;
        com.larvalabs.svgandroid.SVG r1;
        android.graphics.RectF r2, r3;
        android.graphics.Picture $r4;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.petero.droidfish.SVGPictureDrawable;
        r1 := @parameter0: com.larvalabs.svgandroid.SVG;
        $r4 = virtualinvoke r1.<com.larvalabs.svgandroid.SVG: android.graphics.Picture getPicture()>();
        specialinvoke r0.<android.graphics.drawable.PictureDrawable: void <init>(android.graphics.Picture)>($r4);
        r2 = virtualinvoke r1.<com.larvalabs.svgandroid.SVG: android.graphics.RectF getBounds()>();
        r3 = virtualinvoke r1.<com.larvalabs.svgandroid.SVG: android.graphics.RectF getLimits()>();
        if r2 == null goto label0;

        $f0 = virtualinvoke r2.<android.graphics.RectF: float width()>();
        $i0 = (int) $f0;
        r0.<org.petero.droidfish.SVGPictureDrawable: int iWidth> = $i0;
        $f1 = virtualinvoke r2.<android.graphics.RectF: float height()>();
        $i1 = (int) $f1;
        r0.<org.petero.droidfish.SVGPictureDrawable: int iHeight> = $i1;
        goto label2;

     label0:
        if r3 == null goto label1;

        $f2 = virtualinvoke r3.<android.graphics.RectF: float width()>();
        $i2 = (int) $f2;
        r0.<org.petero.droidfish.SVGPictureDrawable: int iWidth> = $i2;
        $f3 = virtualinvoke r3.<android.graphics.RectF: float height()>();
        $i3 = (int) $f3;
        r0.<org.petero.droidfish.SVGPictureDrawable: int iHeight> = $i3;
        goto label2;

     label1:
        r0.<org.petero.droidfish.SVGPictureDrawable: int iWidth> = -1;
        r0.<org.petero.droidfish.SVGPictureDrawable: int iHeight> = -1;

     label2:
        return;
    }

    public int getIntrinsicWidth()
    {
        org.petero.droidfish.SVGPictureDrawable r0;
        int $i0;

        r0 := @this: org.petero.droidfish.SVGPictureDrawable;
        $i0 = r0.<org.petero.droidfish.SVGPictureDrawable: int iWidth>;
        return $i0;
    }

    public int getIntrinsicHeight()
    {
        org.petero.droidfish.SVGPictureDrawable r0;
        int $i0;

        r0 := @this: org.petero.droidfish.SVGPictureDrawable;
        $i0 = r0.<org.petero.droidfish.SVGPictureDrawable: int iHeight>;
        return $i0;
    }

    public void draw(android.graphics.Canvas)
    {
        org.petero.droidfish.SVGPictureDrawable r0;
        android.graphics.Canvas r1, r4, $r7;
        android.graphics.Rect r2, $r5;
        android.graphics.Bitmap r3, $r9;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.Bitmap$Config $r6;
        android.graphics.Picture $r8;

        r0 := @this: org.petero.droidfish.SVGPictureDrawable;
        r1 := @parameter0: android.graphics.Canvas;
        r2 = virtualinvoke r0.<org.petero.droidfish.SVGPictureDrawable: android.graphics.Rect getBounds()>();
        $r5 = r0.<org.petero.droidfish.SVGPictureDrawable: android.graphics.Rect cachedBounds>;
        $z0 = virtualinvoke r2.<android.graphics.Rect: boolean equals(java.lang.Object)>($r5);
        if $z0 != 0 goto label0;

        $i0 = r2.<android.graphics.Rect: int right>;
        $i1 = r2.<android.graphics.Rect: int left>;
        $i2 = $i0 - $i1;
        $i3 = r2.<android.graphics.Rect: int bottom>;
        $i4 = r2.<android.graphics.Rect: int top>;
        $i5 = $i3 - $i4;
        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i2, $i5, $r6);
        $r7 = new android.graphics.Canvas;
        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r3);
        r4 = $r7;
        $r8 = virtualinvoke r0.<org.petero.droidfish.SVGPictureDrawable: android.graphics.Picture getPicture()>();
        virtualinvoke r4.<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>($r8, r2);
        r0.<org.petero.droidfish.SVGPictureDrawable: android.graphics.Bitmap cachedBitmap> = r3;
        r0.<org.petero.droidfish.SVGPictureDrawable: android.graphics.Rect cachedBounds> = r2;

     label0:
        $r9 = r0.<org.petero.droidfish.SVGPictureDrawable: android.graphics.Bitmap cachedBitmap>;
        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r9, null, r2, null);
        return;
    }
}
class org.petero.droidfish.SeekBarPreference$1$1 extends java.lang.Object implements java.lang.Runnable
{
    final android.widget.EditText val$valueView;
    final org.petero.droidfish.SeekBarPreference$1 this$1;

    void <init>(org.petero.droidfish.SeekBarPreference$1, android.widget.EditText)
    {
        org.petero.droidfish.SeekBarPreference$1$1 r0;
        org.petero.droidfish.SeekBarPreference$1 r1;
        android.widget.EditText r2;

        r0 := @this: org.petero.droidfish.SeekBarPreference$1$1;
        r1 := @parameter0: org.petero.droidfish.SeekBarPreference$1;
        r2 := @parameter1: android.widget.EditText;
        r0.<org.petero.droidfish.SeekBarPreference$1$1: org.petero.droidfish.SeekBarPreference$1 this$1> = r1;
        r0.<org.petero.droidfish.SeekBarPreference$1$1: android.widget.EditText val$valueView> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.SeekBarPreference$1$1 r0;
        java.lang.String r1;
        int i0;
        android.widget.EditText $r2;
        android.text.Editable $r3;
        double $d0, $d1, $d2;
        org.petero.droidfish.SeekBarPreference$1 $r4, $r6;
        org.petero.droidfish.SeekBarPreference $r5;
        android.widget.SeekBar $r7;
        java.lang.NumberFormatException $r8, r9;

        r0 := @this: org.petero.droidfish.SeekBarPreference$1$1;

     label0:
        $r2 = r0.<org.petero.droidfish.SeekBarPreference$1$1: android.widget.EditText val$valueView>;
        $r3 = virtualinvoke $r2.<android.widget.EditText: android.text.Editable getText()>();
        r1 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r1);
        $d1 = $d0 * 10.0;
        $d2 = $d1 + 0.5;
        i0 = (int) $d2;
        if i0 >= 0 goto label1;

        i0 = 0;

     label1:
        if i0 <= 1000 goto label2;

        i0 = 1000;

     label2:
        $r4 = r0.<org.petero.droidfish.SeekBarPreference$1$1: org.petero.droidfish.SeekBarPreference$1 this$1>;
        $r5 = $r4.<org.petero.droidfish.SeekBarPreference$1: org.petero.droidfish.SeekBarPreference this$0>;
        $r6 = r0.<org.petero.droidfish.SeekBarPreference$1$1: org.petero.droidfish.SeekBarPreference$1 this$1>;
        $r7 = $r6.<org.petero.droidfish.SeekBarPreference$1: android.widget.SeekBar val$bar>;
        virtualinvoke $r5.<org.petero.droidfish.SeekBarPreference: void onProgressChanged(android.widget.SeekBar,int,boolean)>($r7, i0, 0);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;

     label5:
        return;

        catch java.lang.NumberFormatException from label0 to label3 with label4;
    }
}
class org.petero.droidfish.SeekBarPreference$1$2 extends java.lang.Object implements android.view.View$OnKeyListener
{
    final java.lang.Runnable val$selectValue;
    final org.petero.droidfish.SeekBarPreference$1 this$1;

    void <init>(org.petero.droidfish.SeekBarPreference$1, java.lang.Runnable)
    {
        org.petero.droidfish.SeekBarPreference$1$2 r0;
        org.petero.droidfish.SeekBarPreference$1 r1;
        java.lang.Runnable r2;

        r0 := @this: org.petero.droidfish.SeekBarPreference$1$2;
        r1 := @parameter0: org.petero.droidfish.SeekBarPreference$1;
        r2 := @parameter1: java.lang.Runnable;
        r0.<org.petero.droidfish.SeekBarPreference$1$2: org.petero.droidfish.SeekBarPreference$1 this$1> = r1;
        r0.<org.petero.droidfish.SeekBarPreference$1$2: java.lang.Runnable val$selectValue> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onKey(android.view.View, int, android.view.KeyEvent)
    {
        org.petero.droidfish.SeekBarPreference$1$2 r0;
        android.view.View r1;
        int i0, $i1;
        android.view.KeyEvent r2;
        java.lang.Runnable $r3;

        r0 := @this: org.petero.droidfish.SeekBarPreference$1$2;
        r1 := @parameter0: android.view.View;
        i0 := @parameter1: int;
        r2 := @parameter2: android.view.KeyEvent;
        $i1 = virtualinvoke r2.<android.view.KeyEvent: int getAction()>();
        if $i1 != 0 goto label0;

        if i0 != 66 goto label0;

        $r3 = r0.<org.petero.droidfish.SeekBarPreference$1$2: java.lang.Runnable val$selectValue>;
        interfaceinvoke $r3.<java.lang.Runnable: void run()>();
        return 1;

     label0:
        return 0;
    }
}
class org.petero.droidfish.SeekBarPreference$1$3 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.lang.Runnable val$selectValue;
    final org.petero.droidfish.SeekBarPreference$1 this$1;

    void <init>(org.petero.droidfish.SeekBarPreference$1, java.lang.Runnable)
    {
        org.petero.droidfish.SeekBarPreference$1$3 r0;
        org.petero.droidfish.SeekBarPreference$1 r1;
        java.lang.Runnable r2;

        r0 := @this: org.petero.droidfish.SeekBarPreference$1$3;
        r1 := @parameter0: org.petero.droidfish.SeekBarPreference$1;
        r2 := @parameter1: java.lang.Runnable;
        r0.<org.petero.droidfish.SeekBarPreference$1$3: org.petero.droidfish.SeekBarPreference$1 this$1> = r1;
        r0.<org.petero.droidfish.SeekBarPreference$1$3: java.lang.Runnable val$selectValue> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.SeekBarPreference$1$3 r0;
        android.content.DialogInterface r1;
        int i0;
        java.lang.Runnable $r2;

        r0 := @this: org.petero.droidfish.SeekBarPreference$1$3;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.SeekBarPreference$1$3: java.lang.Runnable val$selectValue>;
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();
        return;
    }
}
class org.petero.droidfish.SeekBarPreference$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final android.widget.SeekBar val$bar;
    final org.petero.droidfish.SeekBarPreference this$0;

    void <init>(org.petero.droidfish.SeekBarPreference, android.widget.SeekBar)
    {
        org.petero.droidfish.SeekBarPreference$1 r0;
        org.petero.droidfish.SeekBarPreference r1;
        android.widget.SeekBar r2;

        r0 := @this: org.petero.droidfish.SeekBarPreference$1;
        r1 := @parameter0: org.petero.droidfish.SeekBarPreference;
        r2 := @parameter1: android.widget.SeekBar;
        r0.<org.petero.droidfish.SeekBarPreference$1: org.petero.droidfish.SeekBarPreference this$0> = r1;
        r0.<org.petero.droidfish.SeekBarPreference$1: android.widget.SeekBar val$bar> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.view.View)
    {
        org.petero.droidfish.SeekBarPreference$1 r0;
        android.view.View r1, r2, $r20;
        android.app.AlertDialog$Builder r3, $r10;
        java.lang.String r4, r5, $r24, $r25, $r26;
        android.widget.EditText r6;
        org.petero.droidfish.SeekBarPreference$1$1 r7, $r27;
        org.petero.droidfish.SeekBarPreference $r8, $r11, $r14, $r15, $r17, $r21;
        android.content.Context $r9, $r12, $r16, $r18;
        boolean $z0, $z1;
        android.widget.TextView $r22;
        java.lang.CharSequence $r23;
        org.petero.droidfish.SeekBarPreference$1$2 $r28;
        org.petero.droidfish.SeekBarPreference$1$3 $r29;
        android.app.AlertDialog $r32;

        r0 := @this: org.petero.droidfish.SeekBarPreference$1;
        r1 := @parameter0: android.view.View;
        $r8 = r0.<org.petero.droidfish.SeekBarPreference$1: org.petero.droidfish.SeekBarPreference this$0>;
        $r9 = virtualinvoke $r8.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        r2 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r9, 2130903053, null);
        $r10 = new android.app.AlertDialog$Builder;
        $r11 = r0.<org.petero.droidfish.SeekBarPreference$1: org.petero.droidfish.SeekBarPreference this$0>;
        $r12 = virtualinvoke $r11.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        specialinvoke $r10.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r12);
        r3 = $r10;
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r2);
        r4 = "";
        $r14 = r0.<org.petero.droidfish.SeekBarPreference$1: org.petero.droidfish.SeekBarPreference this$0>;
        r5 = virtualinvoke $r14.<org.petero.droidfish.SeekBarPreference: java.lang.String getKey()>();
        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("strength");
        if $z0 == 0 goto label0;

        $r15 = r0.<org.petero.droidfish.SeekBarPreference$1: org.petero.droidfish.SeekBarPreference this$0>;
        $r16 = virtualinvoke $r15.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        r4 = virtualinvoke $r16.<android.content.Context: java.lang.String getString(int)>(2131099682);
        goto label1;

     label0:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("bookRandom");
        if $z1 == 0 goto label1;

        $r17 = r0.<org.petero.droidfish.SeekBarPreference$1: org.petero.droidfish.SeekBarPreference this$0>;
        $r18 = virtualinvoke $r17.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        r4 = virtualinvoke $r18.<android.content.Context: java.lang.String getString(int)>(2131099683);

     label1:
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>(r4);
        $r20 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>(2131296305);
        r6 = (android.widget.EditText) $r20;
        $r21 = r0.<org.petero.droidfish.SeekBarPreference$1: org.petero.droidfish.SeekBarPreference this$0>;
        $r22 = staticinvoke <org.petero.droidfish.SeekBarPreference: android.widget.TextView access$000(org.petero.droidfish.SeekBarPreference)>($r21);
        $r23 = virtualinvoke $r22.<android.widget.TextView: java.lang.CharSequence getText()>();
        $r24 = interfaceinvoke $r23.<java.lang.CharSequence: java.lang.String toString()>();
        $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("%", "");
        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(",", ".");
        virtualinvoke r6.<android.widget.EditText: void setText(java.lang.CharSequence)>($r26);
        $r27 = new org.petero.droidfish.SeekBarPreference$1$1;
        specialinvoke $r27.<org.petero.droidfish.SeekBarPreference$1$1: void <init>(org.petero.droidfish.SeekBarPreference$1,android.widget.EditText)>(r0, r6);
        r7 = $r27;
        $r28 = new org.petero.droidfish.SeekBarPreference$1$2;
        specialinvoke $r28.<org.petero.droidfish.SeekBarPreference$1$2: void <init>(org.petero.droidfish.SeekBarPreference$1,java.lang.Runnable)>(r0, r7);
        virtualinvoke r6.<android.widget.EditText: void setOnKeyListener(android.view.View$OnKeyListener)>($r28);
        $r29 = new org.petero.droidfish.SeekBarPreference$1$3;
        specialinvoke $r29.<org.petero.droidfish.SeekBarPreference$1$3: void <init>(org.petero.droidfish.SeekBarPreference$1,java.lang.Runnable)>(r0, r7);
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Ok", $r29);
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Cancel", null);
        $r32 = virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        virtualinvoke $r32.<android.app.AlertDialog: void show()>();
        return;
    }
}
public class org.petero.droidfish.SeekBarPreference extends android.preference.Preference implements android.widget.SeekBar$OnSeekBarChangeListener
{
    private static final int maxValue;
    private static final int DEFAULT_VALUE;
    private int currVal;
    private android.widget.TextView currValBox;
    private boolean showStrengthHint;

    public void <init>(android.content.Context)
    {
        org.petero.droidfish.SeekBarPreference r0;
        android.content.Context r1;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        r1 := @parameter0: android.content.Context;
        specialinvoke r0.<android.preference.Preference: void <init>(android.content.Context)>(r1);
        r0.<org.petero.droidfish.SeekBarPreference: int currVal> = 1000;
        r0.<org.petero.droidfish.SeekBarPreference: boolean showStrengthHint> = 1;
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        org.petero.droidfish.SeekBarPreference r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        specialinvoke r0.<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);
        r0.<org.petero.droidfish.SeekBarPreference: int currVal> = 1000;
        r0.<org.petero.droidfish.SeekBarPreference: boolean showStrengthHint> = 1;
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        org.petero.droidfish.SeekBarPreference r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        i0 := @parameter2: int;
        specialinvoke r0.<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);
        r0.<org.petero.droidfish.SeekBarPreference: int currVal> = 1000;
        r0.<org.petero.droidfish.SeekBarPreference: boolean showStrengthHint> = 1;
        return;
    }

    protected android.view.View onCreateView(android.view.ViewGroup)
    {
        org.petero.droidfish.SeekBarPreference r0;
        android.view.ViewGroup r1;
        android.widget.TextView $r2, r3, r8, $r14, $r16, $r17, $r19, $r20, $r24, $r27, $r32, $r39;
        android.widget.LinearLayout$LayoutParams r4, $r13, $r22, r23, $r30, r31, $r35, r36;
        android.widget.LinearLayout r5, r9, $r25, $r37;
        android.widget.SeekBar r6, $r28;
        java.lang.CharSequence r7, $r11, $r34;
        boolean z0, $z1;
        android.content.Context $r10, $r12, $r15, $r26, $r29, $r33, $r38;
        android.graphics.Typeface $r18;
        java.lang.String $r21;
        int $i0, $i1;
        org.petero.droidfish.SeekBarPreference$1 $r40;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        r1 := @parameter0: android.view.ViewGroup;
        $r2 = new android.widget.TextView;
        $r10 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        specialinvoke $r2.<android.widget.TextView: void <init>(android.content.Context)>($r10);
        r3 = $r2;
        $r11 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: java.lang.CharSequence getTitle()>();
        virtualinvoke r3.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);
        $r12 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        virtualinvoke r3.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r12, 16973890);
        virtualinvoke r3.<android.widget.TextView: void setGravity(int)>(3);
        $r13 = new android.widget.LinearLayout$LayoutParams;
        specialinvoke $r13.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        r4 = $r13;
        r4.<android.widget.LinearLayout$LayoutParams: int gravity> = 3;
        r4.<android.widget.LinearLayout$LayoutParams: float weight> = 1.0F;
        virtualinvoke r3.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r4);
        $r14 = new android.widget.TextView;
        $r15 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        specialinvoke $r14.<android.widget.TextView: void <init>(android.content.Context)>($r15);
        r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox> = $r14;
        $r16 = r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox>;
        virtualinvoke $r16.<android.widget.TextView: void setTextSize(float)>(12.0F);
        $r17 = r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox>;
        $r18 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;
        virtualinvoke $r17.<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>($r18, 2);
        $r19 = r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox>;
        virtualinvoke $r19.<android.widget.TextView: void setPadding(int,int,int,int)>(2, 5, 0, 0);
        $r20 = r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox>;
        $r21 = specialinvoke r0.<org.petero.droidfish.SeekBarPreference: java.lang.String valToString()>();
        virtualinvoke $r20.<android.widget.TextView: void setText(java.lang.CharSequence)>($r21);
        $r22 = new android.widget.LinearLayout$LayoutParams;
        specialinvoke $r22.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        r23 = $r22;
        r23.<android.widget.LinearLayout$LayoutParams: int gravity> = 17;
        $r24 = r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox>;
        virtualinvoke $r24.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r23);
        $r25 = new android.widget.LinearLayout;
        $r26 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        specialinvoke $r25.<android.widget.LinearLayout: void <init>(android.content.Context)>($r26);
        r5 = $r25;
        virtualinvoke r5.<android.widget.LinearLayout: void setOrientation(int)>(0);
        virtualinvoke r5.<android.widget.LinearLayout: void addView(android.view.View)>(r3);
        $r27 = r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox>;
        virtualinvoke r5.<android.widget.LinearLayout: void addView(android.view.View)>($r27);
        $r28 = new android.widget.SeekBar;
        $r29 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        specialinvoke $r28.<android.widget.SeekBar: void <init>(android.content.Context)>($r29);
        r6 = $r28;
        virtualinvoke r6.<android.widget.SeekBar: void setMax(int)>(1000);
        $i0 = r0.<org.petero.droidfish.SeekBarPreference: int currVal>;
        virtualinvoke r6.<android.widget.SeekBar: void setProgress(int)>($i0);
        virtualinvoke r6.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(r0);
        $r30 = new android.widget.LinearLayout$LayoutParams;
        specialinvoke $r30.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-1, -2);
        r31 = $r30;
        r31.<android.widget.LinearLayout$LayoutParams: int gravity> = 5;
        virtualinvoke r6.<android.widget.SeekBar: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r31);
        r7 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: java.lang.CharSequence getSummary()>();
        if r7 == null goto label0;

        $i1 = interfaceinvoke r7.<java.lang.CharSequence: int length()>();
        if $i1 <= 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        r8 = null;
        if z0 == 0 goto label2;

        $r32 = new android.widget.TextView;
        $r33 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        specialinvoke $r32.<android.widget.TextView: void <init>(android.content.Context)>($r33);
        r8 = $r32;
        $r34 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: java.lang.CharSequence getSummary()>();
        virtualinvoke r8.<android.widget.TextView: void setText(java.lang.CharSequence)>($r34);
        virtualinvoke r8.<android.widget.TextView: void setGravity(int)>(3);
        $r35 = new android.widget.LinearLayout$LayoutParams;
        specialinvoke $r35.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        r36 = $r35;
        r36.<android.widget.LinearLayout$LayoutParams: int gravity> = 3;
        r36.<android.widget.LinearLayout$LayoutParams: float weight> = 1.0F;
        virtualinvoke r8.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r36);

     label2:
        $r37 = new android.widget.LinearLayout;
        $r38 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        specialinvoke $r37.<android.widget.LinearLayout: void <init>(android.content.Context)>($r38);
        r9 = $r37;
        virtualinvoke r9.<android.widget.LinearLayout: void setPadding(int,int,int,int)>(25, 5, 25, 5);
        virtualinvoke r9.<android.widget.LinearLayout: void setOrientation(int)>(1);
        virtualinvoke r9.<android.widget.LinearLayout: void addView(android.view.View)>(r5);
        virtualinvoke r9.<android.widget.LinearLayout: void addView(android.view.View)>(r6);
        if r8 == null goto label3;

        virtualinvoke r9.<android.widget.LinearLayout: void addView(android.view.View)>(r8);

     label3:
        virtualinvoke r9.<android.widget.LinearLayout: void setId(int)>(16908312);
        $r39 = r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox>;
        $r40 = new org.petero.droidfish.SeekBarPreference$1;
        specialinvoke $r40.<org.petero.droidfish.SeekBarPreference$1: void <init>(org.petero.droidfish.SeekBarPreference,android.widget.SeekBar)>(r0, r6);
        virtualinvoke $r39.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r40);
        return r9;
    }

    private final java.lang.String valToString()
    {
        org.petero.droidfish.SeekBarPreference r0;
        java.lang.Object[] $r1;
        int $i0;
        double $d0, $d1;
        java.lang.Double $r2;
        java.lang.String $r3;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        $r1 = newarray (java.lang.Object)[1];
        $i0 = r0.<org.petero.droidfish.SeekBarPreference: int currVal>;
        $d0 = (double) $i0;
        $d1 = $d0 * 0.1;
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
        $r1[0] = $r2;
        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.1f%%", $r1);
        return $r3;
    }

    public void onProgressChanged(android.widget.SeekBar, int, boolean)
    {
        org.petero.droidfish.SeekBarPreference r0;
        android.widget.SeekBar r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, $z1, $z3, $z4, $z5;
        android.content.SharedPreferences$Editor r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r7, $r8, $r11, $r12;
        java.lang.Integer $r5;
        android.widget.TextView $r6;
        android.content.Context $r10, $r13;
        android.widget.Toast $r14;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        r1 := @parameter0: android.widget.SeekBar;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $z1 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: boolean callChangeListener(java.lang.Object)>($r5);
        if $z1 != 0 goto label1;

        $i1 = r0.<org.petero.droidfish.SeekBarPreference: int currVal>;
        $i2 = virtualinvoke r1.<android.widget.SeekBar: int getProgress()>();
        if $i1 == $i2 goto label0;

        $i3 = r0.<org.petero.droidfish.SeekBarPreference: int currVal>;
        virtualinvoke r1.<android.widget.SeekBar: void setProgress(int)>($i3);

     label0:
        return;

     label1:
        $i4 = virtualinvoke r1.<android.widget.SeekBar: int getProgress()>();
        if i0 == $i4 goto label2;

        virtualinvoke r1.<android.widget.SeekBar: void setProgress(int)>(i0);

     label2:
        r0.<org.petero.droidfish.SeekBarPreference: int currVal> = i0;
        $r6 = r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox>;
        $r7 = specialinvoke r0.<org.petero.droidfish.SeekBarPreference: java.lang.String valToString()>();
        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);
        r2 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.SharedPreferences$Editor getEditor()>();
        $r8 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: java.lang.String getKey()>();
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r8, i0);
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: boolean commit()>();
        if i0 != 0 goto label3;

        $z3 = r0.<org.petero.droidfish.SeekBarPreference: boolean showStrengthHint>;
        if $z3 == 0 goto label3;

        $r10 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        r3 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r10);
        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("engine", "stockfish");
        $r11 = "stockfish";
        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z4 == 0 goto label3;

        r0.<org.petero.droidfish.SeekBarPreference: boolean showStrengthHint> = 0;
        $r12 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: java.lang.String getKey()>();
        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("strength");
        if $z5 == 0 goto label3;

        $r13 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: android.content.Context getContext()>();
        $r14 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r13, 2131099834, 1);
        virtualinvoke $r14.<android.widget.Toast: void show()>();

     label3:
        return;
    }

    public void onStartTrackingTouch(android.widget.SeekBar)
    {
        org.petero.droidfish.SeekBarPreference r0;
        android.widget.SeekBar r1;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        r1 := @parameter0: android.widget.SeekBar;
        return;
    }

    public void onStopTrackingTouch(android.widget.SeekBar)
    {
        org.petero.droidfish.SeekBarPreference r0;
        android.widget.SeekBar r1;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        r1 := @parameter0: android.widget.SeekBar;
        virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: void notifyChanged()>();
        return;
    }

    protected java.lang.Object onGetDefaultValue(android.content.res.TypedArray, int)
    {
        org.petero.droidfish.SeekBarPreference r0;
        android.content.res.TypedArray r1;
        int i0, i1;
        java.lang.Integer $r2;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        r1 := @parameter0: android.content.res.TypedArray;
        i0 := @parameter1: int;
        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(i0, 1000);
        if i1 <= 1000 goto label0;

        i1 = 1000;

     label0:
        if i1 >= 0 goto label1;

        i1 = 0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        return $r2;
    }

    protected void onSetInitialValue(boolean, java.lang.Object)
    {
        org.petero.droidfish.SeekBarPreference r0;
        boolean z0;
        java.lang.Object r1;
        int i0, $i1;
        java.lang.Integer $r2;

        r0 := @this: org.petero.droidfish.SeekBarPreference;
        z0 := @parameter0: boolean;
        r1 := @parameter1: java.lang.Object;
        if z0 == 0 goto label0;

        $i1 = virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: int getPersistedInt(int)>(1000);
        goto label1;

     label0:
        $r2 = (java.lang.Integer) r1;
        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

     label1:
        i0 = $i1;
        if z0 != 0 goto label2;

        virtualinvoke r0.<org.petero.droidfish.SeekBarPreference: boolean persistInt(int)>(i0);

     label2:
        r0.<org.petero.droidfish.SeekBarPreference: int currVal> = i0;
        return;
    }

    static android.widget.TextView access$000(org.petero.droidfish.SeekBarPreference)
    {
        org.petero.droidfish.SeekBarPreference r0;
        android.widget.TextView $r1;

        r0 := @parameter0: org.petero.droidfish.SeekBarPreference;
        $r1 = r0.<org.petero.droidfish.SeekBarPreference: android.widget.TextView currValBox>;
        return $r1;
    }
}
public interface  org.petero.droidfish.UIAction extends java.lang.Object implements java.lang.Runnable
{

    public abstract java.lang.String getId();

    public abstract int getName();

    public abstract int getIcon();

    public abstract boolean enabled();
}
public final class org.petero.droidfish.Util$MaterialDiff extends java.lang.Object
{
    public java.lang.CharSequence white;
    public java.lang.CharSequence black;

    void <init>(java.lang.CharSequence, java.lang.CharSequence)
    {
        org.petero.droidfish.Util$MaterialDiff r0;
        java.lang.CharSequence r1, r2;

        r0 := @this: org.petero.droidfish.Util$MaterialDiff;
        r1 := @parameter0: java.lang.CharSequence;
        r2 := @parameter1: java.lang.CharSequence;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.Util$MaterialDiff: java.lang.CharSequence white> = r1;
        r0.<org.petero.droidfish.Util$MaterialDiff: java.lang.CharSequence black> = r2;
        return;
    }
}
public final class org.petero.droidfish.Util extends java.lang.Object
{
    public static final java.lang.String boldStart;
    public static final java.lang.String boldStop;

    public void <init>()
    {
        org.petero.droidfish.Util r0;

        r0 := @this: org.petero.droidfish.Util;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String[] readFile(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r6, $r10;
        java.util.ArrayList $r1, r2;
        java.io.FileInputStream r3, $r7;
        java.io.InputStreamReader r4, $r8;
        java.io.BufferedReader r5, $r9;
        int $i0;
        java.lang.String[] $r11, $r13;
        java.lang.Object[] $r12;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r7 = new java.io.FileInputStream;
        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);
        r3 = $r7;
        $r8 = new java.io.InputStreamReader;
        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r3);
        r4 = $r8;
        $r9 = new java.io.BufferedReader;
        specialinvoke $r9.<java.io.BufferedReader: void <init>(java.io.Reader)>(r4);
        r5 = $r9;

     label0:
        $r10 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>();
        r6 = $r10;
        if $r10 == null goto label1;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);
        goto label0;

     label1:
        virtualinvoke r5.<java.io.BufferedReader: void close()>();
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        $r11 = newarray (java.lang.String)[$i0];
        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r11);
        $r13 = (java.lang.String[]) $r12;
        return $r13;
    }

    public static org.petero.droidfish.Util$MaterialDiff getMaterialDiff(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        java.lang.StringBuilder $r1, r2, r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5;
        char $c6, $c7;
        org.petero.droidfish.Util$MaterialDiff $r7;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r3 = $r4;
        i0 = 6;

     label0:
        if i0 < 1 goto label4;

        $i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(i0);
        $i3 = staticinvoke <org.petero.droidfish.gamelogic.Piece: int swapColor(int)>(i0);
        $i4 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>($i3);
        i1 = $i2 - $i4;

     label1:
        if i1 >= 0 goto label2;

        $i5 = staticinvoke <org.petero.droidfish.gamelogic.Piece: int swapColor(int)>(i0);
        $c6 = staticinvoke <org.petero.droidfish.gamelogic.Piece: char toUniCode(int)>($i5);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);
        i1 = i1 + 1;
        goto label1;

     label2:
        if i1 <= 0 goto label3;

        $c7 = staticinvoke <org.petero.droidfish.gamelogic.Piece: char toUniCode(int)>(i0);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);
        i1 = i1 + -1;
        goto label2;

     label3:
        i0 = i0 + -1;
        goto label0;

     label4:
        $r7 = new org.petero.droidfish.Util$MaterialDiff;
        specialinvoke $r7.<org.petero.droidfish.Util$MaterialDiff: void <init>(java.lang.CharSequence,java.lang.CharSequence)>(r2, r3);
        return $r7;
    }

    public static void setFullScreenMode(android.app.Activity, android.content.SharedPreferences)
    {
        android.app.Activity r0;
        android.content.SharedPreferences r1;
        boolean z0;
        android.view.WindowManager$LayoutParams r2;
        android.view.Window $r3, $r6;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: android.app.Activity;
        r1 := @parameter1: android.content.SharedPreferences;
        z0 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("fullScreenMode", 0);
        $r3 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();
        r2 = virtualinvoke $r3.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();
        if z0 == 0 goto label0;

        $i0 = r2.<android.view.WindowManager$LayoutParams: int flags>;
        $i1 = $i0 | 1024;
        r2.<android.view.WindowManager$LayoutParams: int flags> = $i1;
        goto label1;

     label0:
        $i2 = r2.<android.view.WindowManager$LayoutParams: int flags>;
        $i3 = $i2 & -1025;
        r2.<android.view.WindowManager$LayoutParams: int flags> = $i3;

     label1:
        $r6 = virtualinvoke r0.<android.app.Activity: android.view.Window getWindow()>();
        virtualinvoke $r6.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r2);
        return;
    }

    public static void overrideFonts(android.view.View)
    {
        android.view.View r0, r2;
        int i0, i1, $i2, i3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.view.ViewGroup r1;
        org.petero.droidfish.ColorTheme $r3, $r7;
        java.lang.String $r4;
        java.lang.Object $r5;
        android.widget.ListView $r6;
        android.widget.TextView $r8;

        r0 := @parameter0: android.view.View;
        if r0 != null goto label0;

        return;

     label0:
        $r3 = staticinvoke <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme instance()>();
        i0 = virtualinvoke $r3.<org.petero.droidfish.ColorTheme: int getColor(int)>(17);
        $z1 = r0 instanceof android.widget.Button;
        if $z1 != 0 goto label1;

        $z2 = r0 instanceof android.widget.EditText;
        if $z2 != 0 goto label1;

        $z3 = r0 instanceof android.widget.ImageButton;
        if $z3 != 0 goto label1;

        $r4 = "title";
        $r5 = virtualinvoke r0.<android.view.View: java.lang.Object getTag()>();
        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;
        goto label3;

     label2:
        $z5 = 0;

     label3:
        z0 = $z5;
        if z0 != 0 goto label4;

        virtualinvoke r0.<android.view.View: void setBackgroundColor(int)>(i0);

     label4:
        $z6 = r0 instanceof android.widget.ListView;
        if $z6 == 0 goto label5;

        $r6 = (android.widget.ListView) r0;
        virtualinvoke $r6.<android.widget.ListView: void setCacheColorHint(int)>(i0);

     label5:
        $z7 = r0 instanceof android.view.ViewGroup;
        if $z7 == 0 goto label8;

        r1 = (android.view.ViewGroup) r0;
        i1 = 0;

     label6:
        $i2 = virtualinvoke r1.<android.view.ViewGroup: int getChildCount()>();
        if i1 >= $i2 goto label7;

        r2 = virtualinvoke r1.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);
        staticinvoke <org.petero.droidfish.Util: void overrideFonts(android.view.View)>(r2);
        i1 = i1 + 1;
        goto label6;

     label7:
        goto label9;

     label8:
        $z8 = r0 instanceof android.widget.TextView;
        if $z8 == 0 goto label9;

        if z0 != 0 goto label9;

        $r7 = staticinvoke <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme instance()>();
        i3 = virtualinvoke $r7.<org.petero.droidfish.ColorTheme: int getColor(int)>(16);
        $r8 = (android.widget.TextView) r0;
        virtualinvoke $r8.<android.widget.TextView: void setTextColor(int)>(i3);

     label9:
        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        int i0;

        $r0 = <android.os.Build$VERSION: java.lang.String SDK>;
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);
        if i0 < 16 goto label0;

        <org.petero.droidfish.Util: java.lang.String boldStart> = "";
        <org.petero.droidfish.Util: java.lang.String boldStop> = "";
        goto label1;

     label0:
        <org.petero.droidfish.Util: java.lang.String boldStart> = "<b>";
        <org.petero.droidfish.Util: java.lang.String boldStop> = "</b>";

     label1:
        return;
    }
}
class org.petero.droidfish.activities.CPUWarning$1 extends java.lang.Object implements android.content.DialogInterface$OnDismissListener
{
    final org.petero.droidfish.activities.CPUWarning this$0;

    void <init>(org.petero.droidfish.activities.CPUWarning)
    {
        org.petero.droidfish.activities.CPUWarning$1 r0;
        org.petero.droidfish.activities.CPUWarning r1;

        r0 := @this: org.petero.droidfish.activities.CPUWarning$1;
        r1 := @parameter0: org.petero.droidfish.activities.CPUWarning;
        r0.<org.petero.droidfish.activities.CPUWarning$1: org.petero.droidfish.activities.CPUWarning this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onDismiss(android.content.DialogInterface)
    {
        org.petero.droidfish.activities.CPUWarning$1 r0;
        android.content.DialogInterface r1;
        org.petero.droidfish.activities.CPUWarning $r2;

        r0 := @this: org.petero.droidfish.activities.CPUWarning$1;
        r1 := @parameter0: android.content.DialogInterface;
        $r2 = r0.<org.petero.droidfish.activities.CPUWarning$1: org.petero.droidfish.activities.CPUWarning this$0>;
        virtualinvoke $r2.<org.petero.droidfish.activities.CPUWarning: void finish()>();
        return;
    }
}
public class org.petero.droidfish.activities.CPUWarning extends android.app.Activity
{
    static final int CPU_WARNING_DIALOG;

    public void <init>()
    {
        org.petero.droidfish.activities.CPUWarning r0;

        r0 := @this: org.petero.droidfish.activities.CPUWarning;
        specialinvoke r0.<android.app.Activity: void <init>()>();
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        org.petero.droidfish.activities.CPUWarning r0;
        android.os.Bundle r1;

        r0 := @this: org.petero.droidfish.activities.CPUWarning;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<org.petero.droidfish.activities.CPUWarning: void showDialog(int)>(1);
        return;
    }

    protected android.app.Dialog onCreateDialog(int)
    {
        org.petero.droidfish.activities.CPUWarning r0;
        int i0;
        android.app.AlertDialog$Builder r1, $r3, $r4;
        android.app.AlertDialog r2;
        org.petero.droidfish.activities.CPUWarning$1 $r6;

        r0 := @this: org.petero.droidfish.activities.CPUWarning;
        i0 := @parameter0: int;
        lookupswitch(i0)
        {
            case 1: goto label0;
            default: goto label1;
        };

     label0:
        $r3 = new android.app.AlertDialog$Builder;
        specialinvoke $r3.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r1 = $r3;
        $r4 = virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099648);
        virtualinvoke $r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2131099660);
        r2 = virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        $r6 = new org.petero.droidfish.activities.CPUWarning$1;
        specialinvoke $r6.<org.petero.droidfish.activities.CPUWarning$1: void <init>(org.petero.droidfish.activities.CPUWarning)>(r0);
        virtualinvoke r2.<android.app.AlertDialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>($r6);
        return r2;

     label1:
        return null;
    }
}
public class org.petero.droidfish.activities.ChessBoardEdit extends org.petero.droidfish.ChessBoard
{
    private final boolean landScape;
    private static final int gap;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.Configuration r3;
        android.content.res.Resources $r4;
        int $i0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: android.util.AttributeSet;
        specialinvoke r0.<org.petero.droidfish.ChessBoard: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);
        r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean drawSquareLabels> = 1;
        $r4 = virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: android.content.res.Resources getResources()>();
        r3 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();
        $i0 = r3.<android.content.res.Configuration: int orientation>;
        if $i0 != 2 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape> = $z0;
        return;
    }

    protected int getWidth(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label0;

        $i1 = i0 * 10;
        $i2 = $i1 + 4;
        goto label1;

     label0:
        $i2 = i0 * 8;

     label1:
        return $i2;
    }

    protected int getHeight(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label0;

        $i1 = i0 * 8;
        goto label1;

     label0:
        $i2 = i0 * 10;
        $i1 = $i2 + 4;

     label1:
        return $i1;
    }

    protected int getSqSizeW(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label0;

        $i1 = i0 - 4;
        $i2 = $i1 / 10;
        goto label1;

     label0:
        $i2 = i0 / 8;

     label1:
        return $i2;
    }

    protected int getSqSizeH(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label0;

        $i1 = i0 / 8;
        goto label1;

     label0:
        $i2 = i0 - 4;
        $i1 = $i2 / 10;

     label1:
        return $i1;
    }

    protected int getMaxHeightPercentage()
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        return 85;
    }

    protected int getMaxWidthPercentage()
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        return 75;
    }

    protected void computeOrigin(int, int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i2 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        $i3 = virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: int getWidth(int)>($i2);
        $i4 = i0 - $i3;
        $i5 = $i4 / 2;
        r0.<org.petero.droidfish.activities.ChessBoardEdit: int x0> = $i5;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label0;

        $i6 = 0;
        goto label1;

     label0:
        $i7 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        $i8 = virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: int getHeight(int)>($i7);
        $i9 = i1 - $i8;
        $i6 = $i9 / 2;

     label1:
        r0.<org.petero.droidfish.activities.ChessBoardEdit: int y0> = $i6;
        return;
    }

    private final int extraPieces(int, int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label15;

        if i0 != 8 goto label7;

        tableswitch(i1)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label0:
        return 1;

     label1:
        return 2;

     label2:
        return 3;

     label3:
        return 4;

     label4:
        return 5;

     label5:
        return 6;

     label6:
        goto label30;

     label7:
        if i0 != 9 goto label30;

        tableswitch(i1)
        {
            case 0: goto label8;
            case 1: goto label9;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label12;
            case 5: goto label13;
            default: goto label14;
        };

     label8:
        return 7;

     label9:
        return 8;

     label10:
        return 9;

     label11:
        return 10;

     label12:
        return 11;

     label13:
        return 12;

     label14:
        goto label30;

     label15:
        if i1 != -1 goto label23;

        tableswitch(i0)
        {
            case 0: goto label16;
            case 1: goto label17;
            case 2: goto label18;
            case 3: goto label19;
            case 4: goto label20;
            case 5: goto label21;
            default: goto label22;
        };

     label16:
        return 1;

     label17:
        return 2;

     label18:
        return 3;

     label19:
        return 4;

     label20:
        return 5;

     label21:
        return 6;

     label22:
        goto label30;

     label23:
        if i1 != -2 goto label30;

        tableswitch(i0)
        {
            case 0: goto label24;
            case 1: goto label25;
            case 2: goto label26;
            case 3: goto label27;
            case 4: goto label28;
            case 5: goto label29;
            default: goto label30;
        };

     label24:
        return 7;

     label25:
        return 8;

     label26:
        return 9;

     label27:
        return 10;

     label28:
        return 11;

     label29:
        return 12;

     label30:
        return 0;
    }

    protected int getXFromSq(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, i1, $i2;
        boolean $z0, $z1;
        byte $b3;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i2 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i0);
        return $i2;

     label0:
        i1 = -2 - i0;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label3;

        $z1 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i1);
        if $z1 == 0 goto label1;

        $b3 = 8;
        goto label2;

     label1:
        $b3 = 9;

     label2:
        return $b3;

     label3:
        tableswitch(i1)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label8;
            case 6: goto label9;
            case 7: goto label4;
            case 8: goto label5;
            case 9: goto label6;
            case 10: goto label7;
            case 11: goto label8;
            case 12: goto label9;
            default: goto label10;
        };

     label4:
        return 0;

     label5:
        return 1;

     label6:
        return 2;

     label7:
        return 3;

     label8:
        return 4;

     label9:
        return 5;

     label10:
        return 6;
    }

    protected int getYFromSq(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, i1, $i2;
        boolean $z0, $z1;
        byte $b3;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i2 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i0);
        return $i2;

     label0:
        i1 = -2 - i0;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label8;

        tableswitch(i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label1;
            case 8: goto label2;
            case 9: goto label3;
            case 10: goto label4;
            case 11: goto label5;
            case 12: goto label6;
            default: goto label7;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 3;

     label5:
        return 4;

     label6:
        return 5;

     label7:
        return 6;

     label8:
        $z1 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i1);
        if $z1 == 0 goto label9;

        $b3 = -1;
        goto label10;

     label9:
        $b3 = -2;

     label10:
        return $b3;
    }

    protected int getSquare(int, int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        if i1 < 0 goto label0;

        if i0 >= 8 goto label0;

        $i3 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i0, i1);
        return $i3;

     label0:
        i2 = specialinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: int extraPieces(int,int)>(i0, i1);
        $i4 = neg i2;
        $i5 = $i4 - 2;
        return $i5;
    }

    protected void drawExtraSquares(android.graphics.Canvas)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        android.graphics.Canvas r1;
        byte b0, b1, b2, b3, $b9, $b10, $b11, $b12;
        int i4, i5, i6, i7, i8, $i13, $i14, $i15, $i16;
        android.graphics.Paint r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2, $f3;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        r1 := @parameter0: android.graphics.Canvas;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label0;

        $b9 = 8;
        goto label1;

     label0:
        $b9 = 0;

     label1:
        b0 = $b9;
        $z1 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z1 == 0 goto label2;

        $b10 = 10;
        goto label3;

     label2:
        $b10 = 8;

     label3:
        b1 = $b10;
        $z2 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z2 == 0 goto label4;

        $b11 = 0;
        goto label5;

     label4:
        $b11 = -2;

     label5:
        b2 = $b11;
        $z3 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z3 == 0 goto label6;

        $b12 = 8;
        goto label7;

     label6:
        $b12 = 0;

     label7:
        b3 = $b12;
        i4 = b0;

     label8:
        if i4 >= b1 goto label13;

        i5 = b2;

     label9:
        if i5 >= b3 goto label12;

        i6 = virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: int getXCrd(int)>(i4);
        i7 = virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: int getYCrd(int)>(i5);
        $z4 = staticinvoke <org.petero.droidfish.gamelogic.Position: boolean darkSquare(int,int)>(i4, i5);
        if $z4 == 0 goto label10;

        $r3 = r0.<org.petero.droidfish.activities.ChessBoardEdit: android.graphics.Paint darkPaint>;
        goto label11;

     label10:
        $r3 = r0.<org.petero.droidfish.activities.ChessBoardEdit: android.graphics.Paint brightPaint>;

     label11:
        r2 = $r3;
        $f0 = (float) i6;
        $f1 = (float) i7;
        $i13 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        $i14 = i6 + $i13;
        $f2 = (float) $i14;
        $i15 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        $i16 = i7 + $i15;
        $f3 = (float) $i16;
        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, r2);
        i8 = specialinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: int extraPieces(int,int)>(i4, i5);
        virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: void drawPiece(android.graphics.Canvas,int,int,int)>(r1, i6, i7, i8);
        i5 = i5 + 1;
        goto label9;

     label12:
        i4 = i4 + 1;
        goto label8;

     label13:
        return;
    }

    public org.petero.droidfish.gamelogic.Move mousePressed(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, $i1, $i2, $i3;
        org.petero.droidfish.gamelogic.Move r1, $r2;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        if i0 != -1 goto label0;

        return null;

     label0:
        r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean cursorVisible> = 0;
        $i1 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int selectedSquare>;
        if $i1 == -1 goto label2;

        $i2 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int selectedSquare>;
        if i0 == $i2 goto label1;

        $r2 = new org.petero.droidfish.gamelogic.Move;
        $i3 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int selectedSquare>;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>($i3, i0, 0);
        r1 = $r2;
        virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: void setSelection(int)>(i0);
        return r1;

     label1:
        virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: void setSelection(int)>(-1);
        goto label3;

     label2:
        virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: void setSelection(int)>(i0);

     label3:
        return null;
    }

    protected int minValidY()
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        boolean $z0;
        byte $b0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label0;

        $b0 = 0;
        goto label1;

     label0:
        $b0 = -2;

     label1:
        return $b0;
    }

    protected int maxValidX()
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        boolean $z0;
        byte $b0;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label0;

        $b0 = 9;
        goto label1;

     label0:
        $b0 = 7;

     label1:
        return $b0;
    }

    protected int getXCrd(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, $i1, $i2, $i3, $i4, $i6;
        byte $b5;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        $i1 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int x0>;
        $i2 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        $i3 = $i2 * i0;
        $i4 = $i1 + $i3;
        if i0 < 8 goto label0;

        $b5 = 4;
        goto label1;

     label0:
        $b5 = 0;

     label1:
        $i6 = $i4 + $b5;
        return $i6;
    }

    protected int getYCrd(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7;
        byte $b6;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        $i1 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int y0>;
        $i2 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        $i3 = 7 - i0;
        $i4 = $i2 * $i3;
        $i5 = $i1 + $i4;
        if i0 >= 0 goto label0;

        $b6 = 4;
        goto label1;

     label0:
        $b6 = 0;

     label1:
        $i7 = $i5 + $b6;
        return $i7;
    }

    protected int getXSq(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        $i2 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int x0>;
        $i3 = i0 - $i2;
        $i4 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        i1 = $i3 / $i4;
        if i1 >= 8 goto label0;

        return i1;

     label0:
        $i5 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int x0>;
        $i6 = i0 - $i5;
        $i7 = $i6 - 4;
        $i8 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        $i9 = $i7 / $i8;
        return $i9;
    }

    protected int getYSq(int)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        i0 := @parameter0: int;
        $i2 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int y0>;
        $i3 = i0 - $i2;
        $i4 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        $i5 = $i3 / $i4;
        i1 = 7 - $i5;
        if i1 < 0 goto label0;

        return i1;

     label0:
        $i6 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int y0>;
        $i7 = i0 - $i6;
        $i8 = $i7 - 4;
        $i9 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        $i10 = $i8 / $i9;
        $i11 = 7 - $i10;
        return $i11;
    }

    public int eventToSquare(android.view.MotionEvent)
    {
        org.petero.droidfish.activities.ChessBoardEdit r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        float $f0, $f1;
        boolean $z0, $z1;

        r0 := @this: org.petero.droidfish.activities.ChessBoardEdit;
        r1 := @parameter0: android.view.MotionEvent;
        i0 = specialinvoke r0.<org.petero.droidfish.ChessBoard: int eventToSquare(android.view.MotionEvent)>(r1);
        if i0 == -1 goto label0;

        return i0;

     label0:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();
        i1 = (int) $f0;
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();
        i2 = (int) $f1;
        $i6 = r0.<org.petero.droidfish.activities.ChessBoardEdit: int sqSize>;
        if $i6 <= 0 goto label3;

        i3 = virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: int getXSq(int)>(i1);
        i4 = virtualinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: int getYSq(int)>(i2);
        $z0 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z0 == 0 goto label1;

        if i3 < 0 goto label1;

        if i3 >= 10 goto label1;

        if i4 < 0 goto label1;

        if i4 < 8 goto label2;

     label1:
        $z1 = r0.<org.petero.droidfish.activities.ChessBoardEdit: boolean landScape>;
        if $z1 != 0 goto label3;

        if i3 < 0 goto label3;

        if i3 >= 8 goto label3;

        if i4 < -2 goto label3;

        if i4 >= 0 goto label3;

     label2:
        i5 = specialinvoke r0.<org.petero.droidfish.activities.ChessBoardEdit: int extraPieces(int,int)>(i3, i4);
        $i7 = neg i5;
        i0 = $i7 - 2;

     label3:
        return i0;
    }
}
class org.petero.droidfish.activities.EditBoard$1 extends java.lang.Object implements android.view.View$OnClickListener
{
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard$1 r0;
        org.petero.droidfish.activities.EditBoard r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard$1;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r0.<org.petero.droidfish.activities.EditBoard$1: org.petero.droidfish.activities.EditBoard this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.view.View)
    {
        org.petero.droidfish.activities.EditBoard$1 r0;
        android.view.View r1;
        org.petero.droidfish.activities.EditBoard $r2;

        r0 := @this: org.petero.droidfish.activities.EditBoard$1;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.activities.EditBoard$1: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$000(org.petero.droidfish.activities.EditBoard)>($r2);
        return;
    }
}
class org.petero.droidfish.activities.EditBoard$10 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard$10 r0;
        org.petero.droidfish.activities.EditBoard r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard$10;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r0.<org.petero.droidfish.activities.EditBoard$10: org.petero.droidfish.activities.EditBoard this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.activities.EditBoard$10 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.activities.EditBoard $r2;

        r0 := @this: org.petero.droidfish.activities.EditBoard$10;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.activities.EditBoard$10: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$900(org.petero.droidfish.activities.EditBoard,int)>($r2, i0);
        interfaceinvoke r1.<android.content.DialogInterface: void cancel()>();
        return;
    }
}
class org.petero.droidfish.activities.EditBoard$11 extends java.lang.Object implements java.lang.Runnable
{
    final android.widget.EditText val$halfMoveClock;
    final android.widget.EditText val$fullMoveCounter;
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard, android.widget.EditText, android.widget.EditText)
    {
        org.petero.droidfish.activities.EditBoard$11 r0;
        org.petero.droidfish.activities.EditBoard r1;
        android.widget.EditText r2, r3;

        r0 := @this: org.petero.droidfish.activities.EditBoard$11;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r2 := @parameter1: android.widget.EditText;
        r3 := @parameter2: android.widget.EditText;
        r0.<org.petero.droidfish.activities.EditBoard$11: org.petero.droidfish.activities.EditBoard this$0> = r1;
        r0.<org.petero.droidfish.activities.EditBoard$11: android.widget.EditText val$halfMoveClock> = r2;
        r0.<org.petero.droidfish.activities.EditBoard$11: android.widget.EditText val$fullMoveCounter> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.EditBoard$11 r0;
        int i0, i1;
        android.widget.EditText $r1, $r4;
        android.text.Editable $r2, $r5;
        java.lang.String $r3, $r6;
        org.petero.droidfish.activities.EditBoard $r7, $r10, $r15;
        org.petero.droidfish.activities.ChessBoardEdit $r8, $r11;
        org.petero.droidfish.gamelogic.Position $r9, $r12;
        java.lang.NumberFormatException $r13, r14;
        android.content.Context $r16;
        android.widget.Toast $r17;

        r0 := @this: org.petero.droidfish.activities.EditBoard$11;

     label0:
        $r1 = r0.<org.petero.droidfish.activities.EditBoard$11: android.widget.EditText val$halfMoveClock>;
        $r2 = virtualinvoke $r1.<android.widget.EditText: android.text.Editable getText()>();
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);
        $r4 = r0.<org.petero.droidfish.activities.EditBoard$11: android.widget.EditText val$fullMoveCounter>;
        $r5 = virtualinvoke $r4.<android.widget.EditText: android.text.Editable getText()>();
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);
        $r7 = r0.<org.petero.droidfish.activities.EditBoard$11: org.petero.droidfish.activities.EditBoard this$0>;
        $r8 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r7);
        $r9 = $r8.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $r9.<org.petero.droidfish.gamelogic.Position: int halfMoveClock> = i0;
        $r10 = r0.<org.petero.droidfish.activities.EditBoard$11: org.petero.droidfish.activities.EditBoard this$0>;
        $r11 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r10);
        $r12 = $r11.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $r12.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter> = i1;

     label1:
        goto label3;

     label2:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = r0.<org.petero.droidfish.activities.EditBoard$11: org.petero.droidfish.activities.EditBoard this$0>;
        $r16 = virtualinvoke $r15.<org.petero.droidfish.activities.EditBoard: android.content.Context getApplicationContext()>();
        $r17 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r16, 2131099684, 0);
        virtualinvoke $r17.<android.widget.Toast: void show()>();

     label3:
        return;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }
}
class org.petero.droidfish.activities.EditBoard$12 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final java.lang.Runnable val$setCounters;
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard, java.lang.Runnable)
    {
        org.petero.droidfish.activities.EditBoard$12 r0;
        org.petero.droidfish.activities.EditBoard r1;
        java.lang.Runnable r2;

        r0 := @this: org.petero.droidfish.activities.EditBoard$12;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r2 := @parameter1: java.lang.Runnable;
        r0.<org.petero.droidfish.activities.EditBoard$12: org.petero.droidfish.activities.EditBoard this$0> = r1;
        r0.<org.petero.droidfish.activities.EditBoard$12: java.lang.Runnable val$setCounters> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.activities.EditBoard$12 r0;
        android.content.DialogInterface r1;
        int i0;
        java.lang.Runnable $r2;

        r0 := @this: org.petero.droidfish.activities.EditBoard$12;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.activities.EditBoard$12: java.lang.Runnable val$setCounters>;
        interfaceinvoke $r2.<java.lang.Runnable: void run()>();
        return;
    }
}
class org.petero.droidfish.activities.EditBoard$13 extends java.lang.Object implements android.view.View$OnKeyListener
{
    final java.lang.Runnable val$setCounters;
    final android.app.Dialog val$dialog;
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard, java.lang.Runnable, android.app.Dialog)
    {
        org.petero.droidfish.activities.EditBoard$13 r0;
        org.petero.droidfish.activities.EditBoard r1;
        java.lang.Runnable r2;
        android.app.Dialog r3;

        r0 := @this: org.petero.droidfish.activities.EditBoard$13;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r2 := @parameter1: java.lang.Runnable;
        r3 := @parameter2: android.app.Dialog;
        r0.<org.petero.droidfish.activities.EditBoard$13: org.petero.droidfish.activities.EditBoard this$0> = r1;
        r0.<org.petero.droidfish.activities.EditBoard$13: java.lang.Runnable val$setCounters> = r2;
        r0.<org.petero.droidfish.activities.EditBoard$13: android.app.Dialog val$dialog> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onKey(android.view.View, int, android.view.KeyEvent)
    {
        org.petero.droidfish.activities.EditBoard$13 r0;
        android.view.View r1;
        int i0, $i1;
        android.view.KeyEvent r2;
        java.lang.Runnable $r3;
        android.app.Dialog $r4;

        r0 := @this: org.petero.droidfish.activities.EditBoard$13;
        r1 := @parameter0: android.view.View;
        i0 := @parameter1: int;
        r2 := @parameter2: android.view.KeyEvent;
        $i1 = virtualinvoke r2.<android.view.KeyEvent: int getAction()>();
        if $i1 != 0 goto label0;

        if i0 != 66 goto label0;

        $r3 = r0.<org.petero.droidfish.activities.EditBoard$13: java.lang.Runnable val$setCounters>;
        interfaceinvoke $r3.<java.lang.Runnable: void run()>();
        $r4 = r0.<org.petero.droidfish.activities.EditBoard$13: android.app.Dialog val$dialog>;
        virtualinvoke $r4.<android.app.Dialog: void cancel()>();
        return 1;

     label0:
        return 0;
    }
}
class org.petero.droidfish.activities.EditBoard$2 extends java.lang.Object implements android.view.View$OnClickListener
{
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard$2 r0;
        org.petero.droidfish.activities.EditBoard r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard$2;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r0.<org.petero.droidfish.activities.EditBoard$2: org.petero.droidfish.activities.EditBoard this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.view.View)
    {
        org.petero.droidfish.activities.EditBoard$2 r0;
        android.view.View r1;
        org.petero.droidfish.activities.EditBoard $r2, $r3;

        r0 := @this: org.petero.droidfish.activities.EditBoard$2;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.activities.EditBoard$2: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r2.<org.petero.droidfish.activities.EditBoard: void setResult(int)>(0);
        $r3 = r0.<org.petero.droidfish.activities.EditBoard$2: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r3.<org.petero.droidfish.activities.EditBoard: void finish()>();
        return;
    }
}
class org.petero.droidfish.activities.EditBoard$3 extends android.view.GestureDetector$SimpleOnGestureListener
{
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard$3 r0;
        org.petero.droidfish.activities.EditBoard r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard$3;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0> = r1;
        specialinvoke r0.<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>();
        return;
    }

    public boolean onDown(android.view.MotionEvent)
    {
        org.petero.droidfish.activities.EditBoard$3 r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.activities.EditBoard $r2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditBoard$3;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $z0 = staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$100(org.petero.droidfish.activities.EditBoard)>($r2);
        if $z0 != 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.activities.EditBoard$3: void handleClick(android.view.MotionEvent)>(r1);
        return 1;

     label0:
        return 0;
    }

    public boolean onScroll(android.view.MotionEvent, android.view.MotionEvent, float, float)
    {
        org.petero.droidfish.activities.EditBoard$3 r0;
        android.view.MotionEvent r1, r2;
        float f0, f1;
        org.petero.droidfish.activities.EditBoard $r3, $r4;
        boolean $z0;
        org.petero.droidfish.activities.ChessBoardEdit $r5;

        r0 := @this: org.petero.droidfish.activities.EditBoard$3;
        r1 := @parameter0: android.view.MotionEvent;
        r2 := @parameter1: android.view.MotionEvent;
        f0 := @parameter2: float;
        f1 := @parameter3: float;
        $r3 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $z0 = staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$100(org.petero.droidfish.activities.EditBoard)>($r3);
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $r4 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $r5 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r4);
        virtualinvoke $r5.<org.petero.droidfish.activities.ChessBoardEdit: void cancelLongPress()>();
        return 1;
    }

    public boolean onSingleTapUp(android.view.MotionEvent)
    {
        org.petero.droidfish.activities.EditBoard$3 r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.activities.EditBoard $r2, $r3;
        boolean $z0;
        org.petero.droidfish.activities.ChessBoardEdit $r4;

        r0 := @this: org.petero.droidfish.activities.EditBoard$3;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $z0 = staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$100(org.petero.droidfish.activities.EditBoard)>($r2);
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $r3 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $r4 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r3);
        virtualinvoke $r4.<org.petero.droidfish.activities.ChessBoardEdit: void cancelLongPress()>();
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard$3: void handleClick(android.view.MotionEvent)>(r1);
        return 1;
    }

    public boolean onDoubleTapEvent(android.view.MotionEvent)
    {
        org.petero.droidfish.activities.EditBoard$3 r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.activities.EditBoard $r2;
        boolean $z0;
        int $i0;

        r0 := @this: org.petero.droidfish.activities.EditBoard$3;
        r1 := @parameter0: android.view.MotionEvent;
        $r2 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $z0 = staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$100(org.petero.droidfish.activities.EditBoard)>($r2);
        if $z0 != 0 goto label0;

        return 0;

     label0:
        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();
        if $i0 != 1 goto label1;

        specialinvoke r0.<org.petero.droidfish.activities.EditBoard$3: void handleClick(android.view.MotionEvent)>(r1);

     label1:
        return 1;
    }

    private final void handleClick(android.view.MotionEvent)
    {
        org.petero.droidfish.activities.EditBoard$3 r0;
        android.view.MotionEvent r1;
        int i0, $i1;
        org.petero.droidfish.gamelogic.Move r2;
        org.petero.droidfish.activities.EditBoard $r3, $r5, $r7, $r8, $r9;
        org.petero.droidfish.activities.ChessBoardEdit $r4, $r6, $r10;

        r0 := @this: org.petero.droidfish.activities.EditBoard$3;
        r1 := @parameter0: android.view.MotionEvent;
        $r3 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $r4 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r3);
        i0 = virtualinvoke $r4.<org.petero.droidfish.activities.ChessBoardEdit: int eventToSquare(android.view.MotionEvent)>(r1);
        $r5 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $r6 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r5);
        r2 = virtualinvoke $r6.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Move mousePressed(int)>(i0);
        if r2 == null goto label0;

        $r7 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$300(org.petero.droidfish.activities.EditBoard,org.petero.droidfish.gamelogic.Move)>($r7, r2);

     label0:
        $r8 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $r9 = r0.<org.petero.droidfish.activities.EditBoard$3: org.petero.droidfish.activities.EditBoard this$0>;
        $r10 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r9);
        $i1 = virtualinvoke $r10.<org.petero.droidfish.activities.ChessBoardEdit: int getSelectedSquare()>();
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$400(org.petero.droidfish.activities.EditBoard,int)>($r8, $i1);
        return;
    }
}
class org.petero.droidfish.activities.EditBoard$4 extends java.lang.Object implements android.view.View$OnTouchListener
{
    final android.view.GestureDetector val$gd;
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard, android.view.GestureDetector)
    {
        org.petero.droidfish.activities.EditBoard$4 r0;
        org.petero.droidfish.activities.EditBoard r1;
        android.view.GestureDetector r2;

        r0 := @this: org.petero.droidfish.activities.EditBoard$4;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r2 := @parameter1: android.view.GestureDetector;
        r0.<org.petero.droidfish.activities.EditBoard$4: org.petero.droidfish.activities.EditBoard this$0> = r1;
        r0.<org.petero.droidfish.activities.EditBoard$4: android.view.GestureDetector val$gd> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        org.petero.droidfish.activities.EditBoard$4 r0;
        android.view.View r1;
        android.view.MotionEvent r2;
        android.view.GestureDetector $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditBoard$4;
        r1 := @parameter0: android.view.View;
        r2 := @parameter1: android.view.MotionEvent;
        $r3 = r0.<org.petero.droidfish.activities.EditBoard$4: android.view.GestureDetector val$gd>;
        $z0 = virtualinvoke $r3.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r2);
        return $z0;
    }
}
class org.petero.droidfish.activities.EditBoard$5 extends org.petero.droidfish.ChessBoard$OnTrackballListener
{
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard$5 r0;
        org.petero.droidfish.activities.EditBoard r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard$5;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r0.<org.petero.droidfish.activities.EditBoard$5: org.petero.droidfish.activities.EditBoard this$0> = r1;
        specialinvoke r0.<org.petero.droidfish.ChessBoard$OnTrackballListener: void <init>()>();
        return;
    }

    public void onTrackballEvent(android.view.MotionEvent)
    {
        org.petero.droidfish.activities.EditBoard$5 r0;
        android.view.MotionEvent r1;
        org.petero.droidfish.gamelogic.Move r2;
        org.petero.droidfish.activities.EditBoard $r3, $r5, $r6, $r7;
        org.petero.droidfish.activities.ChessBoardEdit $r4, $r8;
        int $i0;

        r0 := @this: org.petero.droidfish.activities.EditBoard$5;
        r1 := @parameter0: android.view.MotionEvent;
        $r3 = r0.<org.petero.droidfish.activities.EditBoard$5: org.petero.droidfish.activities.EditBoard this$0>;
        $r4 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r3);
        r2 = virtualinvoke $r4.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Move handleTrackballEvent(android.view.MotionEvent)>(r1);
        if r2 == null goto label0;

        $r5 = r0.<org.petero.droidfish.activities.EditBoard$5: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$300(org.petero.droidfish.activities.EditBoard,org.petero.droidfish.gamelogic.Move)>($r5, r2);

     label0:
        $r6 = r0.<org.petero.droidfish.activities.EditBoard$5: org.petero.droidfish.activities.EditBoard this$0>;
        $r7 = r0.<org.petero.droidfish.activities.EditBoard$5: org.petero.droidfish.activities.EditBoard this$0>;
        $r8 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r7);
        $i0 = virtualinvoke $r8.<org.petero.droidfish.activities.ChessBoardEdit: int getSelectedSquare()>();
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$400(org.petero.droidfish.activities.EditBoard,int)>($r6, $i0);
        return;
    }
}
class org.petero.droidfish.activities.EditBoard$6 extends java.lang.Object implements android.view.View$OnLongClickListener
{
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard$6 r0;
        org.petero.droidfish.activities.EditBoard r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard$6;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r0.<org.petero.droidfish.activities.EditBoard$6: org.petero.droidfish.activities.EditBoard this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onLongClick(android.view.View)
    {
        org.petero.droidfish.activities.EditBoard$6 r0;
        android.view.View r1;
        org.petero.droidfish.activities.EditBoard $r2;

        r0 := @this: org.petero.droidfish.activities.EditBoard$6;
        r1 := @parameter0: android.view.View;
        $r2 = r0.<org.petero.droidfish.activities.EditBoard$6: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r2.<org.petero.droidfish.activities.EditBoard: void showDialog(int)>(0);
        return 1;
    }
}
class org.petero.droidfish.activities.EditBoard$7 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard$7 r0;
        org.petero.droidfish.activities.EditBoard r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard$7;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.activities.EditBoard$7 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.gamelogic.Position r2, r4, $r8, r13, $r36, $r53, $r56;
        android.text.ClipboardManager r3, r46;
        org.petero.droidfish.activities.EditBoard $r5, $r6, $r7, $r9, $r11, $r12, $r14, $r16, $r17, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r34, $r41, $r43, $r44, $r49, $r54, $r57, $r59, $r62, $r63;
        org.petero.droidfish.activities.ChessBoardEdit $r10, $r15, $r35, $r50, $r55;
        org.petero.droidfish.gamelogic.ChessParseError $r18, r19, $r51, r52;
        java.lang.StringBuilder $r33, $r38, $r39;
        java.lang.String $r37, r40, r48, $r60;
        java.lang.Object $r42, $r45;
        boolean $z6;
        java.lang.CharSequence $r47;
        android.content.Context $r58;
        android.widget.Toast $r61;

        r0 := @this: org.petero.droidfish.activities.EditBoard$7;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        tableswitch(i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            case 7: goto label9;
            default: goto label15;
        };

     label0:
        $r5 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r5.<org.petero.droidfish.activities.EditBoard: void showDialog(int)>(1);
        $r6 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$500(org.petero.droidfish.activities.EditBoard,int)>($r6, -1);
        $r7 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r7);
        goto label15;

     label1:
        $r8 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r8.<org.petero.droidfish.gamelogic.Position: void <init>()>();
        r2 = $r8;
        $r9 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        $r10 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r9);
        virtualinvoke $r10.<org.petero.droidfish.activities.ChessBoardEdit: void setPosition(org.petero.droidfish.gamelogic.Position)>(r2);
        $r11 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$500(org.petero.droidfish.activities.EditBoard,int)>($r11, -1);
        $r12 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r12);
        goto label15;

     label2:
        r13 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        $r14 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        $r15 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r14);
        virtualinvoke $r15.<org.petero.droidfish.activities.ChessBoardEdit: void setPosition(org.petero.droidfish.gamelogic.Position)>(r13);
        $r16 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$500(org.petero.droidfish.activities.EditBoard,int)>($r16, -1);
        $r17 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r17);

     label3:
        goto label15;

     label4:
        $r18 := @caughtexception;
        r19 = $r18;
        goto label15;

     label5:
        $r20 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r20.<org.petero.droidfish.activities.EditBoard: void removeDialog(int)>(2);
        $r21 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r21.<org.petero.droidfish.activities.EditBoard: void showDialog(int)>(2);
        $r22 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$500(org.petero.droidfish.activities.EditBoard,int)>($r22, -1);
        $r23 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r23);
        goto label15;

     label6:
        $r24 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r24.<org.petero.droidfish.activities.EditBoard: void removeDialog(int)>(3);
        $r25 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r25.<org.petero.droidfish.activities.EditBoard: void showDialog(int)>(3);
        $r26 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$500(org.petero.droidfish.activities.EditBoard,int)>($r26, -1);
        $r27 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r27);
        goto label15;

     label7:
        $r28 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r28.<org.petero.droidfish.activities.EditBoard: void removeDialog(int)>(4);
        $r29 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        virtualinvoke $r29.<org.petero.droidfish.activities.EditBoard: void showDialog(int)>(4);
        $r30 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$500(org.petero.droidfish.activities.EditBoard,int)>($r30, -1);
        $r31 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r31);
        goto label15;

     label8:
        $r32 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$700(org.petero.droidfish.activities.EditBoard)>($r32);
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        $r34 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        $r35 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r34);
        $r36 = $r35.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $r37 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String toFEN(org.petero.droidfish.gamelogic.Position)>($r36);
        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        $r41 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        $r42 = virtualinvoke $r41.<org.petero.droidfish.activities.EditBoard: java.lang.Object getSystemService(java.lang.String)>("clipboard");
        r3 = (android.text.ClipboardManager) $r42;
        virtualinvoke r3.<android.text.ClipboardManager: void setText(java.lang.CharSequence)>(r40);
        $r43 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$500(org.petero.droidfish.activities.EditBoard,int)>($r43, -1);
        goto label15;

     label9:
        $r44 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        $r45 = virtualinvoke $r44.<org.petero.droidfish.activities.EditBoard: java.lang.Object getSystemService(java.lang.String)>("clipboard");
        r46 = (android.text.ClipboardManager) $r45;
        $z6 = virtualinvoke r46.<android.text.ClipboardManager: boolean hasText()>();
        if $z6 == 0 goto label15;

        $r47 = virtualinvoke r46.<android.text.ClipboardManager: java.lang.CharSequence getText()>();
        r48 = interfaceinvoke $r47.<java.lang.CharSequence: java.lang.String toString()>();

     label10:
        r4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>(r48);
        $r49 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        $r50 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r49);
        virtualinvoke $r50.<org.petero.droidfish.activities.ChessBoardEdit: void setPosition(org.petero.droidfish.gamelogic.Position)>(r4);

     label11:
        goto label14;

     label12:
        $r51 := @caughtexception;
        r52 = $r51;
        $r53 = r52.<org.petero.droidfish.gamelogic.ChessParseError: org.petero.droidfish.gamelogic.Position pos>;
        if $r53 == null goto label13;

        $r54 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        $r55 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r54);
        $r56 = r52.<org.petero.droidfish.gamelogic.ChessParseError: org.petero.droidfish.gamelogic.Position pos>;
        virtualinvoke $r55.<org.petero.droidfish.activities.ChessBoardEdit: void setPosition(org.petero.droidfish.gamelogic.Position)>($r56);

     label13:
        $r57 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        $r58 = virtualinvoke $r57.<org.petero.droidfish.activities.EditBoard: android.content.Context getApplicationContext()>();
        $r59 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        $r60 = staticinvoke <org.petero.droidfish.activities.EditBoard: java.lang.String access$800(org.petero.droidfish.activities.EditBoard,org.petero.droidfish.gamelogic.ChessParseError)>($r59, r52);
        $r61 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r58, $r60, 0);
        virtualinvoke $r61.<android.widget.Toast: void show()>();

     label14:
        $r62 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: void access$500(org.petero.droidfish.activities.EditBoard,int)>($r62, -1);
        $r63 = r0.<org.petero.droidfish.activities.EditBoard$7: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r63);
        goto label15;

     label15:
        return;

        catch org.petero.droidfish.gamelogic.ChessParseError from label2 to label3 with label4;
        catch org.petero.droidfish.gamelogic.ChessParseError from label10 to label11 with label12;
    }
}
class org.petero.droidfish.activities.EditBoard$8 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard$8 r0;
        org.petero.droidfish.activities.EditBoard r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard$8;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r0.<org.petero.droidfish.activities.EditBoard$8: org.petero.droidfish.activities.EditBoard this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.activities.EditBoard$8 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.activities.EditBoard $r2, $r5, $r6, $r9;
        org.petero.droidfish.activities.ChessBoardEdit $r3, $r7;
        org.petero.droidfish.gamelogic.Position $r4, $r8;

        r0 := @this: org.petero.droidfish.activities.EditBoard$8;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        if i0 != 0 goto label0;

        $r2 = r0.<org.petero.droidfish.activities.EditBoard$8: org.petero.droidfish.activities.EditBoard this$0>;
        $r3 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r2);
        $r4 = $r3.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.Position: void setWhiteMove(boolean)>(1);
        $r5 = r0.<org.petero.droidfish.activities.EditBoard$8: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r5);
        interfaceinvoke r1.<android.content.DialogInterface: void cancel()>();
        goto label1;

     label0:
        $r6 = r0.<org.petero.droidfish.activities.EditBoard$8: org.petero.droidfish.activities.EditBoard this$0>;
        $r7 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r6);
        $r8 = $r7.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.Position: void setWhiteMove(boolean)>(0);
        $r9 = r0.<org.petero.droidfish.activities.EditBoard$8: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r9);
        interfaceinvoke r1.<android.content.DialogInterface: void cancel()>();

     label1:
        return;
    }
}
class org.petero.droidfish.activities.EditBoard$9 extends java.lang.Object implements android.content.DialogInterface$OnMultiChoiceClickListener
{
    final org.petero.droidfish.activities.EditBoard this$0;

    void <init>(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard$9 r0;
        org.petero.droidfish.activities.EditBoard r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard$9;
        r1 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r0.<org.petero.droidfish.activities.EditBoard$9: org.petero.droidfish.activities.EditBoard this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int, boolean)
    {
        org.petero.droidfish.activities.EditBoard$9 r0;
        android.content.DialogInterface r1;
        int i0;
        boolean z0, z1, z2, z3, z4;
        org.petero.droidfish.gamelogic.Position $r2, r3, $r6;
        byte b1;
        org.petero.droidfish.activities.EditBoard $r4, $r7, $r9;
        org.petero.droidfish.activities.ChessBoardEdit $r5, $r8;

        r0 := @this: org.petero.droidfish.activities.EditBoard$9;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        z0 := @parameter2: boolean;
        $r2 = new org.petero.droidfish.gamelogic.Position;
        $r4 = r0.<org.petero.droidfish.activities.EditBoard$9: org.petero.droidfish.activities.EditBoard this$0>;
        $r5 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r4);
        $r6 = $r5.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r6);
        r3 = $r2;
        z1 = virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: boolean a1Castle()>();
        z2 = virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: boolean h1Castle()>();
        z3 = virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: boolean a8Castle()>();
        z4 = virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: boolean h8Castle()>();
        tableswitch(i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label0:
        z2 = z0;
        goto label4;

     label1:
        z1 = z0;
        goto label4;

     label2:
        z4 = z0;
        goto label4;

     label3:
        z3 = z0;

     label4:
        b1 = 0;
        if z1 == 0 goto label5;

        b1 = b1 | 1;

     label5:
        if z2 == 0 goto label6;

        b1 = b1 | 2;

     label6:
        if z3 == 0 goto label7;

        b1 = b1 | 4;

     label7:
        if z4 == 0 goto label8;

        b1 = b1 | 8;

     label8:
        virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>(b1);
        $r7 = r0.<org.petero.droidfish.activities.EditBoard$9: org.petero.droidfish.activities.EditBoard this$0>;
        $r8 = staticinvoke <org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)>($r7);
        virtualinvoke $r8.<org.petero.droidfish.activities.ChessBoardEdit: void setPosition(org.petero.droidfish.gamelogic.Position)>(r3);
        $r9 = r0.<org.petero.droidfish.activities.EditBoard$9: org.petero.droidfish.activities.EditBoard this$0>;
        staticinvoke <org.petero.droidfish.activities.EditBoard: boolean access$600(org.petero.droidfish.activities.EditBoard)>($r9);
        return;
    }
}
public class org.petero.droidfish.activities.EditBoard extends android.app.Activity
{
    private org.petero.droidfish.activities.ChessBoardEdit cb;
    private android.widget.TextView status;
    private android.widget.Button okButton;
    private android.widget.Button cancelButton;
    private boolean egtbHints;
    private boolean autoScrollTitle;
    private boolean boardGestures;
    private android.widget.TextView whiteFigText;
    private android.widget.TextView blackFigText;
    private android.graphics.Typeface figNotation;
    static final int EDIT_DIALOG;
    static final int SIDE_DIALOG;
    static final int CASTLE_DIALOG;
    static final int EP_DIALOG;
    static final int MOVCNT_DIALOG;

    public void <init>()
    {
        org.petero.droidfish.activities.EditBoard r0;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        specialinvoke r0.<android.app.Activity: void <init>()>();
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        org.petero.droidfish.activities.EditBoard r0;
        android.os.Bundle r1;
        android.content.SharedPreferences r2;
        android.content.Intent r3;
        org.petero.droidfish.gamelogic.Position r4;
        org.petero.droidfish.gamelogic.ChessParseError r5, $r10;
        android.content.res.AssetManager $r6;
        android.graphics.Typeface $r7;
        boolean $z1, $z2, $z3;
        java.lang.String $r8;
        org.petero.droidfish.activities.ChessBoardEdit $r9;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: boolean requestWindowFeature(int)>(1);
        $r6 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.content.res.AssetManager getAssets()>();
        $r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>($r6, "fonts/DroidFishChessNotationDark.otf");
        r0.<org.petero.droidfish.activities.EditBoard: android.graphics.Typeface figNotation> = $r7;
        r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);
        $z1 = interfaceinvoke r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("tbHintsEdit", 0);
        r0.<org.petero.droidfish.activities.EditBoard: boolean egtbHints> = $z1;
        $z2 = interfaceinvoke r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("autoScrollTitle", 1);
        r0.<org.petero.droidfish.activities.EditBoard: boolean autoScrollTitle> = $z2;
        $z3 = interfaceinvoke r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("boardGestures", 1);
        r0.<org.petero.droidfish.activities.EditBoard: boolean boardGestures> = $z3;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void initUI()>();
        staticinvoke <org.petero.droidfish.Util: void setFullScreenMode(android.app.Activity,android.content.SharedPreferences)>(r0, r2);
        r3 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.content.Intent getIntent()>();

     label0:
        $r8 = virtualinvoke r3.<android.content.Intent: java.lang.String getAction()>();
        r4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>($r8);
        $r9 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        virtualinvoke $r9.<org.petero.droidfish.activities.ChessBoardEdit: void setPosition(org.petero.droidfish.gamelogic.Position)>(r4);
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: boolean checkValidAndUpdateMaterialDiff()>();

     label1:
        goto label3;

     label2:
        $r10 := @caughtexception;
        r5 = $r10;

     label3:
        return;

        catch org.petero.droidfish.gamelogic.ChessParseError from label0 to label1 with label2;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        org.petero.droidfish.activities.EditBoard r0;
        android.content.res.Configuration r1;
        org.petero.droidfish.activities.ChessBoardEdit r2, $r6, $r7, $r8, $r9, $r11;
        java.lang.String r3;
        android.widget.TextView $r4, $r12;
        java.lang.CharSequence $r5;
        float $f0, $f1;
        boolean $z0, $z1;
        org.petero.droidfish.gamelogic.Position $r10;
        int $i0;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        r1 := @parameter0: android.content.res.Configuration;
        specialinvoke r0.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r1);
        r2 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r4 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView status>;
        $r5 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();
        r3 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void initUI()>();
        $r6 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $f0 = r2.<org.petero.droidfish.activities.ChessBoardEdit: float cursorX>;
        $r6.<org.petero.droidfish.activities.ChessBoardEdit: float cursorX> = $f0;
        $r7 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $f1 = r2.<org.petero.droidfish.activities.ChessBoardEdit: float cursorY>;
        $r7.<org.petero.droidfish.activities.ChessBoardEdit: float cursorY> = $f1;
        $r8 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $z0 = r2.<org.petero.droidfish.activities.ChessBoardEdit: boolean cursorVisible>;
        $r8.<org.petero.droidfish.activities.ChessBoardEdit: boolean cursorVisible> = $z0;
        $r9 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r10 = r2.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        virtualinvoke $r9.<org.petero.droidfish.activities.ChessBoardEdit: void setPosition(org.petero.droidfish.gamelogic.Position)>($r10);
        $i0 = r2.<org.petero.droidfish.activities.ChessBoardEdit: int selectedSquare>;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setSelection(int)>($i0);
        $r11 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $z1 = r2.<org.petero.droidfish.activities.ChessBoardEdit: boolean userSelectedSquare>;
        $r11.<org.petero.droidfish.activities.ChessBoardEdit: boolean userSelectedSquare> = $z1;
        $r12 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView status>;
        virtualinvoke $r12.<android.widget.TextView: void setText(java.lang.CharSequence)>(r3);
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: boolean checkValidAndUpdateMaterialDiff()>();
        return;
    }

    private final void initUI()
    {
        org.petero.droidfish.activities.EditBoard r0;
        android.widget.TextView r1, r2, r3, r4, $r11, $r20, $r21, $r23, $r24, $r27, $r28, $r30, $r31, $r35, $r36, $r41;
        android.text.TextUtils$TruncateAt r5, $r34;
        android.view.GestureDetector r6, $r45;
        android.view.View $r7, $r8, $r10, $r12, $r14, $r16, $r17, $r18, $r19, $r26, $r33;
        org.petero.droidfish.activities.ChessBoardEdit $r9, $r42, $r43, $r44, $r47, $r49, $r51;
        android.widget.Button $r13, $r15, $r37, $r39;
        android.graphics.Typeface $r22, $r29;
        android.content.res.ColorStateList $r25, $r32;
        boolean $z0;
        org.petero.droidfish.activities.EditBoard$1 $r38;
        org.petero.droidfish.activities.EditBoard$2 $r40;
        org.petero.droidfish.activities.EditBoard$3 $r46;
        org.petero.droidfish.activities.EditBoard$4 $r48;
        org.petero.droidfish.activities.EditBoard$5 $r50;
        org.petero.droidfish.activities.EditBoard$6 $r52;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: void setContentView(int)>(2130903046);
        $r7 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(16908290);
        staticinvoke <org.petero.droidfish.Util: void overrideFonts(android.view.View)>($r7);
        $r8 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296273);
        $r9 = (org.petero.droidfish.activities.ChessBoardEdit) $r8;
        r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb> = $r9;
        $r10 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296274);
        $r11 = (android.widget.TextView) $r10;
        r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView status> = $r11;
        $r12 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296276);
        $r13 = (android.widget.Button) $r12;
        r0.<org.petero.droidfish.activities.EditBoard: android.widget.Button okButton> = $r13;
        $r14 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296277);
        $r15 = (android.widget.Button) $r14;
        r0.<org.petero.droidfish.activities.EditBoard: android.widget.Button cancelButton> = $r15;
        $r16 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296279);
        r1 = (android.widget.TextView) $r16;
        virtualinvoke r1.<android.widget.TextView: void setVisibility(int)>(8);
        $r17 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296281);
        r2 = (android.widget.TextView) $r17;
        virtualinvoke r2.<android.widget.TextView: void setVisibility(int)>(8);
        $r18 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296286);
        r3 = (android.widget.TextView) $r18;
        virtualinvoke r3.<android.widget.TextView: void setVisibility(int)>(8);
        $r19 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296285);
        $r20 = (android.widget.TextView) $r19;
        r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView whiteFigText> = $r20;
        $r21 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView whiteFigText>;
        $r22 = r0.<org.petero.droidfish.activities.EditBoard: android.graphics.Typeface figNotation>;
        virtualinvoke $r21.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r22);
        $r23 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView whiteFigText>;
        virtualinvoke $r23.<android.widget.TextView: void setSelected(boolean)>(1);
        $r24 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView whiteFigText>;
        $r25 = virtualinvoke r1.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();
        virtualinvoke $r24.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r25);
        $r26 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296287);
        $r27 = (android.widget.TextView) $r26;
        r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView blackFigText> = $r27;
        $r28 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView blackFigText>;
        $r29 = r0.<org.petero.droidfish.activities.EditBoard: android.graphics.Typeface figNotation>;
        virtualinvoke $r28.<android.widget.TextView: void setTypeface(android.graphics.Typeface)>($r29);
        $r30 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView blackFigText>;
        virtualinvoke $r30.<android.widget.TextView: void setSelected(boolean)>(1);
        $r31 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView blackFigText>;
        $r32 = virtualinvoke r2.<android.widget.TextView: android.content.res.ColorStateList getTextColors()>();
        virtualinvoke $r31.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r32);
        $r33 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: android.view.View findViewById(int)>(2131296280);
        r4 = (android.widget.TextView) $r33;
        virtualinvoke r4.<android.widget.TextView: void setText(int)>(2131099692);
        $z0 = r0.<org.petero.droidfish.activities.EditBoard: boolean autoScrollTitle>;
        if $z0 == 0 goto label0;

        $r34 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;
        goto label1;

     label0:
        $r34 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

     label1:
        r5 = $r34;
        virtualinvoke r3.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>(r5);
        $r35 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView whiteFigText>;
        virtualinvoke $r35.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>(r5);
        $r36 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView blackFigText>;
        virtualinvoke $r36.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>(r5);
        $r37 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.Button okButton>;
        $r38 = new org.petero.droidfish.activities.EditBoard$1;
        specialinvoke $r38.<org.petero.droidfish.activities.EditBoard$1: void <init>(org.petero.droidfish.activities.EditBoard)>(r0);
        virtualinvoke $r37.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r38);
        $r39 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.Button cancelButton>;
        $r40 = new org.petero.droidfish.activities.EditBoard$2;
        specialinvoke $r40.<org.petero.droidfish.activities.EditBoard$2: void <init>(org.petero.droidfish.activities.EditBoard)>(r0);
        virtualinvoke $r39.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r40);
        $r41 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView status>;
        virtualinvoke $r41.<android.widget.TextView: void setFocusable(boolean)>(0);
        $r42 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        virtualinvoke $r42.<org.petero.droidfish.activities.ChessBoardEdit: void setFocusable(boolean)>(1);
        $r43 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        virtualinvoke $r43.<org.petero.droidfish.activities.ChessBoardEdit: boolean requestFocus()>();
        $r44 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        virtualinvoke $r44.<org.petero.droidfish.activities.ChessBoardEdit: void setClickable(boolean)>(1);
        $r45 = new android.view.GestureDetector;
        $r46 = new org.petero.droidfish.activities.EditBoard$3;
        specialinvoke $r46.<org.petero.droidfish.activities.EditBoard$3: void <init>(org.petero.droidfish.activities.EditBoard)>(r0);
        specialinvoke $r45.<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener)>($r46);
        r6 = $r45;
        $r47 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r48 = new org.petero.droidfish.activities.EditBoard$4;
        specialinvoke $r48.<org.petero.droidfish.activities.EditBoard$4: void <init>(org.petero.droidfish.activities.EditBoard,android.view.GestureDetector)>(r0, r6);
        virtualinvoke $r47.<org.petero.droidfish.activities.ChessBoardEdit: void setOnTouchListener(android.view.View$OnTouchListener)>($r48);
        $r49 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r50 = new org.petero.droidfish.activities.EditBoard$5;
        specialinvoke $r50.<org.petero.droidfish.activities.EditBoard$5: void <init>(org.petero.droidfish.activities.EditBoard)>(r0);
        virtualinvoke $r49.<org.petero.droidfish.activities.ChessBoardEdit: void setOnTrackballListener(org.petero.droidfish.ChessBoard$OnTrackballListener)>($r50);
        $r51 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r52 = new org.petero.droidfish.activities.EditBoard$6;
        specialinvoke $r52.<org.petero.droidfish.activities.EditBoard$6: void <init>(org.petero.droidfish.activities.EditBoard)>(r0);
        virtualinvoke $r51.<org.petero.droidfish.activities.ChessBoardEdit: void setOnLongClickListener(android.view.View$OnLongClickListener)>($r52);
        return;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        org.petero.droidfish.activities.EditBoard r0;
        android.view.Menu r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        r1 := @parameter0: android.view.Menu;
        virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: void showDialog(int)>(0);
        return 1;
    }

    private final void setSelection(int)
    {
        org.petero.droidfish.activities.EditBoard r0;
        int i0;
        org.petero.droidfish.activities.ChessBoardEdit $r1;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        virtualinvoke $r1.<org.petero.droidfish.activities.ChessBoardEdit: void setSelection(int)>(i0);
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setEgtbHints(int)>(i0);
        return;
    }

    private final void setEgtbHints(int)
    {
        org.petero.droidfish.activities.EditBoard r0;
        int i0, $i1, $i2;
        org.petero.droidfish.gtb.Probe r1;
        java.util.ArrayList r2, r3, $r10;
        java.util.Iterator r4;
        org.petero.droidfish.gamelogic.Pair r5;
        boolean $z0, $z1;
        org.petero.droidfish.activities.ChessBoardEdit $r6, $r7, $r9, $r17;
        org.petero.droidfish.gamelogic.Position $r8;
        java.lang.Object $r11, $r13, $r15;
        org.petero.droidfish.ChessBoard$SquareDecoration $r12;
        java.lang.Integer $r14, $r16;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        i0 := @parameter0: int;
        $z0 = r0.<org.petero.droidfish.activities.EditBoard: boolean egtbHints>;
        if $z0 == 0 goto label0;

        if i0 >= 0 goto label1;

     label0:
        $r6 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        virtualinvoke $r6.<org.petero.droidfish.activities.ChessBoardEdit: void setSquareDecorations(java.util.ArrayList)>(null);
        return;

     label1:
        r1 = staticinvoke <org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.Probe getInstance()>();
        $r7 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r8 = $r7.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        r2 = virtualinvoke r1.<org.petero.droidfish.gtb.Probe: java.util.ArrayList relocatePieceProbe(org.petero.droidfish.gamelogic.Position,int)>($r8, i0);
        if r2 != null goto label2;

        $r9 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        virtualinvoke $r9.<org.petero.droidfish.activities.ChessBoardEdit: void setSquareDecorations(java.util.ArrayList)>(null);
        return;

     label2:
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r3 = $r10;
        r4 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.petero.droidfish.gamelogic.Pair) $r11;
        $r12 = new org.petero.droidfish.ChessBoard$SquareDecoration;
        $r13 = r5.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        $r14 = (java.lang.Integer) $r13;
        $i1 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();
        $r15 = r5.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        $r16 = (java.lang.Integer) $r15;
        $i2 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();
        specialinvoke $r12.<org.petero.droidfish.ChessBoard$SquareDecoration: void <init>(int,int)>($i1, $i2);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);
        goto label3;

     label4:
        $r17 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        virtualinvoke $r17.<org.petero.droidfish.activities.ChessBoardEdit: void setSquareDecorations(java.util.ArrayList)>(r3);
        return;
    }

    private void doMove(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.activities.EditBoard r0;
        org.petero.droidfish.gamelogic.Move r1;
        org.petero.droidfish.gamelogic.Position r2, $r4, $r5, $r7;
        boolean z0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        org.petero.droidfish.activities.ChessBoardEdit $r3, $r6, $r8;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        $i1 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i1 >= 0 goto label1;

        $i2 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i2 < 0 goto label0;

        $r3 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r4 = $r3.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $i3 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i4 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i3);
        if $i4 != 0 goto label1;

     label0:
        $i5 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setSelection(int)>($i5);
        return;

     label1:
        $r5 = new org.petero.droidfish.gamelogic.Position;
        $r6 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r7 = $r6.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        specialinvoke $r5.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r7);
        r2 = $r5;
        z0 = 0;
        $i6 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i6 < 0 goto label2;

        $i7 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        i8 = virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i7);
        goto label3;

     label2:
        $i9 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i10 = $i9 + 2;
        i8 = neg $i10;

     label3:
        $i11 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i11 < 0 goto label6;

        i0 = staticinvoke <org.petero.droidfish.gamelogic.Piece: int swapColor(int)>(i8);
        $i12 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i12 >= 0 goto label4;

        $i13 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i14 = virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i13);
        if $i14 != i0 goto label4;

        $i15 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i15, 0);
        goto label6;

     label4:
        $i16 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i16 >= 0 goto label5;

        $i17 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i18 = virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i17);
        if $i18 != i8 goto label5;

        $i19 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i19, i0);
        goto label6;

     label5:
        $i20 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i20, i8);

     label6:
        $i21 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i21 < 0 goto label7;

        $i22 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i22, 0);

     label7:
        $r8 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        virtualinvoke $r8.<org.petero.droidfish.activities.ChessBoardEdit: void setPosition(org.petero.droidfish.gamelogic.Position)>(r2);
        $i23 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i23 < 0 goto label8;

        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setSelection(int)>(-1);
        goto label9;

     label8:
        $i24 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setSelection(int)>($i24);

     label9:
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: boolean checkValidAndUpdateMaterialDiff()>();
        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        org.petero.droidfish.activities.EditBoard r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.KeyEvent;
        if i0 != 4 goto label0;

        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void sendBackResult()>();
        return 1;

     label0:
        $z0 = specialinvoke r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);
        return $z0;
    }

    private final void sendBackResult()
    {
        org.petero.droidfish.activities.EditBoard r0;
        java.lang.String r1;
        android.content.Intent $r2, $r5;
        boolean $z0;
        org.petero.droidfish.activities.ChessBoardEdit $r3;
        org.petero.droidfish.gamelogic.Position $r4;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        $z0 = specialinvoke r0.<org.petero.droidfish.activities.EditBoard: boolean checkValidAndUpdateMaterialDiff()>();
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setPosFields()>();
        $r3 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r4 = $r3.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        r1 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String toFEN(org.petero.droidfish.gamelogic.Position)>($r4);
        $r2 = new android.content.Intent;
        specialinvoke $r2.<android.content.Intent: void <init>()>();
        $r5 = virtualinvoke $r2.<android.content.Intent: android.content.Intent setAction(java.lang.String)>(r1);
        virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: void setResult(int,android.content.Intent)>(-1, $r5);
        goto label1;

     label0:
        virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: void setResult(int)>(0);

     label1:
        virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: void finish()>();
        return;
    }

    private final void setPosFields()
    {
        org.petero.droidfish.activities.EditBoard r0;
        int $i0;
        org.petero.droidfish.activities.ChessBoardEdit $r1, $r3;
        org.petero.droidfish.gamelogic.Position $r2, $r4;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        $i0 = specialinvoke r0.<org.petero.droidfish.activities.EditBoard: int getEPFile()>();
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setEPFile(int)>($i0);
        $r1 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r2 = $r1.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void fixupEPSquare(org.petero.droidfish.gamelogic.Position)>($r2);
        $r3 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r4 = $r3.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void removeBogusCastleFlags(org.petero.droidfish.gamelogic.Position)>($r4);
        return;
    }

    private final int getEPFile()
    {
        org.petero.droidfish.activities.EditBoard r0;
        int i0, $i1;
        org.petero.droidfish.activities.ChessBoardEdit $r1;
        org.petero.droidfish.gamelogic.Position $r2;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        $r1 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r2 = $r1.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        i0 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if i0 >= 0 goto label0;

        return 8;

     label0:
        $i1 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i0);
        return $i1;
    }

    private final void setEPFile(int)
    {
        org.petero.droidfish.activities.EditBoard r0;
        int i0, i1;
        byte b2, $b3;
        org.petero.droidfish.activities.ChessBoardEdit $r1, $r3;
        org.petero.droidfish.gamelogic.Position $r2, $r4;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        i0 := @parameter0: int;
        i1 = -1;
        if i0 < 0 goto label2;

        if i0 >= 8 goto label2;

        $r1 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r2 = $r1.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $z0 = $r2.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z0 == 0 goto label0;

        $b3 = 5;
        goto label1;

     label0:
        $b3 = 2;

     label1:
        b2 = $b3;
        i1 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i0, b2);

     label2:
        $r3 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r4 = $r3.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.Position: void setEpSquare(int)>(i1);
        return;
    }

    private final boolean checkValidAndUpdateMaterialDiff()
    {
        org.petero.droidfish.activities.EditBoard r0;
        org.petero.droidfish.Util$MaterialDiff r1;
        java.lang.String r2, $r16;
        org.petero.droidfish.activities.ChessBoardEdit $r3, $r9;
        org.petero.droidfish.gamelogic.Position $r4, $r10;
        android.widget.TextView $r5, $r7, $r12, $r15;
        java.lang.CharSequence $r6, $r8;
        boolean $z0;
        org.petero.droidfish.gamelogic.ChessParseError $r13, r14;

        r0 := @this: org.petero.droidfish.activities.EditBoard;

     label0:
        $r3 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r4 = $r3.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        r1 = staticinvoke <org.petero.droidfish.Util: org.petero.droidfish.Util$MaterialDiff getMaterialDiff(org.petero.droidfish.gamelogic.Position)>($r4);
        $r5 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView whiteFigText>;
        $r6 = r1.<org.petero.droidfish.Util$MaterialDiff: java.lang.CharSequence white>;
        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);
        $r7 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView blackFigText>;
        $r8 = r1.<org.petero.droidfish.Util$MaterialDiff: java.lang.CharSequence black>;
        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);
        $r9 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r10 = $r9.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        r2 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String toFEN(org.petero.droidfish.gamelogic.Position)>($r10);
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>(r2);
        $r12 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView status>;
        virtualinvoke $r12.<android.widget.TextView: void setText(java.lang.CharSequence)>("");
        $z0 = 1;

     label1:
        return $z0;

     label2:
        $r13 := @caughtexception;
        r14 = $r13;
        $r15 = r0.<org.petero.droidfish.activities.EditBoard: android.widget.TextView status>;
        $r16 = specialinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getParseErrString(org.petero.droidfish.gamelogic.ChessParseError)>(r14);
        virtualinvoke $r15.<android.widget.TextView: void setText(java.lang.CharSequence)>($r16);
        return 0;

        catch org.petero.droidfish.gamelogic.ChessParseError from label0 to label1 with label2;
    }

    private final java.lang.String getParseErrString(org.petero.droidfish.gamelogic.ChessParseError)
    {
        org.petero.droidfish.activities.EditBoard r0;
        org.petero.droidfish.gamelogic.ChessParseError r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        r1 := @parameter0: org.petero.droidfish.gamelogic.ChessParseError;
        $i0 = r1.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId>;
        if $i0 != -1 goto label0;

        $r2 = virtualinvoke r1.<org.petero.droidfish.gamelogic.ChessParseError: java.lang.String getMessage()>();
        return $r2;

     label0:
        $i1 = r1.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId>;
        $r3 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>($i1);
        return $r3;
    }

    protected android.app.Dialog onCreateDialog(int)
    {
        org.petero.droidfish.activities.EditBoard r0;
        int i0, $i3, $i4, $i5;
        java.lang.CharSequence[] r1, $r7, $r31, r36, $r52, r54;
        android.app.AlertDialog$Builder r2, $r16, $r20, r21, $r47, r48, $r55, r56, $r62, r63;
        android.app.AlertDialog r3, r4, r6, r30, r60;
        org.petero.droidfish.activities.EditBoard$11 r5, $r80;
        java.lang.String $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r26, $r27, $r32, $r33, $r34, $r35, $r53, $r74, $r79;
        org.petero.droidfish.activities.EditBoard$7 $r18;
        org.petero.droidfish.activities.ChessBoardEdit $r23, $r38, $r40, $r42, $r44, $r71, $r76;
        org.petero.droidfish.gamelogic.Position $r24, $r39, $r41, $r43, $r45, $r72, $r77;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b1, b2;
        java.lang.String[] $r25;
        org.petero.droidfish.activities.EditBoard$8 $r28;
        boolean[] $r37, r46;
        org.petero.droidfish.activities.EditBoard$9 $r50;
        org.petero.droidfish.activities.EditBoard$10 $r58;
        android.view.View r61, $r66, $r68;
        android.widget.EditText r67, r69;
        java.lang.Object[] $r70, $r75;
        java.lang.Integer $r73, $r78;
        org.petero.droidfish.activities.EditBoard$12 $r81;
        org.petero.droidfish.activities.EditBoard$13 $r84;

        r0 := @this: org.petero.droidfish.activities.EditBoard;
        i0 := @parameter0: int;
        tableswitch(i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label7;
        };

     label0:
        $r7 = newarray (java.lang.CharSequence)[8];
        $r8 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099685);
        $r7[0] = $r8;
        $r9 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099686);
        $r7[1] = $r9;
        $r10 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099687);
        $r7[2] = $r10;
        $r11 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099688);
        $r7[3] = $r11;
        $r12 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099689);
        $r7[4] = $r12;
        $r13 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099690);
        $r7[5] = $r13;
        $r14 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099668);
        $r7[6] = $r14;
        $r15 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099691);
        $r7[7] = $r15;
        r1 = $r7;
        $r16 = new android.app.AlertDialog$Builder;
        specialinvoke $r16.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r2 = $r16;
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099692);
        $r18 = new org.petero.droidfish.activities.EditBoard$7;
        specialinvoke $r18.<org.petero.droidfish.activities.EditBoard$7: void <init>(org.petero.droidfish.activities.EditBoard)>(r0);
        virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r1, $r18);
        r3 = virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r3;

     label1:
        $r20 = new android.app.AlertDialog$Builder;
        specialinvoke $r20.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r21 = $r20;
        virtualinvoke r21.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099693);
        $r23 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r24 = $r23.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $z0 = $r24.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z0 == 0 goto label2;

        $b1 = 0;
        goto label3;

     label2:
        $b1 = 1;

     label3:
        b2 = $b1;
        $r25 = newarray (java.lang.String)[2];
        $r26 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099694);
        $r25[0] = $r26;
        $r27 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099695);
        $r25[1] = $r27;
        $r28 = new org.petero.droidfish.activities.EditBoard$8;
        specialinvoke $r28.<org.petero.droidfish.activities.EditBoard$8: void <init>(org.petero.droidfish.activities.EditBoard)>(r0);
        virtualinvoke r21.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>($r25, b2, $r28);
        r30 = virtualinvoke r21.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r30;

     label4:
        $r31 = newarray (java.lang.CharSequence)[4];
        $r32 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099698);
        $r31[0] = $r32;
        $r33 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099699);
        $r31[1] = $r33;
        $r34 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099700);
        $r31[2] = $r34;
        $r35 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099701);
        $r31[3] = $r35;
        r36 = $r31;
        $r37 = newarray (boolean)[4];
        $r38 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r39 = $r38.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $z1 = virtualinvoke $r39.<org.petero.droidfish.gamelogic.Position: boolean h1Castle()>();
        $r37[0] = $z1;
        $r40 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r41 = $r40.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $z2 = virtualinvoke $r41.<org.petero.droidfish.gamelogic.Position: boolean a1Castle()>();
        $r37[1] = $z2;
        $r42 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r43 = $r42.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $z3 = virtualinvoke $r43.<org.petero.droidfish.gamelogic.Position: boolean h8Castle()>();
        $r37[2] = $z3;
        $r44 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r45 = $r44.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $z4 = virtualinvoke $r45.<org.petero.droidfish.gamelogic.Position: boolean a8Castle()>();
        $r37[3] = $z4;
        r46 = $r37;
        $r47 = new android.app.AlertDialog$Builder;
        specialinvoke $r47.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r48 = $r47;
        virtualinvoke r48.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099688);
        $r50 = new org.petero.droidfish.activities.EditBoard$9;
        specialinvoke $r50.<org.petero.droidfish.activities.EditBoard$9: void <init>(org.petero.droidfish.activities.EditBoard)>(r0);
        virtualinvoke r48.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)>(r36, r46, $r50);
        r4 = virtualinvoke r48.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r4;

     label5:
        $r52 = newarray (java.lang.CharSequence)[9];
        $r52[0] = "A";
        $r52[1] = "B";
        $r52[2] = "C";
        $r52[3] = "D";
        $r52[4] = "E";
        $r52[5] = "F";
        $r52[6] = "G";
        $r52[7] = "H";
        $r53 = virtualinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getString(int)>(2131099702);
        $r52[8] = $r53;
        r54 = $r52;
        $r55 = new android.app.AlertDialog$Builder;
        specialinvoke $r55.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r56 = $r55;
        virtualinvoke r56.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099703);
        $i3 = specialinvoke r0.<org.petero.droidfish.activities.EditBoard: int getEPFile()>();
        $r58 = new org.petero.droidfish.activities.EditBoard$10;
        specialinvoke $r58.<org.petero.droidfish.activities.EditBoard$10: void <init>(org.petero.droidfish.activities.EditBoard)>(r0);
        virtualinvoke r56.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>(r54, $i3, $r58);
        r60 = virtualinvoke r56.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r60;

     label6:
        r61 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>(r0, 2130903045, null);
        $r62 = new android.app.AlertDialog$Builder;
        specialinvoke $r62.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r63 = $r62;
        virtualinvoke r63.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r61);
        virtualinvoke r63.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099704);
        $r66 = virtualinvoke r61.<android.view.View: android.view.View findViewById(int)>(2131296271);
        r67 = (android.widget.EditText) $r66;
        $r68 = virtualinvoke r61.<android.view.View: android.view.View findViewById(int)>(2131296272);
        r69 = (android.widget.EditText) $r68;
        $r70 = newarray (java.lang.Object)[1];
        $r71 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r72 = $r71.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $i4 = $r72.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        $r70[0] = $r73;
        $r74 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r70);
        virtualinvoke r67.<android.widget.EditText: void setText(java.lang.CharSequence)>($r74);
        $r75 = newarray (java.lang.Object)[1];
        $r76 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        $r77 = $r76.<org.petero.droidfish.activities.ChessBoardEdit: org.petero.droidfish.gamelogic.Position pos>;
        $i5 = $r77.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        $r75[0] = $r78;
        $r79 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r75);
        virtualinvoke r69.<android.widget.EditText: void setText(java.lang.CharSequence)>($r79);
        $r80 = new org.petero.droidfish.activities.EditBoard$11;
        specialinvoke $r80.<org.petero.droidfish.activities.EditBoard$11: void <init>(org.petero.droidfish.activities.EditBoard,android.widget.EditText,android.widget.EditText)>(r0, r67, r69);
        r5 = $r80;
        $r81 = new org.petero.droidfish.activities.EditBoard$12;
        specialinvoke $r81.<org.petero.droidfish.activities.EditBoard$12: void <init>(org.petero.droidfish.activities.EditBoard,java.lang.Runnable)>(r0, r5);
        virtualinvoke r63.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Ok", $r81);
        virtualinvoke r63.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Cancel", null);
        r6 = virtualinvoke r63.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        $r84 = new org.petero.droidfish.activities.EditBoard$13;
        specialinvoke $r84.<org.petero.droidfish.activities.EditBoard$13: void <init>(org.petero.droidfish.activities.EditBoard,java.lang.Runnable,android.app.Dialog)>(r0, r5, r6);
        virtualinvoke r69.<android.widget.EditText: void setOnKeyListener(android.view.View$OnKeyListener)>($r84);
        return r6;

     label7:
        return null;
    }

    static void access$000(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard r0;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void sendBackResult()>();
        return;
    }

    static boolean access$100(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        $z0 = r0.<org.petero.droidfish.activities.EditBoard: boolean boardGestures>;
        return $z0;
    }

    static org.petero.droidfish.activities.ChessBoardEdit access$200(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard r0;
        org.petero.droidfish.activities.ChessBoardEdit $r1;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        $r1 = r0.<org.petero.droidfish.activities.EditBoard: org.petero.droidfish.activities.ChessBoardEdit cb>;
        return $r1;
    }

    static void access$300(org.petero.droidfish.activities.EditBoard, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.activities.EditBoard r0;
        org.petero.droidfish.gamelogic.Move r1;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Move;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void doMove(org.petero.droidfish.gamelogic.Move)>(r1);
        return;
    }

    static void access$400(org.petero.droidfish.activities.EditBoard, int)
    {
        org.petero.droidfish.activities.EditBoard r0;
        int i0;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        i0 := @parameter1: int;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setEgtbHints(int)>(i0);
        return;
    }

    static void access$500(org.petero.droidfish.activities.EditBoard, int)
    {
        org.petero.droidfish.activities.EditBoard r0;
        int i0;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        i0 := @parameter1: int;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setSelection(int)>(i0);
        return;
    }

    static boolean access$600(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        $z0 = specialinvoke r0.<org.petero.droidfish.activities.EditBoard: boolean checkValidAndUpdateMaterialDiff()>();
        return $z0;
    }

    static void access$700(org.petero.droidfish.activities.EditBoard)
    {
        org.petero.droidfish.activities.EditBoard r0;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setPosFields()>();
        return;
    }

    static java.lang.String access$800(org.petero.droidfish.activities.EditBoard, org.petero.droidfish.gamelogic.ChessParseError)
    {
        org.petero.droidfish.activities.EditBoard r0;
        org.petero.droidfish.gamelogic.ChessParseError r1;
        java.lang.String $r2;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        r1 := @parameter1: org.petero.droidfish.gamelogic.ChessParseError;
        $r2 = specialinvoke r0.<org.petero.droidfish.activities.EditBoard: java.lang.String getParseErrString(org.petero.droidfish.gamelogic.ChessParseError)>(r1);
        return $r2;
    }

    static void access$900(org.petero.droidfish.activities.EditBoard, int)
    {
        org.petero.droidfish.activities.EditBoard r0;
        int i0;

        r0 := @parameter0: org.petero.droidfish.activities.EditBoard;
        i0 := @parameter1: int;
        specialinvoke r0.<org.petero.droidfish.activities.EditBoard: void setEPFile(int)>(i0);
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$1$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.EditPGN$1 this$1;

    void <init>(org.petero.droidfish.activities.EditPGN$1)
    {
        org.petero.droidfish.activities.EditPGN$1$1 r0;
        org.petero.droidfish.activities.EditPGN$1 r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$1$1;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN$1;
        r0.<org.petero.droidfish.activities.EditPGN$1$1: org.petero.droidfish.activities.EditPGN$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.EditPGN$1$1 r0;
        org.petero.droidfish.activities.EditPGN$1 $r1;
        org.petero.droidfish.activities.EditPGN $r2;

        r0 := @this: org.petero.droidfish.activities.EditPGN$1$1;
        $r1 = r0.<org.petero.droidfish.activities.EditPGN$1$1: org.petero.droidfish.activities.EditPGN$1 this$1>;
        $r2 = $r1.<org.petero.droidfish.activities.EditPGN$1: org.petero.droidfish.activities.EditPGN val$lpgn>;
        staticinvoke <org.petero.droidfish.activities.EditPGN: void access$100(org.petero.droidfish.activities.EditPGN)>($r2);
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.EditPGN val$lpgn;
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN, org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$1 r0;
        org.petero.droidfish.activities.EditPGN r1, r2;

        r0 := @this: org.petero.droidfish.activities.EditPGN$1;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r2 := @parameter1: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$1: org.petero.droidfish.activities.EditPGN this$0> = r1;
        r0.<org.petero.droidfish.activities.EditPGN$1: org.petero.droidfish.activities.EditPGN val$lpgn> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.EditPGN$1 r0;
        org.petero.droidfish.activities.EditPGN$1$1 $r1;
        org.petero.droidfish.activities.EditPGN $r2, $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditPGN$1;
        $r2 = r0.<org.petero.droidfish.activities.EditPGN$1: org.petero.droidfish.activities.EditPGN this$0>;
        $z0 = staticinvoke <org.petero.droidfish.activities.EditPGN: boolean access$000(org.petero.droidfish.activities.EditPGN)>($r2);
        if $z0 != 0 goto label0;

        return;

     label0:
        $r3 = r0.<org.petero.droidfish.activities.EditPGN$1: org.petero.droidfish.activities.EditPGN this$0>;
        $r1 = new org.petero.droidfish.activities.EditPGN$1$1;
        specialinvoke $r1.<org.petero.droidfish.activities.EditPGN$1$1: void <init>(org.petero.droidfish.activities.EditPGN$1)>(r0);
        virtualinvoke $r3.<org.petero.droidfish.activities.EditPGN: void runOnUiThread(java.lang.Runnable)>($r1);
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$10 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$10 r0;
        org.petero.droidfish.activities.EditPGN r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$10;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$10: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.activities.EditPGN$10 r0;
        android.content.DialogInterface r1;
        int i0;

        r0 := @this: org.petero.droidfish.activities.EditPGN$10;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        interfaceinvoke r1.<android.content.DialogInterface: void cancel()>();
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$11 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.activities.PGNFile$GameInfo val$gi;
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN, org.petero.droidfish.activities.PGNFile$GameInfo)
    {
        org.petero.droidfish.activities.EditPGN$11 r0;
        org.petero.droidfish.activities.EditPGN r1;
        org.petero.droidfish.activities.PGNFile$GameInfo r2;

        r0 := @this: org.petero.droidfish.activities.EditPGN$11;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r2 := @parameter1: org.petero.droidfish.activities.PGNFile$GameInfo;
        r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.EditPGN this$0> = r1;
        r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.PGNFile$GameInfo val$gi> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.activities.EditPGN$11 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.activities.PGNFile$GameInfo r2, $r3, $r4, $r5, $r6;
        long $l1, $l2;
        org.petero.droidfish.activities.EditPGN $r7, $r8, $r10, $r12, $r14;
        org.petero.droidfish.activities.PGNFile $r9;
        java.lang.String $r11;
        android.content.Context $r13;

        r0 := @this: org.petero.droidfish.activities.EditPGN$11;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        tableswitch(i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label0:
        $r3 = new org.petero.droidfish.activities.PGNFile$GameInfo;
        specialinvoke $r3.<org.petero.droidfish.activities.PGNFile$GameInfo: void <init>()>();
        $r4 = r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.PGNFile$GameInfo val$gi>;
        $l1 = $r4.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos>;
        r2 = virtualinvoke $r3.<org.petero.droidfish.activities.PGNFile$GameInfo: org.petero.droidfish.activities.PGNFile$GameInfo setNull(long)>($l1);
        goto label4;

     label1:
        $r5 = new org.petero.droidfish.activities.PGNFile$GameInfo;
        specialinvoke $r5.<org.petero.droidfish.activities.PGNFile$GameInfo: void <init>()>();
        $r6 = r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.PGNFile$GameInfo val$gi>;
        $l2 = $r6.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos>;
        r2 = virtualinvoke $r5.<org.petero.droidfish.activities.PGNFile$GameInfo: org.petero.droidfish.activities.PGNFile$GameInfo setNull(long)>($l2);
        goto label4;

     label2:
        r2 = r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.PGNFile$GameInfo val$gi>;
        goto label4;

     label3:
        $r7 = r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r7.<org.petero.droidfish.activities.EditPGN: void finish()>();
        return;

     label4:
        $r8 = r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.EditPGN this$0>;
        $r9 = $r8.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile>;
        $r10 = r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.EditPGN this$0>;
        $r11 = $r10.<org.petero.droidfish.activities.EditPGN: java.lang.String pgnToSave>;
        $r12 = r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.EditPGN this$0>;
        $r13 = virtualinvoke $r12.<org.petero.droidfish.activities.EditPGN: android.content.Context getApplicationContext()>();
        virtualinvoke $r9.<org.petero.droidfish.activities.PGNFile: boolean replacePGN(java.lang.String,org.petero.droidfish.activities.PGNFile$GameInfo,android.content.Context)>($r11, r2, $r13);
        $r14 = r0.<org.petero.droidfish.activities.EditPGN$11: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r14.<org.petero.droidfish.activities.EditPGN: void finish()>();
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$12 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$12 r0;
        org.petero.droidfish.activities.EditPGN r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$12;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$12: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.activities.EditPGN$12 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.activities.EditPGN $r2, $r4;
        org.petero.droidfish.activities.PGNFile $r3;

        r0 := @this: org.petero.droidfish.activities.EditPGN$12;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.activities.EditPGN$12: org.petero.droidfish.activities.EditPGN this$0>;
        $r3 = $r2.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile>;
        virtualinvoke $r3.<org.petero.droidfish.activities.PGNFile: boolean delete()>();
        $r4 = r0.<org.petero.droidfish.activities.EditPGN$12: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r4.<org.petero.droidfish.activities.EditPGN: void finish()>();
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$13 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$13 r0;
        org.petero.droidfish.activities.EditPGN r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$13;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$13: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.activities.EditPGN$13 r0;
        android.content.DialogInterface r1;
        int i0;

        r0 := @this: org.petero.droidfish.activities.EditPGN$13;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        interfaceinvoke r1.<android.content.DialogInterface: void cancel()>();
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$14 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$14 r0;
        org.petero.droidfish.activities.EditPGN r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$14;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$14: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.EditPGN$14 r0;
        org.petero.droidfish.activities.EditPGN $r1;
        android.content.Context $r2;
        android.widget.Toast $r3;

        r0 := @this: org.petero.droidfish.activities.EditPGN$14;
        $r1 = r0.<org.petero.droidfish.activities.EditPGN$14: org.petero.droidfish.activities.EditPGN this$0>;
        $r2 = virtualinvoke $r1.<org.petero.droidfish.activities.EditPGN: android.content.Context getApplicationContext()>();
        $r3 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r2, 2131099808, 0);
        virtualinvoke $r3.<android.widget.Toast: void show()>();
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$15 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$15 r0;
        org.petero.droidfish.activities.EditPGN r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$15;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$15: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.EditPGN$15 r0;
        org.petero.droidfish.activities.EditPGN $r1;
        android.content.Context $r2;
        android.widget.Toast $r3;

        r0 := @this: org.petero.droidfish.activities.EditPGN$15;
        $r1 = r0.<org.petero.droidfish.activities.EditPGN$15: org.petero.droidfish.activities.EditPGN this$0>;
        $r2 = virtualinvoke $r1.<org.petero.droidfish.activities.EditPGN: android.content.Context getApplicationContext()>();
        $r3 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r2, 2131099809, 0);
        virtualinvoke $r3.<android.widget.Toast: void show()>();
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$16 extends java.lang.Object
{
    static final int[] $SwitchMap$org$petero$droidfish$activities$PGNFile$GameInfoResult;

    static void <clinit>()
    {
        org.petero.droidfish.activities.PGNFile$GameInfoResult[] $r0;
        org.petero.droidfish.activities.PGNFile$GameInfoResult $r1, $r7;
        java.lang.NoSuchFieldError r2, $r5, $r8, r9;
        int $i0, $i1, $i2;
        int[] $r3, $r4, $r6;

        $r0 = staticinvoke <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult[] values()>();
        $i0 = lengthof $r0;
        $r3 = newarray (int)[$i0];
        <org.petero.droidfish.activities.EditPGN$16: int[] $SwitchMap$org$petero$droidfish$activities$PGNFile$GameInfoResult> = $r3;

     label0:
        $r4 = <org.petero.droidfish.activities.EditPGN$16: int[] $SwitchMap$org$petero$droidfish$activities$PGNFile$GameInfoResult>;
        $r1 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult OUT_OF_MEMORY>;
        $i1 = virtualinvoke $r1.<org.petero.droidfish.activities.PGNFile$GameInfoResult: int ordinal()>();
        $r4[$i1] = 1;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;

     label3:
        $r6 = <org.petero.droidfish.activities.EditPGN$16: int[] $SwitchMap$org$petero$droidfish$activities$PGNFile$GameInfoResult>;
        $r7 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult NOT_PGN>;
        $i2 = virtualinvoke $r7.<org.petero.droidfish.activities.PGNFile$GameInfoResult: int ordinal()>();
        $r6[$i2] = 2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;

     label6:
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
    }
}
class org.petero.droidfish.activities.EditPGN$2$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.EditPGN$2 this$1;

    void <init>(org.petero.droidfish.activities.EditPGN$2)
    {
        org.petero.droidfish.activities.EditPGN$2$1 r0;
        org.petero.droidfish.activities.EditPGN$2 r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$2$1;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN$2;
        r0.<org.petero.droidfish.activities.EditPGN$2$1: org.petero.droidfish.activities.EditPGN$2 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.EditPGN$2$1 r0;
        java.util.ArrayList $r1, $r16;
        org.petero.droidfish.activities.EditPGN$2 $r2, $r3, $r7, $r9, $r11, $r13, $r14, $r17;
        int $i0, $i1, $i2, $i3;
        org.petero.droidfish.activities.EditPGN $r4, $r8, $r10, $r12, $r15;
        android.content.Context $r5;
        android.widget.Toast $r6;
        java.lang.Object $r18;
        org.petero.droidfish.activities.PGNFile$GameInfo $r19;

        r0 := @this: org.petero.droidfish.activities.EditPGN$2$1;
        $r2 = r0.<org.petero.droidfish.activities.EditPGN$2$1: org.petero.droidfish.activities.EditPGN$2 this$1>;
        $i0 = $r2.<org.petero.droidfish.activities.EditPGN$2: int val$loadItem>;
        $r1 = <org.petero.droidfish.activities.EditPGN: java.util.ArrayList gamesInFile>;
        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();
        if $i0 < $i1 goto label0;

        $r3 = r0.<org.petero.droidfish.activities.EditPGN$2$1: org.petero.droidfish.activities.EditPGN$2 this$1>;
        $r4 = $r3.<org.petero.droidfish.activities.EditPGN$2: org.petero.droidfish.activities.EditPGN this$0>;
        $r5 = virtualinvoke $r4.<org.petero.droidfish.activities.EditPGN: android.content.Context getApplicationContext()>();
        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r5, 2131099741, 0);
        virtualinvoke $r6.<android.widget.Toast: void show()>();
        $r7 = r0.<org.petero.droidfish.activities.EditPGN$2$1: org.petero.droidfish.activities.EditPGN$2 this$1>;
        $r8 = $r7.<org.petero.droidfish.activities.EditPGN$2: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r8.<org.petero.droidfish.activities.EditPGN: void setResult(int)>(0);
        $r9 = r0.<org.petero.droidfish.activities.EditPGN$2$1: org.petero.droidfish.activities.EditPGN$2 this$1>;
        $r10 = $r9.<org.petero.droidfish.activities.EditPGN$2: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r10.<org.petero.droidfish.activities.EditPGN: void finish()>();
        goto label1;

     label0:
        $r11 = r0.<org.petero.droidfish.activities.EditPGN$2$1: org.petero.droidfish.activities.EditPGN$2 this$1>;
        $r12 = $r11.<org.petero.droidfish.activities.EditPGN$2: org.petero.droidfish.activities.EditPGN this$0>;
        $r13 = r0.<org.petero.droidfish.activities.EditPGN$2$1: org.petero.droidfish.activities.EditPGN$2 this$1>;
        $i2 = $r13.<org.petero.droidfish.activities.EditPGN$2: int val$loadItem>;
        $r12.<org.petero.droidfish.activities.EditPGN: int defaultItem> = $i2;
        $r14 = r0.<org.petero.droidfish.activities.EditPGN$2$1: org.petero.droidfish.activities.EditPGN$2 this$1>;
        $r15 = $r14.<org.petero.droidfish.activities.EditPGN$2: org.petero.droidfish.activities.EditPGN this$0>;
        $r16 = <org.petero.droidfish.activities.EditPGN: java.util.ArrayList gamesInFile>;
        $r17 = r0.<org.petero.droidfish.activities.EditPGN$2$1: org.petero.droidfish.activities.EditPGN$2 this$1>;
        $i3 = $r17.<org.petero.droidfish.activities.EditPGN$2: int val$loadItem>;
        $r18 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>($i3);
        $r19 = (org.petero.droidfish.activities.PGNFile$GameInfo) $r18;
        staticinvoke <org.petero.droidfish.activities.EditPGN: void access$200(org.petero.droidfish.activities.EditPGN,org.petero.droidfish.activities.PGNFile$GameInfo)>($r15, $r19);

     label1:
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$2 extends java.lang.Object implements java.lang.Runnable
{
    final int val$loadItem;
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN, int)
    {
        org.petero.droidfish.activities.EditPGN$2 r0;
        org.petero.droidfish.activities.EditPGN r1;
        int i0;

        r0 := @this: org.petero.droidfish.activities.EditPGN$2;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        i0 := @parameter1: int;
        r0.<org.petero.droidfish.activities.EditPGN$2: org.petero.droidfish.activities.EditPGN this$0> = r1;
        r0.<org.petero.droidfish.activities.EditPGN$2: int val$loadItem> = i0;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.EditPGN$2 r0;
        org.petero.droidfish.activities.EditPGN$2$1 $r1;
        org.petero.droidfish.activities.EditPGN $r2, $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditPGN$2;
        $r2 = r0.<org.petero.droidfish.activities.EditPGN$2: org.petero.droidfish.activities.EditPGN this$0>;
        $z0 = staticinvoke <org.petero.droidfish.activities.EditPGN: boolean access$000(org.petero.droidfish.activities.EditPGN)>($r2);
        if $z0 != 0 goto label0;

        return;

     label0:
        $r3 = r0.<org.petero.droidfish.activities.EditPGN$2: org.petero.droidfish.activities.EditPGN this$0>;
        $r1 = new org.petero.droidfish.activities.EditPGN$2$1;
        specialinvoke $r1.<org.petero.droidfish.activities.EditPGN$2$1: void <init>(org.petero.droidfish.activities.EditPGN$2)>(r0);
        virtualinvoke $r3.<org.petero.droidfish.activities.EditPGN: void runOnUiThread(java.lang.Runnable)>($r1);
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$3$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.EditPGN$3 this$1;

    void <init>(org.petero.droidfish.activities.EditPGN$3)
    {
        org.petero.droidfish.activities.EditPGN$3$1 r0;
        org.petero.droidfish.activities.EditPGN$3 r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$3$1;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN$3;
        r0.<org.petero.droidfish.activities.EditPGN$3$1: org.petero.droidfish.activities.EditPGN$3 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.EditPGN$3$1 r0;
        java.util.ArrayList $r1;
        int $i0;
        org.petero.droidfish.activities.EditPGN$3 $r2, $r5, $r8, $r11, $r13;
        org.petero.droidfish.activities.EditPGN $r3, $r6, $r9, $r12, $r14;
        org.petero.droidfish.activities.PGNFile $r4;
        java.lang.String $r7;
        android.content.Context $r10;

        r0 := @this: org.petero.droidfish.activities.EditPGN$3$1;
        $r1 = <org.petero.droidfish.activities.EditPGN: java.util.ArrayList gamesInFile>;
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();
        if $i0 != 0 goto label0;

        $r2 = r0.<org.petero.droidfish.activities.EditPGN$3$1: org.petero.droidfish.activities.EditPGN$3 this$1>;
        $r3 = $r2.<org.petero.droidfish.activities.EditPGN$3: org.petero.droidfish.activities.EditPGN this$0>;
        $r4 = $r3.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile>;
        $r5 = r0.<org.petero.droidfish.activities.EditPGN$3$1: org.petero.droidfish.activities.EditPGN$3 this$1>;
        $r6 = $r5.<org.petero.droidfish.activities.EditPGN$3: org.petero.droidfish.activities.EditPGN this$0>;
        $r7 = $r6.<org.petero.droidfish.activities.EditPGN: java.lang.String pgnToSave>;
        $r8 = r0.<org.petero.droidfish.activities.EditPGN$3$1: org.petero.droidfish.activities.EditPGN$3 this$1>;
        $r9 = $r8.<org.petero.droidfish.activities.EditPGN$3: org.petero.droidfish.activities.EditPGN this$0>;
        $r10 = virtualinvoke $r9.<org.petero.droidfish.activities.EditPGN: android.content.Context getApplicationContext()>();
        virtualinvoke $r4.<org.petero.droidfish.activities.PGNFile: void appendPGN(java.lang.String,android.content.Context)>($r7, $r10);
        $r11 = r0.<org.petero.droidfish.activities.EditPGN$3$1: org.petero.droidfish.activities.EditPGN$3 this$1>;
        $r12 = $r11.<org.petero.droidfish.activities.EditPGN$3: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r12.<org.petero.droidfish.activities.EditPGN: void finish()>();
        goto label1;

     label0:
        $r13 = r0.<org.petero.droidfish.activities.EditPGN$3$1: org.petero.droidfish.activities.EditPGN$3 this$1>;
        $r14 = $r13.<org.petero.droidfish.activities.EditPGN$3: org.petero.droidfish.activities.EditPGN val$lpgn>;
        staticinvoke <org.petero.droidfish.activities.EditPGN: void access$100(org.petero.droidfish.activities.EditPGN)>($r14);

     label1:
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$3 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.EditPGN val$lpgn;
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN, org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$3 r0;
        org.petero.droidfish.activities.EditPGN r1, r2;

        r0 := @this: org.petero.droidfish.activities.EditPGN$3;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r2 := @parameter1: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$3: org.petero.droidfish.activities.EditPGN this$0> = r1;
        r0.<org.petero.droidfish.activities.EditPGN$3: org.petero.droidfish.activities.EditPGN val$lpgn> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.EditPGN$3 r0;
        org.petero.droidfish.activities.EditPGN$3$1 $r1;
        org.petero.droidfish.activities.EditPGN $r2, $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditPGN$3;
        $r2 = r0.<org.petero.droidfish.activities.EditPGN$3: org.petero.droidfish.activities.EditPGN this$0>;
        $z0 = staticinvoke <org.petero.droidfish.activities.EditPGN: boolean access$000(org.petero.droidfish.activities.EditPGN)>($r2);
        if $z0 != 0 goto label0;

        return;

     label0:
        $r3 = r0.<org.petero.droidfish.activities.EditPGN$3: org.petero.droidfish.activities.EditPGN this$0>;
        $r1 = new org.petero.droidfish.activities.EditPGN$3$1;
        specialinvoke $r1.<org.petero.droidfish.activities.EditPGN$3$1: void <init>(org.petero.droidfish.activities.EditPGN$3)>(r0);
        virtualinvoke $r3.<org.petero.droidfish.activities.EditPGN: void runOnUiThread(java.lang.Runnable)>($r1);
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$4 extends android.widget.ArrayAdapter
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN, android.content.Context, int, java.util.List)
    {
        org.petero.droidfish.activities.EditPGN$4 r0;
        org.petero.droidfish.activities.EditPGN r1;
        android.content.Context r2;
        int i0;
        java.util.List r3;

        r0 := @this: org.petero.droidfish.activities.EditPGN$4;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r2 := @parameter1: android.content.Context;
        i0 := @parameter2: int;
        r3 := @parameter3: java.util.List;
        r0.<org.petero.droidfish.activities.EditPGN$4: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>(r2, i0, r3);
        return;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        org.petero.droidfish.activities.EditPGN$4 r0;
        int i0, i1;
        android.view.View r1, r3;
        android.view.ViewGroup r2;
        boolean $z0;
        org.petero.droidfish.ColorTheme $r4;
        android.widget.TextView $r5;

        r0 := @this: org.petero.droidfish.activities.EditPGN$4;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.View;
        r2 := @parameter2: android.view.ViewGroup;
        r3 = specialinvoke r0.<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i0, r1, r2);
        $z0 = r3 instanceof android.widget.TextView;
        if $z0 == 0 goto label0;

        $r4 = staticinvoke <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme instance()>();
        i1 = virtualinvoke $r4.<org.petero.droidfish.ColorTheme: int getColor(int)>(16);
        $r5 = (android.widget.TextView) r3;
        virtualinvoke $r5.<android.widget.TextView: void setTextColor(int)>(i1);

     label0:
        return r3;
    }
}
class org.petero.droidfish.activities.EditPGN$5 extends java.lang.Object implements android.widget.AdapterView$OnItemClickListener
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$5 r0;
        org.petero.droidfish.activities.EditPGN r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$5;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        org.petero.droidfish.activities.EditPGN$5 r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0;
        long l1;
        org.petero.droidfish.activities.EditPGN $r3, $r4, $r9, $r11, $r12, $r13, $r14, $r16, $r17;
        android.widget.ArrayAdapter $r5;
        java.lang.Object $r6;
        org.petero.droidfish.activities.PGNFile$GameInfo $r7, $r10, $r15;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditPGN$5;
        r1 := @parameter0: android.widget.AdapterView;
        r2 := @parameter1: android.view.View;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        $r3 = r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0>;
        $r4 = r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0>;
        $r5 = $r4.<org.petero.droidfish.activities.EditPGN: android.widget.ArrayAdapter aa>;
        $r6 = virtualinvoke $r5.<android.widget.ArrayAdapter: java.lang.Object getItem(int)>(i0);
        $r7 = (org.petero.droidfish.activities.PGNFile$GameInfo) $r6;
        staticinvoke <org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo access$302(org.petero.droidfish.activities.EditPGN,org.petero.droidfish.activities.PGNFile$GameInfo)>($r3, $r7);
        $r9 = r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0>;
        $r10 = staticinvoke <org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo access$300(org.petero.droidfish.activities.EditPGN)>($r9);
        if $r10 != null goto label0;

        return;

     label0:
        $r11 = r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0>;
        $z0 = $r11.<org.petero.droidfish.activities.EditPGN: boolean loadGame>;
        if $z0 == 0 goto label1;

        $r12 = r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0>;
        $r12.<org.petero.droidfish.activities.EditPGN: int defaultItem> = i0;
        $r13 = r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0>;
        $r14 = r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0>;
        $r15 = staticinvoke <org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo access$300(org.petero.droidfish.activities.EditPGN)>($r14);
        staticinvoke <org.petero.droidfish.activities.EditPGN: void access$200(org.petero.droidfish.activities.EditPGN,org.petero.droidfish.activities.PGNFile$GameInfo)>($r13, $r15);
        goto label2;

     label1:
        $r16 = r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r16.<org.petero.droidfish.activities.EditPGN: void removeDialog(int)>(2);
        $r17 = r0.<org.petero.droidfish.activities.EditPGN$5: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r17.<org.petero.droidfish.activities.EditPGN: void showDialog(int)>(2);

     label2:
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$6 extends java.lang.Object implements android.widget.AdapterView$OnItemLongClickListener
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$6 r0;
        org.petero.droidfish.activities.EditPGN r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$6;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$6: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean onItemLongClick(android.widget.AdapterView, android.view.View, int, long)
    {
        org.petero.droidfish.activities.EditPGN$6 r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0;
        long l1;
        org.petero.droidfish.activities.EditPGN $r3, $r4, $r9, $r11, $r12;
        android.widget.ArrayAdapter $r5;
        java.lang.Object $r6;
        org.petero.droidfish.activities.PGNFile$GameInfo $r7, $r10;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditPGN$6;
        r1 := @parameter0: android.widget.AdapterView;
        r2 := @parameter1: android.view.View;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        $r3 = r0.<org.petero.droidfish.activities.EditPGN$6: org.petero.droidfish.activities.EditPGN this$0>;
        $r4 = r0.<org.petero.droidfish.activities.EditPGN$6: org.petero.droidfish.activities.EditPGN this$0>;
        $r5 = $r4.<org.petero.droidfish.activities.EditPGN: android.widget.ArrayAdapter aa>;
        $r6 = virtualinvoke $r5.<android.widget.ArrayAdapter: java.lang.Object getItem(int)>(i0);
        $r7 = (org.petero.droidfish.activities.PGNFile$GameInfo) $r6;
        staticinvoke <org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo access$302(org.petero.droidfish.activities.EditPGN,org.petero.droidfish.activities.PGNFile$GameInfo)>($r3, $r7);
        $r9 = r0.<org.petero.droidfish.activities.EditPGN$6: org.petero.droidfish.activities.EditPGN this$0>;
        $r10 = staticinvoke <org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo access$300(org.petero.droidfish.activities.EditPGN)>($r9);
        $z0 = virtualinvoke $r10.<org.petero.droidfish.activities.PGNFile$GameInfo: boolean isNull()>();
        if $z0 != 0 goto label0;

        $r11 = r0.<org.petero.droidfish.activities.EditPGN$6: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r11.<org.petero.droidfish.activities.EditPGN: void removeDialog(int)>(1);
        $r12 = r0.<org.petero.droidfish.activities.EditPGN$6: org.petero.droidfish.activities.EditPGN this$0>;
        virtualinvoke $r12.<org.petero.droidfish.activities.EditPGN: void showDialog(int)>(1);

     label0:
        return 1;
    }
}
class org.petero.droidfish.activities.EditPGN$7 extends java.lang.Object implements android.text.TextWatcher
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$7 r0;
        org.petero.droidfish.activities.EditPGN r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$7;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$7: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        org.petero.droidfish.activities.EditPGN$7 r0;
        android.text.Editable r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$7;
        r1 := @parameter0: android.text.Editable;
        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        org.petero.droidfish.activities.EditPGN$7 r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: org.petero.droidfish.activities.EditPGN$7;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        org.petero.droidfish.activities.EditPGN$7 r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        org.petero.droidfish.activities.EditPGN $r2, $r5;
        android.widget.ArrayAdapter $r3;
        android.widget.Filter $r4;
        java.lang.String $r6;

        r0 := @this: org.petero.droidfish.activities.EditPGN$7;
        r1 := @parameter0: java.lang.CharSequence;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        $r2 = r0.<org.petero.droidfish.activities.EditPGN$7: org.petero.droidfish.activities.EditPGN this$0>;
        $r3 = $r2.<org.petero.droidfish.activities.EditPGN: android.widget.ArrayAdapter aa>;
        $r4 = virtualinvoke $r3.<android.widget.ArrayAdapter: android.widget.Filter getFilter()>();
        virtualinvoke $r4.<android.widget.Filter: void filter(java.lang.CharSequence)>(r1);
        $r5 = r0.<org.petero.droidfish.activities.EditPGN$7: org.petero.droidfish.activities.EditPGN this$0>;
        $r6 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();
        $r5.<org.petero.droidfish.activities.EditPGN: java.lang.String lastSearchString> = $r6;
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$8 extends java.lang.Object implements android.content.DialogInterface$OnCancelListener
{
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN$8 r0;
        org.petero.droidfish.activities.EditPGN r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN$8;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r0.<org.petero.droidfish.activities.EditPGN$8: org.petero.droidfish.activities.EditPGN this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onCancel(android.content.DialogInterface)
    {
        org.petero.droidfish.activities.EditPGN$8 r0;
        android.content.DialogInterface r1;
        java.lang.Thread r2;
        org.petero.droidfish.activities.EditPGN $r3;

        r0 := @this: org.petero.droidfish.activities.EditPGN$8;
        r1 := @parameter0: android.content.DialogInterface;
        $r3 = r0.<org.petero.droidfish.activities.EditPGN$8: org.petero.droidfish.activities.EditPGN this$0>;
        r2 = $r3.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread>;
        if r2 == null goto label0;

        virtualinvoke r2.<java.lang.Thread: void interrupt()>();

     label0:
        return;
    }
}
class org.petero.droidfish.activities.EditPGN$9 extends java.lang.Object implements android.content.DialogInterface$OnClickListener
{
    final org.petero.droidfish.activities.PGNFile$GameInfo val$gi;
    final org.petero.droidfish.activities.EditPGN this$0;

    void <init>(org.petero.droidfish.activities.EditPGN, org.petero.droidfish.activities.PGNFile$GameInfo)
    {
        org.petero.droidfish.activities.EditPGN$9 r0;
        org.petero.droidfish.activities.EditPGN r1;
        org.petero.droidfish.activities.PGNFile$GameInfo r2;

        r0 := @this: org.petero.droidfish.activities.EditPGN$9;
        r1 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r2 := @parameter1: org.petero.droidfish.activities.PGNFile$GameInfo;
        r0.<org.petero.droidfish.activities.EditPGN$9: org.petero.droidfish.activities.EditPGN this$0> = r1;
        r0.<org.petero.droidfish.activities.EditPGN$9: org.petero.droidfish.activities.PGNFile$GameInfo val$gi> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onClick(android.content.DialogInterface, int)
    {
        org.petero.droidfish.activities.EditPGN$9 r0;
        android.content.DialogInterface r1;
        int i0;
        org.petero.droidfish.activities.EditPGN $r2;
        org.petero.droidfish.activities.PGNFile$GameInfo $r3;

        r0 := @this: org.petero.droidfish.activities.EditPGN$9;
        r1 := @parameter0: android.content.DialogInterface;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.activities.EditPGN$9: org.petero.droidfish.activities.EditPGN this$0>;
        $r3 = r0.<org.petero.droidfish.activities.EditPGN$9: org.petero.droidfish.activities.PGNFile$GameInfo val$gi>;
        staticinvoke <org.petero.droidfish.activities.EditPGN: void access$400(org.petero.droidfish.activities.EditPGN,org.petero.droidfish.activities.PGNFile$GameInfo)>($r2, $r3);
        interfaceinvoke r1.<android.content.DialogInterface: void cancel()>();
        return;
    }
}
public class org.petero.droidfish.activities.EditPGN extends android.app.ListActivity
{
    static java.util.ArrayList gamesInFile;
    static boolean cacheValid;
    org.petero.droidfish.activities.PGNFile pgnFile;
    android.app.ProgressDialog progress;
    private org.petero.droidfish.activities.PGNFile$GameInfo selectedGi;
    android.widget.ArrayAdapter aa;
    android.widget.TextView hintText;
    android.widget.EditText filterText;
    android.content.SharedPreferences settings;
    int defaultItem;
    java.lang.String lastSearchString;
    java.lang.String lastFileName;
    long lastModTime;
    java.lang.Thread workThread;
    boolean loadGame;
    java.lang.String pgnToSave;
    static final int PROGRESS_DIALOG;
    static final int DELETE_GAME_DIALOG;
    static final int SAVE_GAME_DIALOG;
    static final int DELETE_PGN_FILE_DIALOG;

    public void <init>()
    {
        org.petero.droidfish.activities.EditPGN r0;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        specialinvoke r0.<android.app.ListActivity: void <init>()>();
        r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo selectedGi> = null;
        r0.<org.petero.droidfish.activities.EditPGN: android.widget.ArrayAdapter aa> = null;
        r0.<org.petero.droidfish.activities.EditPGN: android.widget.TextView hintText> = null;
        r0.<org.petero.droidfish.activities.EditPGN: android.widget.EditText filterText> = null;
        r0.<org.petero.droidfish.activities.EditPGN: int defaultItem> = 0;
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastSearchString> = "";
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName> = "";
        r0.<org.petero.droidfish.activities.EditPGN: long lastModTime> = -1L;
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread> = null;
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        org.petero.droidfish.activities.EditPGN r0, r5, r33;
        android.os.Bundle r1;
        android.content.Intent r2;
        java.lang.String r3, r4, $r8, $r9, $r10, $r11, $r14, $r16, $r28, $r31;
        int i0, $i1, $i3, $i5;
        android.content.SharedPreferences $r6, $r7, $r12, $r13, $r15, $r17;
        long $l2, $l4;
        boolean $z0, $z1, $z2, z3, $z4, z5;
        org.petero.droidfish.activities.PGNFile $r18, $r22, $r29, r30, $r32;
        java.lang.Thread $r19, $r21, $r25, $r27, $r34, $r36;
        org.petero.droidfish.activities.EditPGN$1 $r20;
        byte $b6;
        android.content.Context $r23;
        android.widget.Toast $r24;
        org.petero.droidfish.activities.EditPGN$2 $r26;
        org.petero.droidfish.activities.EditPGN$3 $r35;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.app.ListActivity: void onCreate(android.os.Bundle)>(r1);
        $r6 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);
        r0.<org.petero.droidfish.activities.EditPGN: android.content.SharedPreferences settings> = $r6;
        $r7 = r0.<org.petero.droidfish.activities.EditPGN: android.content.SharedPreferences settings>;
        staticinvoke <org.petero.droidfish.Util: void setFullScreenMode(android.app.Activity,android.content.SharedPreferences)>(r0, $r7);
        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("defaultItem");
        r0.<org.petero.droidfish.activities.EditPGN: int defaultItem> = $i1;
        $r8 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("lastSearchString");
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastSearchString> = $r8;
        $r9 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastSearchString>;
        if $r9 != null goto label0;

        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastSearchString> = "";

     label0:
        $r10 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("lastFileName");
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName> = $r10;
        $r11 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName>;
        if $r11 != null goto label1;

        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName> = "";

     label1:
        $l2 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String)>("lastModTime");
        r0.<org.petero.droidfish.activities.EditPGN: long lastModTime> = $l2;
        goto label3;

     label2:
        $r12 = r0.<org.petero.droidfish.activities.EditPGN: android.content.SharedPreferences settings>;
        $i3 = interfaceinvoke $r12.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("defaultItem", 0);
        r0.<org.petero.droidfish.activities.EditPGN: int defaultItem> = $i3;
        $r13 = r0.<org.petero.droidfish.activities.EditPGN: android.content.SharedPreferences settings>;
        $r14 = interfaceinvoke $r13.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("lastSearchString", "");
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastSearchString> = $r14;
        $r15 = r0.<org.petero.droidfish.activities.EditPGN: android.content.SharedPreferences settings>;
        $r16 = interfaceinvoke $r15.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("lastFileName", "");
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName> = $r16;
        $r17 = r0.<org.petero.droidfish.activities.EditPGN: android.content.SharedPreferences settings>;
        $l4 = interfaceinvoke $r17.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("lastModTime", 0L);
        r0.<org.petero.droidfish.activities.EditPGN: long lastModTime> = $l4;

     label3:
        r2 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: android.content.Intent getIntent()>();
        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        r4 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("org.petero.droidfish.pathname");
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("org.petero.droidfish.loadFile");
        if $z0 == 0 goto label4;

        $r18 = new org.petero.droidfish.activities.PGNFile;
        specialinvoke $r18.<org.petero.droidfish.activities.PGNFile: void <init>(java.lang.String)>(r4);
        r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile> = $r18;
        r0.<org.petero.droidfish.activities.EditPGN: boolean loadGame> = 1;
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void showDialog(int)>(0);
        r5 = r0;
        $r19 = new java.lang.Thread;
        $r20 = new org.petero.droidfish.activities.EditPGN$1;
        specialinvoke $r20.<org.petero.droidfish.activities.EditPGN$1: void <init>(org.petero.droidfish.activities.EditPGN,org.petero.droidfish.activities.EditPGN)>(r0, r5);
        specialinvoke $r19.<java.lang.Thread: void <init>(java.lang.Runnable)>($r20);
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread> = $r19;
        $r21 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread>;
        virtualinvoke $r21.<java.lang.Thread: void start()>();
        goto label14;

     label4:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("org.petero.droidfish.loadFileNextGame");
        if $z1 != 0 goto label5;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("org.petero.droidfish.loadFilePrevGame");
        if $z2 == 0 goto label10;

     label5:
        $r22 = new org.petero.droidfish.activities.PGNFile;
        specialinvoke $r22.<org.petero.droidfish.activities.PGNFile: void <init>(java.lang.String)>(r4);
        r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile> = $r22;
        r0.<org.petero.droidfish.activities.EditPGN: boolean loadGame> = 1;
        z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("org.petero.droidfish.loadFileNextGame");
        $i5 = r0.<org.petero.droidfish.activities.EditPGN: int defaultItem>;
        if z3 == 0 goto label6;

        $b6 = 1;
        goto label7;

     label6:
        $b6 = -1;

     label7:
        i0 = $i5 + $b6;
        if i0 >= 0 goto label8;

        $r23 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: android.content.Context getApplicationContext()>();
        $r24 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r23, 2131099740, 0);
        virtualinvoke $r24.<android.widget.Toast: void show()>();
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void setResult(int)>(0);
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void finish()>();
        goto label9;

     label8:
        $r25 = new java.lang.Thread;
        $r26 = new org.petero.droidfish.activities.EditPGN$2;
        specialinvoke $r26.<org.petero.droidfish.activities.EditPGN$2: void <init>(org.petero.droidfish.activities.EditPGN,int)>(r0, i0);
        specialinvoke $r25.<java.lang.Thread: void <init>(java.lang.Runnable)>($r26);
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread> = $r25;
        $r27 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread>;
        virtualinvoke $r27.<java.lang.Thread: void start()>();

     label9:
        goto label14;

     label10:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("org.petero.droidfish.saveFile");
        if $z4 == 0 goto label13;

        r0.<org.petero.droidfish.activities.EditPGN: boolean loadGame> = 0;
        $r28 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("org.petero.droidfish.pgn");
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String pgnToSave> = $r28;
        z5 = virtualinvoke r2.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("org.petero.droidfish.silent", 0);
        if z5 == 0 goto label11;

        $r29 = new org.petero.droidfish.activities.PGNFile;
        specialinvoke $r29.<org.petero.droidfish.activities.PGNFile: void <init>(java.lang.String)>(r4);
        r30 = $r29;
        $r31 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String pgnToSave>;
        virtualinvoke r30.<org.petero.droidfish.activities.PGNFile: void appendPGN(java.lang.String,android.content.Context)>($r31, null);
        goto label12;

     label11:
        $r32 = new org.petero.droidfish.activities.PGNFile;
        specialinvoke $r32.<org.petero.droidfish.activities.PGNFile: void <init>(java.lang.String)>(r4);
        r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile> = $r32;
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void showDialog(int)>(0);
        r33 = r0;
        $r34 = new java.lang.Thread;
        $r35 = new org.petero.droidfish.activities.EditPGN$3;
        specialinvoke $r35.<org.petero.droidfish.activities.EditPGN$3: void <init>(org.petero.droidfish.activities.EditPGN,org.petero.droidfish.activities.EditPGN)>(r0, r33);
        specialinvoke $r34.<java.lang.Thread: void <init>(java.lang.Runnable)>($r35);
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread> = $r34;
        $r36 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread>;
        virtualinvoke $r36.<java.lang.Thread: void start()>();

     label12:
        goto label14;

     label13:
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void setResult(int)>(0);
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void finish()>();

     label14:
        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        org.petero.droidfish.activities.EditPGN r0;
        android.os.Bundle r1;
        int $i0;
        java.lang.String $r2, $r3;
        long $l1;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.app.ListActivity: void onSaveInstanceState(android.os.Bundle)>(r1);
        $i0 = r0.<org.petero.droidfish.activities.EditPGN: int defaultItem>;
        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("defaultItem", $i0);
        $r2 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastSearchString>;
        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("lastSearchString", $r2);
        $r3 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName>;
        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("lastFileName", $r3);
        $l1 = r0.<org.petero.droidfish.activities.EditPGN: long lastModTime>;
        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("lastModTime", $l1);
        return;
    }

    protected void onPause()
    {
        org.petero.droidfish.activities.EditPGN r0;
        android.content.SharedPreferences$Editor r1;
        android.content.SharedPreferences $r2;
        int $i0;
        java.lang.String $r4, $r6;
        long $l1;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        $r2 = r0.<org.petero.droidfish.activities.EditPGN: android.content.SharedPreferences settings>;
        r1 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $i0 = r0.<org.petero.droidfish.activities.EditPGN: int defaultItem>;
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("defaultItem", $i0);
        $r4 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastSearchString>;
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("lastSearchString", $r4);
        $r6 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName>;
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("lastFileName", $r6);
        $l1 = r0.<org.petero.droidfish.activities.EditPGN: long lastModTime>;
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("lastModTime", $l1);
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: boolean commit()>();
        specialinvoke r0.<android.app.ListActivity: void onPause()>();
        return;
    }

    protected void onDestroy()
    {
        org.petero.droidfish.activities.EditPGN r0;
        java.lang.InterruptedException r1, $r5;
        java.lang.Thread $r2, $r3, $r4;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        $r2 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread>;
        if $r2 == null goto label4;

        $r3 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread>;
        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

     label0:
        $r4 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread>;
        virtualinvoke $r4.<java.lang.Thread: void join()>();

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r1 = $r5;

     label3:
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.Thread workThread> = null;

     label4:
        specialinvoke r0.<android.app.ListActivity: void onDestroy()>();
        return;

        catch java.lang.InterruptedException from label0 to label1 with label2;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        org.petero.droidfish.activities.EditPGN r0;
        android.view.Menu r1;
        android.view.MenuInflater $r2;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter0: android.view.Menu;
        $r2 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: android.view.MenuInflater getMenuInflater()>();
        virtualinvoke $r2.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131230720, r1);
        return 1;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        org.petero.droidfish.activities.EditPGN r0;
        android.view.MenuItem r1;
        int $i0;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter0: android.view.MenuItem;
        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();
        lookupswitch($i0)
        {
            case 2131296306: goto label0;
            default: goto label1;
        };

     label0:
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void removeDialog(int)>(3);
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void showDialog(int)>(3);

     label1:
        return 0;
    }

    private final void showList()
    {
        org.petero.droidfish.activities.EditPGN r0;
        java.util.ArrayList $r1;
        android.widget.ListView r2;
        android.app.ProgressDialog $r3;
        android.view.View $r4, $r9, $r15;
        org.petero.droidfish.activities.EditPGN$4 $r5;
        android.widget.ArrayAdapter $r6;
        int $i0;
        org.petero.droidfish.activities.EditPGN$5 $r7;
        org.petero.droidfish.activities.EditPGN$6 $r8;
        android.widget.EditText $r10, $r11, $r13;
        org.petero.droidfish.activities.EditPGN$7 $r12;
        java.lang.String $r14;
        android.widget.TextView $r16, $r17, $r18;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        $r3 = r0.<org.petero.droidfish.activities.EditPGN: android.app.ProgressDialog progress>;
        virtualinvoke $r3.<android.app.ProgressDialog: void dismiss()>();
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void setContentView(int)>(2130903050);
        $r4 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: android.view.View findViewById(int)>(16908290);
        staticinvoke <org.petero.droidfish.Util: void overrideFonts(android.view.View)>($r4);
        $r5 = new org.petero.droidfish.activities.EditPGN$4;
        $r1 = <org.petero.droidfish.activities.EditPGN: java.util.ArrayList gamesInFile>;
        specialinvoke $r5.<org.petero.droidfish.activities.EditPGN$4: void <init>(org.petero.droidfish.activities.EditPGN,android.content.Context,int,java.util.List)>(r0, r0, 2130903051, $r1);
        r0.<org.petero.droidfish.activities.EditPGN: android.widget.ArrayAdapter aa> = $r5;
        $r6 = r0.<org.petero.droidfish.activities.EditPGN: android.widget.ArrayAdapter aa>;
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void setListAdapter(android.widget.ListAdapter)>($r6);
        r2 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: android.widget.ListView getListView()>();
        $i0 = r0.<org.petero.droidfish.activities.EditPGN: int defaultItem>;
        virtualinvoke r2.<android.widget.ListView: void setSelectionFromTop(int,int)>($i0, 0);
        virtualinvoke r2.<android.widget.ListView: void setFastScrollEnabled(boolean)>(1);
        $r7 = new org.petero.droidfish.activities.EditPGN$5;
        specialinvoke $r7.<org.petero.droidfish.activities.EditPGN$5: void <init>(org.petero.droidfish.activities.EditPGN)>(r0);
        virtualinvoke r2.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r7);
        $r8 = new org.petero.droidfish.activities.EditPGN$6;
        specialinvoke $r8.<org.petero.droidfish.activities.EditPGN$6: void <init>(org.petero.droidfish.activities.EditPGN)>(r0);
        virtualinvoke r2.<android.widget.ListView: void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener)>($r8);
        $r9 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: android.view.View findViewById(int)>(2131296303);
        $r10 = (android.widget.EditText) $r9;
        r0.<org.petero.droidfish.activities.EditPGN: android.widget.EditText filterText> = $r10;
        $r11 = r0.<org.petero.droidfish.activities.EditPGN: android.widget.EditText filterText>;
        $r12 = new org.petero.droidfish.activities.EditPGN$7;
        specialinvoke $r12.<org.petero.droidfish.activities.EditPGN$7: void <init>(org.petero.droidfish.activities.EditPGN)>(r0);
        virtualinvoke $r11.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r12);
        $r13 = r0.<org.petero.droidfish.activities.EditPGN: android.widget.EditText filterText>;
        $r14 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastSearchString>;
        virtualinvoke $r13.<android.widget.EditText: void setText(java.lang.CharSequence)>($r14);
        $r15 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: android.view.View findViewById(int)>(2131296302);
        $r16 = (android.widget.TextView) $r15;
        r0.<org.petero.droidfish.activities.EditPGN: android.widget.TextView hintText> = $r16;
        $z0 = r0.<org.petero.droidfish.activities.EditPGN: boolean loadGame>;
        if $z0 == 0 goto label0;

        $r17 = r0.<org.petero.droidfish.activities.EditPGN: android.widget.TextView hintText>;
        virtualinvoke $r17.<android.widget.TextView: void setVisibility(int)>(8);
        goto label1;

     label0:
        $r18 = r0.<org.petero.droidfish.activities.EditPGN: android.widget.TextView hintText>;
        virtualinvoke $r18.<android.widget.TextView: void setText(int)>(2131099787);

     label1:
        virtualinvoke r2.<android.widget.ListView: boolean requestFocus()>();
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        org.petero.droidfish.activities.EditPGN r0;
        android.content.res.Configuration r1;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter0: android.content.res.Configuration;
        specialinvoke r0.<android.app.ListActivity: void onConfigurationChanged(android.content.res.Configuration)>(r1);
        return;
    }

    protected android.app.Dialog onCreateDialog(int)
    {
        org.petero.droidfish.activities.EditPGN r0;
        int i0;
        android.app.ProgressDialog $r1, $r6, $r7, $r8, $r10, $r12;
        org.petero.droidfish.activities.PGNFile$GameInfo r2, r20;
        android.app.AlertDialog$Builder r3, $r13, $r21, r22, $r32, r33;
        java.lang.String r4, $r9, $r25, $r26, $r27, $r37, r38, $r39, r41;
        android.app.AlertDialog r5, r31, r47;
        org.petero.droidfish.activities.EditPGN$8 $r11;
        org.petero.droidfish.activities.EditPGN$9 $r16;
        org.petero.droidfish.activities.EditPGN$10 $r18;
        java.lang.CharSequence[] $r24, r28;
        org.petero.droidfish.activities.EditPGN$11 $r29;
        java.io.File $r35;
        org.petero.droidfish.activities.PGNFile $r36;
        java.lang.Object[] $r40;
        org.petero.droidfish.activities.EditPGN$12 $r43;
        org.petero.droidfish.activities.EditPGN$13 $r45;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        i0 := @parameter0: int;
        tableswitch(i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label0:
        $r1 = new android.app.ProgressDialog;
        specialinvoke $r1.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);
        r0.<org.petero.droidfish.activities.EditPGN: android.app.ProgressDialog progress> = $r1;
        $r6 = r0.<org.petero.droidfish.activities.EditPGN: android.app.ProgressDialog progress>;
        virtualinvoke $r6.<android.app.ProgressDialog: void setProgressStyle(int)>(1);
        $r7 = r0.<org.petero.droidfish.activities.EditPGN: android.app.ProgressDialog progress>;
        virtualinvoke $r7.<android.app.ProgressDialog: void setTitle(int)>(2131099712);
        $r8 = r0.<org.petero.droidfish.activities.EditPGN: android.app.ProgressDialog progress>;
        $r9 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: java.lang.String getString(int)>(2131099716);
        virtualinvoke $r8.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>($r9);
        $r10 = r0.<org.petero.droidfish.activities.EditPGN: android.app.ProgressDialog progress>;
        $r11 = new org.petero.droidfish.activities.EditPGN$8;
        specialinvoke $r11.<org.petero.droidfish.activities.EditPGN$8: void <init>(org.petero.droidfish.activities.EditPGN)>(r0);
        virtualinvoke $r10.<android.app.ProgressDialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r11);
        $r12 = r0.<org.petero.droidfish.activities.EditPGN: android.app.ProgressDialog progress>;
        return $r12;

     label1:
        r2 = r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo selectedGi>;
        r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo selectedGi> = null;
        $r13 = new android.app.AlertDialog$Builder;
        specialinvoke $r13.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r3 = $r13;
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099801);
        r4 = virtualinvoke r2.<org.petero.droidfish.activities.PGNFile$GameInfo: java.lang.String toString()>();
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r4);
        $r16 = new org.petero.droidfish.activities.EditPGN$9;
        specialinvoke $r16.<org.petero.droidfish.activities.EditPGN$9: void <init>(org.petero.droidfish.activities.EditPGN,org.petero.droidfish.activities.PGNFile$GameInfo)>(r0, r2);
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131099752, $r16);
        $r18 = new org.petero.droidfish.activities.EditPGN$10;
        specialinvoke $r18.<org.petero.droidfish.activities.EditPGN$10: void <init>(org.petero.droidfish.activities.EditPGN)>(r0);
        virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099753, $r18);
        r5 = virtualinvoke r3.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r5;

     label2:
        r20 = r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo selectedGi>;
        r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo selectedGi> = null;
        $r21 = new android.app.AlertDialog$Builder;
        specialinvoke $r21.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r22 = $r21;
        virtualinvoke r22.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099810);
        $r24 = newarray (java.lang.CharSequence)[3];
        $r25 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: java.lang.String getString(int)>(2131099811);
        $r24[0] = $r25;
        $r26 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: java.lang.String getString(int)>(2131099812);
        $r24[1] = $r26;
        $r27 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: java.lang.String getString(int)>(2131099813);
        $r24[2] = $r27;
        r28 = $r24;
        $r29 = new org.petero.droidfish.activities.EditPGN$11;
        specialinvoke $r29.<org.petero.droidfish.activities.EditPGN$11: void <init>(org.petero.droidfish.activities.EditPGN,org.petero.droidfish.activities.PGNFile$GameInfo)>(r0, r20);
        virtualinvoke r22.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r28, $r29);
        r31 = virtualinvoke r22.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r31;

     label3:
        $r32 = new android.app.AlertDialog$Builder;
        specialinvoke $r32.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);
        r33 = $r32;
        virtualinvoke r33.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131099803);
        $r35 = new java.io.File;
        $r36 = r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile>;
        $r37 = virtualinvoke $r36.<org.petero.droidfish.activities.PGNFile: java.lang.String getName()>();
        specialinvoke $r35.<java.io.File: void <init>(java.lang.String)>($r37);
        r38 = virtualinvoke $r35.<java.io.File: java.lang.String getName()>();
        $r39 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: java.lang.String getString(int)>(2131099804);
        $r40 = newarray (java.lang.Object)[1];
        $r40[0] = r38;
        r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r39, $r40);
        virtualinvoke r33.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r41);
        $r43 = new org.petero.droidfish.activities.EditPGN$12;
        specialinvoke $r43.<org.petero.droidfish.activities.EditPGN$12: void <init>(org.petero.droidfish.activities.EditPGN)>(r0);
        virtualinvoke r33.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131099752, $r43);
        $r45 = new org.petero.droidfish.activities.EditPGN$13;
        specialinvoke $r45.<org.petero.droidfish.activities.EditPGN$13: void <init>(org.petero.droidfish.activities.EditPGN)>(r0);
        virtualinvoke r33.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131099753, $r45);
        r47 = virtualinvoke r33.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();
        return r47;

     label4:
        return null;
    }

    private final boolean readFile()
    {
        org.petero.droidfish.activities.EditPGN r0;
        java.lang.String r1, $r4, $r6;
        long l0, $l1;
        org.petero.droidfish.gamelogic.Pair r2;
        org.petero.droidfish.activities.PGNFile $r3, $r7, $r8;
        boolean $z0, $z1, $z2;
        java.io.File $r5;
        byte $b2;
        android.app.ProgressDialog $r9;
        java.lang.Object $r10, $r14, $r18;
        org.petero.droidfish.activities.PGNFile$GameInfoResult $r11, $r15;
        java.util.ArrayList $r12, $r19;
        int[] $r13;
        int $i3, $i4;
        org.petero.droidfish.activities.EditPGN$14 $r16;
        org.petero.droidfish.activities.EditPGN$15 $r17;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        $r3 = r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile>;
        r1 = virtualinvoke $r3.<org.petero.droidfish.activities.PGNFile: java.lang.String getName()>();
        $r4 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName>;
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z0 != 0 goto label0;

        r0.<org.petero.droidfish.activities.EditPGN: int defaultItem> = 0;

     label0:
        $r5 = new java.io.File;
        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1);
        l0 = virtualinvoke $r5.<java.io.File: long lastModified()>();
        $z1 = <org.petero.droidfish.activities.EditPGN: boolean cacheValid>;
        if $z1 == 0 goto label1;

        $l1 = r0.<org.petero.droidfish.activities.EditPGN: long lastModTime>;
        $b2 = l0 cmp $l1;
        if $b2 != 0 goto label1;

        $r6 = r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName>;
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z2 == 0 goto label1;

        return 1;

     label1:
        $r7 = new org.petero.droidfish.activities.PGNFile;
        specialinvoke $r7.<org.petero.droidfish.activities.PGNFile: void <init>(java.lang.String)>(r1);
        r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile> = $r7;
        $r8 = r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile>;
        $r9 = r0.<org.petero.droidfish.activities.EditPGN: android.app.ProgressDialog progress>;
        r2 = virtualinvoke $r8.<org.petero.droidfish.activities.PGNFile: org.petero.droidfish.gamelogic.Pair getGameInfo(android.app.Activity,android.app.ProgressDialog)>(r0, $r9);
        $r10 = r2.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        $r11 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult OK>;
        if $r10 == $r11 goto label5;

        $r12 = new java.util.ArrayList;
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();
        <org.petero.droidfish.activities.EditPGN: java.util.ArrayList gamesInFile> = $r12;
        $r13 = <org.petero.droidfish.activities.EditPGN$16: int[] $SwitchMap$org$petero$droidfish$activities$PGNFile$GameInfoResult>;
        $r14 = r2.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        $r15 = (org.petero.droidfish.activities.PGNFile$GameInfoResult) $r14;
        $i3 = virtualinvoke $r15.<org.petero.droidfish.activities.PGNFile$GameInfoResult: int ordinal()>();
        $i4 = $r13[$i3];
        lookupswitch($i4)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        $r16 = new org.petero.droidfish.activities.EditPGN$14;
        specialinvoke $r16.<org.petero.droidfish.activities.EditPGN$14: void <init>(org.petero.droidfish.activities.EditPGN)>(r0);
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void runOnUiThread(java.lang.Runnable)>($r16);
        goto label4;

     label3:
        $r17 = new org.petero.droidfish.activities.EditPGN$15;
        specialinvoke $r17.<org.petero.droidfish.activities.EditPGN$15: void <init>(org.petero.droidfish.activities.EditPGN)>(r0);
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void runOnUiThread(java.lang.Runnable)>($r17);

     label4:
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void setResult(int)>(0);
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void finish()>();
        return 0;

     label5:
        $r18 = r2.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        $r19 = (java.util.ArrayList) $r18;
        <org.petero.droidfish.activities.EditPGN: java.util.ArrayList gamesInFile> = $r19;
        <org.petero.droidfish.activities.EditPGN: boolean cacheValid> = 1;
        r0.<org.petero.droidfish.activities.EditPGN: long lastModTime> = l0;
        r0.<org.petero.droidfish.activities.EditPGN: java.lang.String lastFileName> = r1;
        return 1;
    }

    private final void sendBackResult(org.petero.droidfish.activities.PGNFile$GameInfo)
    {
        org.petero.droidfish.activities.EditPGN r0;
        org.petero.droidfish.activities.PGNFile$GameInfo r1;
        java.lang.String r2;
        android.content.Intent $r3, $r5;
        org.petero.droidfish.activities.PGNFile $r4;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter0: org.petero.droidfish.activities.PGNFile$GameInfo;
        $r4 = r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile>;
        r2 = virtualinvoke $r4.<org.petero.droidfish.activities.PGNFile: java.lang.String readOneGame(org.petero.droidfish.activities.PGNFile$GameInfo)>(r1);
        if r2 == null goto label0;

        $r3 = new android.content.Intent;
        specialinvoke $r3.<android.content.Intent: void <init>()>();
        $r5 = virtualinvoke $r3.<android.content.Intent: android.content.Intent setAction(java.lang.String)>(r2);
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void setResult(int,android.content.Intent)>(-1, $r5);
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void finish()>();
        goto label1;

     label0:
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void setResult(int)>(0);
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void finish()>();

     label1:
        return;
    }

    private final void deleteGame(org.petero.droidfish.activities.PGNFile$GameInfo)
    {
        org.petero.droidfish.activities.EditPGN r0;
        org.petero.droidfish.activities.PGNFile$GameInfo r1;
        java.util.ArrayList $r2, $r4;
        android.widget.ListView r3;
        int i0;
        java.lang.String r5, r6;
        long l1;
        org.petero.droidfish.activities.PGNFile $r7, $r15;
        android.content.Context $r8;
        boolean $z0;
        android.widget.ArrayAdapter $r9, $r10, $r13;
        android.widget.EditText $r11;
        android.text.Editable $r12;
        android.widget.Filter $r14;
        java.io.File $r16;

        r0 := @this: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter0: org.petero.droidfish.activities.PGNFile$GameInfo;
        $r7 = r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile>;
        $r8 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: android.content.Context getApplicationContext()>();
        $r2 = <org.petero.droidfish.activities.EditPGN: java.util.ArrayList gamesInFile>;
        $z0 = virtualinvoke $r7.<org.petero.droidfish.activities.PGNFile: boolean deleteGame(org.petero.droidfish.activities.PGNFile$GameInfo,android.content.Context,java.util.ArrayList)>(r1, $r8, $r2);
        if $z0 == 0 goto label0;

        r3 = virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: android.widget.ListView getListView()>();
        i0 = virtualinvoke r3.<android.widget.ListView: int pointToPosition(int,int)>(0, 0);
        $r9 = new android.widget.ArrayAdapter;
        $r4 = <org.petero.droidfish.activities.EditPGN: java.util.ArrayList gamesInFile>;
        specialinvoke $r9.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>(r0, 2130903051, $r4);
        r0.<org.petero.droidfish.activities.EditPGN: android.widget.ArrayAdapter aa> = $r9;
        $r10 = r0.<org.petero.droidfish.activities.EditPGN: android.widget.ArrayAdapter aa>;
        virtualinvoke r0.<org.petero.droidfish.activities.EditPGN: void setListAdapter(android.widget.ListAdapter)>($r10);
        $r11 = r0.<org.petero.droidfish.activities.EditPGN: android.widget.EditText filterText>;
        $r12 = virtualinvoke $r11.<android.widget.EditText: android.text.Editable getText()>();
        r5 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();
        $r13 = r0.<org.petero.droidfish.activities.EditPGN: android.widget.ArrayAdapter aa>;
        $r14 = virtualinvoke $r13.<android.widget.ArrayAdapter: android.widget.Filter getFilter()>();
        virtualinvoke $r14.<android.widget.Filter: void filter(java.lang.CharSequence)>(r5);
        virtualinvoke r3.<android.widget.ListView: void setSelection(int)>(i0);
        $r15 = r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile pgnFile>;
        r6 = virtualinvoke $r15.<org.petero.droidfish.activities.PGNFile: java.lang.String getName()>();
        $r16 = new java.io.File;
        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>(r6);
        l1 = virtualinvoke $r16.<java.io.File: long lastModified()>();
        r0.<org.petero.droidfish.activities.EditPGN: long lastModTime> = l1;

     label0:
        return;
    }

    static boolean access$000(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.activities.EditPGN;
        $z0 = specialinvoke r0.<org.petero.droidfish.activities.EditPGN: boolean readFile()>();
        return $z0;
    }

    static void access$100(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN r0;

        r0 := @parameter0: org.petero.droidfish.activities.EditPGN;
        specialinvoke r0.<org.petero.droidfish.activities.EditPGN: void showList()>();
        return;
    }

    static void access$200(org.petero.droidfish.activities.EditPGN, org.petero.droidfish.activities.PGNFile$GameInfo)
    {
        org.petero.droidfish.activities.EditPGN r0;
        org.petero.droidfish.activities.PGNFile$GameInfo r1;

        r0 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter1: org.petero.droidfish.activities.PGNFile$GameInfo;
        specialinvoke r0.<org.petero.droidfish.activities.EditPGN: void sendBackResult(org.petero.droidfish.activities.PGNFile$GameInfo)>(r1);
        return;
    }

    static org.petero.droidfish.activities.PGNFile$GameInfo access$302(org.petero.droidfish.activities.EditPGN, org.petero.droidfish.activities.PGNFile$GameInfo)
    {
        org.petero.droidfish.activities.EditPGN r0;
        org.petero.droidfish.activities.PGNFile$GameInfo r1;

        r0 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter1: org.petero.droidfish.activities.PGNFile$GameInfo;
        r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo selectedGi> = r1;
        return r1;
    }

    static org.petero.droidfish.activities.PGNFile$GameInfo access$300(org.petero.droidfish.activities.EditPGN)
    {
        org.petero.droidfish.activities.EditPGN r0;
        org.petero.droidfish.activities.PGNFile$GameInfo $r1;

        r0 := @parameter0: org.petero.droidfish.activities.EditPGN;
        $r1 = r0.<org.petero.droidfish.activities.EditPGN: org.petero.droidfish.activities.PGNFile$GameInfo selectedGi>;
        return $r1;
    }

    static void access$400(org.petero.droidfish.activities.EditPGN, org.petero.droidfish.activities.PGNFile$GameInfo)
    {
        org.petero.droidfish.activities.EditPGN r0;
        org.petero.droidfish.activities.PGNFile$GameInfo r1;

        r0 := @parameter0: org.petero.droidfish.activities.EditPGN;
        r1 := @parameter1: org.petero.droidfish.activities.PGNFile$GameInfo;
        specialinvoke r0.<org.petero.droidfish.activities.EditPGN: void deleteGame(org.petero.droidfish.activities.PGNFile$GameInfo)>(r1);
        return;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        <org.petero.droidfish.activities.EditPGN: java.util.ArrayList gamesInFile> = $r0;
        <org.petero.droidfish.activities.EditPGN: boolean cacheValid> = 0;
        return;
    }
}
public class org.petero.droidfish.activities.EditPGNLoad extends org.petero.droidfish.activities.EditPGN
{

    public void <init>()
    {
        org.petero.droidfish.activities.EditPGNLoad r0;

        r0 := @this: org.petero.droidfish.activities.EditPGNLoad;
        specialinvoke r0.<org.petero.droidfish.activities.EditPGN: void <init>()>();
        return;
    }
}
public class org.petero.droidfish.activities.EditPGNSave extends org.petero.droidfish.activities.EditPGN
{

    public void <init>()
    {
        org.petero.droidfish.activities.EditPGNSave r0;

        r0 := @this: org.petero.droidfish.activities.EditPGNSave;
        specialinvoke r0.<org.petero.droidfish.activities.EditPGN: void <init>()>();
        return;
    }
}
class org.petero.droidfish.activities.LoadScid$1$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.LoadScid$1 this$1;

    void <init>(org.petero.droidfish.activities.LoadScid$1)
    {
        org.petero.droidfish.activities.LoadScid$1$1 r0;
        org.petero.droidfish.activities.LoadScid$1 r1;

        r0 := @this: org.petero.droidfish.activities.LoadScid$1$1;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid$1;
        r0.<org.petero.droidfish.activities.LoadScid$1$1: org.petero.droidfish.activities.LoadScid$1 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.LoadScid$1$1 r0;
        org.petero.droidfish.activities.LoadScid$1 $r1;
        org.petero.droidfish.activities.LoadScid $r2;

        r0 := @this: org.petero.droidfish.activities.LoadScid$1$1;
        $r1 = r0.<org.petero.droidfish.activities.LoadScid$1$1: org.petero.droidfish.activities.LoadScid$1 this$1>;
        $r2 = $r1.<org.petero.droidfish.activities.LoadScid$1: org.petero.droidfish.activities.LoadScid val$lpgn>;
        staticinvoke <org.petero.droidfish.activities.LoadScid: void access$100(org.petero.droidfish.activities.LoadScid)>($r2);
        return;
    }
}
class org.petero.droidfish.activities.LoadScid$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.LoadScid val$lpgn;
    final org.petero.droidfish.activities.LoadScid this$0;

    void <init>(org.petero.droidfish.activities.LoadScid, org.petero.droidfish.activities.LoadScid)
    {
        org.petero.droidfish.activities.LoadScid$1 r0;
        org.petero.droidfish.activities.LoadScid r1, r2;

        r0 := @this: org.petero.droidfish.activities.LoadScid$1;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid;
        r2 := @parameter1: org.petero.droidfish.activities.LoadScid;
        r0.<org.petero.droidfish.activities.LoadScid$1: org.petero.droidfish.activities.LoadScid this$0> = r1;
        r0.<org.petero.droidfish.activities.LoadScid$1: org.petero.droidfish.activities.LoadScid val$lpgn> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.LoadScid$1 r0;
        org.petero.droidfish.activities.LoadScid$1$1 $r1;
        org.petero.droidfish.activities.LoadScid $r2, $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.LoadScid$1;
        $r2 = r0.<org.petero.droidfish.activities.LoadScid$1: org.petero.droidfish.activities.LoadScid this$0>;
        $z0 = staticinvoke <org.petero.droidfish.activities.LoadScid: boolean access$000(org.petero.droidfish.activities.LoadScid)>($r2);
        if $z0 != 0 goto label0;

        return;

     label0:
        $r3 = r0.<org.petero.droidfish.activities.LoadScid$1: org.petero.droidfish.activities.LoadScid this$0>;
        $r1 = new org.petero.droidfish.activities.LoadScid$1$1;
        specialinvoke $r1.<org.petero.droidfish.activities.LoadScid$1$1: void <init>(org.petero.droidfish.activities.LoadScid$1)>(r0);
        virtualinvoke $r3.<org.petero.droidfish.activities.LoadScid: void runOnUiThread(java.lang.Runnable)>($r1);
        return;
    }
}
class org.petero.droidfish.activities.LoadScid$2$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.activities.LoadScid$2 this$1;

    void <init>(org.petero.droidfish.activities.LoadScid$2)
    {
        org.petero.droidfish.activities.LoadScid$2$1 r0;
        org.petero.droidfish.activities.LoadScid$2 r1;

        r0 := @this: org.petero.droidfish.activities.LoadScid$2$1;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid$2;
        r0.<org.petero.droidfish.activities.LoadScid$2$1: org.petero.droidfish.activities.LoadScid$2 this$1> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.LoadScid$2$1 r0;
        java.util.Vector $r1, $r16;
        org.petero.droidfish.activities.LoadScid$2 $r2, $r3, $r7, $r9, $r11, $r13, $r14, $r17;
        int $i0, $i1, $i2, $i4;
        org.petero.droidfish.activities.LoadScid $r4, $r8, $r10, $r12, $r15;
        android.content.Context $r5;
        android.widget.Toast $r6;
        java.lang.Object $r18;
        org.petero.droidfish.activities.LoadScid$GameInfo $r19;

        r0 := @this: org.petero.droidfish.activities.LoadScid$2$1;
        $r2 = r0.<org.petero.droidfish.activities.LoadScid$2$1: org.petero.droidfish.activities.LoadScid$2 this$1>;
        $i0 = $r2.<org.petero.droidfish.activities.LoadScid$2: int val$loadItem>;
        $r1 = staticinvoke <org.petero.droidfish.activities.LoadScid: java.util.Vector access$200()>();
        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();
        if $i0 < $i1 goto label0;

        $r3 = r0.<org.petero.droidfish.activities.LoadScid$2$1: org.petero.droidfish.activities.LoadScid$2 this$1>;
        $r4 = $r3.<org.petero.droidfish.activities.LoadScid$2: org.petero.droidfish.activities.LoadScid this$0>;
        $r5 = virtualinvoke $r4.<org.petero.droidfish.activities.LoadScid: android.content.Context getApplicationContext()>();
        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r5, 2131099741, 0);
        virtualinvoke $r6.<android.widget.Toast: void show()>();
        $r7 = r0.<org.petero.droidfish.activities.LoadScid$2$1: org.petero.droidfish.activities.LoadScid$2 this$1>;
        $r8 = $r7.<org.petero.droidfish.activities.LoadScid$2: org.petero.droidfish.activities.LoadScid this$0>;
        virtualinvoke $r8.<org.petero.droidfish.activities.LoadScid: void setResult(int)>(0);
        $r9 = r0.<org.petero.droidfish.activities.LoadScid$2$1: org.petero.droidfish.activities.LoadScid$2 this$1>;
        $r10 = $r9.<org.petero.droidfish.activities.LoadScid$2: org.petero.droidfish.activities.LoadScid this$0>;
        virtualinvoke $r10.<org.petero.droidfish.activities.LoadScid: void finish()>();
        goto label1;

     label0:
        $r11 = r0.<org.petero.droidfish.activities.LoadScid$2$1: org.petero.droidfish.activities.LoadScid$2 this$1>;
        $r12 = $r11.<org.petero.droidfish.activities.LoadScid$2: org.petero.droidfish.activities.LoadScid this$0>;
        $r13 = r0.<org.petero.droidfish.activities.LoadScid$2$1: org.petero.droidfish.activities.LoadScid$2 this$1>;
        $i2 = $r13.<org.petero.droidfish.activities.LoadScid$2: int val$loadItem>;
        staticinvoke <org.petero.droidfish.activities.LoadScid: int access$302(org.petero.droidfish.activities.LoadScid,int)>($r12, $i2);
        $r14 = r0.<org.petero.droidfish.activities.LoadScid$2$1: org.petero.droidfish.activities.LoadScid$2 this$1>;
        $r15 = $r14.<org.petero.droidfish.activities.LoadScid$2: org.petero.droidfish.activities.LoadScid this$0>;
        $r16 = staticinvoke <org.petero.droidfish.activities.LoadScid: java.util.Vector access$200()>();
        $r17 = r0.<org.petero.droidfish.activities.LoadScid$2$1: org.petero.droidfish.activities.LoadScid$2 this$1>;
        $i4 = $r17.<org.petero.droidfish.activities.LoadScid$2: int val$loadItem>;
        $r18 = virtualinvoke $r16.<java.util.Vector: java.lang.Object get(int)>($i4);
        $r19 = (org.petero.droidfish.activities.LoadScid$GameInfo) $r18;
        staticinvoke <org.petero.droidfish.activities.LoadScid: void access$400(org.petero.droidfish.activities.LoadScid,org.petero.droidfish.activities.LoadScid$GameInfo)>($r15, $r19);

     label1:
        return;
    }
}
class org.petero.droidfish.activities.LoadScid$2 extends java.lang.Object implements java.lang.Runnable
{
    final int val$loadItem;
    final org.petero.droidfish.activities.LoadScid this$0;

    void <init>(org.petero.droidfish.activities.LoadScid, int)
    {
        org.petero.droidfish.activities.LoadScid$2 r0;
        org.petero.droidfish.activities.LoadScid r1;
        int i0;

        r0 := @this: org.petero.droidfish.activities.LoadScid$2;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid;
        i0 := @parameter1: int;
        r0.<org.petero.droidfish.activities.LoadScid$2: org.petero.droidfish.activities.LoadScid this$0> = r1;
        r0.<org.petero.droidfish.activities.LoadScid$2: int val$loadItem> = i0;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.LoadScid$2 r0;
        org.petero.droidfish.activities.LoadScid$2$1 $r1;
        org.petero.droidfish.activities.LoadScid $r2, $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.LoadScid$2;
        $r2 = r0.<org.petero.droidfish.activities.LoadScid$2: org.petero.droidfish.activities.LoadScid this$0>;
        $z0 = staticinvoke <org.petero.droidfish.activities.LoadScid: boolean access$000(org.petero.droidfish.activities.LoadScid)>($r2);
        if $z0 != 0 goto label0;

        return;

     label0:
        $r3 = r0.<org.petero.droidfish.activities.LoadScid$2: org.petero.droidfish.activities.LoadScid this$0>;
        $r1 = new org.petero.droidfish.activities.LoadScid$2$1;
        specialinvoke $r1.<org.petero.droidfish.activities.LoadScid$2$1: void <init>(org.petero.droidfish.activities.LoadScid$2)>(r0);
        virtualinvoke $r3.<org.petero.droidfish.activities.LoadScid: void runOnUiThread(java.lang.Runnable)>($r1);
        return;
    }
}
class org.petero.droidfish.activities.LoadScid$3 extends android.widget.ArrayAdapter
{
    final org.petero.droidfish.activities.LoadScid this$0;

    void <init>(org.petero.droidfish.activities.LoadScid, android.content.Context, int, java.util.List)
    {
        org.petero.droidfish.activities.LoadScid$3 r0;
        org.petero.droidfish.activities.LoadScid r1;
        android.content.Context r2;
        int i0;
        java.util.List r3;

        r0 := @this: org.petero.droidfish.activities.LoadScid$3;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid;
        r2 := @parameter1: android.content.Context;
        i0 := @parameter2: int;
        r3 := @parameter3: java.util.List;
        r0.<org.petero.droidfish.activities.LoadScid$3: org.petero.droidfish.activities.LoadScid this$0> = r1;
        specialinvoke r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>(r2, i0, r3);
        return;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        org.petero.droidfish.activities.LoadScid$3 r0;
        int i0, i1;
        android.view.View r1, r3;
        android.view.ViewGroup r2;
        boolean $z0;
        org.petero.droidfish.ColorTheme $r4;
        android.widget.TextView $r5;

        r0 := @this: org.petero.droidfish.activities.LoadScid$3;
        i0 := @parameter0: int;
        r1 := @parameter1: android.view.View;
        r2 := @parameter2: android.view.ViewGroup;
        r3 = specialinvoke r0.<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i0, r1, r2);
        $z0 = r3 instanceof android.widget.TextView;
        if $z0 == 0 goto label0;

        $r4 = staticinvoke <org.petero.droidfish.ColorTheme: org.petero.droidfish.ColorTheme instance()>();
        i1 = virtualinvoke $r4.<org.petero.droidfish.ColorTheme: int getColor(int)>(16);
        $r5 = (android.widget.TextView) r3;
        virtualinvoke $r5.<android.widget.TextView: void setTextColor(int)>(i1);

     label0:
        return r3;
    }
}
class org.petero.droidfish.activities.LoadScid$4 extends java.lang.Object implements android.widget.AdapterView$OnItemClickListener
{
    final android.widget.ArrayAdapter val$aa;
    final org.petero.droidfish.activities.LoadScid this$0;

    void <init>(org.petero.droidfish.activities.LoadScid, android.widget.ArrayAdapter)
    {
        org.petero.droidfish.activities.LoadScid$4 r0;
        org.petero.droidfish.activities.LoadScid r1;
        android.widget.ArrayAdapter r2;

        r0 := @this: org.petero.droidfish.activities.LoadScid$4;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid;
        r2 := @parameter1: android.widget.ArrayAdapter;
        r0.<org.petero.droidfish.activities.LoadScid$4: org.petero.droidfish.activities.LoadScid this$0> = r1;
        r0.<org.petero.droidfish.activities.LoadScid$4: android.widget.ArrayAdapter val$aa> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        org.petero.droidfish.activities.LoadScid$4 r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0;
        long l1;
        org.petero.droidfish.activities.LoadScid $r3, $r4;
        android.widget.ArrayAdapter $r5;
        java.lang.Object $r6;
        org.petero.droidfish.activities.LoadScid$GameInfo $r7;

        r0 := @this: org.petero.droidfish.activities.LoadScid$4;
        r1 := @parameter0: android.widget.AdapterView;
        r2 := @parameter1: android.view.View;
        i0 := @parameter2: int;
        l1 := @parameter3: long;
        $r3 = r0.<org.petero.droidfish.activities.LoadScid$4: org.petero.droidfish.activities.LoadScid this$0>;
        staticinvoke <org.petero.droidfish.activities.LoadScid: int access$302(org.petero.droidfish.activities.LoadScid,int)>($r3, i0);
        $r4 = r0.<org.petero.droidfish.activities.LoadScid$4: org.petero.droidfish.activities.LoadScid this$0>;
        $r5 = r0.<org.petero.droidfish.activities.LoadScid$4: android.widget.ArrayAdapter val$aa>;
        $r6 = virtualinvoke $r5.<android.widget.ArrayAdapter: java.lang.Object getItem(int)>(i0);
        $r7 = (org.petero.droidfish.activities.LoadScid$GameInfo) $r6;
        staticinvoke <org.petero.droidfish.activities.LoadScid: void access$400(org.petero.droidfish.activities.LoadScid,org.petero.droidfish.activities.LoadScid$GameInfo)>($r4, $r7);
        return;
    }
}
class org.petero.droidfish.activities.LoadScid$5 extends java.lang.Object implements android.content.DialogInterface$OnCancelListener
{
    final org.petero.droidfish.activities.LoadScid this$0;

    void <init>(org.petero.droidfish.activities.LoadScid)
    {
        org.petero.droidfish.activities.LoadScid$5 r0;
        org.petero.droidfish.activities.LoadScid r1;

        r0 := @this: org.petero.droidfish.activities.LoadScid$5;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid;
        r0.<org.petero.droidfish.activities.LoadScid$5: org.petero.droidfish.activities.LoadScid this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void onCancel(android.content.DialogInterface)
    {
        org.petero.droidfish.activities.LoadScid$5 r0;
        android.content.DialogInterface r1;
        java.lang.Thread r2;
        org.petero.droidfish.activities.LoadScid $r3;

        r0 := @this: org.petero.droidfish.activities.LoadScid$5;
        r1 := @parameter0: android.content.DialogInterface;
        $r3 = r0.<org.petero.droidfish.activities.LoadScid$5: org.petero.droidfish.activities.LoadScid this$0>;
        r2 = $r3.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread>;
        if r2 == null goto label0;

        virtualinvoke r2.<java.lang.Thread: void interrupt()>();

     label0:
        return;
    }
}
class org.petero.droidfish.activities.LoadScid$6 extends java.lang.Object implements java.lang.Runnable
{
    final int val$newPercent;
    final org.petero.droidfish.activities.LoadScid this$0;

    void <init>(org.petero.droidfish.activities.LoadScid, int)
    {
        org.petero.droidfish.activities.LoadScid$6 r0;
        org.petero.droidfish.activities.LoadScid r1;
        int i0;

        r0 := @this: org.petero.droidfish.activities.LoadScid$6;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid;
        i0 := @parameter1: int;
        r0.<org.petero.droidfish.activities.LoadScid$6: org.petero.droidfish.activities.LoadScid this$0> = r1;
        r0.<org.petero.droidfish.activities.LoadScid$6: int val$newPercent> = i0;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.LoadScid$6 r0;
        org.petero.droidfish.activities.LoadScid $r1;
        android.app.ProgressDialog $r2;
        int $i0;

        r0 := @this: org.petero.droidfish.activities.LoadScid$6;
        $r1 = r0.<org.petero.droidfish.activities.LoadScid$6: org.petero.droidfish.activities.LoadScid this$0>;
        $r2 = staticinvoke <org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog access$500(org.petero.droidfish.activities.LoadScid)>($r1);
        $i0 = r0.<org.petero.droidfish.activities.LoadScid$6: int val$newPercent>;
        virtualinvoke $r2.<android.app.ProgressDialog: void setProgress(int)>($i0);
        return;
    }
}
final class org.petero.droidfish.activities.LoadScid$GameInfo extends java.lang.Object
{
    java.lang.String summary;
    int gameId;

    private void <init>()
    {
        org.petero.droidfish.activities.LoadScid$GameInfo r0;

        r0 := @this: org.petero.droidfish.activities.LoadScid$GameInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.activities.LoadScid$GameInfo: java.lang.String summary> = "";
        r0.<org.petero.droidfish.activities.LoadScid$GameInfo: int gameId> = -1;
        return;
    }

    public java.lang.String toString()
    {
        org.petero.droidfish.activities.LoadScid$GameInfo r0;
        java.lang.String $r1;

        r0 := @this: org.petero.droidfish.activities.LoadScid$GameInfo;
        $r1 = r0.<org.petero.droidfish.activities.LoadScid$GameInfo: java.lang.String summary>;
        return $r1;
    }

    void <init>(org.petero.droidfish.activities.LoadScid$1)
    {
        org.petero.droidfish.activities.LoadScid$GameInfo r0;
        org.petero.droidfish.activities.LoadScid$1 r1;

        r0 := @this: org.petero.droidfish.activities.LoadScid$GameInfo;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid$1;
        specialinvoke r0.<org.petero.droidfish.activities.LoadScid$GameInfo: void <init>()>();
        return;
    }
}
public class org.petero.droidfish.activities.LoadScid extends android.app.ListActivity
{
    private static java.util.Vector gamesInFile;
    private static boolean cacheValid;
    private java.lang.String fileName;
    private android.app.ProgressDialog progress;
    private android.content.SharedPreferences settings;
    private int defaultItem;
    private java.lang.String lastFileName;
    private long lastModTime;
    java.lang.Thread workThread;
    static final int PROGRESS_DIALOG;
    private int idIdx;
    private int summaryIdx;

    public void <init>()
    {
        org.petero.droidfish.activities.LoadScid r0;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        specialinvoke r0.<android.app.ListActivity: void <init>()>();
        r0.<org.petero.droidfish.activities.LoadScid: int defaultItem> = 0;
        r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName> = "";
        r0.<org.petero.droidfish.activities.LoadScid: long lastModTime> = -1L;
        r0.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread> = null;
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        org.petero.droidfish.activities.LoadScid r0, r4;
        android.os.Bundle r1;
        android.content.Intent r2;
        java.lang.String r3, $r6, $r7, $r10, $r12;
        int i0, $i1, $i3, $i5;
        android.content.SharedPreferences $r5, $r8, $r9, $r11;
        long $l2, $l4;
        boolean $z0, $z1, $z2, z3;
        java.lang.Thread $r13, $r15, $r18, $r20;
        org.petero.droidfish.activities.LoadScid$1 $r14;
        byte $b6;
        android.content.Context $r16;
        android.widget.Toast $r17;
        org.petero.droidfish.activities.LoadScid$2 $r19;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.app.ListActivity: void onCreate(android.os.Bundle)>(r1);
        $r5 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);
        r0.<org.petero.droidfish.activities.LoadScid: android.content.SharedPreferences settings> = $r5;
        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("defaultScidItem");
        r0.<org.petero.droidfish.activities.LoadScid: int defaultItem> = $i1;
        $r6 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("lastScidFileName");
        r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName> = $r6;
        $r7 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName>;
        if $r7 != null goto label0;

        r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName> = "";

     label0:
        $l2 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String)>("lastScidModTime");
        r0.<org.petero.droidfish.activities.LoadScid: long lastModTime> = $l2;
        goto label2;

     label1:
        $r8 = r0.<org.petero.droidfish.activities.LoadScid: android.content.SharedPreferences settings>;
        $i3 = interfaceinvoke $r8.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("defaultScidItem", 0);
        r0.<org.petero.droidfish.activities.LoadScid: int defaultItem> = $i3;
        $r9 = r0.<org.petero.droidfish.activities.LoadScid: android.content.SharedPreferences settings>;
        $r10 = interfaceinvoke $r9.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("lastScidFileName", "");
        r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName> = $r10;
        $r11 = r0.<org.petero.droidfish.activities.LoadScid: android.content.SharedPreferences settings>;
        $l4 = interfaceinvoke $r11.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("lastScidModTime", 0L);
        r0.<org.petero.droidfish.activities.LoadScid: long lastModTime> = $l4;

     label2:
        r2 = virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: android.content.Intent getIntent()>();
        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();
        $r12 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("org.petero.droidfish.pathname");
        r0.<org.petero.droidfish.activities.LoadScid: java.lang.String fileName> = $r12;
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("org.petero.droidfish.loadScid");
        if $z0 == 0 goto label3;

        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void showDialog(int)>(0);
        r4 = r0;
        $r13 = new java.lang.Thread;
        $r14 = new org.petero.droidfish.activities.LoadScid$1;
        specialinvoke $r14.<org.petero.droidfish.activities.LoadScid$1: void <init>(org.petero.droidfish.activities.LoadScid,org.petero.droidfish.activities.LoadScid)>(r0, r4);
        specialinvoke $r13.<java.lang.Thread: void <init>(java.lang.Runnable)>($r14);
        r0.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread> = $r13;
        $r15 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread>;
        virtualinvoke $r15.<java.lang.Thread: void start()>();
        goto label10;

     label3:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("org.petero.droidfish.loadScidNextGame");
        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("org.petero.droidfish.loadScidPrevGame");
        if $z2 == 0 goto label9;

     label4:
        z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("org.petero.droidfish.loadScidNextGame");
        $i5 = r0.<org.petero.droidfish.activities.LoadScid: int defaultItem>;
        if z3 == 0 goto label5;

        $b6 = 1;
        goto label6;

     label5:
        $b6 = -1;

     label6:
        i0 = $i5 + $b6;
        if i0 >= 0 goto label7;

        $r16 = virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: android.content.Context getApplicationContext()>();
        $r17 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r16, 2131099740, 0);
        virtualinvoke $r17.<android.widget.Toast: void show()>();
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void setResult(int)>(0);
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void finish()>();
        goto label8;

     label7:
        $r18 = new java.lang.Thread;
        $r19 = new org.petero.droidfish.activities.LoadScid$2;
        specialinvoke $r19.<org.petero.droidfish.activities.LoadScid$2: void <init>(org.petero.droidfish.activities.LoadScid,int)>(r0, i0);
        specialinvoke $r18.<java.lang.Thread: void <init>(java.lang.Runnable)>($r19);
        r0.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread> = $r18;
        $r20 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread>;
        virtualinvoke $r20.<java.lang.Thread: void start()>();

     label8:
        goto label10;

     label9:
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void setResult(int)>(0);
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void finish()>();

     label10:
        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        org.petero.droidfish.activities.LoadScid r0;
        android.os.Bundle r1;
        int $i0;
        java.lang.String $r2;
        long $l1;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.app.ListActivity: void onSaveInstanceState(android.os.Bundle)>(r1);
        $i0 = r0.<org.petero.droidfish.activities.LoadScid: int defaultItem>;
        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("defaultScidItem", $i0);
        $r2 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName>;
        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("lastScidFileName", $r2);
        $l1 = r0.<org.petero.droidfish.activities.LoadScid: long lastModTime>;
        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("lastScidModTime", $l1);
        return;
    }

    protected void onPause()
    {
        org.petero.droidfish.activities.LoadScid r0;
        android.content.SharedPreferences$Editor r1;
        android.content.SharedPreferences $r2;
        int $i0;
        java.lang.String $r4;
        long $l1;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        $r2 = r0.<org.petero.droidfish.activities.LoadScid: android.content.SharedPreferences settings>;
        r1 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();
        $i0 = r0.<org.petero.droidfish.activities.LoadScid: int defaultItem>;
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("defaultScidItem", $i0);
        $r4 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName>;
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("lastScidFileName", $r4);
        $l1 = r0.<org.petero.droidfish.activities.LoadScid: long lastModTime>;
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("lastScidModTime", $l1);
        interfaceinvoke r1.<android.content.SharedPreferences$Editor: boolean commit()>();
        specialinvoke r0.<android.app.ListActivity: void onPause()>();
        return;
    }

    protected void onDestroy()
    {
        org.petero.droidfish.activities.LoadScid r0;
        java.lang.InterruptedException r1, $r5;
        java.lang.Thread $r2, $r3, $r4;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        $r2 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread>;
        if $r2 == null goto label4;

        $r3 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread>;
        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

     label0:
        $r4 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread>;
        virtualinvoke $r4.<java.lang.Thread: void join()>();

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r1 = $r5;

     label3:
        r0.<org.petero.droidfish.activities.LoadScid: java.lang.Thread workThread> = null;

     label4:
        specialinvoke r0.<android.app.ListActivity: void onDestroy()>();
        return;

        catch java.lang.InterruptedException from label0 to label1 with label2;
    }

    private final void showList()
    {
        org.petero.droidfish.activities.LoadScid r0;
        java.util.Vector $r1;
        org.petero.droidfish.activities.LoadScid$3 r2, $r5;
        android.widget.ListView r3;
        android.app.ProgressDialog $r4;
        int $i0;
        org.petero.droidfish.activities.LoadScid$4 $r6;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        $r4 = r0.<org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog progress>;
        virtualinvoke $r4.<android.app.ProgressDialog: void dismiss()>();
        $r5 = new org.petero.droidfish.activities.LoadScid$3;
        $r1 = <org.petero.droidfish.activities.LoadScid: java.util.Vector gamesInFile>;
        specialinvoke $r5.<org.petero.droidfish.activities.LoadScid$3: void <init>(org.petero.droidfish.activities.LoadScid,android.content.Context,int,java.util.List)>(r0, r0, 2130903051, $r1);
        r2 = $r5;
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void setListAdapter(android.widget.ListAdapter)>(r2);
        r3 = virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: android.widget.ListView getListView()>();
        staticinvoke <org.petero.droidfish.Util: void overrideFonts(android.view.View)>(r3);
        $i0 = r0.<org.petero.droidfish.activities.LoadScid: int defaultItem>;
        virtualinvoke r3.<android.widget.ListView: void setSelectionFromTop(int,int)>($i0, 0);
        virtualinvoke r3.<android.widget.ListView: void setFastScrollEnabled(boolean)>(1);
        $r6 = new org.petero.droidfish.activities.LoadScid$4;
        specialinvoke $r6.<org.petero.droidfish.activities.LoadScid$4: void <init>(org.petero.droidfish.activities.LoadScid,android.widget.ArrayAdapter)>(r0, r2);
        virtualinvoke r3.<android.widget.ListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r6);
        return;
    }

    protected android.app.Dialog onCreateDialog(int)
    {
        org.petero.droidfish.activities.LoadScid r0;
        int i0;
        android.app.ProgressDialog $r1, $r2, $r3, $r4, $r6, $r8;
        java.lang.String $r5;
        org.petero.droidfish.activities.LoadScid$5 $r7;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        i0 := @parameter0: int;
        lookupswitch(i0)
        {
            case 0: goto label0;
            default: goto label1;
        };

     label0:
        $r1 = new android.app.ProgressDialog;
        specialinvoke $r1.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);
        r0.<org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog progress> = $r1;
        $r2 = r0.<org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog progress>;
        virtualinvoke $r2.<android.app.ProgressDialog: void setProgressStyle(int)>(1);
        $r3 = r0.<org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog progress>;
        virtualinvoke $r3.<android.app.ProgressDialog: void setTitle(int)>(2131099713);
        $r4 = r0.<org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog progress>;
        $r5 = virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: java.lang.String getString(int)>(2131099716);
        virtualinvoke $r4.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>($r5);
        $r6 = r0.<org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog progress>;
        $r7 = new org.petero.droidfish.activities.LoadScid$5;
        specialinvoke $r7.<org.petero.droidfish.activities.LoadScid$5: void <init>(org.petero.droidfish.activities.LoadScid)>(r0);
        virtualinvoke $r6.<android.app.ProgressDialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r7);
        $r8 = r0.<org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog progress>;
        return $r8;

     label1:
        return null;
    }

    private final boolean readFile()
    {
        org.petero.droidfish.activities.LoadScid r0;
        long l0, $l5;
        android.database.Cursor r1;
        int i1, i2, i3, i4, $i7;
        java.lang.String $r2, $r3, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.File $r4;
        byte $b6;
        java.util.Vector $r9, $r10;
        java.lang.Thread $r11;
        android.app.ProgressDialog $r12;
        org.petero.droidfish.activities.LoadScid$6 $r13;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        $r2 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String fileName>;
        $r3 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName>;
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 != 0 goto label0;

        r0.<org.petero.droidfish.activities.LoadScid: int defaultItem> = 0;

     label0:
        $r4 = new java.io.File;
        $r5 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String fileName>;
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);
        l0 = virtualinvoke $r4.<java.io.File: long lastModified()>();
        $z1 = <org.petero.droidfish.activities.LoadScid: boolean cacheValid>;
        if $z1 == 0 goto label1;

        $l5 = r0.<org.petero.droidfish.activities.LoadScid: long lastModTime>;
        $b6 = l0 cmp $l5;
        if $b6 != 0 goto label1;

        $r6 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String fileName>;
        $r7 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName>;
        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);
        if $z2 == 0 goto label1;

        return 1;

     label1:
        r0.<org.petero.droidfish.activities.LoadScid: long lastModTime> = l0;
        $r8 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String fileName>;
        r0.<org.petero.droidfish.activities.LoadScid: java.lang.String lastFileName> = $r8;
        $r9 = <org.petero.droidfish.activities.LoadScid: java.util.Vector gamesInFile>;
        virtualinvoke $r9.<java.util.Vector: void clear()>();
        r1 = specialinvoke r0.<org.petero.droidfish.activities.LoadScid: android.database.Cursor getListCursor()>();
        if r1 == null goto label5;

        i1 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();
        $r10 = <org.petero.droidfish.activities.LoadScid: java.util.Vector gamesInFile>;
        virtualinvoke $r10.<java.util.Vector: void ensureCapacity(int)>(i1);
        i2 = -1;
        $z3 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();
        if $z3 == 0 goto label5;

        specialinvoke r0.<org.petero.droidfish.activities.LoadScid: void addGameInfo(android.database.Cursor)>(r1);
        i3 = 1;

     label2:
        $z4 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();
        if $z4 == 0 goto label5;

        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z5 = virtualinvoke $r11.<java.lang.Thread: boolean isInterrupted()>();
        if $z5 == 0 goto label3;

        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void setResult(int)>(0);
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void finish()>();
        return 0;

     label3:
        specialinvoke r0.<org.petero.droidfish.activities.LoadScid: void addGameInfo(android.database.Cursor)>(r1);
        i3 = i3 + 1;
        $i7 = i3 * 100;
        i4 = $i7 / i1;
        if i4 <= i2 goto label4;

        i2 = i4;
        $r12 = r0.<org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog progress>;
        if $r12 == null goto label4;

        $r13 = new org.petero.droidfish.activities.LoadScid$6;
        specialinvoke $r13.<org.petero.droidfish.activities.LoadScid$6: void <init>(org.petero.droidfish.activities.LoadScid,int)>(r0, i4);
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void runOnUiThread(java.lang.Runnable)>($r13);

     label4:
        goto label2;

     label5:
        <org.petero.droidfish.activities.LoadScid: boolean cacheValid> = 1;
        return 1;
    }

    private android.database.Cursor getListCursor()
    {
        org.petero.droidfish.activities.LoadScid r0;
        java.lang.String r1, $r4, $r5;
        java.lang.String[] r2, $r6;
        android.database.Cursor r3;
        int $i0, $i1, $i2;
        android.net.Uri $r7;
        java.lang.Throwable $r9, r10;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        $r4 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String fileName>;
        $r5 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String fileName>;
        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>(".");
        r1 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);
        $r6 = newarray (java.lang.String)[2];
        $r6[0] = "_id";
        $r6[1] = "summary";
        r2 = $r6;

     label0:
        $r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://org.scid.database.scidprovider/games");
        r3 = virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r7, r2, r1, null, null);
        $i1 = interfaceinvoke r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");
        r0.<org.petero.droidfish.activities.LoadScid: int idIdx> = $i1;
        $i2 = interfaceinvoke r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("summary");
        r0.<org.petero.droidfish.activities.LoadScid: int summaryIdx> = $i2;

     label1:
        return r3;

     label2:
        $r9 := @caughtexception;
        r10 = $r9;
        return null;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    private android.database.Cursor getOneGameCursor(int)
    {
        org.petero.droidfish.activities.LoadScid r0;
        int i0, $i1;
        java.lang.String r1, r3, $r5, $r6;
        java.lang.String[] r2, $r7;
        android.database.Cursor r4;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;
        android.net.Uri $r10;
        java.lang.Throwable $r12, r13;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        i0 := @parameter0: int;
        $r5 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String fileName>;
        $r6 = r0.<org.petero.droidfish.activities.LoadScid: java.lang.String fileName>;
        $i1 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>(".");
        r1 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);
        $r7 = newarray (java.lang.String)[1];
        $r7[0] = "pgn";
        r2 = $r7;

     label0:
        $r8 = newarray (java.lang.Object)[1];
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r8[0] = $r9;
        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("content://org.scid.database.scidprovider/games/%d", $r8);
        $r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r3);
        r4 = virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r10, r2, r1, null, null);

     label1:
        return r4;

     label2:
        $r12 := @caughtexception;
        r13 = $r12;
        return null;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    private void addGameInfo(android.database.Cursor)
    {
        org.petero.droidfish.activities.LoadScid r0;
        android.database.Cursor r1;
        org.petero.droidfish.activities.LoadScid$GameInfo $r2, r3;
        int $i0, $i1, $i2;
        java.lang.String $r4;
        java.util.Vector $r5;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        r1 := @parameter0: android.database.Cursor;
        $r2 = new org.petero.droidfish.activities.LoadScid$GameInfo;
        specialinvoke $r2.<org.petero.droidfish.activities.LoadScid$GameInfo: void <init>(org.petero.droidfish.activities.LoadScid$1)>(null);
        r3 = $r2;
        $i0 = r0.<org.petero.droidfish.activities.LoadScid: int idIdx>;
        $i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i0);
        r3.<org.petero.droidfish.activities.LoadScid$GameInfo: int gameId> = $i1;
        $i2 = r0.<org.petero.droidfish.activities.LoadScid: int summaryIdx>;
        $r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i2);
        r3.<org.petero.droidfish.activities.LoadScid$GameInfo: java.lang.String summary> = $r4;
        $r5 = <org.petero.droidfish.activities.LoadScid: java.util.Vector gamesInFile>;
        virtualinvoke $r5.<java.util.Vector: boolean add(java.lang.Object)>(r3);
        return;
    }

    private final void sendBackResult(org.petero.droidfish.activities.LoadScid$GameInfo)
    {
        org.petero.droidfish.activities.LoadScid r0;
        org.petero.droidfish.activities.LoadScid$GameInfo r1;
        android.database.Cursor r2;
        java.lang.String r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.content.Intent $r4, $r5;

        r0 := @this: org.petero.droidfish.activities.LoadScid;
        r1 := @parameter0: org.petero.droidfish.activities.LoadScid$GameInfo;
        $i0 = r1.<org.petero.droidfish.activities.LoadScid$GameInfo: int gameId>;
        if $i0 < 0 goto label0;

        $i1 = r1.<org.petero.droidfish.activities.LoadScid$GameInfo: int gameId>;
        r2 = specialinvoke r0.<org.petero.droidfish.activities.LoadScid: android.database.Cursor getOneGameCursor(int)>($i1);
        if r2 == null goto label0;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();
        if $z0 == 0 goto label0;

        $i2 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("pgn");
        r3 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>($i2);
        if r3 == null goto label0;

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i3 <= 0 goto label0;

        $r4 = new android.content.Intent;
        specialinvoke $r4.<android.content.Intent: void <init>()>();
        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent setAction(java.lang.String)>(r3);
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void setResult(int,android.content.Intent)>(-1, $r5);
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void finish()>();
        return;

     label0:
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void setResult(int)>(0);
        virtualinvoke r0.<org.petero.droidfish.activities.LoadScid: void finish()>();
        return;
    }

    static boolean access$000(org.petero.droidfish.activities.LoadScid)
    {
        org.petero.droidfish.activities.LoadScid r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.activities.LoadScid;
        $z0 = specialinvoke r0.<org.petero.droidfish.activities.LoadScid: boolean readFile()>();
        return $z0;
    }

    static void access$100(org.petero.droidfish.activities.LoadScid)
    {
        org.petero.droidfish.activities.LoadScid r0;

        r0 := @parameter0: org.petero.droidfish.activities.LoadScid;
        specialinvoke r0.<org.petero.droidfish.activities.LoadScid: void showList()>();
        return;
    }

    static java.util.Vector access$200()
    {
        java.util.Vector $r0;

        $r0 = <org.petero.droidfish.activities.LoadScid: java.util.Vector gamesInFile>;
        return $r0;
    }

    static int access$302(org.petero.droidfish.activities.LoadScid, int)
    {
        org.petero.droidfish.activities.LoadScid r0;
        int i0;

        r0 := @parameter0: org.petero.droidfish.activities.LoadScid;
        i0 := @parameter1: int;
        r0.<org.petero.droidfish.activities.LoadScid: int defaultItem> = i0;
        return i0;
    }

    static void access$400(org.petero.droidfish.activities.LoadScid, org.petero.droidfish.activities.LoadScid$GameInfo)
    {
        org.petero.droidfish.activities.LoadScid r0;
        org.petero.droidfish.activities.LoadScid$GameInfo r1;

        r0 := @parameter0: org.petero.droidfish.activities.LoadScid;
        r1 := @parameter1: org.petero.droidfish.activities.LoadScid$GameInfo;
        specialinvoke r0.<org.petero.droidfish.activities.LoadScid: void sendBackResult(org.petero.droidfish.activities.LoadScid$GameInfo)>(r1);
        return;
    }

    static android.app.ProgressDialog access$500(org.petero.droidfish.activities.LoadScid)
    {
        org.petero.droidfish.activities.LoadScid r0;
        android.app.ProgressDialog $r1;

        r0 := @parameter0: org.petero.droidfish.activities.LoadScid;
        $r1 = r0.<org.petero.droidfish.activities.LoadScid: android.app.ProgressDialog progress>;
        return $r1;
    }

    static void <clinit>()
    {
        java.util.Vector $r0;

        $r0 = new java.util.Vector;
        specialinvoke $r0.<java.util.Vector: void <init>()>();
        <org.petero.droidfish.activities.LoadScid: java.util.Vector gamesInFile> = $r0;
        <org.petero.droidfish.activities.LoadScid: boolean cacheValid> = 0;
        return;
    }
}
class org.petero.droidfish.activities.PGNFile$1 extends java.lang.Object implements java.lang.Runnable
{
    final android.app.ProgressDialog val$progress;
    final int val$newPercent;
    final org.petero.droidfish.activities.PGNFile this$0;

    void <init>(org.petero.droidfish.activities.PGNFile, android.app.ProgressDialog, int)
    {
        org.petero.droidfish.activities.PGNFile$1 r0;
        org.petero.droidfish.activities.PGNFile r1;
        android.app.ProgressDialog r2;
        int i0;

        r0 := @this: org.petero.droidfish.activities.PGNFile$1;
        r1 := @parameter0: org.petero.droidfish.activities.PGNFile;
        r2 := @parameter1: android.app.ProgressDialog;
        i0 := @parameter2: int;
        r0.<org.petero.droidfish.activities.PGNFile$1: org.petero.droidfish.activities.PGNFile this$0> = r1;
        r0.<org.petero.droidfish.activities.PGNFile$1: android.app.ProgressDialog val$progress> = r2;
        r0.<org.petero.droidfish.activities.PGNFile$1: int val$newPercent> = i0;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.activities.PGNFile$1 r0;
        android.app.ProgressDialog $r1;
        int $i0;

        r0 := @this: org.petero.droidfish.activities.PGNFile$1;
        $r1 = r0.<org.petero.droidfish.activities.PGNFile$1: android.app.ProgressDialog val$progress>;
        $i0 = r0.<org.petero.droidfish.activities.PGNFile$1: int val$newPercent>;
        virtualinvoke $r1.<android.app.ProgressDialog: void setProgress(int)>($i0);
        return;
    }
}
final class org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader extends java.lang.Object
{
    java.io.RandomAccessFile f;
    byte[] buffer;
    long bufStartFilePos;
    int bufLen;
    int bufPos;
    private static final int EOF;

    void <init>(java.lang.String) throws java.io.FileNotFoundException
    {
        org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader r0;
        java.lang.String r1;
        byte[] $r2;
        java.io.RandomAccessFile $r3;

        r0 := @this: org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = newarray (byte)[8192];
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: byte[] buffer> = $r2;
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: long bufStartFilePos> = 0L;
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufLen> = 0;
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos> = 0;
        $r3 = new java.io.RandomAccessFile;
        specialinvoke $r3.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r1, "r");
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: java.io.RandomAccessFile f> = $r3;
        return;
    }

    final long length() throws java.io.IOException
    {
        org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader r0;
        java.io.RandomAccessFile $r1;
        long $l0;

        r0 := @this: org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader;
        $r1 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: java.io.RandomAccessFile f>;
        $l0 = virtualinvoke $r1.<java.io.RandomAccessFile: long length()>();
        return $l0;
    }

    final long getFilePointer() throws java.io.IOException
    {
        org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader r0;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader;
        $l0 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: long bufStartFilePos>;
        $i1 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos>;
        $l2 = (long) $i1;
        $l3 = $l0 + $l2;
        return $l3;
    }

    final void close() throws java.io.IOException
    {
        org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader r0;
        java.io.RandomAccessFile $r1;

        r0 := @this: org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader;
        $r1 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: java.io.RandomAccessFile f>;
        virtualinvoke $r1.<java.io.RandomAccessFile: void close()>();
        return;
    }

    final java.lang.String readLine() throws java.io.IOException
    {
        org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader r0;
        int i0, $i2, $i3, $i4, $i5, $i6, i8, i9, $i10, $i12, i13, $i14, $i15;
        byte b1, b7, $b11;
        java.lang.String r1, $r3, $r8;
        byte[] $r2, $r4, $r5, r6;

        r0 := @this: org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader;
        i0 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos>;

     label0:
        $i2 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufLen>;
        if i0 >= $i2 goto label5;

        $r2 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: byte[] buffer>;
        b1 = $r2[i0];
        if b1 == 10 goto label1;

        if b1 != 13 goto label4;

     label1:
        $r3 = new java.lang.String;
        $r4 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: byte[] buffer>;
        $i3 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos>;
        $i4 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos>;
        $i5 = i0 - $i4;
        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>($r4, $i3, $i5);
        r1 = $r3;

     label2:
        $i6 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufLen>;
        if i0 >= $i6 goto label5;

        $r5 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: byte[] buffer>;
        b7 = $r5[i0];
        if b7 == 10 goto label3;

        if b7 == 13 goto label3;

        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos> = i0;
        return r1;

     label3:
        i0 = i0 + 1;
        goto label2;

     label4:
        i0 = i0 + 1;
        goto label0;

     label5:
        r6 = newarray (byte)[8192];
        i8 = 0;

     label6:
        i9 = specialinvoke r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int getByte()>();
        if i9 == 10 goto label8;

        if i9 == 13 goto label8;

        if i9 != -1024 goto label7;

        goto label8;

     label7:
        $i10 = i8;
        i8 = i8 + 1;
        $b11 = (byte) i9;
        r6[$i10] = $b11;
        $i12 = lengthof r6;
        if i8 < $i12 goto label6;

        goto label8;

     label8:
        i13 = specialinvoke r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int getByte()>();
        if i13 == 10 goto label8;

        if i13 == 13 goto label8;

        if i13 == -1024 goto label9;

        $i14 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos>;
        $i15 = $i14 - 1;
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos> = $i15;
        goto label9;

     label9:
        if i13 != -1024 goto label10;

        if i8 != 0 goto label10;

        return null;

     label10:
        $r8 = new java.lang.String;
        specialinvoke $r8.<java.lang.String: void <init>(byte[],int,int)>(r6, 0, i8);
        return $r8;
    }

    private final int getByte() throws java.io.IOException
    {
        org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader r0;
        int $i0, $i1, $i2, $i4, $i5, $i6;
        java.io.RandomAccessFile $r1, $r2;
        long $l3;
        byte[] $r3, $r4;
        byte $b7;

        r0 := @this: org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader;
        $i1 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos>;
        $i2 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufLen>;
        if $i1 < $i2 goto label0;

        $r1 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: java.io.RandomAccessFile f>;
        $l3 = virtualinvoke $r1.<java.io.RandomAccessFile: long getFilePointer()>();
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: long bufStartFilePos> = $l3;
        $r2 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: java.io.RandomAccessFile f>;
        $r3 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: byte[] buffer>;
        $i4 = virtualinvoke $r2.<java.io.RandomAccessFile: int read(byte[])>($r3);
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufLen> = $i4;
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos> = 0;
        $i5 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufLen>;
        if $i5 > 0 goto label0;

        return -1024;

     label0:
        $r4 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: byte[] buffer>;
        $i0 = r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos>;
        $i6 = $i0 + 1;
        r0.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: int bufPos> = $i6;
        $b7 = $r4[$i0];
        return $b7;
    }
}
final class org.petero.droidfish.activities.PGNFile$GameInfo extends java.lang.Object
{
    java.lang.String info;
    long startPos;
    long endPos;

    void <init>()
    {
        org.petero.droidfish.activities.PGNFile$GameInfo r0;

        r0 := @this: org.petero.droidfish.activities.PGNFile$GameInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.activities.PGNFile$GameInfo: java.lang.String info> = "";
        return;
    }

    final org.petero.droidfish.activities.PGNFile$GameInfo setNull(long)
    {
        org.petero.droidfish.activities.PGNFile$GameInfo r0;
        long l0;

        r0 := @this: org.petero.droidfish.activities.PGNFile$GameInfo;
        l0 := @parameter0: long;
        r0.<org.petero.droidfish.activities.PGNFile$GameInfo: java.lang.String info> = null;
        r0.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos> = l0;
        r0.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos> = l0;
        return r0;
    }

    final boolean isNull()
    {
        org.petero.droidfish.activities.PGNFile$GameInfo r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.PGNFile$GameInfo;
        $r1 = r0.<org.petero.droidfish.activities.PGNFile$GameInfo: java.lang.String info>;
        if $r1 != null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.petero.droidfish.activities.PGNFile$GameInfo r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.petero.droidfish.activities.PGNFile$GameInfo;
        $r1 = r0.<org.petero.droidfish.activities.PGNFile$GameInfo: java.lang.String info>;
        if $r1 != null goto label0;

        return "--";

     label0:
        $r2 = r0.<org.petero.droidfish.activities.PGNFile$GameInfo: java.lang.String info>;
        return $r2;
    }
}
public final enum class org.petero.droidfish.activities.PGNFile$GameInfoResult extends java.lang.Enum
{
    public static final enum org.petero.droidfish.activities.PGNFile$GameInfoResult OK;
    public static final enum org.petero.droidfish.activities.PGNFile$GameInfoResult CANCEL;
    public static final enum org.petero.droidfish.activities.PGNFile$GameInfoResult NOT_PGN;
    public static final enum org.petero.droidfish.activities.PGNFile$GameInfoResult OUT_OF_MEMORY;
    private static final org.petero.droidfish.activities.PGNFile$GameInfoResult[] $VALUES;

    public static org.petero.droidfish.activities.PGNFile$GameInfoResult[] values()
    {
        org.petero.droidfish.activities.PGNFile$GameInfoResult[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.petero.droidfish.activities.PGNFile$GameInfoResult[]) $r1;
        return $r2;
    }

    public static org.petero.droidfish.activities.PGNFile$GameInfoResult valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.petero.droidfish.activities.PGNFile$GameInfoResult $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/petero/droidfish/activities/PGNFile$GameInfoResult", r0);
        $r2 = (org.petero.droidfish.activities.PGNFile$GameInfoResult) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.petero.droidfish.activities.PGNFile$GameInfoResult r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.petero.droidfish.activities.PGNFile$GameInfoResult;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        org.petero.droidfish.activities.PGNFile$GameInfoResult $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        org.petero.droidfish.activities.PGNFile$GameInfoResult[] $r4;

        $r0 = new org.petero.droidfish.activities.PGNFile$GameInfoResult;
        specialinvoke $r0.<org.petero.droidfish.activities.PGNFile$GameInfoResult: void <init>(java.lang.String,int)>("OK", 0);
        <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult OK> = $r0;
        $r1 = new org.petero.droidfish.activities.PGNFile$GameInfoResult;
        specialinvoke $r1.<org.petero.droidfish.activities.PGNFile$GameInfoResult: void <init>(java.lang.String,int)>("CANCEL", 1);
        <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult CANCEL> = $r1;
        $r2 = new org.petero.droidfish.activities.PGNFile$GameInfoResult;
        specialinvoke $r2.<org.petero.droidfish.activities.PGNFile$GameInfoResult: void <init>(java.lang.String,int)>("NOT_PGN", 2);
        <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult NOT_PGN> = $r2;
        $r3 = new org.petero.droidfish.activities.PGNFile$GameInfoResult;
        specialinvoke $r3.<org.petero.droidfish.activities.PGNFile$GameInfoResult: void <init>(java.lang.String,int)>("OUT_OF_MEMORY", 3);
        <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult OUT_OF_MEMORY> = $r3;
        $r4 = newarray (org.petero.droidfish.activities.PGNFile$GameInfoResult)[4];
        $r5 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult OK>;
        $r4[0] = $r5;
        $r6 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult CANCEL>;
        $r4[1] = $r6;
        $r7 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult NOT_PGN>;
        $r4[2] = $r7;
        $r8 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult OUT_OF_MEMORY>;
        $r4[3] = $r8;
        <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult[] $VALUES> = $r4;
        return;
    }
}
final class org.petero.droidfish.activities.PGNFile$HeaderInfo extends java.lang.Object
{
    java.lang.String event;
    java.lang.String site;
    java.lang.String date;
    java.lang.String round;
    java.lang.String white;
    java.lang.String black;
    java.lang.String result;

    private void <init>()
    {
        org.petero.droidfish.activities.PGNFile$HeaderInfo r0;

        r0 := @this: org.petero.droidfish.activities.PGNFile$HeaderInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String event> = "";
        r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String site> = "";
        r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String date> = "";
        r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String round> = "";
        r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String white> = "";
        r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String black> = "";
        r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result> = "";
        return;
    }

    public java.lang.String toString()
    {
        org.petero.droidfish.activities.PGNFile$HeaderInfo r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String $r3, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r25, $r27;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.petero.droidfish.activities.PGNFile$HeaderInfo;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(128);
        r2 = $r1;
        $r3 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String white>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");
        $r6 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String black>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String date>;
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r10 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String date>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label0:
        $r12 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String round>;
        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();
        if $i1 <= 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r14 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String round>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label1:
        $r16 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String event>;
        $i2 = virtualinvoke $r16.<java.lang.String: int length()>();
        if $i2 <= 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r18 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String event>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

     label2:
        $r20 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String site>;
        $i3 = virtualinvoke $r20.<java.lang.String: int length()>();
        if $i3 <= 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r22 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String site>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r25 = r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r27;
    }

    void <init>(org.petero.droidfish.activities.PGNFile$1)
    {
        org.petero.droidfish.activities.PGNFile$HeaderInfo r0;
        org.petero.droidfish.activities.PGNFile$1 r1;

        r0 := @this: org.petero.droidfish.activities.PGNFile$HeaderInfo;
        r1 := @parameter0: org.petero.droidfish.activities.PGNFile$1;
        specialinvoke r0.<org.petero.droidfish.activities.PGNFile$HeaderInfo: void <init>()>();
        return;
    }
}
public class org.petero.droidfish.activities.PGNFile extends java.lang.Object
{
    private final java.io.File fileName;

    public void <init>(java.lang.String)
    {
        org.petero.droidfish.activities.PGNFile r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @this: org.petero.droidfish.activities.PGNFile;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.io.File;
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);
        r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName> = $r2;
        return;
    }

    public final java.lang.String getName()
    {
        org.petero.droidfish.activities.PGNFile r0;
        java.io.File $r1;
        java.lang.String $r2;

        r0 := @this: org.petero.droidfish.activities.PGNFile;
        $r1 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();
        return $r2;
    }

    public final org.petero.droidfish.gamelogic.Pair getGameInfo(android.app.Activity, android.app.ProgressDialog)
    {
        org.petero.droidfish.activities.PGNFile r0;
        android.app.Activity r1;
        android.app.ProgressDialog r2;
        java.util.ArrayList $r3, r4;
        long l0, l2, l5, $l7, $l8;
        int i1, i3, i4, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader r5, $r9;
        org.petero.droidfish.activities.PGNFile$GameInfo r6, $r17;
        org.petero.droidfish.activities.PGNFile$HeaderInfo r7, $r18;
        boolean z0, z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.lang.String r8, $r11, $r12, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        java.io.File $r10;
        char $c6;
        org.petero.droidfish.activities.PGNFile$1 $r13;
        java.lang.Thread $r14;
        org.petero.droidfish.gamelogic.Pair $r15, $r39, $r41, $r43;
        org.petero.droidfish.activities.PGNFile$GameInfoResult $r16, $r40, $r42, $r44;
        java.io.IOException $r35, r36;
        java.lang.OutOfMemoryError $r37, r38;
        null_type n0;
        byte $b17;

        r0 := @this: org.petero.droidfish.activities.PGNFile;
        r1 := @parameter0: android.app.Activity;
        r2 := @parameter1: android.app.ProgressDialog;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r4 = $r3;
        l0 = 0L;

     label0:
        i1 = -1;
        virtualinvoke r4.<java.util.ArrayList: void clear()>();
        $r9 = new org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader;
        $r10 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getAbsolutePath()>();
        specialinvoke $r9.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: void <init>(java.lang.String)>($r11);
        r5 = $r9;
        l0 = virtualinvoke r5.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: long length()>();
        r6 = null;
        r7 = null;
        z0 = 0;
        l2 = 0L;

     label1:
        l5 = virtualinvoke r5.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: long getFilePointer()>();
        r8 = virtualinvoke r5.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: java.lang.String readLine()>();
        if r8 != null goto label2;

        goto label23;

     label2:
        i3 = virtualinvoke r8.<java.lang.String: int length()>();
        if i3 != 0 goto label3;

        goto label1;

     label3:
        $c6 = virtualinvoke r8.<java.lang.String: char charAt(int)>(0);
        if $c6 != 91 goto label4;

        $z2 = 1;
        goto label5;

     label4:
        $z2 = 0;

     label5:
        z1 = $z2;
        if z1 == 0 goto label6;

        $z3 = virtualinvoke r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("\"");
        if $z3 != 0 goto label6;

        z1 = 0;

     label6:
        if z1 == 0 goto label21;

        if z0 != 0 goto label10;

        z0 = 1;
        if r6 == null goto label9;

        r6.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos> = l5;
        $r12 = virtualinvoke r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String toString()>();
        r6.<org.petero.droidfish.activities.PGNFile$GameInfo: java.lang.String info> = $r12;
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);
        $l7 = l5 * 100L;
        $l8 = $l7 / l0;
        i4 = (int) $l8;
        if i4 <= i1 goto label7;

        i1 = i4;
        if r2 == null goto label7;

        $r13 = new org.petero.droidfish.activities.PGNFile$1;
        specialinvoke $r13.<org.petero.droidfish.activities.PGNFile$1: void <init>(org.petero.droidfish.activities.PGNFile,android.app.ProgressDialog,int)>(r0, r2, i4);
        virtualinvoke r1.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r13);

     label7:
        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z5 = virtualinvoke $r14.<java.lang.Thread: boolean isInterrupted()>();
        if $z5 == 0 goto label9;

        $r15 = new org.petero.droidfish.gamelogic.Pair;
        $r16 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult CANCEL>;
        specialinvoke $r15.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>($r16, null);

     label8:
        return $r15;

     label9:
        $r17 = new org.petero.droidfish.activities.PGNFile$GameInfo;
        specialinvoke $r17.<org.petero.droidfish.activities.PGNFile$GameInfo: void <init>()>();
        r6 = $r17;
        r6.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos> = l5;
        r6.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos> = -1L;
        $r18 = new org.petero.droidfish.activities.PGNFile$HeaderInfo;
        specialinvoke $r18.<org.petero.droidfish.activities.PGNFile$HeaderInfo: void <init>(org.petero.droidfish.activities.PGNFile$1)>(null);
        r7 = $r18;

     label10:
        $z6 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("[Event ");
        if $z6 == 0 goto label11;

        if i3 < 10 goto label22;

        $i9 = i3 - 2;
        $r19 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(8, $i9);
        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String event> = $r19;
        $r20 = r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String event>;
        $z7 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("?");
        if $z7 == 0 goto label22;

        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String event> = "";
        goto label22;

     label11:
        $z8 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("[Site ");
        if $z8 == 0 goto label12;

        if i3 < 9 goto label22;

        $i10 = i3 - 2;
        $r21 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(7, $i10);
        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String site> = $r21;
        $r22 = r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String site>;
        $z9 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("?");
        if $z9 == 0 goto label22;

        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String site> = "";
        goto label22;

     label12:
        $z10 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("[Date ");
        if $z10 == 0 goto label13;

        if i3 < 9 goto label22;

        $i11 = i3 - 2;
        $r23 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(7, $i11);
        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String date> = $r23;
        $r24 = r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String date>;
        $z11 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("?");
        if $z11 == 0 goto label22;

        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String date> = "";
        goto label22;

     label13:
        $z12 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("[Round ");
        if $z12 == 0 goto label14;

        if i3 < 10 goto label22;

        $i12 = i3 - 2;
        $r25 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(8, $i12);
        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String round> = $r25;
        $r26 = r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String round>;
        $z13 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("?");
        if $z13 == 0 goto label22;

        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String round> = "";
        goto label22;

     label14:
        $z14 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("[White ");
        if $z14 == 0 goto label15;

        if i3 < 10 goto label22;

        $i13 = i3 - 2;
        $r27 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(8, $i13);
        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String white> = $r27;
        goto label22;

     label15:
        $z15 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("[Black ");
        if $z15 == 0 goto label16;

        if i3 < 10 goto label22;

        $i14 = i3 - 2;
        $r28 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(8, $i14);
        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String black> = $r28;
        goto label22;

     label16:
        $z16 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("[Result ");
        if $z16 == 0 goto label22;

        if i3 < 11 goto label22;

        $i15 = i3 - 2;
        $r29 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(9, $i15);
        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result> = $r29;
        $r30 = r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result>;
        $z17 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("1-0");
        if $z17 == 0 goto label17;

        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result> = "1-0";
        goto label22;

     label17:
        $r31 = r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result>;
        $z18 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("0-1");
        if $z18 == 0 goto label18;

        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result> = "0-1";
        goto label22;

     label18:
        $r32 = r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result>;
        $z19 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("1/2-1/2");
        if $z19 != 0 goto label19;

        $r33 = r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result>;
        $z20 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("1/2");
        if $z20 == 0 goto label20;

     label19:
        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result> = "1/2-1/2";
        goto label22;

     label20:
        r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String result> = "*";
        goto label22;

     label21:
        z0 = 0;

     label22:
        goto label1;

     label23:
        if r6 == null goto label24;

        r6.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos> = l5;
        $r34 = virtualinvoke r7.<org.petero.droidfish.activities.PGNFile$HeaderInfo: java.lang.String toString()>();
        r6.<org.petero.droidfish.activities.PGNFile$GameInfo: java.lang.String info> = $r34;
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label24:
        virtualinvoke r5.<org.petero.droidfish.activities.PGNFile$BufferedRandomAccessFileReader: void close()>();

     label25:
        goto label28;

     label26:
        $r35 := @caughtexception;
        r36 = $r35;
        goto label28;

     label27:
        $r37 := @caughtexception;
        r38 = $r37;
        virtualinvoke r4.<java.util.ArrayList: void clear()>();
        n0 = null;
        $r39 = new org.petero.droidfish.gamelogic.Pair;
        $r40 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult OUT_OF_MEMORY>;
        specialinvoke $r39.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>($r40, null);
        return $r39;

     label28:
        $i16 = virtualinvoke r4.<java.util.ArrayList: int size()>();
        if $i16 != 0 goto label29;

        $b17 = l0 cmp 0L;
        if $b17 <= 0 goto label29;

        $r41 = new org.petero.droidfish.gamelogic.Pair;
        $r42 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult NOT_PGN>;
        specialinvoke $r41.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>($r42, null);
        return $r41;

     label29:
        $r43 = new org.petero.droidfish.gamelogic.Pair;
        $r44 = <org.petero.droidfish.activities.PGNFile$GameInfoResult: org.petero.droidfish.activities.PGNFile$GameInfoResult OK>;
        specialinvoke $r43.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>($r44, r4);
        return $r43;

        catch java.io.IOException from label0 to label8 with label26;
        catch java.io.IOException from label9 to label25 with label26;
        catch java.lang.OutOfMemoryError from label0 to label8 with label27;
        catch java.lang.OutOfMemoryError from label9 to label25 with label27;
    }

    private final void mkDirs()
    {
        org.petero.droidfish.activities.PGNFile r0;
        java.io.File r1, $r2;

        r0 := @this: org.petero.droidfish.activities.PGNFile;
        $r2 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        r1 = virtualinvoke $r2.<java.io.File: java.io.File getParentFile()>();
        virtualinvoke r1.<java.io.File: boolean mkdirs()>();
        return;
    }

    final java.lang.String readOneGame(org.petero.droidfish.activities.PGNFile$GameInfo)
    {
        org.petero.droidfish.activities.PGNFile r0;
        org.petero.droidfish.activities.PGNFile$GameInfo r1;
        java.io.RandomAccessFile $r2, r3;
        byte[] r4;
        java.io.File $r5;
        long $l0, $l1, $l2, $l4;
        int $i3;
        java.lang.String $r6;
        java.io.IOException $r7, r8;

        r0 := @this: org.petero.droidfish.activities.PGNFile;
        r1 := @parameter0: org.petero.droidfish.activities.PGNFile$GameInfo;

     label0:
        $r2 = new java.io.RandomAccessFile;
        $r5 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r5, "r");
        r3 = $r2;
        $l0 = r1.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos>;
        $l1 = r1.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos>;
        $l2 = $l0 - $l1;
        $i3 = (int) $l2;
        r4 = newarray (byte)[$i3];
        $l4 = r1.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos>;
        virtualinvoke r3.<java.io.RandomAccessFile: void seek(long)>($l4);
        virtualinvoke r3.<java.io.RandomAccessFile: void readFully(byte[])>(r4);
        virtualinvoke r3.<java.io.RandomAccessFile: void close()>();
        $r6 = new java.lang.String;
        specialinvoke $r6.<java.lang.String: void <init>(byte[])>(r4);

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;
        r8 = $r7;
        return null;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public final void appendPGN(java.lang.String, android.content.Context)
    {
        org.petero.droidfish.activities.PGNFile r0;
        java.lang.String r1;
        android.content.Context r2;
        java.io.FileWriter r3, $r4;
        java.io.File $r5;
        android.widget.Toast $r6, $r9;
        java.io.IOException $r7, r8;

        r0 := @this: org.petero.droidfish.activities.PGNFile;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: android.content.Context;

     label0:
        specialinvoke r0.<org.petero.droidfish.activities.PGNFile: void mkDirs()>();
        $r4 = new java.io.FileWriter;
        $r5 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        specialinvoke $r4.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r5, 1);
        r3 = $r4;
        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>(r1);
        virtualinvoke r3.<java.io.FileWriter: void close()>();
        $r6 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r2, 2131099805, 0);
        virtualinvoke $r6.<android.widget.Toast: void show()>();

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r8 = $r7;
        if r2 == null goto label3;

        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r2, 2131099806, 0);
        virtualinvoke $r9.<android.widget.Toast: void show()>();

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    final boolean deleteGame(org.petero.droidfish.activities.PGNFile$GameInfo, android.content.Context, java.util.ArrayList)
    {
        org.petero.droidfish.activities.PGNFile r0;
        org.petero.droidfish.activities.PGNFile$GameInfo r1, r9;
        android.content.Context r2;
        java.util.ArrayList r3;
        java.io.File $r4, r6, $r10, $r15, $r17;
        java.lang.StringBuilder $r5, $r11, $r12;
        java.io.RandomAccessFile r7, r8, $r14, $r16;
        int i0, i2;
        long l1, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l13, $l14, $l15, $l16;
        java.lang.String $r13;
        boolean $z0, $z2;
        java.io.IOException $r18, $r22, r23;
        java.lang.Object $r19;
        byte $b12;
        android.widget.Toast $r24;

        r0 := @this: org.petero.droidfish.activities.PGNFile;
        r1 := @parameter0: org.petero.droidfish.activities.PGNFile$GameInfo;
        r2 := @parameter1: android.content.Context;
        r3 := @parameter2: java.util.ArrayList;

     label0:
        $r4 = new java.io.File;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r10 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp_delete");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r13);
        r6 = $r4;
        $r14 = new java.io.RandomAccessFile;
        $r15 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        specialinvoke $r14.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r15, "r");
        r7 = $r14;
        $r16 = new java.io.RandomAccessFile;
        specialinvoke $r16.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r6, "rw");
        r8 = $r16;
        $l3 = r1.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos>;
        staticinvoke <org.petero.droidfish.activities.PGNFile: void copyData(java.io.RandomAccessFile,java.io.RandomAccessFile,long)>(r7, r8, $l3);
        $l4 = r1.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos>;
        virtualinvoke r7.<java.io.RandomAccessFile: void seek(long)>($l4);
        $l5 = virtualinvoke r7.<java.io.RandomAccessFile: long length()>();
        $l6 = r1.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos>;
        $l7 = $l5 - $l6;
        staticinvoke <org.petero.droidfish.activities.PGNFile: void copyData(java.io.RandomAccessFile,java.io.RandomAccessFile,long)>(r7, r8, $l7);
        virtualinvoke r7.<java.io.RandomAccessFile: void close()>();
        virtualinvoke r8.<java.io.RandomAccessFile: void close()>();
        $r17 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        $z0 = virtualinvoke r6.<java.io.File: boolean renameTo(java.io.File)>($r17);
        if $z0 != 0 goto label1;

        $r18 = new java.io.IOException;
        specialinvoke $r18.<java.io.IOException: void <init>()>();
        throw $r18;

     label1:
        if r3 == null goto label4;

        virtualinvoke r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);
        i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        $l8 = r1.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos>;
        $l9 = r1.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos>;
        l1 = $l8 - $l9;
        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $r19 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);
        r9 = (org.petero.droidfish.activities.PGNFile$GameInfo) $r19;
        $l10 = r9.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos>;
        $l11 = r1.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos>;
        $b12 = $l10 cmp $l11;
        if $b12 <= 0 goto label3;

        $l13 = r9.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos>;
        $l14 = $l13 - l1;
        r9.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos> = $l14;
        $l15 = r9.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos>;
        $l16 = $l15 - l1;
        r9.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos> = $l16;

     label3:
        i2 = i2 + 1;
        goto label2;

     label4:
        $z2 = 1;

     label5:
        return $z2;

     label6:
        $r22 := @caughtexception;
        r23 = $r22;
        if r2 == null goto label7;

        $r24 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r2, 2131099807, 0);
        virtualinvoke $r24.<android.widget.Toast: void show()>();

     label7:
        return 0;

        catch java.io.IOException from label0 to label5 with label6;
    }

    final boolean replacePGN(java.lang.String, org.petero.droidfish.activities.PGNFile$GameInfo, android.content.Context)
    {
        org.petero.droidfish.activities.PGNFile r0;
        java.lang.String r1, $r12;
        org.petero.droidfish.activities.PGNFile$GameInfo r2;
        android.content.Context r3;
        java.io.File $r4, r6, $r9, $r14, $r17;
        java.lang.StringBuilder $r5, $r10, $r11;
        java.io.RandomAccessFile r7, r8, $r13, $r15;
        long $l0, $l1, $l2, $l3, $l4;
        byte[] $r16;
        boolean $z0, $z1;
        java.io.IOException $r18, $r20, r21;
        android.widget.Toast $r19, $r22;

        r0 := @this: org.petero.droidfish.activities.PGNFile;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.petero.droidfish.activities.PGNFile$GameInfo;
        r3 := @parameter2: android.content.Context;

     label0:
        $r4 = new java.io.File;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r9 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp_delete");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r12);
        r6 = $r4;
        $r13 = new java.io.RandomAccessFile;
        $r14 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        specialinvoke $r13.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r14, "r");
        r7 = $r13;
        $r15 = new java.io.RandomAccessFile;
        specialinvoke $r15.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r6, "rw");
        r8 = $r15;
        $l0 = r2.<org.petero.droidfish.activities.PGNFile$GameInfo: long startPos>;
        staticinvoke <org.petero.droidfish.activities.PGNFile: void copyData(java.io.RandomAccessFile,java.io.RandomAccessFile,long)>(r7, r8, $l0);
        $r16 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();
        virtualinvoke r8.<java.io.RandomAccessFile: void write(byte[])>($r16);
        $l1 = r2.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos>;
        virtualinvoke r7.<java.io.RandomAccessFile: void seek(long)>($l1);
        $l2 = virtualinvoke r7.<java.io.RandomAccessFile: long length()>();
        $l3 = r2.<org.petero.droidfish.activities.PGNFile$GameInfo: long endPos>;
        $l4 = $l2 - $l3;
        staticinvoke <org.petero.droidfish.activities.PGNFile: void copyData(java.io.RandomAccessFile,java.io.RandomAccessFile,long)>(r7, r8, $l4);
        virtualinvoke r7.<java.io.RandomAccessFile: void close()>();
        virtualinvoke r8.<java.io.RandomAccessFile: void close()>();
        $r17 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        $z0 = virtualinvoke r6.<java.io.File: boolean renameTo(java.io.File)>($r17);
        if $z0 != 0 goto label1;

        $r18 = new java.io.IOException;
        specialinvoke $r18.<java.io.IOException: void <init>()>();
        throw $r18;

     label1:
        $r19 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r3, 2131099805, 0);
        virtualinvoke $r19.<android.widget.Toast: void show()>();
        $z1 = 1;

     label2:
        return $z1;

     label3:
        $r20 := @caughtexception;
        r21 = $r20;
        if r3 == null goto label4;

        $r22 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r3, 2131099806, 0);
        virtualinvoke $r22.<android.widget.Toast: void show()>();

     label4:
        return 0;

        catch java.io.IOException from label0 to label2 with label3;
    }

    private static final void copyData(java.io.RandomAccessFile, java.io.RandomAccessFile, long) throws java.io.IOException
    {
        java.io.RandomAccessFile r0, r1;
        long l0, $l6;
        byte[] r2;
        int i1, $i3, $i4, $i5;
        byte $b2;

        r0 := @parameter0: java.io.RandomAccessFile;
        r1 := @parameter1: java.io.RandomAccessFile;
        l0 := @parameter2: long;
        r2 = newarray (byte)[8192];

     label0:
        $b2 = l0 cmp 0L;
        if $b2 <= 0 goto label2;

        $i3 = lengthof r2;
        $i4 = (int) l0;
        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);
        i1 = virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[],int,int)>(r2, 0, $i5);
        if i1 <= 0 goto label1;

        virtualinvoke r1.<java.io.RandomAccessFile: void write(byte[],int,int)>(r2, 0, i1);
        $l6 = (long) i1;
        l0 = l0 - $l6;

     label1:
        goto label0;

     label2:
        return;
    }

    final boolean delete()
    {
        org.petero.droidfish.activities.PGNFile r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.activities.PGNFile;
        $r1 = r0.<org.petero.droidfish.activities.PGNFile: java.io.File fileName>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean delete()>();
        return $z0;
    }
}
public class org.petero.droidfish.activities.Preferences extends android.preference.PreferenceActivity
{

    public void <init>()
    {
        org.petero.droidfish.activities.Preferences r0;

        r0 := @this: org.petero.droidfish.activities.Preferences;
        specialinvoke r0.<android.preference.PreferenceActivity: void <init>()>();
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        org.petero.droidfish.activities.Preferences r0;
        android.os.Bundle r1;
        android.content.SharedPreferences r2;

        r0 := @this: org.petero.droidfish.activities.Preferences;
        r1 := @parameter0: android.os.Bundle;
        specialinvoke r0.<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>(r1);
        virtualinvoke r0.<org.petero.droidfish.activities.Preferences: void addPreferencesFromResource(int)>(2130968576);
        r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);
        staticinvoke <org.petero.droidfish.Util: void setFullScreenMode(android.app.Activity,android.content.SharedPreferences)>(r0, r2);
        return;
    }
}
public final class org.petero.droidfish.book.BookOptions extends java.lang.Object
{
    public java.lang.String filename;
    public int maxLength;
    public boolean preferMainLines;
    public boolean tournamentMode;
    public double random;

    public void <init>()
    {
        org.petero.droidfish.book.BookOptions r0;

        r0 := @this: org.petero.droidfish.book.BookOptions;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.book.BookOptions: java.lang.String filename> = "";
        r0.<org.petero.droidfish.book.BookOptions: int maxLength> = 1000000;
        r0.<org.petero.droidfish.book.BookOptions: boolean preferMainLines> = 0;
        r0.<org.petero.droidfish.book.BookOptions: boolean tournamentMode> = 0;
        r0.<org.petero.droidfish.book.BookOptions: double random> = 0.0;
        return;
    }

    public void <init>(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.book.BookOptions r0, r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0, $z1;
        double $d0;

        r0 := @this: org.petero.droidfish.book.BookOptions;
        r1 := @parameter0: org.petero.droidfish.book.BookOptions;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.book.BookOptions: java.lang.String filename> = "";
        r0.<org.petero.droidfish.book.BookOptions: int maxLength> = 1000000;
        r0.<org.petero.droidfish.book.BookOptions: boolean preferMainLines> = 0;
        r0.<org.petero.droidfish.book.BookOptions: boolean tournamentMode> = 0;
        r0.<org.petero.droidfish.book.BookOptions: double random> = 0.0;
        $r2 = r1.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        r0.<org.petero.droidfish.book.BookOptions: java.lang.String filename> = $r2;
        $i0 = r1.<org.petero.droidfish.book.BookOptions: int maxLength>;
        r0.<org.petero.droidfish.book.BookOptions: int maxLength> = $i0;
        $z0 = r1.<org.petero.droidfish.book.BookOptions: boolean preferMainLines>;
        r0.<org.petero.droidfish.book.BookOptions: boolean preferMainLines> = $z0;
        $z1 = r1.<org.petero.droidfish.book.BookOptions: boolean tournamentMode>;
        r0.<org.petero.droidfish.book.BookOptions: boolean tournamentMode> = $z1;
        $d0 = r1.<org.petero.droidfish.book.BookOptions: double random>;
        r0.<org.petero.droidfish.book.BookOptions: double random> = $d0;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.petero.droidfish.book.BookOptions r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1;
        double $d0, $d1;
        byte $b2;

        r0 := @this: org.petero.droidfish.book.BookOptions;
        r1 := @parameter0: java.lang.Object;
        if r1 == null goto label0;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label1;

     label0:
        return 0;

     label1:
        r2 = (org.petero.droidfish.book.BookOptions) r1;
        $r5 = r0.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        $r6 = r2.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z0 == 0 goto label2;

        $i0 = r0.<org.petero.droidfish.book.BookOptions: int maxLength>;
        $i1 = r2.<org.petero.droidfish.book.BookOptions: int maxLength>;
        if $i0 != $i1 goto label2;

        $z1 = r0.<org.petero.droidfish.book.BookOptions: boolean preferMainLines>;
        $z2 = r2.<org.petero.droidfish.book.BookOptions: boolean preferMainLines>;
        if $z1 != $z2 goto label2;

        $z3 = r0.<org.petero.droidfish.book.BookOptions: boolean tournamentMode>;
        $z4 = r2.<org.petero.droidfish.book.BookOptions: boolean tournamentMode>;
        if $z3 != $z4 goto label2;

        $d0 = r0.<org.petero.droidfish.book.BookOptions: double random>;
        $d1 = r2.<org.petero.droidfish.book.BookOptions: double random>;
        $b2 = $d0 cmpl $d1;
        if $b2 != 0 goto label2;

        $z5 = 1;
        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    public int hashCode()
    {
        org.petero.droidfish.book.BookOptions r0;

        r0 := @this: org.petero.droidfish.book.BookOptions;
        return 0;
    }
}
class org.petero.droidfish.book.CtgBook$1 extends java.lang.Object
{
}
final class org.petero.droidfish.book.CtgBook$BitVector extends java.lang.Object
{
    private java.util.List buf;
    private int length;

    private void <init>()
    {
        org.petero.droidfish.book.CtgBook$BitVector r0;
        java.util.ArrayList $r1;

        r0 := @this: org.petero.droidfish.book.CtgBook$BitVector;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.book.CtgBook$BitVector: java.util.List buf> = $r1;
        r0.<org.petero.droidfish.book.CtgBook$BitVector: int length> = 0;
        return;
    }

    void addBit(boolean)
    {
        org.petero.droidfish.book.CtgBook$BitVector r0;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11;
        java.util.List $r1, $r2, $r4, $r5;
        java.lang.Byte $r3, $r7, $r8;
        java.lang.Object $r6;
        byte $b6, $b9;

        r0 := @this: org.petero.droidfish.book.CtgBook$BitVector;
        z0 := @parameter0: boolean;
        $i2 = r0.<org.petero.droidfish.book.CtgBook$BitVector: int length>;
        i0 = $i2 / 8;
        $i3 = r0.<org.petero.droidfish.book.CtgBook$BitVector: int length>;
        $i4 = $i3 & 7;
        i1 = 7 - $i4;

     label0:
        $r1 = r0.<org.petero.droidfish.book.CtgBook$BitVector: java.util.List buf>;
        $i5 = interfaceinvoke $r1.<java.util.List: int size()>();
        if $i5 > i0 goto label1;

        $r2 = r0.<org.petero.droidfish.book.CtgBook$BitVector: java.util.List buf>;
        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);
        goto label0;

     label1:
        if z0 == 0 goto label2;

        $r4 = r0.<org.petero.droidfish.book.CtgBook$BitVector: java.util.List buf>;
        $r5 = r0.<org.petero.droidfish.book.CtgBook$BitVector: java.util.List buf>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);
        $r7 = (java.lang.Byte) $r6;
        $b6 = virtualinvoke $r7.<java.lang.Byte: byte byteValue()>();
        $i7 = 1 << i1;
        $i8 = $b6 | $i7;
        $b9 = (byte) $i8;
        $r8 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b9);
        interfaceinvoke $r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r8);

     label2:
        $i10 = r0.<org.petero.droidfish.book.CtgBook$BitVector: int length>;
        $i11 = $i10 + 1;
        r0.<org.petero.droidfish.book.CtgBook$BitVector: int length> = $i11;
        return;
    }

    void addBits(int, int)
    {
        org.petero.droidfish.book.CtgBook$BitVector r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        boolean $z0;

        r0 := @this: org.petero.droidfish.book.CtgBook$BitVector;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 = 0;

     label0:
        if i2 >= i1 goto label3;

        $i4 = i1 - 1;
        i3 = $i4 - i2;
        $i5 = 1 << i3;
        $i6 = i0 & $i5;
        if $i6 == 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r0.<org.petero.droidfish.book.CtgBook$BitVector: void addBit(boolean)>($z0);
        i2 = i2 + 1;
        goto label0;

     label3:
        return;
    }

    int padBits()
    {
        org.petero.droidfish.book.CtgBook$BitVector r0;
        int i0, $i1, $i2;

        r0 := @this: org.petero.droidfish.book.CtgBook$BitVector;
        $i1 = r0.<org.petero.droidfish.book.CtgBook$BitVector: int length>;
        i0 = $i1 & 7;
        if i0 != 0 goto label0;

        $i2 = 0;
        goto label1;

     label0:
        $i2 = 8 - i0;

     label1:
        return $i2;
    }

    final byte[] toByteArray()
    {
        org.petero.droidfish.book.CtgBook$BitVector r0;
        byte[] r1;
        int i0, $i1, $i2;
        java.util.List $r2, $r3, $r4;
        java.lang.Object $r5;
        java.lang.Byte $r6;
        byte $b3;

        r0 := @this: org.petero.droidfish.book.CtgBook$BitVector;
        $r2 = r0.<org.petero.droidfish.book.CtgBook$BitVector: java.util.List buf>;
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();
        r1 = newarray (byte)[$i1];
        i0 = 0;

     label0:
        $r3 = r0.<org.petero.droidfish.book.CtgBook$BitVector: java.util.List buf>;
        $i2 = interfaceinvoke $r3.<java.util.List: int size()>();
        if i0 >= $i2 goto label1;

        $r4 = r0.<org.petero.droidfish.book.CtgBook$BitVector: java.util.List buf>;
        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);
        $r6 = (java.lang.Byte) $r5;
        $b3 = virtualinvoke $r6.<java.lang.Byte: byte byteValue()>();
        r1[i0] = $b3;
        i0 = i0 + 1;
        goto label0;

     label1:
        return r1;
    }

    void <init>(org.petero.droidfish.book.CtgBook$1)
    {
        org.petero.droidfish.book.CtgBook$BitVector r0;
        org.petero.droidfish.book.CtgBook$1 r1;

        r0 := @this: org.petero.droidfish.book.CtgBook$BitVector;
        r1 := @parameter0: org.petero.droidfish.book.CtgBook$1;
        specialinvoke r0.<org.petero.droidfish.book.CtgBook$BitVector: void <init>()>();
        return;
    }

    static int access$300(org.petero.droidfish.book.CtgBook$BitVector)
    {
        org.petero.droidfish.book.CtgBook$BitVector r0;
        int $i0;

        r0 := @parameter0: org.petero.droidfish.book.CtgBook$BitVector;
        $i0 = r0.<org.petero.droidfish.book.CtgBook$BitVector: int length>;
        return $i0;
    }
}
final class org.petero.droidfish.book.CtgBook$CtbFile extends java.lang.Object
{
    int lowerPageBound;
    int upperPageBound;

    void <init>(java.io.RandomAccessFile) throws java.io.IOException
    {
        org.petero.droidfish.book.CtgBook$CtbFile r0;
        java.io.RandomAccessFile r1;
        byte[] r2;
        int $i0, $i1;

        r0 := @this: org.petero.droidfish.book.CtgBook$CtbFile;
        r1 := @parameter0: java.io.RandomAccessFile;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r2 = staticinvoke <org.petero.droidfish.book.CtgBook: byte[] access$000(java.io.RandomAccessFile,int,int)>(r1, 4, 8);
        $i0 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>(r2, 0, 4);
        r0.<org.petero.droidfish.book.CtgBook$CtbFile: int lowerPageBound> = $i0;
        $i1 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>(r2, 4, 4);
        r0.<org.petero.droidfish.book.CtgBook$CtbFile: int upperPageBound> = $i1;
        return;
    }
}
final class org.petero.droidfish.book.CtgBook$CtgFile extends java.lang.Object
{
    private java.io.RandomAccessFile f;
    private org.petero.droidfish.book.CtgBook$CtbFile ctb;
    private org.petero.droidfish.book.CtgBook$CtoFile cto;

    void <init>(java.io.RandomAccessFile, org.petero.droidfish.book.CtgBook$CtbFile, org.petero.droidfish.book.CtgBook$CtoFile)
    {
        org.petero.droidfish.book.CtgBook$CtgFile r0;
        java.io.RandomAccessFile r1;
        org.petero.droidfish.book.CtgBook$CtbFile r2;
        org.petero.droidfish.book.CtgBook$CtoFile r3;

        r0 := @this: org.petero.droidfish.book.CtgBook$CtgFile;
        r1 := @parameter0: java.io.RandomAccessFile;
        r2 := @parameter1: org.petero.droidfish.book.CtgBook$CtbFile;
        r3 := @parameter2: org.petero.droidfish.book.CtgBook$CtoFile;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.book.CtgBook$CtgFile: java.io.RandomAccessFile f> = r1;
        r0.<org.petero.droidfish.book.CtgBook$CtgFile: org.petero.droidfish.book.CtgBook$CtbFile ctb> = r2;
        r0.<org.petero.droidfish.book.CtgBook$CtgFile: org.petero.droidfish.book.CtgBook$CtoFile cto> = r3;
        return;
    }

    final org.petero.droidfish.book.CtgBook$PositionData getPositionData(org.petero.droidfish.gamelogic.Position) throws java.io.IOException
    {
        org.petero.droidfish.book.CtgBook$CtgFile r0;
        org.petero.droidfish.gamelogic.Position r1, $r5;
        boolean z0, z1, z2, $z3, $z4;
        byte[] r2;
        java.util.ArrayList r3;
        org.petero.droidfish.book.CtgBook$PositionData r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        org.petero.droidfish.book.CtgBook$CtbFile $r6;
        org.petero.droidfish.book.CtgBook$CtoFile $r7;
        java.lang.Object $r8;
        java.lang.Integer $r9;

        r0 := @this: org.petero.droidfish.book.CtgBook$CtgFile;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $z3 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z3 != 0 goto label0;

        $z4 = 1;
        goto label1;

     label0:
        $z4 = 0;

     label1:
        z0 = $z4;
        z1 = 1;
        if z0 == 0 goto label2;

        r1 = staticinvoke <org.petero.droidfish.book.CtgBook: org.petero.droidfish.gamelogic.Position access$400(org.petero.droidfish.gamelogic.Position)>(r1);
        z1 = 0;

     label2:
        z2 = 0;
        $i2 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getCastleMask()>();
        if $i2 != 0 goto label3;

        $i3 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getKingSq(boolean)>(1);
        $i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i3);
        if $i4 >= 4 goto label3;

        r1 = staticinvoke <org.petero.droidfish.book.CtgBook: org.petero.droidfish.gamelogic.Position access$500(org.petero.droidfish.gamelogic.Position)>(r1);
        z2 = 1;
        z1 = 0;

     label3:
        if z1 == 0 goto label4;

        $r5 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r5.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r1);
        r1 = $r5;

     label4:
        r2 = staticinvoke <org.petero.droidfish.book.CtgBook: byte[] access$600(org.petero.droidfish.gamelogic.Position)>(r1);
        $r6 = r0.<org.petero.droidfish.book.CtgBook$CtgFile: org.petero.droidfish.book.CtgBook$CtbFile ctb>;
        r3 = staticinvoke <org.petero.droidfish.book.CtgBook$CtoFile: java.util.ArrayList getHashIndices(byte[],org.petero.droidfish.book.CtgBook$CtbFile)>(r2, $r6);
        r4 = null;
        i0 = 0;

     label5:
        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        if i0 >= $i5 goto label8;

        $r7 = r0.<org.petero.droidfish.book.CtgBook$CtgFile: org.petero.droidfish.book.CtgBook$CtoFile cto>;
        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        $r9 = (java.lang.Integer) $r8;
        $i6 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();
        i1 = virtualinvoke $r7.<org.petero.droidfish.book.CtgBook$CtoFile: int getPage(int)>($i6);
        if i1 >= 0 goto label6;

        goto label7;

     label6:
        r4 = specialinvoke r0.<org.petero.droidfish.book.CtgBook$CtgFile: org.petero.droidfish.book.CtgBook$PositionData findInPage(int,byte[])>(i1, r2);
        if r4 == null goto label7;

        r4.<org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.gamelogic.Position pos> = r1;
        r4.<org.petero.droidfish.book.CtgBook$PositionData: boolean mirrorColor> = z0;
        r4.<org.petero.droidfish.book.CtgBook$PositionData: boolean mirrorLeftRight> = z2;
        goto label8;

     label7:
        i0 = i0 + 1;
        goto label5;

     label8:
        return r4;
    }

    private final org.petero.droidfish.book.CtgBook$PositionData findInPage(int, byte[]) throws java.io.IOException
    {
        org.petero.droidfish.book.CtgBook$CtgFile r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, i9, $i10, $i12, i16, i17;
        byte[] r1, r2;
        boolean z0;
        java.io.RandomAccessFile $r3;
        byte $b11, $b13, $b14, b15;
        org.petero.droidfish.book.CtgBook$PositionData $r4;
        null_type $n0;
        java.lang.ArrayIndexOutOfBoundsException $r5, r6;

        r0 := @this: org.petero.droidfish.book.CtgBook$CtgFile;
        i0 := @parameter0: int;
        r1 := @parameter1: byte[];
        $r3 = r0.<org.petero.droidfish.book.CtgBook$CtgFile: java.io.RandomAccessFile f>;
        $i7 = i0 + 1;
        $i8 = $i7 * 4096;
        r2 = staticinvoke <org.petero.droidfish.book.CtgBook: byte[] access$000(java.io.RandomAccessFile,int,int)>($r3, $i8, 4096);

     label0:
        i1 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>(r2, 0, 2);
        i2 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>(r2, 2, 2);
        i3 = i2;

     label1:
        if i3 >= 4096 goto label2;

        r2[i3] = 0;
        i3 = i3 + 1;
        goto label1;

     label2:
        i9 = 4;
        i4 = 0;

     label3:
        if i4 >= i1 goto label9;

        z0 = 1;
        i5 = 0;

     label4:
        $i10 = lengthof r1;
        if i5 >= $i10 goto label6;

        $b11 = r1[i5];
        $i12 = i9 + i5;
        $b13 = r2[$i12];
        if $b11 == $b13 goto label5;

        z0 = 0;
        goto label6;

     label5:
        i5 = i5 + 1;
        goto label4;

     label6:
        if z0 == 0 goto label8;

        $r4 = new org.petero.droidfish.book.CtgBook$PositionData;
        specialinvoke $r4.<org.petero.droidfish.book.CtgBook$PositionData: void <init>(byte[],int)>(r2, i9);

     label7:
        return $r4;

     label8:
        $b14 = r2[i9];
        b15 = $b14 & 31;
        i16 = i9 + b15;
        i6 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>(r2, i16, 1);
        i17 = i16 + i6;
        i9 = i17 + 33;
        i4 = i4 + 1;
        goto label3;

     label9:
        $n0 = null;

     label10:
        return $n0;

     label11:
        $r5 := @caughtexception;
        r6 = $r5;
        return null;

        catch java.lang.ArrayIndexOutOfBoundsException from label0 to label7 with label11;
        catch java.lang.ArrayIndexOutOfBoundsException from label8 to label10 with label11;
    }
}
final class org.petero.droidfish.book.CtgBook$CtoFile extends java.lang.Object
{
    java.io.RandomAccessFile f;
    private static final int[] tbl;

    void <init>(java.io.RandomAccessFile)
    {
        org.petero.droidfish.book.CtgBook$CtoFile r0;
        java.io.RandomAccessFile r1;

        r0 := @this: org.petero.droidfish.book.CtgBook$CtoFile;
        r1 := @parameter0: java.io.RandomAccessFile;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.book.CtgBook$CtoFile: java.io.RandomAccessFile f> = r1;
        return;
    }

    static final java.util.ArrayList getHashIndices(byte[], org.petero.droidfish.book.CtgBook$CtbFile) throws java.io.IOException
    {
        byte[] r0;
        org.petero.droidfish.book.CtgBook$CtbFile r1;
        java.util.ArrayList $r2, r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.lang.Integer $r4;

        r0 := @parameter0: byte[];
        r1 := @parameter1: org.petero.droidfish.book.CtgBook$CtbFile;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        i0 = staticinvoke <org.petero.droidfish.book.CtgBook$CtoFile: int getHashValue(byte[])>(r0);
        i1 = 0;

     label0:
        if i1 >= 2147483647 goto label3;

        $i3 = i0 & i1;
        i2 = $i3 + i1;
        $i4 = r1.<org.petero.droidfish.book.CtgBook$CtbFile: int lowerPageBound>;
        if i2 >= $i4 goto label1;

        goto label2;

     label1:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);
        $i5 = r1.<org.petero.droidfish.book.CtgBook$CtbFile: int upperPageBound>;
        if i2 < $i5 goto label2;

        goto label3;

     label2:
        $i6 = 2 * i1;
        i1 = $i6 + 1;
        goto label0;

     label3:
        return r3;
    }

    final int getPage(int) throws java.io.IOException
    {
        org.petero.droidfish.book.CtgBook$CtoFile r0;
        int i0, i1, $i2, $i3;
        byte[] r1;
        java.io.RandomAccessFile $r2;

        r0 := @this: org.petero.droidfish.book.CtgBook$CtoFile;
        i0 := @parameter0: int;
        $r2 = r0.<org.petero.droidfish.book.CtgBook$CtoFile: java.io.RandomAccessFile f>;
        $i2 = 4 * i0;
        $i3 = 16 + $i2;
        r1 = staticinvoke <org.petero.droidfish.book.CtgBook: byte[] access$000(java.io.RandomAccessFile,int,int)>($r2, $i3, 4);
        i1 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>(r1, 0, 4);
        return i1;
    }

    private static final int getHashValue(byte[])
    {
        byte[] r0;
        int i0, i1, i2, $i4, $i6, $i7, $i8, i9, $i10, $i11, i12, $i14, $i15, $i16, $i17, $i18;
        byte b3, $b5;
        int[] $r1, $r2;
        short $s13;

        r0 := @parameter0: byte[];
        i0 = 0;
        i1 = 0;
        i2 = 0;

     label0:
        $i4 = lengthof r0;
        if i2 >= $i4 goto label1;

        b3 = r0[i2];
        $b5 = b3 & 15;
        $i6 = 15 - $b5;
        $i7 = $i6 << 2;
        $i8 = $i7 + 1;
        i9 = i1 + $i8;
        $r1 = <org.petero.droidfish.book.CtgBook$CtoFile: int[] tbl>;
        $i10 = i9 & 63;
        $i11 = $r1[$i10];
        i12 = i0 + $i11;
        $s13 = b3 & 240;
        $i14 = 240 - $s13;
        $i15 = $i14 >> 2;
        $i16 = $i15 + 1;
        i1 = i9 + $i16;
        $r2 = <org.petero.droidfish.book.CtgBook$CtoFile: int[] tbl>;
        $i17 = i1 & 63;
        $i18 = $r2[$i17];
        i0 = i12 + $i18;
        i2 = i2 + 1;
        goto label0;

     label1:
        return i0;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[64];
        $r0[0] = 822137535;
        $r0[1] = 823714782;
        $r0[2] = 883626866;
        $r0[3] = 671590471;
        $r0[4] = 372503910;
        $r0[5] = 558084953;
        $r0[6] = 651519112;
        $r0[7] = 1000238937;
        $r0[8] = 930436694;
        $r0[9] = 814336635;
        $r0[10] = 417934725;
        $r0[11] = 215017944;
        $r0[12] = 446577492;
        $r0[13] = 1051365423;
        $r0[14] = 228326062;
        $r0[15] = 791852123;
        $r0[16] = 837640450;
        $r0[17] = 1027376024;
        $r0[18] = 342253795;
        $r0[19] = 260918134;
        $r0[20] = 46627423;
        $r0[21] = 342656921;
        $r0[22] = 474477855;
        $r0[23] = 614436662;
        $r0[24] = 611786819;
        $r0[25] = 532422221;
        $r0[26] = 512144378;
        $r0[27] = 937375398;
        $r0[28] = 384643300;
        $r0[29] = 46339214;
        $r0[30] = 560879913;
        $r0[31] = 104248142;
        $r0[32] = 830447446;
        $r0[33] = 368090480;
        $r0[34] = 319825659;
        $r0[35] = 952599729;
        $r0[36] = 699151109;
        $r0[37] = 726162885;
        $r0[38] = 1006935516;
        $r0[39] = 900332493;
        $r0[40] = 836056891;
        $r0[41] = 723806105;
        $r0[42] = 170468307;
        $r0[43] = 145321629;
        $r0[44] = 805509791;
        $r0[45] = 150283701;
        $r0[46] = 862002182;
        $r0[47] = 604625816;
        $r0[48] = 212139698;
        $r0[49] = 268482334;
        $r0[50] = 810970674;
        $r0[51] = 960789809;
        $r0[52] = 424556370;
        $r0[53] = 136526485;
        $r0[54] = 255393334;
        $r0[55] = 700960087;
        $r0[56] = 259734073;
        $r0[57] = 848202262;
        $r0[58] = 511513480;
        $r0[59] = 263878901;
        $r0[60] = 659324540;
        $r0[61] = 512484956;
        $r0[62] = 799060155;
        $r0[63] = 515294065;
        <org.petero.droidfish.book.CtgBook$CtoFile: int[] tbl> = $r0;
        return;
    }
}
final class org.petero.droidfish.book.CtgBook$PositionData$MoveInfo extends java.lang.Object
{
    int piece;
    int pieceNo;
    int dx;
    int dy;

    private void <init>()
    {
        org.petero.droidfish.book.CtgBook$PositionData$MoveInfo r0;

        r0 := @this: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    void <init>(org.petero.droidfish.book.CtgBook$1)
    {
        org.petero.droidfish.book.CtgBook$PositionData$MoveInfo r0;
        org.petero.droidfish.book.CtgBook$1 r1;

        r0 := @this: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo;
        r1 := @parameter0: org.petero.droidfish.book.CtgBook$1;
        specialinvoke r0.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: void <init>()>();
        return;
    }
}
final class org.petero.droidfish.book.CtgBook$PositionData extends java.lang.Object
{
    private byte[] buf;
    private int posLen;
    private int moveBytes;
    static final int posInfoBytes;
    org.petero.droidfish.gamelogic.Position pos;
    boolean mirrorColor;
    boolean mirrorLeftRight;
    private static final org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo;

    void <init>(byte[], int)
    {
        org.petero.droidfish.book.CtgBook$PositionData r0;
        byte[] r1, $r2, $r3;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        byte $b3, $b4, $b12;

        r0 := @this: org.petero.droidfish.book.CtgBook$PositionData;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.book.CtgBook$PositionData: boolean mirrorColor> = 0;
        r0.<org.petero.droidfish.book.CtgBook$PositionData: boolean mirrorLeftRight> = 0;
        $b3 = r1[i0];
        $b4 = $b3 & 31;
        r0.<org.petero.droidfish.book.CtgBook$PositionData: int posLen> = $b4;
        $i5 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int posLen>;
        $i6 = i0 + $i5;
        $i7 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>(r1, $i6, 1);
        r0.<org.petero.droidfish.book.CtgBook$PositionData: int moveBytes> = $i7;
        $i8 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int posLen>;
        $i9 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int moveBytes>;
        $i10 = $i8 + $i9;
        i1 = $i10 + 33;
        $r2 = newarray (byte)[i1];
        r0.<org.petero.droidfish.book.CtgBook$PositionData: byte[] buf> = $r2;
        i2 = 0;

     label0:
        if i2 >= i1 goto label1;

        $r3 = r0.<org.petero.droidfish.book.CtgBook$PositionData: byte[] buf>;
        $i11 = i0 + i2;
        $b12 = r1[$i11];
        $r3[i2] = $b12;
        i2 = i2 + 1;
        goto label0;

     label1:
        return;
    }

    final java.util.ArrayList getBookMoves()
    {
        org.petero.droidfish.book.CtgBook$PositionData r0;
        java.util.ArrayList $r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        org.petero.droidfish.gamelogic.Move r3;
        org.petero.droidfish.book.DroidBook$BookEntry r4, $r8;
        byte[] $r5, $r6;
        org.petero.droidfish.gamelogic.Position $r7;

        r0 := @this: org.petero.droidfish.book.CtgBook$PositionData;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $i4 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int moveBytes>;
        $i5 = $i4 - 1;
        i0 = $i5 / 2;
        i1 = 0;

     label0:
        if i1 >= i0 goto label12;

        $r5 = r0.<org.petero.droidfish.book.CtgBook$PositionData: byte[] buf>;
        $i6 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int posLen>;
        $i7 = $i6 + 1;
        $i8 = i1 * 2;
        $i9 = $i7 + $i8;
        i2 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>($r5, $i9, 1);
        $r6 = r0.<org.petero.droidfish.book.CtgBook$PositionData: byte[] buf>;
        $i10 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int posLen>;
        $i11 = $i10 + 1;
        $i12 = i1 * 2;
        $i13 = $i11 + $i12;
        $i14 = $i13 + 1;
        i3 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>($r6, $i14, 1);
        $r7 = r0.<org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.gamelogic.Position pos>;
        r3 = specialinvoke r0.<org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.gamelogic.Move decodeMove(org.petero.droidfish.gamelogic.Position,int)>($r7, i2);
        if r3 != null goto label1;

        goto label11;

     label1:
        $r8 = new org.petero.droidfish.book.DroidBook$BookEntry;
        specialinvoke $r8.<org.petero.droidfish.book.DroidBook$BookEntry: void <init>(org.petero.droidfish.gamelogic.Move)>(r3);
        r4 = $r8;
        tableswitch(i3)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            case 7: goto label2;
            case 8: goto label9;
            default: goto label2;
        };

     label2:
        r4.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = 1.0F;
        goto label10;

     label3:
        r4.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = 8.0F;
        goto label10;

     label4:
        r4.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = 0.0F;
        goto label10;

     label5:
        r4.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = 32.0F;
        goto label10;

     label6:
        r4.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = 0.0F;
        goto label10;

     label7:
        r4.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = 0.5F;
        goto label10;

     label8:
        r4.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = 0.125F;
        goto label10;

     label9:
        r4.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = 1000000.0F;

     label10:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label11:
        i1 = i1 + 1;
        goto label0;

     label12:
        return r2;
    }

    final int getOpponentScore()
    {
        org.petero.droidfish.book.CtgBook$PositionData r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte[] $r1, $r2;

        r0 := @this: org.petero.droidfish.book.CtgBook$PositionData;
        $i3 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int posLen>;
        $i4 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int moveBytes>;
        i0 = $i3 + $i4;
        $r1 = r0.<org.petero.droidfish.book.CtgBook$PositionData: byte[] buf>;
        $i5 = i0 + 6;
        i1 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>($r1, $i5, 3);
        $r2 = r0.<org.petero.droidfish.book.CtgBook$PositionData: byte[] buf>;
        $i6 = i0 + 9;
        i2 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>($r2, $i6, 3);
        $i7 = i1 * 2;
        $i8 = $i7 + i2;
        return $i8;
    }

    final int getRecommendation()
    {
        org.petero.droidfish.book.CtgBook$PositionData r0;
        int i0, i1, $i2, $i3, $i4;
        byte[] $r1;

        r0 := @this: org.petero.droidfish.book.CtgBook$PositionData;
        $i2 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int posLen>;
        $i3 = r0.<org.petero.droidfish.book.CtgBook$PositionData: int moveBytes>;
        i0 = $i2 + $i3;
        $r1 = r0.<org.petero.droidfish.book.CtgBook$PositionData: byte[] buf>;
        $i4 = i0 + 30;
        i1 = staticinvoke <org.petero.droidfish.book.CtgBook: int access$100(byte[],int,int)>($r1, $i4, 1);
        return i1;
    }

    private static final org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int, int, int, int)
    {
        int i0, i1, i2, i3;
        org.petero.droidfish.book.CtgBook$PositionData$MoveInfo $r0, r1;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        $r0 = new org.petero.droidfish.book.CtgBook$PositionData$MoveInfo;
        specialinvoke $r0.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: void <init>(org.petero.droidfish.book.CtgBook$1)>(null);
        r1 = $r0;
        r1.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: int piece> = i0;
        r1.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: int pieceNo> = i1;
        r1.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: int dx> = i2;
        r1.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: int dy> = i3;
        return r1;
    }

    private static final int findPiece(org.petero.droidfish.gamelogic.Position, int, int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, i1, i2, i3, i4, $i5, $i6;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = 0;

     label0:
        if i2 >= 8 goto label4;

        i3 = 0;

     label1:
        if i3 >= 8 goto label3;

        i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i2, i3);
        $i5 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i4);
        if $i5 != i0 goto label2;

        $i6 = i1;
        i1 = i1 + -1;
        if $i6 != 0 goto label2;

        return i4;

     label2:
        i3 = i3 + 1;
        goto label1;

     label3:
        i2 = i2 + 1;
        goto label0;

     label4:
        return -1;
    }

    private final org.petero.droidfish.gamelogic.Move decodeMove(org.petero.droidfish.gamelogic.Position, int)
    {
        org.petero.droidfish.book.CtgBook$PositionData r0;
        org.petero.droidfish.gamelogic.Position r1;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] $r2;
        org.petero.droidfish.book.CtgBook$PositionData$MoveInfo r3;
        byte b5;
        org.petero.droidfish.gamelogic.Move r4, $r5;

        r0 := @this: org.petero.droidfish.book.CtgBook$PositionData;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter1: int;
        $r2 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        r3 = $r2[i0];
        if r3 != null goto label0;

        return null;

     label0:
        $i6 = r3.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: int piece>;
        $i7 = r3.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: int pieceNo>;
        i1 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: int findPiece(org.petero.droidfish.gamelogic.Position,int,int)>(r1, $i6, $i7);
        if i1 >= 0 goto label1;

        return null;

     label1:
        $i8 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i1);
        $i9 = r3.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: int dx>;
        $i10 = $i8 + $i9;
        i2 = $i10 & 7;
        $i11 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i1);
        $i12 = r3.<org.petero.droidfish.book.CtgBook$PositionData$MoveInfo: int dy>;
        $i13 = $i11 + $i12;
        i3 = $i13 & 7;
        i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i2, i3);
        b5 = 0;
        $i14 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i1);
        if $i14 != 6 goto label2;

        if i3 != 7 goto label2;

        b5 = 2;

     label2:
        $r5 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r5.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(i1, i4, b5);
        r4 = $r5;
        return r4;
    }

    static void <clinit>()
    {
        org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] $r0, $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r91, $r93, $r95, $r97, $r99, $r101, $r103, $r105, $r107, $r109, $r111, $r113, $r115, $r117, $r119, $r121, $r123, $r125, $r127, $r129, $r131, $r133, $r135, $r137, $r139, $r141, $r143, $r145, $r147, $r149, $r151, $r153, $r155, $r157, $r159, $r161, $r163, $r165, $r167, $r169, $r171, $r173, $r175, $r177, $r179, $r181, $r183, $r185, $r187, $r189, $r191, $r193, $r195, $r197, $r199, $r201, $r203, $r205, $r207, $r209, $r211, $r213, $r215, $r217, $r219, $r221, $r223, $r225, $r227, $r229, $r231, $r233, $r235, $r237, $r239, $r241, $r243, $r245, $r247, $r249, $r251, $r253, $r255, $r257, $r259, $r261, $r263, $r265, $r267, $r269, $r271, $r273, $r275, $r277, $r279, $r281, $r283, $r285, $r287, $r289, $r291, $r293, $r295, $r297, $r299, $r301, $r303, $r305, $r307, $r309, $r311, $r313, $r315, $r317, $r319, $r321, $r323, $r325, $r327, $r329, $r331;
        org.petero.droidfish.book.CtgBook$PositionData$MoveInfo $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r90, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106, $r108, $r110, $r112, $r114, $r116, $r118, $r120, $r122, $r124, $r126, $r128, $r130, $r132, $r134, $r136, $r138, $r140, $r142, $r144, $r146, $r148, $r150, $r152, $r154, $r156, $r158, $r160, $r162, $r164, $r166, $r168, $r170, $r172, $r174, $r176, $r178, $r180, $r182, $r184, $r186, $r188, $r190, $r192, $r194, $r196, $r198, $r200, $r202, $r204, $r206, $r208, $r210, $r212, $r214, $r216, $r218, $r220, $r222, $r224, $r226, $r228, $r230, $r232, $r234, $r236, $r238, $r240, $r242, $r244, $r246, $r248, $r250, $r252, $r254, $r256, $r258, $r260, $r262, $r264, $r266, $r268, $r270, $r272, $r274, $r276, $r278, $r280, $r282, $r284, $r286, $r288, $r290, $r292, $r294, $r296, $r298, $r300, $r302, $r304, $r306, $r308, $r310, $r312, $r314, $r316, $r318, $r320, $r322, $r324, $r326, $r328, $r330, $r332;

        $r0 = newarray (org.petero.droidfish.book.CtgBook$PositionData$MoveInfo)[256];
        <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo> = $r0;
        $r1 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r2 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 4, 1, 1);
        $r1[0] = $r2;
        $r3 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r4 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 1, -2, -1);
        $r3[1] = $r4;
        $r5 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r6 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 2, 0);
        $r5[3] = $r6;
        $r7 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r8 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 1, 0, 1);
        $r7[4] = $r8;
        $r9 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r10 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 0, 1);
        $r9[5] = $r10;
        $r11 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r12 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 3, -1, 1);
        $r11[6] = $r12;
        $r13 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r14 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 4, 0);
        $r13[8] = $r14;
        $r15 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r16 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, 6, 6);
        $r15[9] = $r16;
        $r17 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r18 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, 0, -1);
        $r17[10] = $r18;
        $r19 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r20 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 0, -1, 1);
        $r19[12] = $r20;
        $r21 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r22 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, 3, 3);
        $r21[13] = $r22;
        $r23 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r24 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 3, 0);
        $r23[14] = $r24;
        $r25 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r26 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 0, -2, -1);
        $r25[15] = $r26;
        $r27 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r28 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, 7, 7);
        $r27[18] = $r28;
        $r29 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r30 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, 0, 1);
        $r29[19] = $r30;
        $r31 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r32 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 7, 1, 1);
        $r31[20] = $r32;
        $r33 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r34 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, 5, 5);
        $r33[21] = $r34;
        $r35 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r36 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 6, 0, 1);
        $r35[24] = $r36;
        $r37 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r38 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 0, 6);
        $r37[26] = $r38;
        $r39 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r40 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, -1, 1);
        $r39[27] = $r40;
        $r41 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r42 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, 7, 7);
        $r41[29] = $r42;
        $r43 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r44 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 7, 0);
        $r43[33] = $r44;
        $r45 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r46 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, -2, 2);
        $r45[34] = $r46;
        $r47 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r48 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 6, 6);
        $r47[35] = $r48;
        $r49 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r50 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 7, -1, 1);
        $r49[36] = $r50;
        $r51 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r52 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, -7, 7);
        $r51[38] = $r52;
        $r53 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r54 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 2, -1, 1);
        $r53[39] = $r54;
        $r55 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r56 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 5, 5);
        $r55[40] = $r56;
        $r57 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r58 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 6, 0);
        $r57[41] = $r58;
        $r59 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r60 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 1, 1, -2);
        $r59[42] = $r60;
        $r61 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r62 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 5, 1, 1);
        $r61[45] = $r62;
        $r63 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r64 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, 1, 1);
        $r63[46] = $r64;
        $r65 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r66 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 1, 0);
        $r65[47] = $r66;
        $r67 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r68 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 1, -1, -2);
        $r67[48] = $r68;
        $r69 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r70 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 3, 0);
        $r69[49] = $r70;
        $r71 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r72 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, 5, 5);
        $r71[50] = $r72;
        $r73 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r74 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 0, 1, 2);
        $r73[52] = $r74;
        $r75 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r76 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 0, 2, 1);
        $r75[54] = $r76;
        $r77 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r78 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 0, 4);
        $r77[55] = $r78;
        $r79 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r80 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, -4, 4);
        $r79[56] = $r80;
        $r81 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r82 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 5, 0);
        $r81[57] = $r82;
        $r83 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r84 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, 6, 6);
        $r83[58] = $r84;
        $r85 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r86 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, -5, 5);
        $r85[59] = $r86;
        $r87 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r88 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, -5, 5);
        $r87[60] = $r88;
        $r89 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r90 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 5, 5);
        $r89[65] = $r90;
        $r91 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r92 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, -7, 7);
        $r91[66] = $r92;
        $r93 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r94 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, 1, -1);
        $r93[68] = $r94;
        $r95 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r96 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 3, 3);
        $r95[69] = $r96;
        $r97 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r98 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 7, 0, 2);
        $r97[74] = $r98;
        $r99 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r100 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, -5, 5);
        $r99[75] = $r100;
        $r101 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r102 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 1, 1, 2);
        $r101[76] = $r102;
        $r103 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r104 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 0, 1);
        $r103[77] = $r104;
        $r105 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r106 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 0, 6);
        $r105[80] = $r106;
        $r107 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r108 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 6, 0);
        $r107[82] = $r108;
        $r109 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r110 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, -1, 1);
        $r109[84] = $r110;
        $r111 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r112 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 2, 0, 1);
        $r111[85] = $r112;
        $r113 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r114 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 6, 1, 1);
        $r113[92] = $r114;
        $r115 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r116 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 4, 0, 2);
        $r115[95] = $r116;
        $r117 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r118 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 6, 6);
        $r117[97] = $r118;
        $r119 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r120 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 1, 0, 2);
        $r119[98] = $r120;
        $r121 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r122 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, -7, 7);
        $r121[99] = $r122;
        $r123 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r124 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, -3, 3);
        $r123[102] = $r124;
        $r125 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r126 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, 1, 1);
        $r125[103] = $r126;
        $r127 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r128 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 0, 7);
        $r127[105] = $r128;
        $r129 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r130 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, 4, 4);
        $r129[106] = $r130;
        $r131 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r132 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, 2, 0);
        $r131[107] = $r132;
        $r133 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r134 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 5, 0);
        $r133[110] = $r134;
        $r135 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r136 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 7, 7);
        $r135[111] = $r136;
        $r137 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r138 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, -7, 7);
        $r137[114] = $r138;
        $r139 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r140 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 2, 0);
        $r139[116] = $r140;
        $r141 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r142 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, -6, 6);
        $r141[121] = $r142;
        $r143 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r144 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 0, 3);
        $r143[122] = $r144;
        $r145 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r146 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 0, 6);
        $r145[123] = $r146;
        $r147 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r148 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 2, 1, 1);
        $r147[124] = $r148;
        $r149 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r150 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 0, 1);
        $r149[125] = $r150;
        $r151 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r152 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, -3, 3);
        $r151[126] = $r152;
        $r153 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r154 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 1, 0);
        $r153[127] = $r154;
        $r155 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r156 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, -6, 6);
        $r155[128] = $r156;
        $r157 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r158 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 0, 1);
        $r157[129] = $r158;
        $r159 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r160 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 5, -1, 1);
        $r159[130] = $r160;
        $r161 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r162 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 0, -1, 2);
        $r161[133] = $r162;
        $r163 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r164 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 7, 0);
        $r163[134] = $r164;
        $r165 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r166 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 0, 5);
        $r165[135] = $r166;
        $r167 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r168 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 0, 1, -2);
        $r167[138] = $r168;
        $r169 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r170 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 0, 1, 1);
        $r169[139] = $r170;
        $r171 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r172 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, -1, -1);
        $r171[140] = $r172;
        $r173 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r174 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, -2, 2);
        $r173[142] = $r174;
        $r175 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r176 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 7, 0);
        $r175[143] = $r176;
        $r177 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r178 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 1, 1);
        $r177[146] = $r178;
        $r179 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r180 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 0, 3);
        $r179[148] = $r180;
        $r181 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r182 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 1, 1, 1);
        $r181[150] = $r182;
        $r183 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r184 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, -1, 0);
        $r183[151] = $r184;
        $r185 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r186 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 3, 0);
        $r185[152] = $r186;
        $r187 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r188 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 0, 4);
        $r187[153] = $r188;
        $r189 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r190 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 0, 6);
        $r189[154] = $r190;
        $r191 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r192 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 2, 0, 2);
        $r191[155] = $r192;
        $r193 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r194 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 0, 2);
        $r193[157] = $r194;
        $r195 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r196 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, -4, 4);
        $r195[159] = $r196;
        $r197 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r198 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 0, 3);
        $r197[160] = $r198;
        $r199 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r200 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 2, 2);
        $r199[162] = $r200;
        $r201 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r202 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 7, 0, 1);
        $r201[163] = $r202;
        $r203 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r204 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 0, 5);
        $r203[165] = $r204;
        $r205 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r206 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 2, 0);
        $r205[169] = $r206;
        $r207 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r208 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, -6, 6);
        $r207[171] = $r208;
        $r209 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r210 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 4, 0);
        $r209[173] = $r210;
        $r211 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r212 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 3, 3);
        $r211[174] = $r212;
        $r213 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r214 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 0, 4);
        $r213[176] = $r214;
        $r215 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r216 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 5, 0, 2);
        $r215[177] = $r216;
        $r217 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r218 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, -6, 6);
        $r217[178] = $r218;
        $r219 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r220 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 5, 0);
        $r219[181] = $r220;
        $r221 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r222 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 0, 5);
        $r221[183] = $r222;
        $r223 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r224 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, 3, 3);
        $r223[185] = $r224;
        $r225 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r226 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 4, 0, 1);
        $r225[187] = $r226;
        $r227 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r228 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 5, 0);
        $r227[188] = $r228;
        $r229 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r230 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 0, 2);
        $r229[189] = $r230;
        $r231 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r232 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, 1, 0);
        $r231[190] = $r232;
        $r233 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r234 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, 2, 2);
        $r233[193] = $r234;
        $r235 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r236 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, 2, 2);
        $r235[194] = $r236;
        $r237 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r238 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 0, -2, 2);
        $r237[195] = $r238;
        $r239 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r240 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 1, 0);
        $r239[196] = $r240;
        $r241 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r242 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 0, 4);
        $r241[197] = $r242;
        $r243 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r244 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 0, 5);
        $r243[198] = $r244;
        $r245 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r246 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 6, -1, 1);
        $r245[199] = $r246;
        $r247 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r248 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 6, 0, 2);
        $r247[200] = $r248;
        $r249 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r250 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 0, 7);
        $r249[201] = $r250;
        $r251 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r252 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, -3, 3);
        $r251[202] = $r252;
        $r253 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r254 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 5, 0, 1);
        $r253[203] = $r254;
        $r255 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r256 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, -5, 5);
        $r255[204] = $r256;
        $r257 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r258 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 2, 0);
        $r257[205] = $r258;
        $r259 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r260 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 3, 0, 1);
        $r259[207] = $r260;
        $r261 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r262 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 1, -1, 1);
        $r261[209] = $r262;
        $r263 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r264 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 1, 2, 1);
        $r263[210] = $r264;
        $r265 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r266 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 1, -2, 1);
        $r265[211] = $r266;
        $r267 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r268 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, -1, 1);
        $r267[215] = $r268;
        $r269 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r270 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 6, 0);
        $r269[216] = $r270;
        $r271 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r272 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, -2, 2);
        $r271[217] = $r272;
        $r273 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r274 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 0, -1, -2);
        $r273[218] = $r274;
        $r275 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r276 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 0, 0, 2);
        $r275[219] = $r276;
        $r277 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r278 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 4, -1, 1);
        $r277[222] = $r278;
        $r279 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r280 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, -1, 1);
        $r279[223] = $r280;
        $r281 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r282 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 1, 2, -1);
        $r281[224] = $r282;
        $r283 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r284 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 0, 7);
        $r283[225] = $r284;
        $r285 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r286 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 0, 3);
        $r285[227] = $r286;
        $r287 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r288 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 4, 0);
        $r287[229] = $r288;
        $r289 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r290 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 3, 0, 2);
        $r289[230] = $r290;
        $r291 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r292 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 4, 4);
        $r291[231] = $r292;
        $r293 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r294 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 0, 2);
        $r293[232] = $r294;
        $r295 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r296 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 0, 2, -1);
        $r295[233] = $r296;
        $r297 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r298 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 3, 1, 1);
        $r297[235] = $r298;
        $r299 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r300 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(6, 0, 0, 1);
        $r299[236] = $r300;
        $r301 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r302 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 7, 7);
        $r301[237] = $r302;
        $r303 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r304 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, -1, 1);
        $r303[238] = $r304;
        $r305 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r306 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 0, 4, 0);
        $r305[239] = $r306;
        $r307 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r308 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 7, 0);
        $r307[240] = $r308;
        $r309 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r310 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 1, 1);
        $r309[241] = $r310;
        $r311 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r312 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 1, -1, 2);
        $r311[243] = $r312;
        $r313 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r314 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(3, 1, 0, 2);
        $r313[244] = $r314;
        $r315 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r316 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(4, 1, 1, 1);
        $r315[245] = $r316;
        $r317 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r318 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(1, 0, -2, 0);
        $r317[246] = $r318;
        $r319 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r320 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(5, 0, -2, 1);
        $r319[247] = $r320;
        $r321 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r322 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 1, 0);
        $r321[248] = $r322;
        $r323 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r324 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 0, 6);
        $r323[249] = $r324;
        $r325 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r326 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 3, 0);
        $r325[250] = $r326;
        $r327 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r328 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, 2, 2);
        $r327[251] = $r328;
        $r329 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r330 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 0, 0, 7);
        $r329[253] = $r330;
        $r331 = <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo[] moveInfo>;
        $r332 = staticinvoke <org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.book.CtgBook$PositionData$MoveInfo MI(int,int,int,int)>(2, 1, -3, 3);
        $r331[254] = $r332;
        return;
    }
}
class org.petero.droidfish.book.CtgBook extends java.lang.Object implements org.petero.droidfish.book.IOpeningBook
{
    private org.petero.droidfish.book.BookOptions options;
    private java.io.File ctgFile;
    private java.io.File ctbFile;
    private java.io.File ctoFile;

    void <init>()
    {
        org.petero.droidfish.book.CtgBook r0;
        org.petero.droidfish.book.BookOptions $r1;

        r0 := @this: org.petero.droidfish.book.CtgBook;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new org.petero.droidfish.book.BookOptions;
        specialinvoke $r1.<org.petero.droidfish.book.BookOptions: void <init>()>();
        r0.<org.petero.droidfish.book.CtgBook: org.petero.droidfish.book.BookOptions options> = $r1;
        return;
    }

    static boolean canHandle(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.book.BookOptions r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.petero.droidfish.book.BookOptions;
        r1 = r0.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".ctg");
        if $z0 != 0 goto label0;

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".ctb");
        if $z1 != 0 goto label0;

        $z2 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".cto");
        if $z2 == 0 goto label1;

     label0:
        $z3 = 1;
        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public boolean enabled()
    {
        org.petero.droidfish.book.CtgBook r0;
        java.io.File $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.petero.droidfish.book.CtgBook;
        $r1 = r0.<org.petero.droidfish.book.CtgBook: java.io.File ctgFile>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();
        if $z0 == 0 goto label0;

        $r2 = r0.<org.petero.droidfish.book.CtgBook: java.io.File ctbFile>;
        $z1 = virtualinvoke $r2.<java.io.File: boolean canRead()>();
        if $z1 == 0 goto label0;

        $r3 = r0.<org.petero.droidfish.book.CtgBook: java.io.File ctoFile>;
        $z2 = virtualinvoke $r3.<java.io.File: boolean canRead()>();
        if $z2 == 0 goto label0;

        $z3 = 1;
        goto label1;

     label0:
        $z3 = 0;

     label1:
        return $z3;
    }

    public void setOptions(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.book.CtgBook r0;
        org.petero.droidfish.book.BookOptions r1, $r2;
        java.lang.String r3, $r6, $r9, $r12, $r15, $r18, $r21;
        int i0, $i1, $i2, $i3;
        java.io.File $r4, $r10, $r16;
        java.lang.StringBuilder $r5, $r7, $r8, $r11, $r13, $r14, $r17, $r19, $r20;

        r0 := @this: org.petero.droidfish.book.CtgBook;
        r1 := @parameter0: org.petero.droidfish.book.BookOptions;
        $r2 = new org.petero.droidfish.book.BookOptions;
        specialinvoke $r2.<org.petero.droidfish.book.BookOptions: void <init>(org.petero.droidfish.book.BookOptions)>(r1);
        r0.<org.petero.droidfish.book.CtgBook: org.petero.droidfish.book.BookOptions options> = $r2;
        r3 = r1.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        i0 = virtualinvoke r3.<java.lang.String: int length()>();
        $r4 = new java.io.File;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $i1 = i0 - 1;
        $r6 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("g");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r9);
        r0.<org.petero.droidfish.book.CtgBook: java.io.File ctgFile> = $r4;
        $r10 = new java.io.File;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $i2 = i0 - 1;
        $r12 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r15);
        r0.<org.petero.droidfish.book.CtgBook: java.io.File ctbFile> = $r10;
        $r16 = new java.io.File;
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $i3 = i0 - 1;
        $r18 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("o");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r21);
        r0.<org.petero.droidfish.book.CtgBook: java.io.File ctoFile> = $r16;
        return;
    }

    public java.util.ArrayList getBookEntries(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.book.CtgBook r0;
        org.petero.droidfish.gamelogic.Position r1, $r27, $r29, $r30;
        java.io.RandomAccessFile r2, r3, r4, $r16, $r18, $r20;
        org.petero.droidfish.book.CtgBook$CtbFile r5, $r22;
        org.petero.droidfish.book.CtgBook$CtoFile r6, $r23;
        org.petero.droidfish.book.CtgBook$CtgFile r7, $r24;
        java.util.ArrayList r8, r46;
        org.petero.droidfish.book.CtgBook$PositionData r9, r13;
        boolean z0, z1, $z2, $z3, $z4;
        org.petero.droidfish.gamelogic.UndoInfo r10, $r25;
        java.util.Iterator r11;
        org.petero.droidfish.book.DroidBook$BookEntry r12, $r35, $r37, $r41, $r43;
        float f0, f1, $f2;
        int i0, i1, i2, $i3, i4, $i5;
        java.lang.Throwable r14, $r61;
        java.io.IOException r15, $r47, r48, $r49, r50, $r51, r52, $r53, r54, $r55, r56, $r57, r58, $r59, r60, $r62, $r63, r64, $r65, r66;
        java.io.File $r17, $r19, $r21;
        java.lang.Object $r26, $r34, $r36, $r40, $r42;
        org.petero.droidfish.gamelogic.Move $r28, $r31, $r38, $r39, $r44, $r45;
        org.petero.droidfish.book.BookOptions $r32, $r33;
        null_type n0;

        r0 := @this: org.petero.droidfish.book.CtgBook;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r2 = null;
        r3 = null;
        r4 = null;

     label0:
        $r16 = new java.io.RandomAccessFile;
        $r17 = r0.<org.petero.droidfish.book.CtgBook: java.io.File ctgFile>;
        specialinvoke $r16.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r17, "r");
        r2 = $r16;
        $r18 = new java.io.RandomAccessFile;
        $r19 = r0.<org.petero.droidfish.book.CtgBook: java.io.File ctbFile>;
        specialinvoke $r18.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r19, "r");
        r3 = $r18;
        $r20 = new java.io.RandomAccessFile;
        $r21 = r0.<org.petero.droidfish.book.CtgBook: java.io.File ctoFile>;
        specialinvoke $r20.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r21, "r");
        r4 = $r20;
        $r22 = new org.petero.droidfish.book.CtgBook$CtbFile;
        specialinvoke $r22.<org.petero.droidfish.book.CtgBook$CtbFile: void <init>(java.io.RandomAccessFile)>(r3);
        r5 = $r22;
        $r23 = new org.petero.droidfish.book.CtgBook$CtoFile;
        specialinvoke $r23.<org.petero.droidfish.book.CtgBook$CtoFile: void <init>(java.io.RandomAccessFile)>(r4);
        r6 = $r23;
        $r24 = new org.petero.droidfish.book.CtgBook$CtgFile;
        specialinvoke $r24.<org.petero.droidfish.book.CtgBook$CtgFile: void <init>(java.io.RandomAccessFile,org.petero.droidfish.book.CtgBook$CtbFile,org.petero.droidfish.book.CtgBook$CtoFile)>(r2, r5, r6);
        r7 = $r24;
        r8 = null;
        r9 = virtualinvoke r7.<org.petero.droidfish.book.CtgBook$CtgFile: org.petero.droidfish.book.CtgBook$PositionData getPositionData(org.petero.droidfish.gamelogic.Position)>(r1);
        if r9 == null goto label10;

        z0 = r9.<org.petero.droidfish.book.CtgBook$PositionData: boolean mirrorColor>;
        z1 = r9.<org.petero.droidfish.book.CtgBook$PositionData: boolean mirrorLeftRight>;
        r8 = virtualinvoke r9.<org.petero.droidfish.book.CtgBook$PositionData: java.util.ArrayList getBookMoves()>();
        $r25 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r25.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r10 = $r25;
        r11 = virtualinvoke r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label6;

        $r26 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
        r12 = (org.petero.droidfish.book.DroidBook$BookEntry) $r26;
        $r27 = r9.<org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.gamelogic.Position pos>;
        $r28 = r12.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        virtualinvoke $r27.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r28, r10);
        $r29 = r9.<org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.gamelogic.Position pos>;
        r13 = virtualinvoke r7.<org.petero.droidfish.book.CtgBook$CtgFile: org.petero.droidfish.book.CtgBook$PositionData getPositionData(org.petero.droidfish.gamelogic.Position)>($r29);
        $r30 = r9.<org.petero.droidfish.book.CtgBook$PositionData: org.petero.droidfish.gamelogic.Position pos>;
        $r31 = r12.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        virtualinvoke $r30.<org.petero.droidfish.gamelogic.Position: void unMakeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r31, r10);
        f0 = r12.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        if r13 != null goto label2;

        f1 = 0.0F;
        goto label5;

     label2:
        i0 = virtualinvoke r13.<org.petero.droidfish.book.CtgBook$PositionData: int getRecommendation()>();
        if i0 < 64 goto label3;

        if i0 >= 128 goto label3;

        $r32 = r0.<org.petero.droidfish.book.CtgBook: org.petero.droidfish.book.BookOptions options>;
        $z3 = $r32.<org.petero.droidfish.book.BookOptions: boolean tournamentMode>;
        if $z3 == 0 goto label4;

        f0 = 0.0F;
        goto label4;

     label3:
        if i0 < 128 goto label4;

        $r33 = r0.<org.petero.droidfish.book.CtgBook: org.petero.droidfish.book.BookOptions options>;
        $z4 = $r33.<org.petero.droidfish.book.BookOptions: boolean preferMainLines>;
        if $z4 == 0 goto label4;

        f0 = f0 * 10.0F;

     label4:
        i1 = virtualinvoke r13.<org.petero.droidfish.book.CtgBook$PositionData: int getOpponentScore()>();
        $f2 = (float) i1;
        f1 = f0 * $f2;

     label5:
        r12.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = f1;
        goto label1;

     label6:
        if z1 == 0 goto label8;

        i2 = 0;

     label7:
        $i3 = virtualinvoke r8.<java.util.ArrayList: int size()>();
        if i2 >= $i3 goto label8;

        $r34 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);
        $r35 = (org.petero.droidfish.book.DroidBook$BookEntry) $r34;
        $r36 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);
        $r37 = (org.petero.droidfish.book.DroidBook$BookEntry) $r36;
        $r38 = $r37.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        $r39 = staticinvoke <org.petero.droidfish.book.CtgBook: org.petero.droidfish.gamelogic.Move mirrorMoveLeftRight(org.petero.droidfish.gamelogic.Move)>($r38);
        $r35.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move> = $r39;
        i2 = i2 + 1;
        goto label7;

     label8:
        if z0 == 0 goto label10;

        i4 = 0;

     label9:
        $i5 = virtualinvoke r8.<java.util.ArrayList: int size()>();
        if i4 >= $i5 goto label10;

        $r40 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i4);
        $r41 = (org.petero.droidfish.book.DroidBook$BookEntry) $r40;
        $r42 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i4);
        $r43 = (org.petero.droidfish.book.DroidBook$BookEntry) $r42;
        $r44 = $r43.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        $r45 = staticinvoke <org.petero.droidfish.book.CtgBook: org.petero.droidfish.gamelogic.Move mirrorMoveColor(org.petero.droidfish.gamelogic.Move)>($r44);
        $r41.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move> = $r45;
        i4 = i4 + 1;
        goto label9;

     label10:
        r46 = r8;

     label11:
        if r2 == null goto label15;

     label12:
        virtualinvoke r2.<java.io.RandomAccessFile: void close()>();

     label13:
        goto label15;

     label14:
        $r47 := @caughtexception;
        r48 = $r47;

     label15:
        if r3 == null goto label19;

     label16:
        virtualinvoke r3.<java.io.RandomAccessFile: void close()>();

     label17:
        goto label19;

     label18:
        $r49 := @caughtexception;
        r50 = $r49;

     label19:
        if r4 == null goto label23;

     label20:
        virtualinvoke r4.<java.io.RandomAccessFile: void close()>();

     label21:
        goto label23;

     label22:
        $r51 := @caughtexception;
        r52 = $r51;

     label23:
        return r46;

     label24:
        $r53 := @caughtexception;

     label25:
        r54 = $r53;
        n0 = null;

     label26:
        if r2 == null goto label30;

     label27:
        virtualinvoke r2.<java.io.RandomAccessFile: void close()>();

     label28:
        goto label30;

     label29:
        $r55 := @caughtexception;
        r56 = $r55;

     label30:
        if r3 == null goto label34;

     label31:
        virtualinvoke r3.<java.io.RandomAccessFile: void close()>();

     label32:
        goto label34;

     label33:
        $r57 := @caughtexception;
        r58 = $r57;

     label34:
        if r4 == null goto label38;

     label35:
        virtualinvoke r4.<java.io.RandomAccessFile: void close()>();

     label36:
        goto label38;

     label37:
        $r59 := @caughtexception;
        r60 = $r59;

     label38:
        return n0;

     label39:
        $r61 := @caughtexception;

     label40:
        r14 = $r61;

     label41:
        if r2 == null goto label45;

     label42:
        virtualinvoke r2.<java.io.RandomAccessFile: void close()>();

     label43:
        goto label45;

     label44:
        $r62 := @caughtexception;
        r15 = $r62;

     label45:
        if r3 == null goto label49;

     label46:
        virtualinvoke r3.<java.io.RandomAccessFile: void close()>();

     label47:
        goto label49;

     label48:
        $r63 := @caughtexception;
        r64 = $r63;

     label49:
        if r4 == null goto label53;

     label50:
        virtualinvoke r4.<java.io.RandomAccessFile: void close()>();

     label51:
        goto label53;

     label52:
        $r65 := @caughtexception;
        r66 = $r65;

     label53:
        throw r14;

        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.io.IOException from label0 to label11 with label24;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.io.IOException from label31 to label32 with label33;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.lang.Throwable from label0 to label11 with label39;
        catch java.lang.Throwable from label25 to label26 with label39;
        catch java.io.IOException from label42 to label43 with label44;
        catch java.io.IOException from label46 to label47 with label48;
        catch java.io.IOException from label50 to label51 with label52;
        catch java.lang.Throwable from label40 to label41 with label39;
    }

    private static final byte[] readBytes(java.io.RandomAccessFile, int, int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0, i1;
        byte[] r1;
        long $l2;

        r0 := @parameter0: java.io.RandomAccessFile;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r1 = newarray (byte)[i1];
        $l2 = (long) i0;
        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>($l2);
        virtualinvoke r0.<java.io.RandomAccessFile: void readFully(byte[])>(r1);
        return r1;
    }

    private static final int extractInt(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, i4, $i5, $i6;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 = 0;
        i3 = 0;

     label0:
        if i3 >= i1 goto label2;

        $i5 = i0 + i3;
        i4 = r0[$i5];
        if i4 >= 0 goto label1;

        i4 = i4 + 256;

     label1:
        $i6 = i2 << 8;
        i2 = $i6 + i4;
        i3 = i3 + 1;
        goto label0;

     label2:
        return i2;
    }

    private static final byte[] positionToByteArray(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        org.petero.droidfish.book.CtgBook$BitVector $r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, i9, $i10, $i11, $i12, $i13, $i14, $i15;
        byte[] r3;
        boolean $z0, z1, $z2, z3, $z4, $z5, $z6, $z7;
        byte $b7, $b8, $b16;
        java.lang.RuntimeException $r4;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r1 = new org.petero.droidfish.book.CtgBook$BitVector;
        specialinvoke $r1.<org.petero.droidfish.book.CtgBook$BitVector: void <init>(org.petero.droidfish.book.CtgBook$1)>(null);
        r2 = $r1;
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(0, 8);
        i0 = 0;

     label0:
        if i0 >= 8 goto label17;

        i1 = 0;

     label1:
        if i1 >= 8 goto label16;

        $i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i0, i1);
        i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i4);
        tableswitch(i2)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            case 7: goto label9;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            case 12: goto label14;
            default: goto label15;
        };

     label2:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(0, 1);
        goto label15;

     label3:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(32, 6);
        goto label15;

     label4:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(34, 6);
        goto label15;

     label5:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(22, 5);
        goto label15;

     label6:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(20, 5);
        goto label15;

     label7:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(18, 5);
        goto label15;

     label8:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(6, 3);
        goto label15;

     label9:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(33, 6);
        goto label15;

     label10:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(35, 6);
        goto label15;

     label11:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(23, 5);
        goto label15;

     label12:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(21, 5);
        goto label15;

     label13:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(19, 5);
        goto label15;

     label14:
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>(7, 3);

     label15:
        i1 = i1 + 1;
        goto label1;

     label16:
        i0 = i0 + 1;
        goto label0;

     label17:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void fixupEPSquare(org.petero.droidfish.gamelogic.Position)>(r0);
        $i5 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if $i5 == -1 goto label18;

        $z0 = 1;
        goto label19;

     label18:
        $z0 = 0;

     label19:
        z1 = $z0;
        $i6 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getCastleMask()>();
        if $i6 == 0 goto label20;

        $z2 = 1;
        goto label21;

     label20:
        $z2 = 0;

     label21:
        z3 = $z2;
        if z1 != 0 goto label22;

        if z3 != 0 goto label22;

        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBit(boolean)>(0);

     label22:
        if z1 == 0 goto label23;

        $b7 = 3;
        goto label24;

     label23:
        $b7 = 0;

     label24:
        if z3 == 0 goto label25;

        $b8 = 4;
        goto label26;

     label25:
        $b8 = 0;

     label26:
        i9 = $b7 + $b8;

     label27:
        $i10 = virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: int padBits()>();
        if $i10 == i9 goto label28;

        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBit(boolean)>(0);
        goto label27;

     label28:
        if z1 == 0 goto label29;

        $i11 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        $i12 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i11);
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBits(int,int)>($i12, 3);

     label29:
        if z3 == 0 goto label30;

        $z4 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean h8Castle()>();
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBit(boolean)>($z4);
        $z5 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean a8Castle()>();
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBit(boolean)>($z5);
        $z6 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean h1Castle()>();
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBit(boolean)>($z6);
        $z7 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean a1Castle()>();
        virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: void addBit(boolean)>($z7);

     label30:
        $i13 = staticinvoke <org.petero.droidfish.book.CtgBook$BitVector: int access$300(org.petero.droidfish.book.CtgBook$BitVector)>(r2);
        $i14 = $i13 & 7;
        if $i14 == 0 goto label31;

        $r4 = new java.lang.RuntimeException;
        specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();
        throw $r4;

     label31:
        $i15 = staticinvoke <org.petero.droidfish.book.CtgBook$BitVector: int access$300(org.petero.droidfish.book.CtgBook$BitVector)>(r2);
        i3 = $i15 / 8;
        if z1 == 0 goto label32;

        i3 = i3 | 32;

     label32:
        if z3 == 0 goto label33;

        i3 = i3 | 64;

     label33:
        r3 = virtualinvoke r2.<org.petero.droidfish.book.CtgBook$BitVector: byte[] toByteArray()>();
        $b16 = (byte) i3;
        r3[0] = $b16;
        return r3;
    }

    private static final int mirrorSquareColor(int)
    {
        int i0, i1, i2, $i3, $i4;

        i0 := @parameter0: int;
        i1 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i0);
        $i3 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i0);
        i2 = 7 - $i3;
        $i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i1, i2);
        return $i4;
    }

    private static final int mirrorPieceColor(int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;
        $z0 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i0);
        if $z0 == 0 goto label0;

        i1 = staticinvoke <org.petero.droidfish.gamelogic.Piece: int makeBlack(int)>(i0);
        goto label1;

     label0:
        i1 = staticinvoke <org.petero.droidfish.gamelogic.Piece: int makeWhite(int)>(i0);

     label1:
        return i1;
    }

    private static final org.petero.droidfish.gamelogic.Position mirrorPosColor(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0, $r1, r2;
        int i0, i1, i2, i3, i5, i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        byte b4;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r1 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r0);
        r2 = $r1;
        i0 = 0;

     label0:
        if i0 >= 64 goto label1;

        i1 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorSquareColor(int)>(i0);
        i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i0);
        i3 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorPieceColor(int)>(i2);
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>(i1, i3);
        i0 = i0 + 1;
        goto label0;

     label1:
        $z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z0 != 0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setWhiteMove(boolean)>($z1);
        b4 = 0;
        $z2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean a1Castle()>();
        if $z2 == 0 goto label4;

        b4 = b4 | 4;

     label4:
        $z3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean h1Castle()>();
        if $z3 == 0 goto label5;

        b4 = b4 | 8;

     label5:
        $z4 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean a8Castle()>();
        if $z4 == 0 goto label6;

        b4 = b4 | 1;

     label6:
        $z5 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean h8Castle()>();
        if $z5 == 0 goto label7;

        b4 = b4 | 2;

     label7:
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>(b4);
        i5 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if i5 < 0 goto label8;

        i6 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorSquareColor(int)>(i5);
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setEpSquare(int)>(i6);

     label8:
        $i7 = r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        r2.<org.petero.droidfish.gamelogic.Position: int halfMoveClock> = $i7;
        $i8 = r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        r2.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter> = $i8;
        return r2;
    }

    private static final org.petero.droidfish.gamelogic.Move mirrorMoveColor(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.Move r0, r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Move;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.Move: void <init>(org.petero.droidfish.gamelogic.Move)>(r0);
        r1 = $r2;
        $i0 = r0.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i1 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorSquareColor(int)>($i0);
        r1.<org.petero.droidfish.gamelogic.Move: int 'from'> = $i1;
        $i2 = r0.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i3 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorSquareColor(int)>($i2);
        r1.<org.petero.droidfish.gamelogic.Move: int 'to'> = $i3;
        $i4 = r0.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        $i5 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorPieceColor(int)>($i4);
        r1.<org.petero.droidfish.gamelogic.Move: int promoteTo> = $i5;
        return r1;
    }

    private static final int mirrorSquareLeftRight(int)
    {
        int i0, i1, i2, $i3, $i4;

        i0 := @parameter0: int;
        $i3 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i0);
        i1 = 7 - $i3;
        i2 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i0);
        $i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i1, i2);
        return $i4;
    }

    private static final org.petero.droidfish.gamelogic.Position mirrorPosLeftRight(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0, $r1, r2;
        int i0, i1, i2, i3, i4, $i5, $i6;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r1 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r0);
        r2 = $r1;
        i0 = 0;

     label0:
        if i0 >= 64 goto label1;

        i1 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorSquareLeftRight(int)>(i0);
        i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i0);
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>(i1, i2);
        i0 = i0 + 1;
        goto label0;

     label1:
        i3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if i3 < 0 goto label2;

        i4 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorSquareLeftRight(int)>(i3);
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setEpSquare(int)>(i4);

     label2:
        $i5 = r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        r2.<org.petero.droidfish.gamelogic.Position: int halfMoveClock> = $i5;
        $i6 = r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        r2.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter> = $i6;
        return r2;
    }

    private static final org.petero.droidfish.gamelogic.Move mirrorMoveLeftRight(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.Move r0, r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Move;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.Move: void <init>(org.petero.droidfish.gamelogic.Move)>(r0);
        r1 = $r2;
        $i0 = r0.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i1 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorSquareLeftRight(int)>($i0);
        r1.<org.petero.droidfish.gamelogic.Move: int 'from'> = $i1;
        $i2 = r0.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i3 = staticinvoke <org.petero.droidfish.book.CtgBook: int mirrorSquareLeftRight(int)>($i2);
        r1.<org.petero.droidfish.gamelogic.Move: int 'to'> = $i3;
        $i4 = r0.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        r1.<org.petero.droidfish.gamelogic.Move: int promoteTo> = $i4;
        return r1;
    }

    static byte[] access$000(java.io.RandomAccessFile, int, int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0, i1;
        byte[] $r1;

        r0 := @parameter0: java.io.RandomAccessFile;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $r1 = staticinvoke <org.petero.droidfish.book.CtgBook: byte[] readBytes(java.io.RandomAccessFile,int,int)>(r0, i0, i1);
        return $r1;
    }

    static int access$100(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2;

        r0 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $i2 = staticinvoke <org.petero.droidfish.book.CtgBook: int extractInt(byte[],int,int)>(r0, i0, i1);
        return $i2;
    }

    static org.petero.droidfish.gamelogic.Position access$400(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0, $r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r1 = staticinvoke <org.petero.droidfish.book.CtgBook: org.petero.droidfish.gamelogic.Position mirrorPosColor(org.petero.droidfish.gamelogic.Position)>(r0);
        return $r1;
    }

    static org.petero.droidfish.gamelogic.Position access$500(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0, $r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r1 = staticinvoke <org.petero.droidfish.book.CtgBook: org.petero.droidfish.gamelogic.Position mirrorPosLeftRight(org.petero.droidfish.gamelogic.Position)>(r0);
        return $r1;
    }

    static byte[] access$600(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        byte[] $r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r1 = staticinvoke <org.petero.droidfish.book.CtgBook: byte[] positionToByteArray(org.petero.droidfish.gamelogic.Position)>(r0);
        return $r1;
    }
}
class org.petero.droidfish.book.DroidBook$1 extends java.lang.Object implements java.util.Comparator
{
    final org.petero.droidfish.book.DroidBook this$0;

    void <init>(org.petero.droidfish.book.DroidBook)
    {
        org.petero.droidfish.book.DroidBook$1 r0;
        org.petero.droidfish.book.DroidBook r1;

        r0 := @this: org.petero.droidfish.book.DroidBook$1;
        r1 := @parameter0: org.petero.droidfish.book.DroidBook;
        r0.<org.petero.droidfish.book.DroidBook$1: org.petero.droidfish.book.DroidBook this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public int compare(org.petero.droidfish.book.DroidBook$BookEntry, org.petero.droidfish.book.DroidBook$BookEntry)
    {
        org.petero.droidfish.book.DroidBook$1 r0;
        org.petero.droidfish.book.DroidBook$BookEntry r1, r2;
        double d0;
        java.lang.String r3, r4;
        float $f0, $f1, $f2;
        byte $b0, $b1, $b2;
        org.petero.droidfish.gamelogic.Move $r5, $r6;
        int $i3;

        r0 := @this: org.petero.droidfish.book.DroidBook$1;
        r1 := @parameter0: org.petero.droidfish.book.DroidBook$BookEntry;
        r2 := @parameter1: org.petero.droidfish.book.DroidBook$BookEntry;
        $f0 = r2.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        $f1 = r1.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        $f2 = $f0 - $f1;
        d0 = (double) $f2;
        $b0 = d0 cmpl 0.0;
        if $b0 == 0 goto label2;

        $b1 = d0 cmpl 0.0;
        if $b1 <= 0 goto label0;

        $b2 = 1;
        goto label1;

     label0:
        $b2 = -1;

     label1:
        return $b2;

     label2:
        $r5 = r1.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        r3 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>($r5);
        $r6 = r2.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        r4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>($r6);
        $i3 = virtualinvoke r3.<java.lang.String: int compareTo(java.lang.String)>(r4);
        return $i3;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.petero.droidfish.book.DroidBook$1 r0;
        java.lang.Object r1, r2;
        org.petero.droidfish.book.DroidBook$BookEntry $r3, $r4;
        int $i0;

        r0 := @this: org.petero.droidfish.book.DroidBook$1;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        $r3 = (org.petero.droidfish.book.DroidBook$BookEntry) r1;
        $r4 = (org.petero.droidfish.book.DroidBook$BookEntry) r2;
        $i0 = virtualinvoke r0.<org.petero.droidfish.book.DroidBook$1: int compare(org.petero.droidfish.book.DroidBook$BookEntry,org.petero.droidfish.book.DroidBook$BookEntry)>($r3, $r4);
        return $i0;
    }
}
final class org.petero.droidfish.book.DroidBook$BookEntry extends java.lang.Object
{
    org.petero.droidfish.gamelogic.Move move;
    float weight;

    void <init>(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.book.DroidBook$BookEntry r0;
        org.petero.droidfish.gamelogic.Move r1;

        r0 := @this: org.petero.droidfish.book.DroidBook$BookEntry;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move> = r1;
        r0.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = 1.0F;
        return;
    }

    public java.lang.String toString()
    {
        org.petero.droidfish.book.DroidBook$BookEntry r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r6, $r7;
        org.petero.droidfish.gamelogic.Move $r2;
        java.lang.String $r3, $r8;
        float $f0;

        r0 := @this: org.petero.droidfish.book.DroidBook$BookEntry;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = r0.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        $r3 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>($r2);
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");
        $f0 = r0.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;
    }
}
public final class org.petero.droidfish.book.DroidBook extends java.lang.Object
{
    private java.util.Random rndGen;
    private org.petero.droidfish.book.IOpeningBook externalBook;
    private org.petero.droidfish.book.IOpeningBook internalBook;
    private org.petero.droidfish.book.BookOptions options;
    private static final org.petero.droidfish.book.DroidBook INSTANCE;

    public static org.petero.droidfish.book.DroidBook getInstance()
    {
        org.petero.droidfish.book.DroidBook $r0;

        $r0 = <org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.DroidBook INSTANCE>;
        return $r0;
    }

    private void <init>()
    {
        org.petero.droidfish.book.DroidBook r0;
        java.security.SecureRandom $r1;
        org.petero.droidfish.book.NullBook $r2;
        org.petero.droidfish.book.InternalBook $r3;
        java.util.Random $r4;
        long $l0;

        r0 := @this: org.petero.droidfish.book.DroidBook;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.security.SecureRandom;
        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();
        r0.<org.petero.droidfish.book.DroidBook: java.util.Random rndGen> = $r1;
        $r2 = new org.petero.droidfish.book.NullBook;
        specialinvoke $r2.<org.petero.droidfish.book.NullBook: void <init>()>();
        r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook externalBook> = $r2;
        $r3 = new org.petero.droidfish.book.InternalBook;
        specialinvoke $r3.<org.petero.droidfish.book.InternalBook: void <init>()>();
        r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook internalBook> = $r3;
        r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.BookOptions options> = null;
        $r4 = r0.<org.petero.droidfish.book.DroidBook: java.util.Random rndGen>;
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        virtualinvoke $r4.<java.util.Random: void setSeed(long)>($l0);
        return;
    }

    public final synchronized void setOptions(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.book.DroidBook r0;
        org.petero.droidfish.book.BookOptions r1;
        boolean $z0, $z1;
        org.petero.droidfish.book.CtgBook $r2;
        org.petero.droidfish.book.PolyglotBook $r3;
        org.petero.droidfish.book.NullBook $r4;
        org.petero.droidfish.book.IOpeningBook $r5, $r6;

        r0 := @this: org.petero.droidfish.book.DroidBook;
        r1 := @parameter0: org.petero.droidfish.book.BookOptions;
        r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.BookOptions options> = r1;
        $z0 = staticinvoke <org.petero.droidfish.book.CtgBook: boolean canHandle(org.petero.droidfish.book.BookOptions)>(r1);
        if $z0 == 0 goto label0;

        $r2 = new org.petero.droidfish.book.CtgBook;
        specialinvoke $r2.<org.petero.droidfish.book.CtgBook: void <init>()>();
        r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook externalBook> = $r2;
        goto label2;

     label0:
        $z1 = staticinvoke <org.petero.droidfish.book.PolyglotBook: boolean canHandle(org.petero.droidfish.book.BookOptions)>(r1);
        if $z1 == 0 goto label1;

        $r3 = new org.petero.droidfish.book.PolyglotBook;
        specialinvoke $r3.<org.petero.droidfish.book.PolyglotBook: void <init>()>();
        r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook externalBook> = $r3;
        goto label2;

     label1:
        $r4 = new org.petero.droidfish.book.NullBook;
        specialinvoke $r4.<org.petero.droidfish.book.NullBook: void <init>()>();
        r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook externalBook> = $r4;

     label2:
        $r5 = r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook externalBook>;
        interfaceinvoke $r5.<org.petero.droidfish.book.IOpeningBook: void setOptions(org.petero.droidfish.book.BookOptions)>(r1);
        $r6 = r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook internalBook>;
        interfaceinvoke $r6.<org.petero.droidfish.book.IOpeningBook: void setOptions(org.petero.droidfish.book.BookOptions)>(r1);
        return;
    }

    public final synchronized org.petero.droidfish.gamelogic.Move getBookMove(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.book.DroidBook r0;
        org.petero.droidfish.gamelogic.Position r1;
        java.util.ArrayList r2, r3;
        double d0, $d1, $d2, $d3, d4, d5, $d6, $d7;
        int i0, i1, i2, $i3, $i4, $i7;
        org.petero.droidfish.book.DroidBook$BookEntry r4, $r12, $r15, $r17, $r20;
        org.petero.droidfish.book.BookOptions $r5, $r6;
        org.petero.droidfish.book.IOpeningBook $r7;
        org.petero.droidfish.gamelogic.MoveGen $r8;
        java.lang.Object $r9, $r11, $r14, $r16, $r19;
        org.petero.droidfish.gamelogic.Move $r10, $r18, $r21;
        boolean $z0;
        float $f0, $f1;
        byte $b5, $b6;
        java.util.Random $r13;

        r0 := @this: org.petero.droidfish.book.DroidBook;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r5 = r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.BookOptions options>;
        if $r5 == null goto label0;

        $i3 = r1.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $r6 = r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.BookOptions options>;
        $i4 = $r6.<org.petero.droidfish.book.BookOptions: int maxLength>;
        if $i3 <= $i4 goto label0;

        return null;

     label0:
        $r7 = specialinvoke r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook getBook()>();
        r2 = interfaceinvoke $r7.<org.petero.droidfish.book.IOpeningBook: java.util.ArrayList getBookEntries(org.petero.droidfish.gamelogic.Position)>(r1);
        if r2 != null goto label1;

        return null;

     label1:
        $r8 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r8.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        r3 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r1);
        d0 = 0.0;
        i0 = interfaceinvoke r2.<java.util.List: int size()>();
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);
        r4 = (org.petero.droidfish.book.DroidBook$BookEntry) $r9;
        $r10 = r4.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        $z0 = virtualinvoke r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r10);
        if $z0 != 0 goto label3;

        return null;

     label3:
        $r11 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);
        $r12 = (org.petero.droidfish.book.DroidBook$BookEntry) $r11;
        $f0 = $r12.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        $d1 = (double) $f0;
        $d2 = specialinvoke r0.<org.petero.droidfish.book.DroidBook: double scaleWeight(double)>($d1);
        d0 = d0 + $d2;
        i1 = i1 + 1;
        goto label2;

     label4:
        $b5 = d0 cmpg 0.0;
        if $b5 > 0 goto label5;

        return null;

     label5:
        $r13 = r0.<org.petero.droidfish.book.DroidBook: java.util.Random rndGen>;
        $d3 = virtualinvoke $r13.<java.util.Random: double nextDouble()>();
        d4 = $d3 * d0;
        d5 = 0.0;
        i2 = 0;

     label6:
        if i2 >= i0 goto label8;

        $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);
        $r15 = (org.petero.droidfish.book.DroidBook$BookEntry) $r14;
        $f1 = $r15.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        $d6 = (double) $f1;
        $d7 = specialinvoke r0.<org.petero.droidfish.book.DroidBook: double scaleWeight(double)>($d6);
        d5 = d5 + $d7;
        $b6 = d4 cmpg d5;
        if $b6 >= 0 goto label7;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);
        $r17 = (org.petero.droidfish.book.DroidBook$BookEntry) $r16;
        $r18 = $r17.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        return $r18;

     label7:
        i2 = i2 + 1;
        goto label6;

     label8:
        $i7 = i0 - 1;
        $r19 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i7);
        $r20 = (org.petero.droidfish.book.DroidBook$BookEntry) $r19;
        $r21 = $r20.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        return $r21;
    }

    public final synchronized org.petero.droidfish.gamelogic.Pair getAllBookMoves(org.petero.droidfish.gamelogic.Position, boolean)
    {
        org.petero.droidfish.book.DroidBook r0;
        org.petero.droidfish.gamelogic.Position r1;
        boolean z0, $z1, $z2, z3, $z4;
        java.lang.StringBuilder $r2, r3;
        java.util.ArrayList r4, r5, r6, $r12;
        int i0, i1, $i2;
        org.petero.droidfish.book.DroidBook$BookEntry r7, r8, r9;
        org.petero.droidfish.gamelogic.Move r10, $r16;
        java.lang.String r11, $r23, $r26, $r31;
        org.petero.droidfish.book.IOpeningBook $r13;
        org.petero.droidfish.gamelogic.MoveGen $r14;
        java.lang.Object $r15, $r19, $r21;
        org.petero.droidfish.book.DroidBook$1 $r17;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.util.Iterator r18, r20;
        float $f0, $f1;
        byte $b3;
        long $l4;
        org.petero.droidfish.gamelogic.Pair $r30;

        r0 := @this: org.petero.droidfish.book.DroidBook;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        z0 := @parameter1: boolean;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        r3 = $r2;
        $r12 = new java.util.ArrayList;
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();
        r4 = $r12;
        $r13 = specialinvoke r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook getBook()>();
        r5 = interfaceinvoke $r13.<org.petero.droidfish.book.IOpeningBook: java.util.ArrayList getBookEntries(org.petero.droidfish.gamelogic.Position)>(r1);
        if r5 == null goto label2;

        $r14 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r14.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        r6 = virtualinvoke $r14.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r1);
        i0 = 0;

     label0:
        $i2 = virtualinvoke r5.<java.util.ArrayList: int size()>();
        if i0 >= $i2 goto label2;

        $r15 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        r7 = (org.petero.droidfish.book.DroidBook$BookEntry) $r15;
        $r16 = r7.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        $z1 = virtualinvoke r6.<java.util.ArrayList: boolean contains(java.lang.Object)>($r16);
        if $z1 != 0 goto label1;

        r5 = null;
        goto label2;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        if r5 == null goto label9;

        $r17 = new org.petero.droidfish.book.DroidBook$1;
        specialinvoke $r17.<org.petero.droidfish.book.DroidBook$1: void <init>(org.petero.droidfish.book.DroidBook)>(r0);
        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r5, $r17);
        d0 = 0.0;
        r18 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label4;

        $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();
        r8 = (org.petero.droidfish.book.DroidBook$BookEntry) $r19;
        $f0 = r8.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        $d1 = (double) $f0;
        $d2 = specialinvoke r0.<org.petero.droidfish.book.DroidBook: double scaleWeight(double)>($d1);
        d0 = d0 + $d2;
        goto label3;

     label4:
        $b3 = d0 cmpg 0.0;
        if $b3 > 0 goto label5;

        d0 = 1.0;

     label5:
        z3 = 1;
        r20 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label6:
        $z4 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();
        if $z4 == 0 goto label9;

        $r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();
        r9 = (org.petero.droidfish.book.DroidBook$BookEntry) $r21;
        r10 = r9.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r10);
        r11 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean)>(r1, r10, 0, z0);
        if z3 == 0 goto label7;

        z3 = 0;
        goto label8;

     label7:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label8:
        $r23 = <org.petero.droidfish.Util: java.lang.String boldStart>;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);
        $r26 = <org.petero.droidfish.Util: java.lang.String boldStop>;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
        $f1 = r9.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        $d3 = (double) $f1;
        $d4 = specialinvoke r0.<org.petero.droidfish.book.DroidBook: double scaleWeight(double)>($d3);
        $d5 = $d4 * 100.0;
        $d6 = $d5 / d0;
        $l4 = staticinvoke <java.lang.Math: long round(double)>($d6);
        i1 = (int) $l4;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        goto label6;

     label9:
        $r30 = new org.petero.droidfish.gamelogic.Pair;
        $r31 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r30.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>($r31, r4);
        return $r30;
    }

    private final double scaleWeight(double)
    {
        org.petero.droidfish.book.DroidBook r0;
        double d0, $d1, $d2, $d3, $d4;
        byte $b0;
        org.petero.droidfish.book.BookOptions $r1, $r2;

        r0 := @this: org.petero.droidfish.book.DroidBook;
        d0 := @parameter0: double;
        $b0 = d0 cmpg 0.0;
        if $b0 > 0 goto label0;

        return 0.0;

     label0:
        $r1 = r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.BookOptions options>;
        if $r1 != null goto label1;

        return d0;

     label1:
        $r2 = r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.BookOptions options>;
        $d1 = $r2.<org.petero.droidfish.book.BookOptions: double random>;
        $d2 = neg $d1;
        $d3 = staticinvoke <java.lang.Math: double exp(double)>($d2);
        $d4 = staticinvoke <java.lang.Math: double pow(double,double)>(d0, $d3);
        return $d4;
    }

    private final org.petero.droidfish.book.IOpeningBook getBook()
    {
        org.petero.droidfish.book.DroidBook r0;
        org.petero.droidfish.book.IOpeningBook $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.book.DroidBook;
        $r1 = r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook externalBook>;
        $z0 = interfaceinvoke $r1.<org.petero.droidfish.book.IOpeningBook: boolean enabled()>();
        if $z0 == 0 goto label0;

        $r2 = r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook externalBook>;
        return $r2;

     label0:
        $r3 = r0.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.IOpeningBook internalBook>;
        return $r3;
    }

    static void <clinit>()
    {
        org.petero.droidfish.book.DroidBook $r0;

        $r0 = new org.petero.droidfish.book.DroidBook;
        specialinvoke $r0.<org.petero.droidfish.book.DroidBook: void <init>()>();
        <org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.DroidBook INSTANCE> = $r0;
        return;
    }
}
interface  org.petero.droidfish.book.IOpeningBook extends java.lang.Object
{

    public abstract boolean enabled();

    public abstract void setOptions(org.petero.droidfish.book.BookOptions);

    public abstract java.util.ArrayList getBookEntries(org.petero.droidfish.gamelogic.Position);
}
class org.petero.droidfish.book.InternalBook$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.book.InternalBook this$0;

    void <init>(org.petero.droidfish.book.InternalBook)
    {
        org.petero.droidfish.book.InternalBook$1 r0;
        org.petero.droidfish.book.InternalBook r1;

        r0 := @this: org.petero.droidfish.book.InternalBook$1;
        r1 := @parameter0: org.petero.droidfish.book.InternalBook;
        r0.<org.petero.droidfish.book.InternalBook$1: org.petero.droidfish.book.InternalBook this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.book.InternalBook$1 r0;
        org.petero.droidfish.book.InternalBook $r1;

        r0 := @this: org.petero.droidfish.book.InternalBook$1;
        $r1 = r0.<org.petero.droidfish.book.InternalBook$1: org.petero.droidfish.book.InternalBook this$0>;
        staticinvoke <org.petero.droidfish.book.InternalBook: void access$000(org.petero.droidfish.book.InternalBook)>($r1);
        return;
    }
}
final class org.petero.droidfish.book.InternalBook extends java.lang.Object implements org.petero.droidfish.book.IOpeningBook
{
    private static java.util.HashMap bookMap;
    private static int numBookMoves;

    void <init>()
    {
        org.petero.droidfish.book.InternalBook r0;
        org.petero.droidfish.book.InternalBook$1 $r1;
        java.lang.Thread r2, $r3;

        r0 := @this: org.petero.droidfish.book.InternalBook;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r3 = new java.lang.Thread;
        $r1 = new org.petero.droidfish.book.InternalBook$1;
        specialinvoke $r1.<org.petero.droidfish.book.InternalBook$1: void <init>(org.petero.droidfish.book.InternalBook)>(r0);
        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);
        r2 = $r3;
        virtualinvoke r2.<java.lang.Thread: void setPriority(int)>(1);
        virtualinvoke r2.<java.lang.Thread: void start()>();
        return;
    }

    static boolean canHandle(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean enabled()
    {
        org.petero.droidfish.book.InternalBook r0;

        r0 := @this: org.petero.droidfish.book.InternalBook;
        return 1;
    }

    public java.util.ArrayList getBookEntries(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.book.InternalBook r0;
        org.petero.droidfish.gamelogic.Position r1;
        java.util.ArrayList r2, r3, $r10;
        java.util.Iterator r4;
        org.petero.droidfish.book.DroidBook$BookEntry r5, r6, $r12;
        java.util.HashMap $r7;
        long $l0;
        java.lang.Long $r8;
        java.lang.Object $r9, $r11;
        boolean $z0;
        org.petero.droidfish.gamelogic.Move $r13;
        float $f0, $f1, $f2, $f3;

        r0 := @this: org.petero.droidfish.book.InternalBook;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        specialinvoke r0.<org.petero.droidfish.book.InternalBook: void initInternalBook()>();
        $r7 = <org.petero.droidfish.book.InternalBook: java.util.HashMap bookMap>;
        $l0 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: long zobristHash()>();
        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);
        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);
        r2 = (java.util.ArrayList) $r9;
        if r2 != null goto label0;

        return null;

     label0:
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r3 = $r10;
        r4 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.petero.droidfish.book.DroidBook$BookEntry) $r11;
        $r12 = new org.petero.droidfish.book.DroidBook$BookEntry;
        $r13 = r5.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        specialinvoke $r12.<org.petero.droidfish.book.DroidBook$BookEntry: void <init>(org.petero.droidfish.gamelogic.Move)>($r13);
        r6 = $r12;
        $f0 = r5.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        $f1 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f0);
        $f2 = $f1 * 100.0F;
        $f3 = $f2 + 1.0F;
        r6.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = $f3;
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);
        goto label1;

     label2:
        return r3;
    }

    public void setOptions(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.book.InternalBook r0;
        org.petero.droidfish.book.BookOptions r1;

        r0 := @this: org.petero.droidfish.book.InternalBook;
        r1 := @parameter0: org.petero.droidfish.book.BookOptions;
        return;
    }

    private final synchronized void initInternalBook()
    {
        org.petero.droidfish.book.InternalBook r0;
        int $i0, i1, i2, i3, i4, i5, i6, i7, i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.io.InputStream r1;
        java.util.ArrayList r2, $r9;
        byte[] r3;
        org.petero.droidfish.gamelogic.UndoInfo r4, $r14;
        boolean z0, $z2, $z3;
        org.petero.droidfish.gamelogic.Move r5, $r20;
        java.util.HashMap $r6;
        java.lang.Class $r7;
        java.io.IOException $r8, $r24, r25;
        byte $b9;
        java.lang.Byte $r10, $r16, $r18;
        org.petero.droidfish.gamelogic.Position r11, $r12, r13, $r19;
        java.lang.Object $r15, $r17;
        org.petero.droidfish.gamelogic.ChessParseError $r21, r22;
        java.lang.RuntimeException $r23, $r27;
        java.io.PrintStream $r26;

        r0 := @this: org.petero.droidfish.book.InternalBook;
        $i0 = <org.petero.droidfish.book.InternalBook: int numBookMoves>;
        if $i0 < 0 goto label0;

        return;

     label0:
        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>()>();
        <org.petero.droidfish.book.InternalBook: java.util.HashMap bookMap> = $r6;
        <org.petero.droidfish.book.InternalBook: int numBookMoves> = 0;

     label1:
        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        r1 = virtualinvoke $r7.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/book.bin");
        if r1 != null goto label2;

        $r8 = new java.io.IOException;
        specialinvoke $r8.<java.io.IOException: void <init>()>();
        throw $r8;

     label2:
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(8192);
        r2 = $r9;
        r3 = newarray (byte)[1024];

     label3:
        i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r3);
        if i1 > 0 goto label4;

        goto label7;

     label4:
        i2 = 0;

     label5:
        if i2 >= i1 goto label6;

        $b9 = r3[i2];
        $r10 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b9);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);
        i2 = i2 + 1;
        goto label5;

     label6:
        goto label3;

     label7:
        virtualinvoke r1.<java.io.InputStream: void close()>();
        r11 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        $r12 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r12.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r11);
        r13 = $r12;
        $r14 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r14.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r4 = $r14;
        i3 = interfaceinvoke r2.<java.util.List: int size()>();
        i4 = 0;

     label8:
        if i4 >= i3 goto label16;

        $r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i4);
        $r16 = (java.lang.Byte) $r15;
        i5 = virtualinvoke $r16.<java.lang.Byte: byte byteValue()>();
        if i5 >= 0 goto label9;

        i5 = i5 + 256;

     label9:
        $i10 = i4 + 1;
        $r17 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i10);
        $r18 = (java.lang.Byte) $r17;
        i6 = virtualinvoke $r18.<java.lang.Byte: byte byteValue()>();
        if i6 >= 0 goto label10;

        i6 = i6 + 256;

     label10:
        $i11 = i5 << 8;
        i7 = $i11 + i6;
        if i7 != 0 goto label11;

        $r19 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r19.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r11);
        r13 = $r19;
        goto label15;

     label11:
        $i12 = i7 >> 15;
        $i13 = $i12 & 1;
        if $i13 == 0 goto label12;

        $z2 = 1;
        goto label13;

     label12:
        $z2 = 0;

     label13:
        z0 = $z2;
        $i14 = i7 >> 12;
        i8 = $i14 & 7;
        $r20 = new org.petero.droidfish.gamelogic.Move;
        $i15 = i7 & 63;
        $i16 = i7 >> 6;
        $i17 = $i16 & 63;
        $z3 = r13.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $i18 = staticinvoke <org.petero.droidfish.book.InternalBook: int promToPiece(int,boolean)>(i8, $z3);
        specialinvoke $r20.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>($i15, $i17, $i18);
        r5 = $r20;
        if z0 != 0 goto label14;

        specialinvoke r0.<org.petero.droidfish.book.InternalBook: void addToBook(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move)>(r13, r5);

     label14:
        virtualinvoke r13.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r5, r4);

     label15:
        i4 = i4 + 2;
        goto label8;

     label16:
        goto label19;

     label17:
        $r21 := @caughtexception;
        r22 = $r21;
        $r23 = new java.lang.RuntimeException;
        specialinvoke $r23.<java.lang.RuntimeException: void <init>()>();
        throw $r23;

     label18:
        $r24 := @caughtexception;
        r25 = $r24;
        $r26 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("Can\'t read opening book resource");
        $r27 = new java.lang.RuntimeException;
        specialinvoke $r27.<java.lang.RuntimeException: void <init>()>();
        throw $r27;

     label19:
        return;

        catch org.petero.droidfish.gamelogic.ChessParseError from label1 to label16 with label17;
        catch java.io.IOException from label1 to label16 with label18;
    }

    private final void addToBook(org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.book.InternalBook r0;
        org.petero.droidfish.gamelogic.Position r1;
        org.petero.droidfish.gamelogic.Move r2, $r13;
        java.util.HashMap $r3, $r9;
        java.util.ArrayList r4, $r8;
        int i0, $i3, $i4, $i5;
        org.petero.droidfish.book.DroidBook$BookEntry r5, $r15, r16;
        long $l1, $l2;
        java.lang.Long $r6, $r10;
        java.lang.Object $r7, $r12;
        boolean $z0;
        float $f0, $f1;

        r0 := @this: org.petero.droidfish.book.InternalBook;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r2 := @parameter1: org.petero.droidfish.gamelogic.Move;
        $r3 = <org.petero.droidfish.book.InternalBook: java.util.HashMap bookMap>;
        $l1 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: long zobristHash()>();
        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
        $r7 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);
        r4 = (java.util.ArrayList) $r7;
        if r4 != null goto label0;

        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r4 = $r8;
        $r9 = <org.petero.droidfish.book.InternalBook: java.util.HashMap bookMap>;
        $l2 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: long zobristHash()>();
        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4);

     label0:
        i0 = 0;

     label1:
        $i3 = virtualinvoke r4.<java.util.ArrayList: int size()>();
        if i0 >= $i3 goto label3;

        $r12 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        r5 = (org.petero.droidfish.book.DroidBook$BookEntry) $r12;
        $r13 = r5.<org.petero.droidfish.book.DroidBook$BookEntry: org.petero.droidfish.gamelogic.Move move>;
        $z0 = virtualinvoke $r13.<org.petero.droidfish.gamelogic.Move: boolean equals(java.lang.Object)>(r2);
        if $z0 == 0 goto label2;

        $f0 = r5.<org.petero.droidfish.book.DroidBook$BookEntry: float weight>;
        $f1 = $f0 + 1.0F;
        r5.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = $f1;
        return;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        $r15 = new org.petero.droidfish.book.DroidBook$BookEntry;
        specialinvoke $r15.<org.petero.droidfish.book.DroidBook$BookEntry: void <init>(org.petero.droidfish.gamelogic.Move)>(r2);
        r16 = $r15;
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);
        $i4 = <org.petero.droidfish.book.InternalBook: int numBookMoves>;
        $i5 = $i4 + 1;
        <org.petero.droidfish.book.InternalBook: int numBookMoves> = $i5;
        return;
    }

    private static int promToPiece(int, boolean)
    {
        int i0;
        boolean z0;
        byte $b1, $b2, $b3, $b4;

        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        tableswitch(i0)
        {
            case 1: goto label0;
            case 2: goto label3;
            case 3: goto label6;
            case 4: goto label9;
            default: goto label12;
        };

     label0:
        if z0 == 0 goto label1;

        $b1 = 2;
        goto label2;

     label1:
        $b1 = 8;

     label2:
        return $b1;

     label3:
        if z0 == 0 goto label4;

        $b2 = 3;
        goto label5;

     label4:
        $b2 = 9;

     label5:
        return $b2;

     label6:
        if z0 == 0 goto label7;

        $b3 = 4;
        goto label8;

     label7:
        $b3 = 10;

     label8:
        return $b3;

     label9:
        if z0 == 0 goto label10;

        $b4 = 5;
        goto label11;

     label10:
        $b4 = 11;

     label11:
        return $b4;

     label12:
        return 0;
    }

    static void access$000(org.petero.droidfish.book.InternalBook)
    {
        org.petero.droidfish.book.InternalBook r0;

        r0 := @parameter0: org.petero.droidfish.book.InternalBook;
        specialinvoke r0.<org.petero.droidfish.book.InternalBook: void initInternalBook()>();
        return;
    }

    static void <clinit>()
    {
        <org.petero.droidfish.book.InternalBook: int numBookMoves> = -1;
        return;
    }
}
class org.petero.droidfish.book.NullBook extends java.lang.Object implements org.petero.droidfish.book.IOpeningBook
{

    void <init>()
    {
        org.petero.droidfish.book.NullBook r0;

        r0 := @this: org.petero.droidfish.book.NullBook;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public boolean enabled()
    {
        org.petero.droidfish.book.NullBook r0;

        r0 := @this: org.petero.droidfish.book.NullBook;
        return 0;
    }

    public java.util.ArrayList getBookEntries(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.book.NullBook r0;
        org.petero.droidfish.gamelogic.Position r1;

        r0 := @this: org.petero.droidfish.book.NullBook;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        return null;
    }

    public void setOptions(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.book.NullBook r0;
        org.petero.droidfish.book.BookOptions r1;

        r0 := @this: org.petero.droidfish.book.NullBook;
        r1 := @parameter0: org.petero.droidfish.book.BookOptions;
        return;
    }
}
class org.petero.droidfish.book.PolyglotBook$PGBookEntry extends java.lang.Object
{
    private byte[] data;

    void <init>()
    {
        org.petero.droidfish.book.PolyglotBook$PGBookEntry r0;
        byte[] $r1;

        r0 := @this: org.petero.droidfish.book.PolyglotBook$PGBookEntry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (byte)[16];
        r0.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: byte[] data> = $r1;
        return;
    }

    private final long getBytes(int, int)
    {
        org.petero.droidfish.book.PolyglotBook$PGBookEntry r0;
        int i0, i1, i3, i4, i5;
        long l2, $l6, $l7;
        byte[] $r1;

        r0 := @this: org.petero.droidfish.book.PolyglotBook$PGBookEntry;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        l2 = 0L;
        i3 = i0 + i1;
        i4 = i0;

     label0:
        if i4 >= i3 goto label2;

        $r1 = r0.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: byte[] data>;
        i5 = $r1[i4];
        if i5 >= 0 goto label1;

        i5 = i5 + 256;

     label1:
        $l6 = l2 << 8;
        $l7 = (long) i5;
        l2 = $l6 + $l7;
        i4 = i4 + 1;
        goto label0;

     label2:
        return l2;
    }

    final long getKey()
    {
        org.petero.droidfish.book.PolyglotBook$PGBookEntry r0;
        long $l0;

        r0 := @this: org.petero.droidfish.book.PolyglotBook$PGBookEntry;
        $l0 = specialinvoke r0.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: long getBytes(int,int)>(0, 8);
        return $l0;
    }

    final org.petero.droidfish.gamelogic.Move getMove(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.book.PolyglotBook$PGBookEntry r0;
        org.petero.droidfish.gamelogic.Position r1;
        short s0, s1, s2, s3, s4, s5, $s10, $s11, $s12, $s13;
        boolean z0, z1;
        int i6, i7, $i9, $i19, $i20;
        org.petero.droidfish.gamelogic.Move r2, $r3;
        long $l8;
        byte $b14, b15, $b16, $b17, $b18;

        r0 := @this: org.petero.droidfish.book.PolyglotBook$PGBookEntry;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $l8 = specialinvoke r0.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: long getBytes(int,int)>(8, 2);
        $i9 = (int) $l8;
        s0 = (short) $i9;
        z0 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        s1 = s0 & 7;
        $s10 = s0 >> 3;
        s2 = $s10 & 7;
        $s11 = s0 >> 6;
        s3 = $s11 & 7;
        $s12 = s0 >> 9;
        s4 = $s12 & 7;
        $s13 = s0 >> 12;
        s5 = $s13 & 7;
        i6 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(s3, s4);
        i7 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(s1, s2);
        z1 = 0;
        tableswitch(s5)
        {
            case 1: goto label0;
            case 2: goto label3;
            case 3: goto label6;
            case 4: goto label9;
            default: goto label12;
        };

     label0:
        if z0 == 0 goto label1;

        $b14 = 5;
        goto label2;

     label1:
        $b14 = 11;

     label2:
        b15 = $b14;
        goto label13;

     label3:
        if z0 == 0 goto label4;

        $b16 = 4;
        goto label5;

     label4:
        $b16 = 10;

     label5:
        b15 = $b16;
        goto label13;

     label6:
        if z0 == 0 goto label7;

        $b17 = 3;
        goto label8;

     label7:
        $b17 = 9;

     label8:
        b15 = $b17;
        goto label13;

     label9:
        if z0 == 0 goto label10;

        $b18 = 2;
        goto label11;

     label10:
        $b18 = 8;

     label11:
        b15 = $b18;
        goto label13;

     label12:
        b15 = 0;

     label13:
        if i6 != 4 goto label15;

        $i19 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i6);
        if $i19 != 1 goto label15;

        if i7 != 7 goto label14;

        i7 = 6;
        goto label15;

     label14:
        if i7 != 0 goto label15;

        i7 = 2;

     label15:
        if i6 != 60 goto label17;

        $i20 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i6);
        if $i20 != 7 goto label17;

        if i7 != 63 goto label16;

        i7 = 62;
        goto label17;

     label16:
        if i7 != 56 goto label17;

        i7 = 58;

     label17:
        $r3 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(i6, i7, b15);
        r2 = $r3;
        return r2;
    }

    final int getWeight()
    {
        org.petero.droidfish.book.PolyglotBook$PGBookEntry r0;
        long $l0;
        int $i1;

        r0 := @this: org.petero.droidfish.book.PolyglotBook$PGBookEntry;
        $l0 = specialinvoke r0.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: long getBytes(int,int)>(10, 2);
        $i1 = (int) $l0;
        return $i1;
    }

    static byte[] access$000(org.petero.droidfish.book.PolyglotBook$PGBookEntry)
    {
        org.petero.droidfish.book.PolyglotBook$PGBookEntry r0;
        byte[] $r1;

        r0 := @parameter0: org.petero.droidfish.book.PolyglotBook$PGBookEntry;
        $r1 = r0.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: byte[] data>;
        return $r1;
    }
}
class org.petero.droidfish.book.PolyglotBook extends java.lang.Object implements org.petero.droidfish.book.IOpeningBook
{
    private java.io.File bookFile;
    private static long[] hashRandoms;

    void <init>()
    {
        org.petero.droidfish.book.PolyglotBook r0;
        java.io.File $r1;

        r0 := @this: org.petero.droidfish.book.PolyglotBook;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.io.File;
        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("");
        r0.<org.petero.droidfish.book.PolyglotBook: java.io.File bookFile> = $r1;
        return;
    }

    public final void setOptions(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.book.PolyglotBook r0;
        org.petero.droidfish.book.BookOptions r1;
        java.io.File $r2;
        java.lang.String $r3;

        r0 := @this: org.petero.droidfish.book.PolyglotBook;
        r1 := @parameter0: org.petero.droidfish.book.BookOptions;
        $r2 = new java.io.File;
        $r3 = r1.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);
        r0.<org.petero.droidfish.book.PolyglotBook: java.io.File bookFile> = $r2;
        return;
    }

    static long getHashKey(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        long l0, $l6, $l7, $l8, $l9, $l10, $l15, $l16;
        int i1, $i3, $i4, $i5, $i11, $i12, i13, $i14;
        byte b2;
        long[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        l0 = 0L;
        i1 = 0;

     label0:
        if i1 >= 64 goto label15;

        b2 = -1;
        $i3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i1);
        tableswitch($i3)
        {
            case 1: goto label12;
            case 2: goto label10;
            case 3: goto label8;
            case 4: goto label6;
            case 5: goto label4;
            case 6: goto label2;
            case 7: goto label11;
            case 8: goto label9;
            case 9: goto label7;
            case 10: goto label5;
            case 11: goto label3;
            case 12: goto label1;
            default: goto label13;
        };

     label1:
        b2 = 0;
        goto label13;

     label2:
        b2 = 1;
        goto label13;

     label3:
        b2 = 2;
        goto label13;

     label4:
        b2 = 3;
        goto label13;

     label5:
        b2 = 4;
        goto label13;

     label6:
        b2 = 5;
        goto label13;

     label7:
        b2 = 6;
        goto label13;

     label8:
        b2 = 7;
        goto label13;

     label9:
        b2 = 8;
        goto label13;

     label10:
        b2 = 9;
        goto label13;

     label11:
        b2 = 10;
        goto label13;

     label12:
        b2 = 11;

     label13:
        if b2 < 0 goto label14;

        $r1 = <org.petero.droidfish.book.PolyglotBook: long[] hashRandoms>;
        $i4 = 64 * b2;
        $i5 = $i4 + i1;
        $l6 = $r1[$i5];
        l0 = l0 ^ $l6;

     label14:
        i1 = i1 + 1;
        goto label0;

     label15:
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean h1Castle()>();
        if $z0 == 0 goto label16;

        $r2 = <org.petero.droidfish.book.PolyglotBook: long[] hashRandoms>;
        $l7 = $r2[768];
        l0 = l0 ^ $l7;

     label16:
        $z1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean a1Castle()>();
        if $z1 == 0 goto label17;

        $r3 = <org.petero.droidfish.book.PolyglotBook: long[] hashRandoms>;
        $l8 = $r3[769];
        l0 = l0 ^ $l8;

     label17:
        $z2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean h8Castle()>();
        if $z2 == 0 goto label18;

        $r4 = <org.petero.droidfish.book.PolyglotBook: long[] hashRandoms>;
        $l9 = $r4[770];
        l0 = l0 ^ $l9;

     label18:
        $z3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean a8Castle()>();
        if $z3 == 0 goto label19;

        $r5 = <org.petero.droidfish.book.PolyglotBook: long[] hashRandoms>;
        $l10 = $r5[771];
        l0 = l0 ^ $l10;

     label19:
        $i11 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if $i11 < 0 goto label20;

        $i12 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        i13 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i12);
        $r6 = <org.petero.droidfish.book.PolyglotBook: long[] hashRandoms>;
        $i14 = 772 + i13;
        $l15 = $r6[$i14];
        l0 = l0 ^ $l15;

     label20:
        $z4 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z4 == 0 goto label21;

        $r7 = <org.petero.droidfish.book.PolyglotBook: long[] hashRandoms>;
        $l16 = $r7[780];
        l0 = l0 ^ $l16;

     label21:
        return l0;
    }

    static boolean canHandle(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.book.BookOptions r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.book.BookOptions;
        $r1 = r0.<org.petero.droidfish.book.BookOptions: java.lang.String filename>;
        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>(".bin");
        return $z0;
    }

    public final boolean enabled()
    {
        org.petero.droidfish.book.PolyglotBook r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.book.PolyglotBook;
        $r1 = r0.<org.petero.droidfish.book.PolyglotBook: java.io.File bookFile>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();
        return $z0;
    }

    private final void readEntry(java.io.RandomAccessFile, long, org.petero.droidfish.book.PolyglotBook$PGBookEntry) throws java.io.IOException
    {
        org.petero.droidfish.book.PolyglotBook r0;
        java.io.RandomAccessFile r1;
        long l0, $l2;
        org.petero.droidfish.book.PolyglotBook$PGBookEntry r2;
        int i1, $i3;
        byte[] $r3, $r4;

        r0 := @this: org.petero.droidfish.book.PolyglotBook;
        r1 := @parameter0: java.io.RandomAccessFile;
        l0 := @parameter1: long;
        r2 := @parameter2: org.petero.droidfish.book.PolyglotBook$PGBookEntry;
        $l2 = l0 * 16L;
        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l2);
        $r3 = staticinvoke <org.petero.droidfish.book.PolyglotBook$PGBookEntry: byte[] access$000(org.petero.droidfish.book.PolyglotBook$PGBookEntry)>(r2);
        $i3 = virtualinvoke r1.<java.io.RandomAccessFile: int read(byte[])>($r3);
        if $i3 == 16 goto label1;

        i1 = 0;

     label0:
        if i1 >= 16 goto label1;

        $r4 = staticinvoke <org.petero.droidfish.book.PolyglotBook$PGBookEntry: byte[] access$000(org.petero.droidfish.book.PolyglotBook$PGBookEntry)>(r2);
        $r4[i1] = 0;
        i1 = i1 + 1;
        goto label0;

     label1:
        return;
    }

    private final boolean keyLess(long, long)
    {
        org.petero.droidfish.book.PolyglotBook r0;
        long l0, l1;
        byte $b2, $b3, $b4, $b5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.petero.droidfish.book.PolyglotBook;
        l0 := @parameter0: long;
        l1 := @parameter1: long;
        $b2 = l0 cmp 0L;
        if $b2 >= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        $b3 = l1 cmp 0L;
        if $b3 >= 0 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z0 != $z1 goto label6;

        $b4 = l0 cmp l1;
        if $b4 >= 0 goto label4;

        $z2 = 1;
        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;

     label6:
        $b5 = l1 cmp 0L;
        if $b5 >= 0 goto label7;

        $z3 = 1;
        goto label8;

     label7:
        $z3 = 0;

     label8:
        return $z3;
    }

    public final java.util.ArrayList getBookEntries(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.book.PolyglotBook r0;
        org.petero.droidfish.gamelogic.Position r1;
        java.io.RandomAccessFile $r2, r3;
        long l0, l1, l2, l3, l4, l5, l6, $l7, $l8, $l10, $l12;
        org.petero.droidfish.book.PolyglotBook$PGBookEntry r4, $r8;
        org.petero.droidfish.gamelogic.Move r5;
        org.petero.droidfish.book.DroidBook$BookEntry r6, $r11;
        java.io.File $r7;
        byte $b9, $b11, $b13;
        boolean $z0;
        java.util.ArrayList $r9, r10;
        int $i14;
        float $f0;
        java.io.FileNotFoundException $r13, r14;
        java.io.IOException $r15, r16;

        r0 := @this: org.petero.droidfish.book.PolyglotBook;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;

     label0:
        $r2 = new java.io.RandomAccessFile;
        $r7 = r0.<org.petero.droidfish.book.PolyglotBook: java.io.File bookFile>;
        specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r7, "r");
        r3 = $r2;
        $l7 = virtualinvoke r3.<java.io.RandomAccessFile: long length()>();
        l0 = $l7 / 16L;
        l1 = staticinvoke <org.petero.droidfish.book.PolyglotBook: long getHashKey(org.petero.droidfish.gamelogic.Position)>(r1);
        $r8 = new org.petero.droidfish.book.PolyglotBook$PGBookEntry;
        specialinvoke $r8.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: void <init>()>();
        r4 = $r8;
        l2 = -1L;
        l3 = l0;

     label1:
        $l8 = l3 - l2;
        $b9 = $l8 cmp 1L;
        if $b9 <= 0 goto label4;

        $l10 = l2 + l3;
        l4 = $l10 / 2L;
        specialinvoke r0.<org.petero.droidfish.book.PolyglotBook: void readEntry(java.io.RandomAccessFile,long,org.petero.droidfish.book.PolyglotBook$PGBookEntry)>(r3, l4, r4);
        l5 = virtualinvoke r4.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: long getKey()>();
        $z0 = specialinvoke r0.<org.petero.droidfish.book.PolyglotBook: boolean keyLess(long,long)>(l5, l1);
        if $z0 == 0 goto label2;

        l2 = l4;
        goto label3;

     label2:
        l3 = l4;

     label3:
        goto label1;

     label4:
        $r9 = new java.util.ArrayList;
        specialinvoke $r9.<java.util.ArrayList: void <init>()>();
        r10 = $r9;
        l6 = l3;

     label5:
        $b11 = l6 cmp l0;
        if $b11 >= 0 goto label7;

        specialinvoke r0.<org.petero.droidfish.book.PolyglotBook: void readEntry(java.io.RandomAccessFile,long,org.petero.droidfish.book.PolyglotBook$PGBookEntry)>(r3, l6, r4);
        $l12 = virtualinvoke r4.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: long getKey()>();
        $b13 = $l12 cmp l1;
        if $b13 == 0 goto label6;

        goto label7;

     label6:
        r5 = virtualinvoke r4.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: org.petero.droidfish.gamelogic.Move getMove(org.petero.droidfish.gamelogic.Position)>(r1);
        $r11 = new org.petero.droidfish.book.DroidBook$BookEntry;
        specialinvoke $r11.<org.petero.droidfish.book.DroidBook$BookEntry: void <init>(org.petero.droidfish.gamelogic.Move)>(r5);
        r6 = $r11;
        $i14 = virtualinvoke r4.<org.petero.droidfish.book.PolyglotBook$PGBookEntry: int getWeight()>();
        $f0 = (float) $i14;
        r6.<org.petero.droidfish.book.DroidBook$BookEntry: float weight> = $f0;
        virtualinvoke r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);
        l6 = l6 + 1L;
        goto label5;

     label7:
        virtualinvoke r3.<java.io.RandomAccessFile: void close()>();

     label8:
        return r10;

     label9:
        $r13 := @caughtexception;
        r14 = $r13;
        return null;

     label10:
        $r15 := @caughtexception;
        r16 = $r15;
        return null;

        catch java.io.FileNotFoundException from label0 to label8 with label9;
        catch java.io.IOException from label0 to label8 with label10;
    }

    static void <clinit>()
    {
        long[] $r0;

        $r0 = newarray (long)[781];
        $r0[0] = -7117617611634414271L;
        $r0[1] = 3096006490854172103L;
        $r0[2] = 4961560858198160711L;
        $r0[3] = -7199576581966697758L;
        $r0[4] = 8467686926187236489L;
        $r0[5] = 3643601464190828991L;
        $r0[6] = 1133690081497064057L;
        $r0[7] = -1712897760329768758L;
        $r0[8] = 972344712846728208L;
        $r0[9] = 1875810966947487789L;
        $r0[10] = -7636462362570079312L;
        $r0[11] = -3449195065476763947L;
        $r0[12] = 4665150172008230450L;
        $r0[13] = 77499164859392917L;
        $r0[14] = 6752165915987794405L;
        $r0[15] = 2566923340161161676L;
        $r0[16] = 419294011261754017L;
        $r0[17] = 7466832458773678449L;
        $r0[18] = 8379435287740149003L;
        $r0[19] = 9012210492721573360L;
        $r0[20] = -9023119502491076660L;
        $r0[21] = -927302695338870676L;
        $r0[22] = 3680699783482293222L;
        $r0[23] = 5454859592240567363L;
        $r0[24] = -6168633590159683332L;
        $r0[25] = -8233256716529052661L;
        $r0[26] = -8659851112597712361L;
        $r0[27] = 1870057424550439649L;
        $r0[28] = -5428191116858910017L;
        $r0[29] = 8864492181390654148L;
        $r0[30] = -3943696798190020515L;
        $r0[31] = 2642043227856860416L;
        $r0[32] = 5521189128215049287L;
        $r0[33] = 1488034881489406017L;
        $r0[34] = -6405355056885088877L;
        $r0[35] = 236592455471957263L;
        $r0[36] = 7168370738516443200L;
        $r0[37] = 707553987122498196L;
        $r0[38] = 3852097769995099451L;
        $r0[39] = 8313129892476901923L;
        $r0[40] = 1761594034649645067L;
        $r0[41] = 2291114854896829159L;
        $r0[42] = -3237903676947602091L;
        $r0[43] = -4640889180432530876L;
        $r0[44] = -6956705385196247004L;
        $r0[45] = 5903053950100844597L;
        $r0[46] = 6666107027411611898L;
        $r0[47] = -218426187369631167L;
        $r0[48] = 3626425922614869470L;
        $r0[49] = -8325814959521189771L;
        $r0[50] = -5063052553617656857L;
        $r0[51] = 9148094160140652064L;
        $r0[52] = 1284939680052264319L;
        $r0[53] = 7307368198934274627L;
        $r0[54] = 5611679697977124792L;
        $r0[55] = -7577707393933148579L;
        $r0[56] = 4819485793530191663L;
        $r0[57] = 7866624006794876513L;
        $r0[58] = 4794093907474700625L;
        $r0[59] = 6849775302623042486L;
        $r0[60] = 4177248038373896072L;
        $r0[61] = -7798627118210467701L;
        $r0[62] = 7195685255425235832L;
        $r0[63] = -1434736733280752266L;
        $r0[64] = 6004979459829542343L;
        $r0[65] = 575228772519342402L;
        $r0[66] = 5806056339682094430L;
        $r0[67] = 8920438500019044156L;
        $r0[68] = 1872523786854905556L;
        $r0[69] = 7168173152291242201L;
        $r0[70] = -9058528327592164873L;
        $r0[71] = 8767779863385330152L;
        $r0[72] = 1489771135892281206L;
        $r0[73] = -1061241206578699883L;
        $r0[74] = -2684379813869300996L;
        $r0[75] = 2649182342564336630L;
        $r0[76] = -4940966502553021718L;
        $r0[77] = 928423270205194457L;
        $r0[78] = -6585158539226940220L;
        $r0[79] = -1613020756858095303L;
        $r0[80] = 2875176145464482879L;
        $r0[81] = -8847901732119490575L;
        $r0[82] = 6103491276194240627L;
        $r0[83] = 8264435384771931435L;
        $r0[84] = -1255011998991573177L;
        $r0[85] = -7312248682904753503L;
        $r0[86] = 8118948727165493749L;
        $r0[87] = -452438870359771710L;
        $r0[88] = -8668335600576165967L;
        $r0[89] = -6672393216155760456L;
        $r0[90] = -5887731630549795598L;
        $r0[91] = 1810658488341658557L;
        $r0[92] = -8665204105580500247L;
        $r0[93] = 658149708018956377L;
        $r0[94] = -69816450156784432L;
        $r0[95] = -8221078497326742194L;
        $r0[96] = -7199510714699703159L;
        $r0[97] = -5480269155866560275L;
        $r0[98] = 4111328737826509899L;
        $r0[99] = 6628917895947053289L;
        $r0[100] = 2166287019647928708L;
        $r0[101] = -7317033582308389709L;
        $r0[102] = 5728850993485642500L;
        $r0[103] = 7135057069693417668L;
        $r0[104] = 2409960466139986440L;
        $r0[105] = 6600979542443030540L;
        $r0[106] = 5794634036844991298L;
        $r0[107] = 1765885809474863574L;
        $r0[108] = 7278670237115156036L;
        $r0[109] = -2318345334258142041L;
        $r0[110] = -1183745501610368782L;
        $r0[111] = 8877430296282562796L;
        $r0[112] = -5044746123895283133L;
        $r0[113] = 407550088776850295L;
        $r0[114] = -5365866959392798091L;
        $r0[115] = 5365205568318698487L;
        $r0[116] = -3511034280684146806L;
        $r0[117] = -776761410179450844L;
        $r0[118] = 4357691132969283455L;
        $r0[119] = -1304134592068362083L;
        $r0[120] = 8763584794241613617L;
        $r0[121] = -8767545796439405940L;
        $r0[122] = -7505469452821431437L;
        $r0[123] = -6753601202686884558L;
        $r0[124] = 306186389089741728L;
        $r0[125] = -7922319286853618274L;
        $r0[126] = 8136607301146677452L;
        $r0[127] = 8332101422058904765L;
        $r0[128] = 6215931344642484877L;
        $r0[129] = -1176482456577273983L;
        $r0[130] = -4962589000476002385L;
        $r0[131] = 5040091220514117480L;
        $r0[132] = -7849913836115364766L;
        $r0[133] = -43044781523771743L;
        $r0[134] = -5881067973083878800L;
        $r0[135] = -2509529976529168132L;
        $r0[136] = 9145986266726084057L;
        $r0[137] = 2521545561146285852L;
        $r0[138] = -3956411269506295511L;
        $r0[139] = -9184011107927260315L;
        $r0[140] = -2394674665211165194L;
        $r0[141] = 2012514900658959106L;
        $r0[142] = 4851386166840481282L;
        $r0[143] = -6154561019552412806L;
        $r0[144] = -6307235393847693738L;
        $r0[145] = 7319524202191393198L;
        $r0[146] = -2390612934246005514L;
        $r0[147] = 2445601317840807269L;
        $r0[148] = -5470303936463679940L;
        $r0[149] = -7946502699748727984L;
        $r0[150] = 1211454228928495690L;
        $r0[151] = 2931510483461322717L;
        $r0[152] = -4193944676823227306L;
        $r0[153] = 6217490319246239553L;
        $r0[154] = 3253094721785420467L;
        $r0[155] = -7222186592991335468L;
        $r0[156] = -1211743989268045124L;
        $r0[157] = -5827584294354409384L;
        $r0[158] = 5189293263797206570L;
        $r0[159] = -5840131557960057277L;
        $r0[160] = 1850950425290819967L;
        $r0[161] = 5933835573330569280L;
        $r0[162] = -797006402233243920L;
        $r0[163] = 1240625309976189683L;
        $r0[164] = -4835227570594987755L;
        $r0[165] = -7087500065266820785L;
        $r0[166] = 463713201815588887L;
        $r0[167] = 5603848033623546396L;
        $r0[168] = 5837679654670194627L;
        $r0[169] = -4577276249006689100L;
        $r0[170] = -5445157863262884228L;
        $r0[171] = -5511954857782272889L;
        $r0[172] = 2422944928445377056L;
        $r0[173] = 3310549754053175887L;
        $r0[174] = 8519766042450553085L;
        $r0[175] = -606925578055940448L;
        $r0[176] = -2942946220820427471L;
        $r0[177] = -2435486243585145781L;
        $r0[178] = 862037678550916899L;
        $r0[179] = 3197637623672940211L;
        $r0[180] = 5210919022407409764L;
        $r0[181] = -3475573908164538853L;
        $r0[182] = -5738531550834291303L;
        $r0[183] = -7286398923439835928L;
        $r0[184] = -6558283579219683126L;
        $r0[185] = -1777488582077034890L;
        $r0[186] = 7618258446600650238L;
        $r0[187] = -453254132140704618L;
        $r0[188] = -258250171718674949L;
        $r0[189] = -7176401658345012201L;
        $r0[190] = -8157851634567385392L;
        $r0[191] = 7423022476929853822L;
        $r0[192] = -4231143402258348978L;
        $r0[193] = 8710936142583354014L;
        $r0[194] = -100692273235294726L;
        $r0[195] = 629718674134230549L;
        $r0[196] = -7848113977168848178L;
        $r0[197] = -7780501039097782411L;
        $r0[198] = -2369562330250108912L;
        $r0[199] = 4303848835390748061L;
        $r0[200] = -3262948163554511041L;
        $r0[201] = -602825012910263304L;
        $r0[202] = -2885415085016290431L;
        $r0[203] = -2784376253081124953L;
        $r0[204] = 3706272247737428199L;
        $r0[205] = -6395030266941625231L;
        $r0[206] = -6704140522967532107L;
        $r0[207] = 5704473791139820979L;
        $r0[208] = -8659436106485368743L;
        $r0[209] = 1637612482787097121L;
        $r0[210] = 8908762506463270222L;
        $r0[211] = -889891063729036404L;
        $r0[212] = 4157033003383749538L;
        $r0[213] = -238877964596788188L;
        $r0[214] = 1800584982121391508L;
        $r0[215] = 5477894166363593411L;
        $r0[216] = 4674885479076762381L;
        $r0[217] = -8286718691916758335L;
        $r0[218] = 7550910419722901151L;
        $r0[219] = 8799727354050345442L;
        $r0[220] = -7125432498641740945L;
        $r0[221] = 4039979115090434978L;
        $r0[222] = 3605513501649795505L;
        $r0[223] = 3876110682321388426L;
        $r0[224] = -6265874557923512399L;
        $r0[225] = 8620494007958685373L;
        $r0[226] = 5854220346205463345L;
        $r0[227] = 4855373848161890066L;
        $r0[228] = -2791760472357952421L;
        $r0[229] = 5949110547793674363L;
        $r0[230] = 5957016279979211145L;
        $r0[231] = -7125263955721355405L;
        $r0[232] = 8228060533160592200L;
        $r0[233] = 2094843038752308887L;
        $r0[234] = 8801329274201873314L;
        $r0[235] = 297395810205168342L;
        $r0[236] = 6489982145962516640L;
        $r0[237] = 925952168551929496L;
        $r0[238] = 6268205602454985292L;
        $r0[239] = 2903841526205938350L;
        $r0[240] = 359914117944187339L;
        $r0[241] = 8371662176944962179L;
        $r0[242] = -7307597380444705476L;
        $r0[243] = -8639167831183607326L;
        $r0[244] = 5795683315677088036L;
        $r0[245] = -5757784274115990919L;
        $r0[246] = 1070089889651807102L;
        $r0[247] = 6778454470502372484L;
        $r0[248] = -686688449954468754L;
        $r0[249] = 1983224895012736197L;
        $r0[250] = -2685835992369688543L;
        $r0[251] = 942692161281275413L;
        $r0[252] = -6312457544560218087L;
        $r0[253] = -7799067531746373637L;
        $r0[254] = -7356718043541534927L;
        $r0[255] = 5245566602671237210L;
        $r0[256] = 9195060651485531055L;
        $r0[257] = 6368791473535302177L;
        $r0[258] = 3229483537647869491L;
        $r0[259] = -3214461869429917290L;
        $r0[260] = 928484295759785709L;
        $r0[261] = 1909608352012281665L;
        $r0[262] = -8034650149685246498L;
        $r0[263] = 5773445318897257735L;
        $r0[264] = 3990834569972524777L;
        $r0[265] = -7675348306896289970L;
        $r0[266] = 4209783265310087306L;
        $r0[267] = -3128590709331025083L;
        $r0[268] = 616435239304311520L;
        $r0[269] = -485352023391264328L;
        $r0[270] = 7798983577523272147L;
        $r0[271] = 3913469721920333102L;
        $r0[272] = -3022076089717407198L;
        $r0[273] = 6239239264182308800L;
        $r0[274] = 1654244791516730287L;
        $r0[275] = -1217848141703766125L;
        $r0[276] = 6221161860315361832L;
        $r0[277] = -1390141990708018827L;
        $r0[278] = -4987831551100114613L;
        $r0[279] = -5529078456224335278L;
        $r0[280] = 7337288846716161725L;
        $r0[281] = -5424555790927851038L;
        $r0[282] = -5466800325109811545L;
        $r0[283] = 510457344639386445L;
        $r0[284] = 8796640079689568245L;
        $r0[285] = -4881735209222593326L;
        $r0[286] = 6465331256500611624L;
        $r0[287] = -7415446863621302972L;
        $r0[288] = 8017026739316632057L;
        $r0[289] = 3627975979343775636L;
        $r0[290] = -3394528423913180349L;
        $r0[291] = 6222903725779446311L;
        $r0[292] = 3527832623857636372L;
        $r0[293] = -2849693101024154289L;
        $r0[294] = 8924250025456295612L;
        $r0[295] = -4045937359548092780L;
        $r0[296] = -7747633557851937220L;
        $r0[297] = -3978586660626014369L;
        $r0[298] = 4223238849618215370L;
        $r0[299] = -2764893807176054556L;
        $r0[300] = 1140009269240963018L;
        $r0[301] = -5480222307947335495L;
        $r0[302] = -5751042123502621052L;
        $r0[303] = 3881319844097050799L;
        $r0[304] = -1588072837735502258L;
        $r0[305] = -1442565630059000999L;
        $r0[306] = -7902221177050684800L;
        $r0[307] = -5067872407110470413L;
        $r0[308] = 7580967567056532817L;
        $r0[309] = -4166857726643058241L;
        $r0[310] = -3655428046510026134L;
        $r0[311] = -4906602186354729269L;
        $r0[312] = -2556870867600940496L;
        $r0[313] = -5005447323036875848L;
        $r0[314] = -6648276097457692213L;
        $r0[315] = -1587952015247572959L;
        $r0[316] = 704784010218719535L;
        $r0[317] = -8849761751120126775L;
        $r0[318] = -9149066151885549738L;
        $r0[319] = 687173692492309888L;
        $r0[320] = 2573542046251205823L;
        $r0[321] = -4381758060701354339L;
        $r0[322] = 5122261027125484554L;
        $r0[323] = -6280299527312203635L;
        $r0[324] = 392580029432520891L;
        $r0[325] = -5369083948807480889L;
        $r0[326] = -1668041885421938881L;
        $r0[327] = 3451078315256158032L;
        $r0[328] = 1238907336018749328L;
        $r0[329] = 9205113463181886956L;
        $r0[330] = 1667962162104261376L;
        $r0[331] = -7615990091925507577L;
        $r0[332] = 4479827962372740717L;
        $r0[333] = -4723074364987629396L;
        $r0[334] = -550798907951659849L;
        $r0[335] = 5275192813757817777L;
        $r0[336] = 2148246364622112874L;
        $r0[337] = 2290795724393258885L;
        $r0[338] = -253162723436299526L;
        $r0[339] = 1776293542351822525L;
        $r0[340] = -3689732299588779379L;
        $r0[341] = 4313244667902787366L;
        $r0[342] = -6165228101000850014L;
        $r0[343] = -1635869182558457729L;
        $r0[344] = -5214973253231643794L;
        $r0[345] = -3108706094173697875L;
        $r0[346] = 3321611548688927336L;
        $r0[347] = 3305807524324674332L;
        $r0[348] = -5061732229000748930L;
        $r0[349] = 7248312053715383136L;
        $r0[350] = -7754480333218511484L;
        $r0[351] = -2611856101870623399L;
        $r0[352] = -3282213444060272849L;
        $r0[353] = 9112428691881135949L;
        $r0[354] = 7848957776938116907L;
        $r0[355] = -7494927886966539228L;
        $r0[356] = 8896660382367628050L;
        $r0[357] = -8842837798196294764L;
        $r0[358] = 8762207035762213579L;
        $r0[359] = -3459299730036712668L;
        $r0[360] = -9036992843571423785L;
        $r0[361] = -7855717824450087951L;
        $r0[362] = 7197363620976276483L;
        $r0[363] = -4145362416552097252L;
        $r0[364] = 6373588016705149671L;
        $r0[365] = 685071415365890925L;
        $r0[366] = -6961025044515806144L;
        $r0[367] = -6921029952340425425L;
        $r0[368] = -1983292083700476020L;
        $r0[369] = -1733165894704959795L;
        $r0[370] = 6251124536988276734L;
        $r0[371] = 6144308296388004591L;
        $r0[372] = 8880818733894805775L;
        $r0[373] = 1303007271453773655L;
        $r0[374] = 9174156641096830119L;
        $r0[375] = 8824404812019774483L;
        $r0[376] = 4420129794615782201L;
        $r0[377] = -8495187234923475788L;
        $r0[378] = 8883975763174874978L;
        $r0[379] = -7709859765033275901L;
        $r0[380] = 5595889224692918441L;
        $r0[381] = 4306406647446967767L;
        $r0[382] = 6704191827946442961L;
        $r0[383] = 9195534799547011879L;
        $r0[384] = -2721803534724933711L;
        $r0[385] = -2531729836700005339L;
        $r0[386] = 3928039610514994951L;
        $r0[387] = -3573548994530823287L;
        $r0[388] = -6084204670034616524L;
        $r0[389] = 4869881251581666789L;
        $r0[390] = -5460400459106163223L;
        $r0[391] = 1215083005313393810L;
        $r0[392] = -2611389914965073217L;
        $r0[393] = -7260687268226227326L;
        $r0[394] = -5297507950653649788L;
        $r0[395] = -4625529213342012336L;
        $r0[396] = -6264054769160028483L;
        $r0[397] = 2305696533800337221L;
        $r0[398] = -6047495272998113561L;
        $r0[399] = -5834172998942348995L;
        $r0[400] = 1949121388445288260L;
        $r0[401] = -5379009770048591566L;
        $r0[402] = -4360815174901894470L;
        $r0[403] = -4347701924302501399L;
        $r0[404] = -884756771763845121L;
        $r0[405] = -6934285729554595366L;
        $r0[406] = 7437568954088789707L;
        $r0[407] = 7915171836405846582L;
        $r0[408] = -6694092778555253967L;
        $r0[409] = 520574178807700830L;
        $r0[410] = -8462680832637173339L;
        $r0[411] = -2192588427498456587L;
        $r0[412] = 8412807604418121470L;
        $r0[413] = 5609875541891257226L;
        $r0[414] = -7122885458123533268L;
        $r0[415] = 8376971840073549054L;
        $r0[416] = 1383314287233606303L;
        $r0[417] = -2972521237957530560L;
        $r0[418] = 5204145074798490767L;
        $r0[419] = 2167677454434536938L;
        $r0[420] = -8105325240265828673L;
        $r0[421] = 8271005071015654673L;
        $r0[422] = -2909286158269631396L;
        $r0[423] = -7715852896319476306L;
        $r0[424] = -6935247590537980960L;
        $r0[425] = -2420506449658262810L;
        $r0[426] = -6607626754690151490L;
        $r0[427] = -7125392814103915483L;
        $r0[428] = 5895970210948560438L;
        $r0[429] = 3447475526873961356L;
        $r0[430] = 7334775646005305872L;
        $r0[431] = -2492284066326686611L;
        $r0[432] = 6939292427400212706L;
        $r0[433] = 8334626163711782046L;
        $r0[434] = 1912937584935571784L;
        $r0[435] = -6141772829141909856L;
        $r0[436] = 8524679326357320614L;
        $r0[437] = 2204997376562282123L;
        $r0[438] = 3197166419597805379L;
        $r0[439] = 4220875528993937793L;
        $r0[440] = 2803169229572255230L;
        $r0[441] = 5085503808422584221L;
        $r0[442] = -4001944857184464756L;
        $r0[443] = 4570145336765972565L;
        $r0[444] = 9186432380899140933L;
        $r0[445] = -7207128850928187954L;
        $r0[446] = -8573836118959825828L;
        $r0[447] = -8077052725099091274L;
        $r0[448] = -6872901447497050402L;
        $r0[449] = -396816797984991405L;
        $r0[450] = -2974960788477327719L;
        $r0[451] = -2311998167136774173L;
        $r0[452] = -5297324270288368904L;
        $r0[453] = -3882604781526113051L;
        $r0[454] = 2088698177441502777L;
        $r0[455] = -3346872395976619286L;
        $r0[456] = 5679318949880730421L;
        $r0[457] = -1955705304021469742L;
        $r0[458] = 1684901764271550206L;
        $r0[459] = 6019498834983443029L;
        $r0[460] = 8308552077872645018L;
        $r0[461] = 2774412133178445207L;
        $r0[462] = 2993471197969887147L;
        $r0[463] = 8756104692490586069L;
        $r0[464] = 7404378077533100169L;
        $r0[465] = -7054918957238328127L;
        $r0[466] = -1318335436663551995L;
        $r0[467] = 5816122712455824169L;
        $r0[468] = 5531291136777113635L;
        $r0[469] = 7400684525794093602L;
        $r0[470] = 2421696223438995901L;
        $r0[471] = 2746718911238191773L;
        $r0[472] = 2297623779240041360L;
        $r0[473] = -2931757618997826117L;
        $r0[474] = -5091566080359364152L;
        $r0[475] = 2151598180055853022L;
        $r0[476] = -3513011632246703702L;
        $r0[477] = -795500665323736509L;
        $r0[478] = 4086544267540179726L;
        $r0[479] = 3960368502933186560L;
        $r0[480] = -1498129122236047154L;
        $r0[481] = -7184131849074362877L;
        $r0[482] = -5833233003560719734L;
        $r0[483] = 2706199935239343179L;
        $r0[484] = -8392284860076226467L;
        $r0[485] = -805786339615115179L;
        $r0[486] = -3155757358848065085L;
        $r0[487] = -1830170615095512051L;
        $r0[488] = 2626432152093131908L;
        $r0[489] = -4421998591500243275L;
        $r0[490] = -6102548667584133652L;
        $r0[491] = 7167044992416702836L;
        $r0[492] = -6512755018830767576L;
        $r0[493] = 1255659969011027721L;
        $r0[494] = 3240842176865726111L;
        $r0[495] = 795178308456769763L;
        $r0[496] = -6057660688470347791L;
        $r0[497] = 6408553047871587981L;
        $r0[498] = -4114748024493078816L;
        $r0[499] = 3362936192376505047L;
        $r0[500] = 1486633608756523830L;
        $r0[501] = 8937438391818961808L;
        $r0[502] = -2933041310131459385L;
        $r0[503] = -9204136428534629549L;
        $r0[504] = -1447368335367659065L;
        $r0[505] = 225631029947824688L;
        $r0[506] = 5294122026845313316L;
        $r0[507] = -6779834932302576312L;
        $r0[508] = 6576914768872977647L;
        $r0[509] = -5432401932016084426L;
        $r0[510] = -3149974553771293647L;
        $r0[511] = 1344590668019013826L;
        $r0[512] = 8870296219354404L;
        $r0[513] = 1763076921063072981L;
        $r0[514] = -6735912242669201170L;
        $r0[515] = -7404447858617298160L;
        $r0[516] = -5523242177286330794L;
        $r0[517] = 2679459049130362043L;
        $r0[518] = -3297604595876809216L;
        $r0[519] = 2006921612949215342L;
        $r0[520] = 2441159149980359103L;
        $r0[521] = 4254066403785111886L;
        $r0[522] = -8280748781830503314L;
        $r0[523] = -478226388169132300L;
        $r0[524] = 4067155115498534723L;
        $r0[525] = -3862070249752561130L;
        $r0[526] = 7262306400971602773L;
        $r0[527] = 2599246507224983677L;
        $r0[528] = 1183331494191622178L;
        $r0[529] = 9203696637336472112L;
        $r0[530] = 8684305384778066392L;
        $r0[531] = 452576500022594089L;
        $r0[532] = 7158260433795827572L;
        $r0[533] = 5749101480176103715L;
        $r0[534] = 2141838636388669305L;
        $r0[535] = -5127046408239983365L;
        $r0[536] = -6707005227519968031L;
        $r0[537] = -2742143461777474807L;
        $r0[538] = -1158177344673395093L;
        $r0[539] = 3345333136360207999L;
        $r0[540] = -6221075131749871973L;
        $r0[541] = -5310895318150965567L;
        $r0[542] = 8127707564878445808L;
        $r0[543] = -7426305334632631762L;
        $r0[544] = -4646510815755199649L;
        $r0[545] = -7727291720446440205L;
        $r0[546] = 4467639418469323241L;
        $r0[547] = -5105491203086766093L;
        $r0[548] = 7043015398453076736L;
        $r0[549] = -4643966542147613368L;
        $r0[550] = 2597087673064131360L;
        $r0[551] = -250124276606665209L;
        $r0[552] = -1224189853575564238L;
        $r0[553] = -6843171236372059126L;
        $r0[554] = -9073093575002869048L;
        $r0[555] = -3198758860386093361L;
        $r0[556] = 2826050093225892884L;
        $r0[557] = 7047939442312345917L;
        $r0[558] = 1975862676241125979L;
        $r0[559] = 8471065344236531211L;
        $r0[560] = -7665310745516932263L;
        $r0[561] = -5736484889461131955L;
        $r0[562] = 6983092299355911633L;
        $r0[563] = 8891398163252015007L;
        $r0[564] = -213906536485350214L;
        $r0[565] = -8317869669453183656L;
        $r0[566] = 1184291664448112016L;
        $r0[567] = 8752186474456668498L;
        $r0[568] = -6562869240740929461L;
        $r0[569] = 8304258407043758711L;
        $r0[570] = -5415306440973393561L;
        $r0[571] = -7052086191139373095L;
        $r0[572] = -7100384126557577363L;
        $r0[573] = -3239204636105726481L;
        $r0[574] = 6743071165850287963L;
        $r0[575] = 1895531807983368793L;
        $r0[576] = 8070015023023620019L;
        $r0[577] = -2451832056240883254L;
        $r0[578] = 7264555371116116147L;
        $r0[579] = 638838107884199779L;
        $r0[580] = 612060626599877907L;
        $r0[581] = -2078162528421891077L;
        $r0[582] = 2028126038944990910L;
        $r0[583] = 8217932366665821866L;
        $r0[584] = -5731027174718830117L;
        $r0[585] = 4917760284400488853L;
        $r0[586] = 4689038209317479950L;
        $r0[587] = -2876688578317531702L;
        $r0[588] = 7353589116749496814L;
        $r0[589] = 6461588461223219363L;
        $r0[590] = -1709513839274943977L;
        $r0[591] = -7802992490642642440L;
        $r0[592] = -4557372729334641201L;
        $r0[593] = -3822959266735082868L;
        $r0[594] = 6280119077769544053L;
        $r0[595] = 5795026310427216669L;
        $r0[596] = -2865201508933622433L;
        $r0[597] = 5344020438314994897L;
        $r0[598] = -1356161753273905001L;
        $r0[599] = -5376351730844657950L;
        $r0[600] = 2499216570383001617L;
        $r0[601] = 5973851566933180981L;
        $r0[602] = -7283548499500808528L;
        $r0[603] = -7759862821659811914L;
        $r0[604] = 7802414647854227001L;
        $r0[605] = 7696730671131205892L;
        $r0[606] = -6507191444373290905L;
        $r0[607] = 8954801150602803298L;
        $r0[608] = 5805966293032425995L;
        $r0[609] = -7838261593662321029L;
        $r0[610] = 4997389530575201269L;
        $r0[611] = 7710978612650642680L;
        $r0[612] = 7716832357345836839L;
        $r0[613] = -3323431321145327255L;
        $r0[614] = -2446429154351403408L;
        $r0[615] = 5766400084981923062L;
        $r0[616] = -7200857806063814540L;
        $r0[617] = 8713884558928322285L;
        $r0[618] = 7910921931260759656L;
        $r0[619] = -1254265329846611475L;
        $r0[620] = 3651028258442904531L;
        $r0[621] = 4208705969817343911L;
        $r0[622] = 3568641929344250749L;
        $r0[623] = 7493701010274154640L;
        $r0[624] = 2245920858524015772L;
        $r0[625] = -5287726615758083227L;
        $r0[626] = -6156110632223716108L;
        $r0[627] = -847676012271350765L;
        $r0[628] = -339391230761074478L;
        $r0[629] = 3841784002685309084L;
        $r0[630] = 3972025232192455038L;
        $r0[631] = 7780701379940603769L;
        $r0[632] = -3673543119483549832L;
        $r0[633] = -2078634282757881654L;
        $r0[634] = -6948684187833482934L;
        $r0[635] = 331717439817162336L;
        $r0[636] = -236792732567011685L;
        $r0[637] = 639100052003347099L;
        $r0[638] = -8099574507787307615L;
        $r0[639] = -5353646232683726234L;
        $r0[640] = 2526013881820679475L;
        $r0[641] = 4894708394808468861L;
        $r0[642] = 4217798054095379555L;
        $r0[643] = 2415982786774940751L;
        $r0[644] = 2008219703699744969L;
        $r0[645] = 6034935405124924712L;
        $r0[646] = -2068809033829413525L;
        $r0[647] = -2976794435908412034L;
        $r0[648] = 6813989660423069229L;
        $r0[649] = 3171782229498906237L;
        $r0[650] = -5689255409585681882L;
        $r0[651] = 4587441767303016857L;
        $r0[652] = 1011542511767058351L;
        $r0[653] = 1218420902424652599L;
        $r0[654] = -6994674436138682061L;
        $r0[655] = -3114493420313727393L;
        $r0[656] = -9127831760372958176L;
        $r0[657] = -7947387725428979194L;
        $r0[658] = -1404709700660885128L;
        $r0[659] = 1805505087651779950L;
        $r0[660] = -5363013951754450589L;
        $r0[661] = -8519877247653478975L;
        $r0[662] = -6051660936535374862L;
        $r0[663] = -5432657379715846560L;
        $r0[664] = -354324339393897847L;
        $r0[665] = 4496402702769466389L;
        $r0[666] = 4275128525646469625L;
        $r0[667] = -1727796887562541994L;
        $r0[668] = 2644524053331857687L;
        $r0[669] = -1781398766969753407L;
        $r0[670] = 756689505943647349L;
        $r0[671] = 6332958748006341455L;
        $r0[672] = 5397518675852254155L;
        $r0[673] = 3282372277507744968L;
        $r0[674] = -3321886456795945333L;
        $r0[675] = -8488570490783378132L;
        $r0[676] = 550475751710050266L;
        $r0[677] = -8911359377770791788L;
        $r0[678] = -7418949222395686301L;
        $r0[679] = 1895999114042080393L;
        $r0[680] = -650773357961068032L;
        $r0[681] = 3512907883609256988L;
        $r0[682] = -8275867100986890362L;
        $r0[683] = 5100888107877796098L;
        $r0[684] = -3680555303400859359L;
        $r0[685] = 5664728055166256274L;
        $r0[686] = 1867780161745570575L;
        $r0[687] = 5069314540135811628L;
        $r0[688] = -7620386572563399119L;
        $r0[689] = 8428576418859462269L;
        $r0[690] = 6489498281288268568L;
        $r0[691] = 248384571951887537L;
        $r0[692] = -4037852901788685727L;
        $r0[693] = 3830179243734057519L;
        $r0[694] = -7470369288476554443L;
        $r0[695] = -6071470395341666208L;
        $r0[696] = -3529173984278120528L;
        $r0[697] = 5317296011783481118L;
        $r0[698] = 8812437177215009958L;
        $r0[699] = -2744615621445586530L;
        $r0[700] = 1418237564682130775L;
        $r0[701] = 8287918193617750527L;
        $r0[702] = 5641726496814939044L;
        $r0[703] = -47443777466463686L;
        $r0[704] = 6176181444192939950L;
        $r0[705] = -5160524448685921952L;
        $r0[706] = -3836896475970613836L;
        $r0[707] = -2668126031979123873L;
        $r0[708] = -5332828906549230440L;
        $r0[709] = 3534397173597697283L;
        $r0[710] = -1693429024984254962L;
        $r0[711] = 2378655170733740360L;
        $r0[712] = -552643018769440755L;
        $r0[713] = 551298419243755034L;
        $r0[714] = -4269103759267730770L;
        $r0[715] = -435572429638872008L;
        $r0[716] = 1942137629605578202L;
        $r0[717] = -741773765110731084L;
        $r0[718] = -7626055490284413820L;
        $r0[719] = 319261663834750185L;
        $r0[720] = -1126723894144361908L;
        $r0[721] = -7617977520976348028L;
        $r0[722] = -7192578181343322179L;
        $r0[723] = 5921710089078452638L;
        $r0[724] = 1692791583615940497L;
        $r0[725] = 3154220012138640370L;
        $r0[726] = 2462272376968205830L;
        $r0[727] = 5215882904155809664L;
        $r0[728] = 9063345109742779520L;
        $r0[729] = -8434249029387572864L;
        $r0[730] = 2282028593076952567L;
        $r0[731] = -1956459363404282278L;
        $r0[732] = -7088568204036607476L;
        $r0[733] = 2648366387851958704L;
        $r0[734] = 2535530668932196013L;
        $r0[735] = -3060551081441224714L;
        $r0[736] = 6797681746413993003L;
        $r0[737] = 9131737009282615627L;
        $r0[738] = 744965241806492274L;
        $r0[739] = -2912572593751847674L;
        $r0[740] = -7040231872174702793L;
        $r0[741] = 1724859165393741376L;
        $r0[742] = 2131804225590070214L;
        $r0[743] = -7796891254993561507L;
        $r0[744] = 7348272751505534329L;
        $r0[745] = -3028133809084889899L;
        $r0[746] = -4416447665223034257L;
        $r0[747] = 6426639016335384064L;
        $r0[748] = -3589502756575571236L;
        $r0[749] = 8982836549816060296L;
        $r0[750] = 2847738978322528776L;
        $r0[751] = -4171543124651995508L;
        $r0[752] = 1517491100508351526L;
        $r0[753] = -6959678130640022028L;
        $r0[754] = 7252270709068430025L;
        $r0[755] = 1454069630547688509L;
        $r0[756] = 879136823698237927L;
        $r0[757] = 764541931096396549L;
        $r0[758] = -1818291546970408658L;
        $r0[759] = 8210570252116953863L;
        $r0[760] = -1027731306262305510L;
        $r0[761] = -1789924905178677132L;
        $r0[762] = -7567181820563274204L;
        $r0[763] = -9105903926093857371L;
        $r0[764] = 6892625624787444041L;
        $r0[765] = 6239858431661771035L;
        $r0[766] = -7962612811332817823L;
        $r0[767] = -3310835631931791777L;
        $r0[768] = 3591372000141165328L;
        $r0[769] = -1052235342745599600L;
        $r0[770] = -6521666110210903136L;
        $r0[771] = 2231224496660291273L;
        $r0[772] = 8127998803539291684L;
        $r0[773] = -2154291592623801641L;
        $r0[774] = 16488107566197090L;
        $r0[775] = 2060923303336906913L;
        $r0[776] = -3516953014032317815L;
        $r0[777] = -3394515125949629582L;
        $r0[778] = 8630622898638529667L;
        $r0[779] = 7467898009369859339L;
        $r0[780] = -516182592762444535L;
        <org.petero.droidfish.book.PolyglotBook: long[] hashRandoms> = $r0;
        return;
    }
}
class org.petero.droidfish.engine.DroidComputerPlayer$1 extends java.lang.Object implements org.petero.droidfish.engine.UCIEngine$Report
{
    final org.petero.droidfish.engine.DroidComputerPlayer this$0;

    void <init>(org.petero.droidfish.engine.DroidComputerPlayer)
    {
        org.petero.droidfish.engine.DroidComputerPlayer$1 r0;
        org.petero.droidfish.engine.DroidComputerPlayer r1;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$1;
        r1 := @parameter0: org.petero.droidfish.engine.DroidComputerPlayer;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer$1: org.petero.droidfish.engine.DroidComputerPlayer this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void reportError(java.lang.String)
    {
        org.petero.droidfish.engine.DroidComputerPlayer$1 r0;
        java.lang.String r1;
        org.petero.droidfish.engine.DroidComputerPlayer $r2;
        org.petero.droidfish.gamelogic.SearchListener $r3;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$1;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        r1 = "";

     label0:
        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer$1: org.petero.droidfish.engine.DroidComputerPlayer this$0>;
        $r3 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener access$000(org.petero.droidfish.engine.DroidComputerPlayer)>($r2);
        interfaceinvoke $r3.<org.petero.droidfish.gamelogic.SearchListener: void reportEngineError(java.lang.String)>(r1);
        return;
    }
}
class org.petero.droidfish.engine.DroidComputerPlayer$2 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.engine.UCIEngine val$uci;
    final org.petero.droidfish.engine.DroidComputerPlayer this$0;

    void <init>(org.petero.droidfish.engine.DroidComputerPlayer, org.petero.droidfish.engine.UCIEngine)
    {
        org.petero.droidfish.engine.DroidComputerPlayer$2 r0;
        org.petero.droidfish.engine.DroidComputerPlayer r1;
        org.petero.droidfish.engine.UCIEngine r2;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$2;
        r1 := @parameter0: org.petero.droidfish.engine.DroidComputerPlayer;
        r2 := @parameter1: org.petero.droidfish.engine.UCIEngine;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer$2: org.petero.droidfish.engine.DroidComputerPlayer this$0> = r1;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer$2: org.petero.droidfish.engine.UCIEngine val$uci> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$2 r0;
        org.petero.droidfish.engine.DroidComputerPlayer $r1;
        org.petero.droidfish.engine.UCIEngine $r2;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$2;
        $r1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer$2: org.petero.droidfish.engine.DroidComputerPlayer this$0>;
        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer$2: org.petero.droidfish.engine.UCIEngine val$uci>;
        staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: void access$100(org.petero.droidfish.engine.DroidComputerPlayer,org.petero.droidfish.engine.UCIEngine)>($r1, $r2);
        return;
    }
}
class org.petero.droidfish.engine.DroidComputerPlayer$3 extends java.lang.Object
{
    static final int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState;

    static void <clinit>()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$MainState[] $r0;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r1, $r7, $r11, $r15, $r19, $r23;
        java.lang.NoSuchFieldError r2, $r5, $r8, r9, $r12, r13, $r16, r17, $r20, r21, $r24, r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r3, $r4, $r6, $r10, $r14, $r18, $r22;

        $r0 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState[] values()>();
        $i0 = lengthof $r0;
        $r3 = newarray (int)[$i0];
        <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState> = $r3;

     label0:
        $r4 = <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState>;
        $r1 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState SEARCH>;
        $i1 = virtualinvoke $r1.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: int ordinal()>();
        $r4[$i1] = 1;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;

     label3:
        $r6 = <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState>;
        $r7 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState PONDER>;
        $i2 = virtualinvoke $r7.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: int ordinal()>();
        $r6[$i2] = 2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;

     label6:
        $r10 = <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState>;
        $r11 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState ANALYZE>;
        $i3 = virtualinvoke $r11.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: int ordinal()>();
        $r10[$i3] = 3;

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;
        r13 = $r12;

     label9:
        $r14 = <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState>;
        $r15 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState STOP_SEARCH>;
        $i4 = virtualinvoke $r15.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: int ordinal()>();
        $r14[$i4] = 4;

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;
        r17 = $r16;

     label12:
        $r18 = <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState>;
        $r19 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState READ_OPTIONS>;
        $i5 = virtualinvoke $r19.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: int ordinal()>();
        $r18[$i5] = 5;

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;
        r21 = $r20;

     label15:
        $r22 = <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState>;
        $r23 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState WAIT_READY>;
        $i6 = virtualinvoke $r23.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: int ordinal()>();
        $r22[$i6] = 6;

     label16:
        goto label18;

     label17:
        $r24 := @caughtexception;
        r25 = $r24;

     label18:
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
        catch java.lang.NoSuchFieldError from label15 to label16 with label17;
    }
}
final class org.petero.droidfish.engine.DroidComputerPlayer$EngineState extends java.lang.Object
{
    java.lang.String engine;
    org.petero.droidfish.engine.DroidComputerPlayer$MainState state;
    int searchId;

    void <init>()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState r0;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r1;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$EngineState;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: java.lang.String engine> = "";
        $r1 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState DEAD>;
        virtualinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r1);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: int searchId> = -1;
        return;
    }

    final void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)
    {
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState r0;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState r1;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$EngineState;
        r1 := @parameter0: org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state> = r1;
        return;
    }
}
final enum class org.petero.droidfish.engine.DroidComputerPlayer$MainState extends java.lang.Enum
{
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$MainState READ_OPTIONS;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$MainState WAIT_READY;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$MainState IDLE;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$MainState SEARCH;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$MainState PONDER;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$MainState ANALYZE;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$MainState STOP_SEARCH;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$MainState DEAD;
    private static final org.petero.droidfish.engine.DroidComputerPlayer$MainState[] $VALUES;

    public static org.petero.droidfish.engine.DroidComputerPlayer$MainState[] values()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$MainState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.petero.droidfish.engine.DroidComputerPlayer$MainState[]) $r1;
        return $r2;
    }

    public static org.petero.droidfish.engine.DroidComputerPlayer$MainState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/petero/droidfish/engine/DroidComputerPlayer$MainState", r0);
        $r2 = (org.petero.droidfish.engine.DroidComputerPlayer$MainState) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.petero.droidfish.engine.DroidComputerPlayer$MainState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState[] $r8;

        $r0 = new org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        specialinvoke $r0.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: void <init>(java.lang.String,int)>("READ_OPTIONS", 0);
        <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState READ_OPTIONS> = $r0;
        $r1 = new org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        specialinvoke $r1.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: void <init>(java.lang.String,int)>("WAIT_READY", 1);
        <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState WAIT_READY> = $r1;
        $r2 = new org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        specialinvoke $r2.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: void <init>(java.lang.String,int)>("IDLE", 2);
        <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState IDLE> = $r2;
        $r3 = new org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        specialinvoke $r3.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: void <init>(java.lang.String,int)>("SEARCH", 3);
        <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState SEARCH> = $r3;
        $r4 = new org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        specialinvoke $r4.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: void <init>(java.lang.String,int)>("PONDER", 4);
        <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState PONDER> = $r4;
        $r5 = new org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        specialinvoke $r5.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: void <init>(java.lang.String,int)>("ANALYZE", 5);
        <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState ANALYZE> = $r5;
        $r6 = new org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        specialinvoke $r6.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: void <init>(java.lang.String,int)>("STOP_SEARCH", 6);
        <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState STOP_SEARCH> = $r6;
        $r7 = new org.petero.droidfish.engine.DroidComputerPlayer$MainState;
        specialinvoke $r7.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: void <init>(java.lang.String,int)>("DEAD", 7);
        <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState DEAD> = $r7;
        $r8 = newarray (org.petero.droidfish.engine.DroidComputerPlayer$MainState)[8];
        $r9 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState READ_OPTIONS>;
        $r8[0] = $r9;
        $r10 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState WAIT_READY>;
        $r8[1] = $r10;
        $r11 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState IDLE>;
        $r8[2] = $r11;
        $r12 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState SEARCH>;
        $r8[3] = $r12;
        $r13 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState PONDER>;
        $r8[4] = $r13;
        $r14 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState ANALYZE>;
        $r8[5] = $r14;
        $r15 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState STOP_SEARCH>;
        $r8[6] = $r15;
        $r16 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState DEAD>;
        $r8[7] = $r16;
        <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState[] $VALUES> = $r8;
        return;
    }
}
public final class org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest extends java.lang.Object
{
    int searchId;
    long startTime;
    org.petero.droidfish.gamelogic.Position prevPos;
    java.util.ArrayList mList;
    org.petero.droidfish.gamelogic.Position currPos;
    boolean drawOffer;
    boolean isSearch;
    boolean isAnalyze;
    int wTime;
    int bTime;
    int inc;
    int movesToGo;
    java.lang.String engine;
    int engineThreads;
    int strength;
    int numPV;
    boolean ponderEnabled;
    org.petero.droidfish.gamelogic.Move ponderMove;
    long[] posHashList;
    int posHashListSize;
    java.util.ArrayList searchMoves;

    public void <init>()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest r0;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest startRequest(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest $r1, r2;

        i0 := @parameter0: int;
        r0 := @parameter1: java.lang.String;
        $r1 = new org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest;
        specialinvoke $r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: void <init>()>();
        r2 = $r1;
        r2.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId> = i0;
        r2.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isSearch> = 0;
        r2.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isAnalyze> = 0;
        r2.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.lang.String engine> = r0;
        r2.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: long[] posHashList> = null;
        r2.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int posHashListSize> = 0;
        return r2;
    }

    public static org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest(int, long, org.petero.droidfish.gamelogic.Position, java.util.ArrayList, org.petero.droidfish.gamelogic.Position, boolean, int, int, int, int, boolean, org.petero.droidfish.gamelogic.Move, java.lang.String, int, int)
    {
        int i0, i2, i3, i4, i5, i6, i7;
        long l1;
        org.petero.droidfish.gamelogic.Position r0, r2;
        java.util.ArrayList r1;
        boolean z0, z1;
        org.petero.droidfish.gamelogic.Move r3;
        java.lang.String r4;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest $r5, r6;

        i0 := @parameter0: int;
        l1 := @parameter1: long;
        r0 := @parameter2: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter3: java.util.ArrayList;
        r2 := @parameter4: org.petero.droidfish.gamelogic.Position;
        z0 := @parameter5: boolean;
        i2 := @parameter6: int;
        i3 := @parameter7: int;
        i4 := @parameter8: int;
        i5 := @parameter9: int;
        z1 := @parameter10: boolean;
        r3 := @parameter11: org.petero.droidfish.gamelogic.Move;
        r4 := @parameter12: java.lang.String;
        i6 := @parameter13: int;
        i7 := @parameter14: int;
        $r5 = new org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest;
        specialinvoke $r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: void <init>()>();
        r6 = $r5;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId> = i0;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: long startTime> = l1;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position prevPos> = r0;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList> = r1;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos> = r2;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean drawOffer> = z0;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isSearch> = 1;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isAnalyze> = 0;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int wTime> = i2;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int bTime> = i3;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int inc> = i4;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int movesToGo> = i5;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.lang.String engine> = r4;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int engineThreads> = i6;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int strength> = i7;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int numPV> = 1;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean ponderEnabled> = z1;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove> = r3;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: long[] posHashList> = null;
        r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int posHashListSize> = 0;
        return r6;
    }

    public static org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest analyzeRequest(int, org.petero.droidfish.gamelogic.Position, java.util.ArrayList, org.petero.droidfish.gamelogic.Position, boolean, java.lang.String, int, int)
    {
        int i0, i1, i2;
        org.petero.droidfish.gamelogic.Position r0, r2;
        java.util.ArrayList r1;
        boolean z0;
        java.lang.String r3;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest $r4, r5;
        byte $b3;
        long $l4;

        i0 := @parameter0: int;
        r0 := @parameter1: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter2: java.util.ArrayList;
        r2 := @parameter3: org.petero.droidfish.gamelogic.Position;
        z0 := @parameter4: boolean;
        r3 := @parameter5: java.lang.String;
        i1 := @parameter6: int;
        i2 := @parameter7: int;
        $r4 = new org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest;
        specialinvoke $r4.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: void <init>()>();
        r5 = $r4;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId> = i0;
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: long startTime> = $l4;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position prevPos> = r0;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList> = r1;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos> = r2;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean drawOffer> = z0;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isSearch> = 0;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isAnalyze> = 1;
        $b3 = 0;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int movesToGo> = $b3;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int inc> = $b3;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int bTime> = $b3;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int wTime> = $b3;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.lang.String engine> = r3;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int engineThreads> = i1;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int strength> = 1000;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int numPV> = i2;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean ponderEnabled> = 0;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove> = null;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: long[] posHashList> = null;
        r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int posHashListSize> = 0;
        return r5;
    }

    final void ponderHit()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest r0;
        org.petero.droidfish.gamelogic.UndoInfo r1, $r3;
        org.petero.droidfish.gamelogic.Move $r2, $r5;
        org.petero.droidfish.gamelogic.Position $r4;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest;
        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r2 != null goto label0;

        return;

     label0:
        $r3 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r1 = $r3;
        $r4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        $r5 = r0.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r5, r1);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove> = null;
        return;
    }
}
public final enum class org.petero.droidfish.engine.DroidComputerPlayer$SearchType extends java.lang.Enum
{
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$SearchType NONE;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$SearchType SEARCH;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$SearchType PONDER;
    public static final enum org.petero.droidfish.engine.DroidComputerPlayer$SearchType ANALYZE;
    private static final org.petero.droidfish.engine.DroidComputerPlayer$SearchType[] $VALUES;

    public static org.petero.droidfish.engine.DroidComputerPlayer$SearchType[] values()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.petero.droidfish.engine.DroidComputerPlayer$SearchType[]) $r1;
        return $r2;
    }

    public static org.petero.droidfish.engine.DroidComputerPlayer$SearchType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/petero/droidfish/engine/DroidComputerPlayer$SearchType", r0);
        $r2 = (org.petero.droidfish.engine.DroidComputerPlayer$SearchType) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer$SearchType;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType[] $r4;

        $r0 = new org.petero.droidfish.engine.DroidComputerPlayer$SearchType;
        specialinvoke $r0.<org.petero.droidfish.engine.DroidComputerPlayer$SearchType: void <init>(java.lang.String,int)>("NONE", 0);
        <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType NONE> = $r0;
        $r1 = new org.petero.droidfish.engine.DroidComputerPlayer$SearchType;
        specialinvoke $r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchType: void <init>(java.lang.String,int)>("SEARCH", 1);
        <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType SEARCH> = $r1;
        $r2 = new org.petero.droidfish.engine.DroidComputerPlayer$SearchType;
        specialinvoke $r2.<org.petero.droidfish.engine.DroidComputerPlayer$SearchType: void <init>(java.lang.String,int)>("PONDER", 2);
        <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType PONDER> = $r2;
        $r3 = new org.petero.droidfish.engine.DroidComputerPlayer$SearchType;
        specialinvoke $r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchType: void <init>(java.lang.String,int)>("ANALYZE", 3);
        <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType ANALYZE> = $r3;
        $r4 = newarray (org.petero.droidfish.engine.DroidComputerPlayer$SearchType)[4];
        $r5 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType NONE>;
        $r4[0] = $r5;
        $r6 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType SEARCH>;
        $r4[1] = $r6;
        $r7 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType PONDER>;
        $r4[2] = $r7;
        $r8 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType ANALYZE>;
        $r4[3] = $r8;
        <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType[] $VALUES> = $r4;
        return;
    }
}
public class org.petero.droidfish.engine.DroidComputerPlayer extends java.lang.Object
{
    private org.petero.droidfish.engine.UCIEngine uciEngine;
    private final android.content.Context context;
    private final org.petero.droidfish.gamelogic.SearchListener listener;
    private final org.petero.droidfish.book.DroidBook book;
    private org.petero.droidfish.EngineOptions engineOptions;
    private boolean newGame;
    private int maxPV;
    private int numCPUs;
    private java.lang.String engineName;
    private org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState;
    private org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest;
    private java.lang.Thread engineMonitor;
    private static final long guiUpdateInterval;
    private long lastGUIUpdate;
    private int statCurrDepth;
    private int statPVDepth;
    private int statScore;
    private boolean statIsMate;
    private boolean statUpperBound;
    private boolean statLowerBound;
    private int statTime;
    private long statNodes;
    private int statNps;
    private int pvNum;
    private java.util.ArrayList statPV;
    private java.lang.String statCurrMove;
    private int statCurrMoveNr;
    private java.util.ArrayList statPvInfo;
    private boolean depthModified;
    private boolean currMoveModified;
    private boolean pvModified;
    private boolean statsModified;

    public void <init>(android.content.Context, org.petero.droidfish.gamelogic.SearchListener)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        android.content.Context r1;
        org.petero.droidfish.gamelogic.SearchListener r2;
        java.util.ArrayList $r3, $r4;
        org.petero.droidfish.book.DroidBook $r5;
        org.petero.droidfish.EngineOptions $r6;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r7;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: org.petero.droidfish.gamelogic.SearchListener;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine> = null;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean newGame> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int maxPV> = 1;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int numCPUs> = 1;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName> = "Computer";
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: long lastGUIUpdate> = 0L;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statCurrDepth> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statPVDepth> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statScore> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statIsMate> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statUpperBound> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statLowerBound> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statTime> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: long statNodes> = 0L;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statNps> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int pvNum> = 0;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPV> = $r3;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String statCurrMove> = "";
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statCurrMoveNr> = 0;
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPvInfo> = $r4;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean depthModified> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean currMoveModified> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean pvModified> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statsModified> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: android.content.Context context> = r1;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener> = r2;
        $r5 = staticinvoke <org.petero.droidfish.book.DroidBook: org.petero.droidfish.book.DroidBook getInstance()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.book.DroidBook book> = $r5;
        $r6 = new org.petero.droidfish.EngineOptions;
        specialinvoke $r6.<org.petero.droidfish.EngineOptions: void <init>()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.EngineOptions engineOptions> = $r6;
        $r7 = new org.petero.droidfish.engine.DroidComputerPlayer$EngineState;
        specialinvoke $r7.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void <init>()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState> = $r7;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest> = null;
        return;
    }

    public final synchronized boolean computerBusy()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        int[] $r1;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r2;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r3;
        int $i0, $i1;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $r1 = <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState>;
        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r3 = $r2.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $i0 = virtualinvoke $r3.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: int ordinal()>();
        $i1 = $r1[$i0];
        tableswitch($i1)
        {
            case 1: goto label0;
            case 2: goto label0;
            case 3: goto label0;
            case 4: goto label0;
            default: goto label1;
        };

     label0:
        return 1;

     label1:
        return 0;
    }

    public final synchronized int getMaxPV()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        int $i0;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $i0 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int maxPV>;
        return $i0;
    }

    public final void setBookOptions(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.book.BookOptions r1;
        org.petero.droidfish.book.DroidBook $r2;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: org.petero.droidfish.book.BookOptions;
        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.book.DroidBook book>;
        virtualinvoke $r2.<org.petero.droidfish.book.DroidBook: void setOptions(org.petero.droidfish.book.BookOptions)>(r1);
        return;
    }

    public final void setEngineOptions(org.petero.droidfish.EngineOptions)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.EngineOptions r1;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.EngineOptions engineOptions> = r1;
        return;
    }

    public final org.petero.droidfish.gamelogic.Pair getBookHints(org.petero.droidfish.gamelogic.Position, boolean)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.gamelogic.Position r1;
        boolean z0;
        org.petero.droidfish.book.DroidBook $r2;
        org.petero.droidfish.gamelogic.Pair $r3;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        z0 := @parameter1: boolean;
        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.book.DroidBook book>;
        $r3 = virtualinvoke $r2.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.gamelogic.Pair getAllBookMoves(org.petero.droidfish.gamelogic.Position,boolean)>(r1, z0);
        return $r3;
    }

    public final synchronized java.lang.String getEngineName()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        java.lang.String $r1;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $r1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName>;
        return $r1;
    }

    public final synchronized void clearTT()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean newGame> = 1;
        return;
    }

    public final synchronized void ponderHit(int)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        int i0, $i1;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest $r1, $r2, $r4, $r5, $r9;
        org.petero.droidfish.gamelogic.Move $r3;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r6, $r10, $r14;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r7, $r8, $r11, $r12, $r15;
        long $l2;
        org.petero.droidfish.engine.UCIEngine $r13;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r3 = $r2.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r3 == null goto label0;

        $r4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $i1 = $r4.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId>;
        if $i1 == i0 goto label1;

     label0:
        return;

     label1:
        $r5 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        virtualinvoke $r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: void ponderHit()>();
        $r6 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r7 = $r6.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $r8 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState PONDER>;
        if $r7 == $r8 goto label2;

        $r9 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r9.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: long startTime> = $l2;

     label2:
        $r10 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r11 = $r10.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $r12 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState PONDER>;
        if $r11 != $r12 goto label3;

        $r13 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r13.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>("ponderhit");
        $r14 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r15 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState SEARCH>;
        virtualinvoke $r14.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r15);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean pvModified> = 1;
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void notifyGUI()>();

     label3:
        return;
    }

    public final synchronized void shutdownEngine()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.UCIEngine $r1, $r3;
        java.lang.Thread $r2;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r4;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r5;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $r1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.Thread engineMonitor>;
        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.Thread engineMonitor> = null;
        $r3 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r3.<org.petero.droidfish.engine.UCIEngine: void shutDown()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine> = null;

     label0:
        $r4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r5 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState DEAD>;
        virtualinvoke $r4.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r5);
        return;
    }

    public final synchronized void queueStartEngine(int, java.lang.String)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        int i0;
        java.lang.String r1;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest $r2;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void killOldEngine(java.lang.String)>(r1);
        virtualinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean stopSearch()>();
        $r2 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest startRequest(int,java.lang.String)>(i0, r1);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest> = $r2;
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void handleQueue()>();
        return;
    }

    private final java.util.ArrayList movesToSearch(org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest r1;
        java.util.ArrayList r2;
        org.petero.droidfish.EngineOptions $r3;
        boolean $z0;
        org.petero.droidfish.gtb.Probe $r4;
        org.petero.droidfish.gamelogic.Position $r5, $r7;
        org.petero.droidfish.gamelogic.MoveGen $r6;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest;
        r2 = null;
        $r3 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.EngineOptions engineOptions>;
        $z0 = $r3.<org.petero.droidfish.EngineOptions: boolean rootProbe>;
        if $z0 == 0 goto label0;

        $r4 = staticinvoke <org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.Probe getInstance()>();
        $r5 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        r2 = virtualinvoke $r4.<org.petero.droidfish.gtb.Probe: java.util.ArrayList findOptimal(org.petero.droidfish.gamelogic.Position)>($r5);

     label0:
        if r2 == null goto label1;

        r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList searchMoves> = r2;
        goto label2;

     label1:
        $r6 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r6.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        $r7 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        r2 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>($r7);
        r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList searchMoves> = null;

     label2:
        return r2;
    }

    public final synchronized void queueSearchRequest(org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest r1;
        long[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11;
        org.petero.droidfish.gamelogic.Position r3, $r12, $r13, $r21, $r23, $r26, $r30;
        org.petero.droidfish.gamelogic.UndoInfo r4, $r14;
        java.util.ArrayList r5, $r9, $r11, $r15, $r16;
        org.petero.droidfish.gamelogic.Move r6, $r8, $r10, $r18, $r19, r22;
        java.lang.String $r7, $r24, $r27, $r31, $r33;
        long $l6;
        java.lang.Object $r17, $r29;
        org.petero.droidfish.book.DroidBook $r20;
        org.petero.droidfish.gamelogic.SearchListener $r25, $r28, $r32;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest;
        $r7 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.lang.String engine>;
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void killOldEngine(java.lang.String)>($r7);
        virtualinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean stopSearch()>();
        $r8 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r8 == null goto label0;

        $r9 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList>;
        $r10 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label0:
        $r11 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList>;
        $i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();
        $i3 = $i2 + 1;
        r2 = newarray (long)[$i3];
        i0 = 0;
        $r12 = new org.petero.droidfish.gamelogic.Position;
        $r13 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position prevPos>;
        specialinvoke $r12.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r13);
        r3 = $r12;
        $r14 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r14.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r4 = $r14;
        i1 = 0;

     label1:
        $r15 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList>;
        $i4 = virtualinvoke $r15.<java.util.ArrayList: int size()>();
        if i1 >= $i4 goto label2;

        $i5 = i0;
        i0 = i0 + 1;
        $l6 = virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: long zobristHash()>();
        r2[$i5] = $l6;
        $r16 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList>;
        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        $r18 = (org.petero.droidfish.gamelogic.Move) $r17;
        virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r18, r4);
        i1 = i1 + 1;
        goto label1;

     label2:
        $r19 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r19 != null goto label5;

        $r20 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.book.DroidBook book>;
        $r21 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        r22 = virtualinvoke $r20.<org.petero.droidfish.book.DroidBook: org.petero.droidfish.gamelogic.Move getBookMove(org.petero.droidfish.gamelogic.Position)>($r21);
        if r22 == null goto label3;

        $r23 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        $r24 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String canClaimDraw(org.petero.droidfish.gamelogic.Position,long[],int,org.petero.droidfish.gamelogic.Move)>($r23, r2, i0, r22);
        if $r24 != "" goto label3;

        $r25 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        $i7 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId>;
        $r26 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        $r27 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean)>($r26, r22, 0, 0);
        interfaceinvoke $r25.<org.petero.droidfish.gamelogic.SearchListener: void notifySearchResult(int,java.lang.String,org.petero.droidfish.gamelogic.Move)>($i7, $r27, null);
        return;

     label3:
        r5 = specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList movesToSearch(org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest)>(r1);
        $i8 = virtualinvoke r5.<java.util.ArrayList: int size()>();
        if $i8 != 0 goto label4;

        $r28 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        $i9 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId>;
        interfaceinvoke $r28.<org.petero.droidfish.gamelogic.SearchListener: void notifySearchResult(int,java.lang.String,org.petero.droidfish.gamelogic.Move)>($i9, "", null);
        return;

     label4:
        $i10 = virtualinvoke r5.<java.util.ArrayList: int size()>();
        if $i10 != 1 goto label5;

        $r29 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(0);
        r6 = (org.petero.droidfish.gamelogic.Move) $r29;
        $r30 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        $r31 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String canClaimDraw(org.petero.droidfish.gamelogic.Position,long[],int,org.petero.droidfish.gamelogic.Move)>($r30, r2, i0, r6);
        if $r31 != "" goto label5;

        $r32 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        $i11 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId>;
        $r33 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>(r6);
        interfaceinvoke $r32.<org.petero.droidfish.gamelogic.SearchListener: void notifySearchResult(int,java.lang.String,org.petero.droidfish.gamelogic.Move)>($i11, $r33, null);
        return;

     label5:
        r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: long[] posHashList> = r2;
        r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int posHashListSize> = i0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest> = r1;
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void handleQueue()>();
        return;
    }

    public final synchronized void queueAnalyzeRequest(org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest r1;
        java.util.ArrayList r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest;
        $r3 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.lang.String engine>;
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void killOldEngine(java.lang.String)>($r3);
        virtualinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean stopSearch()>();
        r2 = specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList movesToSearch(org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest)>(r1);
        $i0 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        if $i0 != 0 goto label0;

        return;

     label0:
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest> = r1;
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void handleQueue()>();
        return;
    }

    private final void handleQueue()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r1, $r3, $r6, $r8, $r9;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r2, $r4, $r5, $r7;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r3 = $r2.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $r1 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState DEAD>;
        if $r3 != $r1 goto label0;

        $r4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r4.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: java.lang.String engine> = "";
        $r5 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r6 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState IDLE>;
        virtualinvoke $r5.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r6);

     label0:
        $r7 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r8 = $r7.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $r9 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState IDLE>;
        if $r8 != $r9 goto label1;

        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void handleIdleState()>();

     label1:
        return;
    }

    private void killOldEngine(java.lang.String)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        java.lang.String r1, $r4;
        boolean z0, $z1, $z2, $z3, $z4;
        org.petero.droidfish.engine.UCIEngine r2;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r3;
        org.petero.droidfish.EngineOptions $r5;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r4 = $r3.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: java.lang.String engine>;
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z1 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        z0 = $z2;
        if z0 != 0 goto label4;

        r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        if r2 == null goto label4;

        $r5 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.EngineOptions engineOptions>;
        $z3 = interfaceinvoke r2.<org.petero.droidfish.engine.UCIEngine: boolean optionsOk(org.petero.droidfish.EngineOptions)>($r5);
        if $z3 != 0 goto label2;

        $z4 = 1;
        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void shutdownEngine()>();

     label5:
        return;
    }

    public final synchronized boolean stopSearch()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        int[] $r1;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r2, $r5;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r3, $r6;
        int $i0, $i1;
        org.petero.droidfish.engine.UCIEngine $r4;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest> = null;
        $r1 = <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState>;
        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r3 = $r2.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $i0 = virtualinvoke $r3.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: int ordinal()>();
        $i1 = $r1[$i0];
        tableswitch($i1)
        {
            case 1: goto label0;
            case 2: goto label0;
            case 3: goto label0;
            default: goto label1;
        };

     label0:
        $r4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r4.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>("stop");
        $r5 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r6 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState STOP_SEARCH>;
        virtualinvoke $r5.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r6);
        return 1;

     label1:
        return 0;
    }

    public void moveNow()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r1, $r3;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r2;
        org.petero.droidfish.engine.UCIEngine $r4;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r3 = $r2.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $r1 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState SEARCH>;
        if $r3 != $r1 goto label0;

        $r4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r4.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>("stop");

     label0:
        return;
    }

    public final synchronized boolean sameSearchId(int)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        int i0, $i1;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest $r1, $r2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $i1 = $r2.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId>;
        if $i1 != i0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final synchronized org.petero.droidfish.engine.DroidComputerPlayer$SearchType getSearchType()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest $r1, $r3, $r5, $r7;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType $r2, $r4, $r6, $r9, $r10;
        boolean $z0, $z1;
        org.petero.droidfish.gamelogic.Move $r8;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $r1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        if $r1 != null goto label0;

        $r2 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType NONE>;
        return $r2;

     label0:
        $r3 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $z0 = $r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isAnalyze>;
        if $z0 == 0 goto label1;

        $r4 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType ANALYZE>;
        return $r4;

     label1:
        $r5 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $z1 = $r5.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isSearch>;
        if $z1 != 0 goto label2;

        $r6 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType NONE>;
        return $r6;

     label2:
        $r7 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r8 = $r7.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r8 != null goto label3;

        $r9 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType SEARCH>;
        return $r9;

     label3:
        $r10 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType PONDER>;
        return $r10;
    }

    private final void handleIdleState()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest r1, $r12, $r13, $r14, $r16, $r18, $r19, $r20, $r21, $r23, $r24;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        long l0, $l4, $l5;
        int i1, i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, $i31, $i32;
        org.petero.droidfish.gamelogic.Move r2, $r17, $r37, $r62, $r75, $r88, r104;
        org.petero.droidfish.engine.UCIEngine $r3, $r7, $r8, $r22, $r25, $r40, $r41, $r42, $r44, $r72, $r91, $r93, $r94, $r108;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r4, $r9, $r11, $r74, $r110;
        java.lang.String $r5, $r6, $r30, $r38, $r43, $r45, $r51, $r56, $r60, $r70, $r73, $r81, $r89, $r92, $r95, $r106, $r109;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r10, $r76, $r111;
        org.petero.droidfish.gamelogic.Position $r15, $r29, $r80;
        java.lang.StringBuilder $r26, r27, $r46, r47, $r77, r78, $r96, r97;
        java.util.ArrayList $r32, $r35, $r64, $r66, $r83, $r86, $r99, $r101;
        java.lang.Object $r36, $r68, $r87, $r103;
        java.lang.Object[] $r48, $r53, $r58;
        java.lang.Integer $r49, $r50, $r54, $r55, $r59;
        java.util.Iterator r67, r102;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        if r1 != null goto label0;

        return;

     label0:
        $r3 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        if $r3 == null goto label1;

        $r4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r5 = $r4.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: java.lang.String engine>;
        $r6 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.lang.String engine>;
        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z3 != 0 goto label2;

     label1:
        virtualinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void shutdownEngine()>();
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void startEngine()>();
        return;

     label2:
        $z4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean newGame>;
        if $z4 == 0 goto label3;

        $r7 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r7.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>("ucinewgame");
        $r8 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r8.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>("isready");
        $r9 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r10 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState WAIT_READY>;
        virtualinvoke $r9.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r10);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean newGame> = 0;
        return;

     label3:
        z0 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isSearch>;
        z1 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean isAnalyze>;
        if z0 != 0 goto label4;

        if z1 != 0 goto label4;

        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest> = null;
        return;

     label4:
        $r11 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r12 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $i3 = $r12.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId>;
        $r11.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: int searchId> = $i3;
        if z0 == 0 goto label8;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r13 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $l4 = $r13.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: long startTime>;
        $l5 = l0 - $l4;
        i1 = (int) $l5;
        $r14 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r15 = $r14.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        $z5 = $r15.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $r16 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r17 = $r16.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r17 == null goto label5;

        $z6 = 1;
        goto label6;

     label5:
        $z6 = 0;

     label6:
        z2 = $z5 ^ $z6;
        if z2 == 0 goto label7;

        $r18 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r19 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $i6 = $r19.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int wTime>;
        $i7 = $i6 - i1;
        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i7);
        $r18.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int wTime> = $i8;
        goto label8;

     label7:
        $r20 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r21 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $i9 = $r21.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int bTime>;
        $i10 = $i9 - i1;
        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i10);
        $r20.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int bTime> = $i11;

     label8:
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void clearInfo()>();
        $r22 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        $r23 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $i12 = $r23.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int strength>;
        interfaceinvoke $r22.<org.petero.droidfish.engine.UCIEngine: void setStrength(int)>($i12);
        $i13 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int maxPV>;
        if $i13 <= 1 goto label9;

        $i14 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int maxPV>;
        $r24 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $i15 = $r24.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int numPV>;
        i16 = staticinvoke <java.lang.Math: int min(int,int)>($i14, $i15);
        $r25 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r25.<org.petero.droidfish.engine.UCIEngine: void setOption(java.lang.String,int)>("MultiPV", i16);

     label9:
        if z0 == 0 goto label23;

        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();
        r27 = $r26;
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position fen ");
        $r29 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position prevPos>;
        $r30 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String toFEN(org.petero.droidfish.gamelogic.Position)>($r29);
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList>;
        i2 = virtualinvoke $r32.<java.util.ArrayList: int size()>();
        if i2 <= 0 goto label11;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" moves");
        i17 = 0;

     label10:
        if i17 >= i2 goto label11;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r35 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList>;
        $r36 = virtualinvoke $r35.<java.util.ArrayList: java.lang.Object get(int)>(i17);
        $r37 = (org.petero.droidfish.gamelogic.Move) $r36;
        $r38 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>($r37);
        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);
        i17 = i17 + 1;
        goto label10;

     label11:
        $r40 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        $z7 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean ponderEnabled>;
        interfaceinvoke $r40.<org.petero.droidfish.engine.UCIEngine: void setOption(java.lang.String,boolean)>("Ponder", $z7);
        $r41 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r41.<org.petero.droidfish.engine.UCIEngine: void setOption(java.lang.String,boolean)>("UCI_AnalyseMode", 0);
        $r42 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        $r43 = "Threads";
        $i18 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int engineThreads>;
        if $i18 <= 0 goto label12;

        $i19 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int engineThreads>;
        goto label13;

     label12:
        $i19 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int numCPUs>;

     label13:
        interfaceinvoke $r42.<org.petero.droidfish.engine.UCIEngine: void setOption(java.lang.String,int)>($r43, $i19);
        $r44 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        $r45 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r44.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>($r45);
        $i20 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int wTime>;
        if $i20 >= 1 goto label14;

        r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int wTime> = 1;

     label14:
        $i21 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int bTime>;
        if $i21 >= 1 goto label15;

        r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int bTime> = 1;

     label15:
        $r46 = new java.lang.StringBuilder;
        specialinvoke $r46.<java.lang.StringBuilder: void <init>(int)>(96);
        r47 = $r46;
        $r48 = newarray (java.lang.Object)[2];
        $i22 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int wTime>;
        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);
        $r48[0] = $r49;
        $i23 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int bTime>;
        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);
        $r48[1] = $r50;
        $r51 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("go wtime %d btime %d", $r48);
        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);
        $i24 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int inc>;
        if $i24 <= 0 goto label16;

        $r53 = newarray (java.lang.Object)[2];
        $i25 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int inc>;
        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);
        $r53[0] = $r54;
        $i26 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int inc>;
        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i26);
        $r53[1] = $r55;
        $r56 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" winc %d binc %d", $r53);
        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

     label16:
        $i27 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int movesToGo>;
        if $i27 <= 0 goto label17;

        $r58 = newarray (java.lang.Object)[1];
        $i28 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int movesToGo>;
        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i28);
        $r58[0] = $r59;
        $r60 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" movestogo %d", $r58);
        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

     label17:
        $r62 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r62 == null goto label18;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ponder");

     label18:
        $r64 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList searchMoves>;
        if $r64 == null goto label20;

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" searchmoves");
        $r66 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList searchMoves>;
        r67 = virtualinvoke $r66.<java.util.ArrayList: java.util.Iterator iterator()>();

     label19:
        $z8 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>();
        if $z8 == 0 goto label20;

        $r68 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>();
        r2 = (org.petero.droidfish.gamelogic.Move) $r68;
        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r70 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>(r2);
        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);
        goto label19;

     label20:
        $r72 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        $r73 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r72.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>($r73);
        $r74 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r75 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r75 != null goto label21;

        $r76 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState SEARCH>;
        goto label22;

     label21:
        $r76 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState PONDER>;

     label22:
        virtualinvoke $r74.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r76);
        goto label30;

     label23:
        $r77 = new java.lang.StringBuilder;
        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();
        r78 = $r77;
        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("position fen ");
        $r80 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position prevPos>;
        $r81 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String toFEN(org.petero.droidfish.gamelogic.Position)>($r80);
        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);
        $r83 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList>;
        i29 = virtualinvoke $r83.<java.util.ArrayList: int size()>();
        if i29 <= 0 goto label25;

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" moves");
        i30 = 0;

     label24:
        if i30 >= i29 goto label25;

        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r86 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList mList>;
        $r87 = virtualinvoke $r86.<java.util.ArrayList: java.lang.Object get(int)>(i30);
        $r88 = (org.petero.droidfish.gamelogic.Move) $r87;
        $r89 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>($r88);
        virtualinvoke r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);
        i30 = i30 + 1;
        goto label24;

     label25:
        $r91 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        $r92 = virtualinvoke r78.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r91.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>($r92);
        $r93 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r93.<org.petero.droidfish.engine.UCIEngine: void setOption(java.lang.String,boolean)>("UCI_AnalyseMode", 1);
        $r94 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        $r95 = "Threads";
        $i31 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int engineThreads>;
        if $i31 <= 0 goto label26;

        $i32 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int engineThreads>;
        goto label27;

     label26:
        $i32 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int numCPUs>;

     label27:
        interfaceinvoke $r94.<org.petero.droidfish.engine.UCIEngine: void setOption(java.lang.String,int)>($r95, $i32);
        $r96 = new java.lang.StringBuilder;
        specialinvoke $r96.<java.lang.StringBuilder: void <init>(int)>(96);
        r97 = $r96;
        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("go infinite");
        $r99 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList searchMoves>;
        if $r99 == null goto label29;

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" searchmoves");
        $r101 = r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.util.ArrayList searchMoves>;
        r102 = virtualinvoke $r101.<java.util.ArrayList: java.util.Iterator iterator()>();

     label28:
        $z9 = interfaceinvoke r102.<java.util.Iterator: boolean hasNext()>();
        if $z9 == 0 goto label29;

        $r103 = interfaceinvoke r102.<java.util.Iterator: java.lang.Object next()>();
        r104 = (org.petero.droidfish.gamelogic.Move) $r103;
        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r106 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>(r104);
        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);
        goto label28;

     label29:
        $r108 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        $r109 = virtualinvoke r97.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r108.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>($r109);
        $r110 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r111 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState ANALYZE>;
        virtualinvoke $r110.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r111);

     label30:
        return;
    }

    private final void startEngine()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r1, $r7, $r24;
        org.petero.droidfish.engine.DroidComputerPlayer$1 $r2;
        org.petero.droidfish.engine.UCIEngine r3, $r4, $r13, $r14, $r18, $r19;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Thread $r5, $r15, $r17;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r6, $r20, $r23;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest $r8, $r10, $r21;
        android.content.Context $r9;
        java.lang.String $r11, $r22;
        org.petero.droidfish.EngineOptions $r12;
        org.petero.droidfish.engine.DroidComputerPlayer$2 $r16;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $r4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        if $r4 != null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: void myAssert(boolean)>($z0);
        $r5 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.Thread engineMonitor>;
        if $r5 != null goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: void myAssert(boolean)>($z1);
        $r6 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r7 = $r6.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $r1 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState DEAD>;
        if $r7 != $r1 goto label4;

        $z2 = 1;
        goto label5;

     label4:
        $z2 = 0;

     label5:
        staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: void myAssert(boolean)>($z2);
        $r8 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        if $r8 == null goto label6;

        $z3 = 1;
        goto label7;

     label6:
        $z3 = 0;

     label7:
        staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: void myAssert(boolean)>($z3);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName> = "Computer";
        $r9 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: android.content.Context context>;
        $r10 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r11 = $r10.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.lang.String engine>;
        $r12 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.EngineOptions engineOptions>;
        $r2 = new org.petero.droidfish.engine.DroidComputerPlayer$1;
        specialinvoke $r2.<org.petero.droidfish.engine.DroidComputerPlayer$1: void <init>(org.petero.droidfish.engine.DroidComputerPlayer)>(r0);
        $r13 = staticinvoke <org.petero.droidfish.engine.UCIEngineBase: org.petero.droidfish.engine.UCIEngine getEngine(android.content.Context,java.lang.String,org.petero.droidfish.EngineOptions,org.petero.droidfish.engine.UCIEngine$Report)>($r9, $r11, $r12, $r2);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine> = $r13;
        $r14 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r14.<org.petero.droidfish.engine.UCIEngine: void initialize()>();
        r3 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        $r15 = new java.lang.Thread;
        $r16 = new org.petero.droidfish.engine.DroidComputerPlayer$2;
        specialinvoke $r16.<org.petero.droidfish.engine.DroidComputerPlayer$2: void <init>(org.petero.droidfish.engine.DroidComputerPlayer,org.petero.droidfish.engine.UCIEngine)>(r0, r3);
        specialinvoke $r15.<java.lang.Thread: void <init>(java.lang.Runnable)>($r16);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.Thread engineMonitor> = $r15;
        $r17 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.Thread engineMonitor>;
        virtualinvoke $r17.<java.lang.Thread: void start()>();
        $r18 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r18.<org.petero.droidfish.engine.UCIEngine: void clearOptions()>();
        $r19 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.UCIEngine uciEngine>;
        interfaceinvoke $r19.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>("uci");
        i0 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: int getNumCPUs()>();
        if i0 <= 8 goto label8;

        i0 = 8;

     label8:
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int numCPUs> = i0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int maxPV> = 1;
        $r20 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r21 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r22 = $r21.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: java.lang.String engine>;
        $r20.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: java.lang.String engine> = $r22;
        $r23 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r24 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState READ_OPTIONS>;
        virtualinvoke $r23.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r24);
        return;
    }

    private final void monitorLoop(org.petero.droidfish.engine.UCIEngine)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.UCIEngine r1;
        int i0;
        java.lang.String r2;
        java.lang.Thread $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: org.petero.droidfish.engine.UCIEngine;

     label0:
        i0 = specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: int getReadTimeout()>();
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z0 = virtualinvoke $r3.<java.lang.Thread: boolean isInterrupted()>();
        if $z0 == 0 goto label1;

        return;

     label1:
        r2 = interfaceinvoke r1.<org.petero.droidfish.engine.UCIEngine: java.lang.String readLineFromEngine(int)>(i0);
        if r2 == null goto label2;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z1 = virtualinvoke $r4.<java.lang.Thread: boolean isInterrupted()>();
        if $z1 == 0 goto label3;

     label2:
        return;

     label3:
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void processEngineOutput(org.petero.droidfish.engine.UCIEngine,java.lang.String)>(r1, r2);
        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z2 = virtualinvoke $r5.<java.lang.Thread: boolean isInterrupted()>();
        if $z2 == 0 goto label4;

        return;

     label4:
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void notifyGUI()>();
        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z3 = virtualinvoke $r6.<java.lang.Thread: boolean isInterrupted()>();
        if $z3 == 0 goto label5;

        return;

     label5:
        goto label0;
    }

    private final synchronized void processEngineOutput(org.petero.droidfish.engine.UCIEngine, java.lang.String)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.UCIEngine r1;
        java.lang.String r2, r5, r6, $r14, $r17, $r18, $r19, $r26;
        java.lang.Thread $r3;
        java.lang.String[] r4, r25;
        org.petero.droidfish.gamelogic.Move r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i1, $i2, $i3;
        int[] $r8;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r9, $r12, $r15, $r20, $r23, $r27;
        org.petero.droidfish.engine.DroidComputerPlayer$MainState $r10, $r13, $r16, $r21, $r22, $r24, $r28;
        org.petero.droidfish.EngineOptions $r11;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: org.petero.droidfish.engine.UCIEngine;
        r2 := @parameter1: java.lang.String;
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z0 = virtualinvoke $r3.<java.lang.Thread: boolean isInterrupted()>();
        if $z0 == 0 goto label0;

        return;

     label0:
        if r2 != null goto label1;

        virtualinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void shutdownEngine()>();
        return;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i0 != 0 goto label2;

        return;

     label2:
        $r8 = <org.petero.droidfish.engine.DroidComputerPlayer$3: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$MainState>;
        $r9 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r10 = $r9.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $i1 = virtualinvoke $r10.<org.petero.droidfish.engine.DroidComputerPlayer$MainState: int ordinal()>();
        $i2 = $r8[$i1];
        tableswitch($i2)
        {
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label5;
            case 4: goto label9;
            case 5: goto label3;
            case 6: goto label4;
            default: goto label10;
        };

     label3:
        $z1 = specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean readUCIOption(org.petero.droidfish.engine.UCIEngine,java.lang.String)>(r1, r2);
        if $z1 == 0 goto label10;

        $r11 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.EngineOptions engineOptions>;
        interfaceinvoke r1.<org.petero.droidfish.engine.UCIEngine: void initOptions(org.petero.droidfish.EngineOptions)>($r11);
        interfaceinvoke r1.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>("ucinewgame");
        interfaceinvoke r1.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>("isready");
        $r12 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r13 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState WAIT_READY>;
        virtualinvoke $r12.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r13);
        goto label10;

     label4:
        $r14 = "readyok";
        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);
        if $z2 == 0 goto label10;

        $r15 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r16 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState IDLE>;
        virtualinvoke $r15.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r16);
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void handleIdleState()>();
        goto label10;

     label5:
        r4 = specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String[] tokenize(java.lang.String)>(r2);
        $r17 = r4[0];
        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("info");
        if $z3 == 0 goto label6;

        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void parseInfoCmd(java.lang.String[])>(r4);
        goto label10;

     label6:
        $r18 = r4[0];
        $z4 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("bestmove");
        if $z4 == 0 goto label10;

        r5 = r4[1];
        r6 = "";
        $i3 = lengthof r4;
        if $i3 < 4 goto label7;

        $r19 = r4[2];
        $z5 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("ponder");
        if $z5 == 0 goto label7;

        r6 = r4[3];

     label7:
        r7 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move UCIstringToMove(java.lang.String)>(r6);
        $r20 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r21 = $r20.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: org.petero.droidfish.engine.DroidComputerPlayer$MainState state>;
        $r22 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState SEARCH>;
        if $r21 != $r22 goto label8;

        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void reportMove(java.lang.String,org.petero.droidfish.gamelogic.Move)>(r5, r7);

     label8:
        $r23 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r24 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState IDLE>;
        virtualinvoke $r23.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r24);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest> = null;
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void handleIdleState()>();
        goto label10;

     label9:
        r25 = specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String[] tokenize(java.lang.String)>(r2);
        $r26 = r25[0];
        $z6 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("bestmove");
        if $z6 == 0 goto label10;

        interfaceinvoke r1.<org.petero.droidfish.engine.UCIEngine: void writeLineToEngine(java.lang.String)>("isready");
        $r27 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        $r28 = <org.petero.droidfish.engine.DroidComputerPlayer$MainState: org.petero.droidfish.engine.DroidComputerPlayer$MainState WAIT_READY>;
        virtualinvoke $r27.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: void setState(org.petero.droidfish.engine.DroidComputerPlayer$MainState)>($r28);
        goto label10;

     label10:
        return;
    }

    private final boolean readUCIOption(org.petero.droidfish.engine.UCIEngine, java.lang.String)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.UCIEngine r1;
        java.lang.String r2, $r5, $r6, $r7, $r8, $r10, $r13, $r16, $r18, $r20, $r22, $r23, r24, $r25, $r26;
        java.lang.String[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r17, $r19;
        org.petero.droidfish.gamelogic.SearchListener $r21;
        java.lang.NumberFormatException $r27, r28;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: org.petero.droidfish.engine.UCIEngine;
        r2 := @parameter1: java.lang.String;
        r3 = specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String[] tokenize(java.lang.String)>(r2);
        $r5 = r3[0];
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("uciok");
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $r6 = r3[0];
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("id");
        if $z1 == 0 goto label4;

        $r7 = r3[1];
        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("name");
        if $z2 == 0 goto label10;

        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName> = "";
        i0 = 2;

     label1:
        $i2 = lengthof r3;
        if i0 >= $i2 goto label3;

        $r8 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName>;
        $i3 = virtualinvoke $r8.<java.lang.String: int length()>();
        if $i3 <= 0 goto label2;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName>;
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName> = $r13;

     label2:
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        $r16 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName>;
        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        $r18 = r3[i0];
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName> = $r20;
        i0 = i0 + 1;
        goto label1;

     label3:
        $r21 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        $r22 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String engineName>;
        interfaceinvoke $r21.<org.petero.droidfish.gamelogic.SearchListener: void notifyEngineName(java.lang.String)>($r22);
        goto label10;

     label4:
        $i4 = lengthof r3;
        if $i4 <= 2 goto label10;

        $r23 = r3[2];
        r24 = virtualinvoke $r23.<java.lang.String: java.lang.String toLowerCase()>();
        interfaceinvoke r1.<org.petero.droidfish.engine.UCIEngine: void registerOption(java.lang.String)>(r24);
        $z3 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>("multipv");
        if $z3 == 0 goto label10;

     label5:
        i1 = 3;

     label6:
        $i5 = lengthof r3;
        if i1 >= $i5 goto label8;

        $r25 = r3[i1];
        $z4 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("max");
        if $z4 == 0 goto label7;

        $i6 = i1 + 1;
        $i7 = lengthof r3;
        if $i6 >= $i7 goto label7;

        $i8 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int maxPV>;
        $i9 = i1 + 1;
        $r26 = r3[$i9];
        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);
        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i10);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int maxPV> = $i11;
        goto label8;

     label7:
        i1 = i1 + 1;
        goto label6;

     label8:
        goto label10;

     label9:
        $r27 := @caughtexception;
        r28 = $r27;

     label10:
        return 0;

        catch java.lang.NumberFormatException from label5 to label8 with label9;
    }

    private final void reportMove(java.lang.String, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        java.lang.String r1, r4;
        org.petero.droidfish.gamelogic.Move r2, $r9, r11;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest r3;
        boolean z0, $z1, $z2, $z3, $z4;
        org.petero.droidfish.gamelogic.Position r5, $r7, $r10, $r12, $r13, $r14;
        org.petero.droidfish.gamelogic.UndoInfo r6, $r15;
        int $i0, $i1, $i2, $i3;
        long[] $r8;
        org.petero.droidfish.gamelogic.SearchListener $r16;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.petero.droidfish.gamelogic.Move;
        r3 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        z0 = 1;
        $i0 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statScore>;
        if $i0 > 0 goto label0;

        $r7 = r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        $r8 = r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: long[] posHashList>;
        $i1 = r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int posHashListSize>;
        $r9 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move UCIstringToMove(java.lang.String)>(r1);
        r4 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String canClaimDraw(org.petero.droidfish.gamelogic.Position,long[],int,org.petero.droidfish.gamelogic.Move)>($r7, $r8, $i1, $r9);
        if r4 == "" goto label0;

        r1 = r4;
        z0 = 0;

     label0:
        $z1 = r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: boolean drawOffer>;
        if $z1 == 0 goto label1;

        $z2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statIsMate>;
        if $z2 != 0 goto label1;

        $i2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statScore>;
        if $i2 > -300 goto label1;

        r1 = "draw accept";
        z0 = 0;

     label1:
        if z0 == 0 goto label4;

        $r10 = r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        r11 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move stringToMove(org.petero.droidfish.gamelogic.Position,java.lang.String)>($r10, r1);
        if r11 == null goto label2;

        $r12 = r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        $z3 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: boolean isValid(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move)>($r12, r11);
        if $z3 != 0 goto label3;

     label2:
        z0 = 0;

     label3:
        if z0 == 0 goto label4;

        $r13 = new org.petero.droidfish.gamelogic.Position;
        $r14 = r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        specialinvoke $r13.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r14);
        r5 = $r13;
        $r15 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r15.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r6 = $r15;
        virtualinvoke r5.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r11, r6);
        $z4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: boolean isValid(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move)>(r5, r2);
        if $z4 != 0 goto label4;

        z0 = 0;

     label4:
        if z0 != 0 goto label5;

        r2 = null;

     label5:
        $r16 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        $i3 = r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: int searchId>;
        interfaceinvoke $r16.<org.petero.droidfish.gamelogic.SearchListener: void notifySearchResult(int,java.lang.String,org.petero.droidfish.gamelogic.Move)>($i3, r1, r2);
        return;
    }

    private final java.lang.String[] tokenize(java.lang.String)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        java.lang.String r1, r2;
        java.lang.String[] $r3;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");
        return $r3;
    }

    private static final java.lang.String canClaimDraw(org.petero.droidfish.gamelogic.Position, long[], int, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.Position r0;
        long[] r1;
        int i0, i1;
        org.petero.droidfish.gamelogic.Move r2;
        java.lang.String r3, r4;
        org.petero.droidfish.gamelogic.UndoInfo r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        long $l2;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter1: long[];
        i0 := @parameter2: int;
        r2 := @parameter3: org.petero.droidfish.gamelogic.Move;
        r3 = "";
        $z0 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: boolean canClaimDraw50(org.petero.droidfish.gamelogic.Position)>(r0);
        if $z0 == 0 goto label0;

        r3 = "draw 50";
        goto label4;

     label0:
        $z1 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: boolean canClaimDrawRep(org.petero.droidfish.gamelogic.Position,long[],int,int)>(r0, r1, i0, i0);
        if $z1 == 0 goto label1;

        r3 = "draw rep";
        goto label4;

     label1:
        if r2 == null goto label4;

        r4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean)>(r0, r2, 0, 0);
        i1 = i0 + 1;
        $l2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: long zobristHash()>();
        r1[i0] = $l2;
        $r6 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r6.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r5 = $r6;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r2, r5);
        $z2 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: boolean canClaimDraw50(org.petero.droidfish.gamelogic.Position)>(r0);
        if $z2 == 0 goto label2;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("draw 50 ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label3;

     label2:
        $z3 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer: boolean canClaimDrawRep(org.petero.droidfish.gamelogic.Position,long[],int,int)>(r0, r1, i1, i1);
        if $z3 == 0 goto label3;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("draw rep ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void unMakeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r2, r5);

     label4:
        return r3;
    }

    private static final boolean canClaimDraw50(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        if $i0 < 100 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private static final boolean canClaimDrawRep(org.petero.droidfish.gamelogic.Position, long[], int, int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        long[] r1;
        int i0, i1, i2, i3;
        long $l4, $l5;
        byte $b6;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter1: long[];
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        i2 = 0;
        i3 = i0 - 4;

     label0:
        if i3 < 0 goto label2;

        $l4 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: long zobristHash()>();
        $l5 = r1[i3];
        $b6 = $l4 cmp $l5;
        if $b6 != 0 goto label1;

        i2 = i2 + 1;
        if i3 < i1 goto label1;

        i2 = i2 + 1;
        goto label2;

     label1:
        i3 = i3 + -2;
        goto label0;

     label2:
        if i2 < 2 goto label3;

        $z0 = 1;
        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private final void clearInfo()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        java.util.ArrayList $r1;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean depthModified> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean currMoveModified> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean pvModified> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statsModified> = 0;
        $r1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPvInfo>;
        virtualinvoke $r1.<java.util.ArrayList: void clear()>();
        return;
    }

    private final synchronized int getReadTimeout()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i6, $i7;
        long l1, $l2, $l3, $l4, $l5;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $z1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean depthModified>;
        if $z1 != 0 goto label0;

        $z2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean currMoveModified>;
        if $z2 != 0 goto label0;

        $z3 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean pvModified>;
        if $z3 != 0 goto label0;

        $z4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statsModified>;
        if $z4 == 0 goto label1;

     label0:
        $z5 = 1;
        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;
        i0 = 2000000000;
        if z0 == 0 goto label3;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: long lastGUIUpdate>;
        $l3 = $l2 + 100L;
        $l4 = $l3 - l1;
        $l5 = $l4 + 1L;
        i6 = (int) $l5;
        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(1000, i6);
        i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i7);

     label3:
        return i0;
    }

    private final void parseInfoCmd(java.lang.String[])
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        java.lang.String[] r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z12, $z13, $z17, $z18, $z19;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, $i24, $i25, $i26, $i27, $i28, i29, $i30, $i31, $i32, $i33, $i35;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r28;
        java.util.ArrayList $r3, $r11, $r12, $r18, $r19, $r21, $r22, $r23, r24, $r25, $r26, $r30;
        long $l13, $l34;
        org.petero.droidfish.gamelogic.SearchListener$PvInfo $r20, $r31;
        java.lang.Object $r27;
        org.petero.droidfish.gamelogic.Move $r29;
        java.lang.NumberFormatException $r33, r34;
        java.lang.ArrayIndexOutOfBoundsException $r35, r36;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter0: java.lang.String[];

     label0:
        z0 = 0;
        i0 = lengthof r1;
        i1 = 1;

     label1:
        $i3 = i0 - 1;
        if i1 >= $i3 goto label17;

        $i4 = i1;
        i1 = i1 + 1;
        r2 = r1[$i4];
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("depth");
        if $z1 == 0 goto label2;

        $i5 = i1;
        i1 = i1 + 1;
        $r4 = r1[$i5];
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statCurrDepth> = $i6;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean depthModified> = 1;
        goto label16;

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("currmove");
        if $z2 == 0 goto label3;

        $i7 = i1;
        i1 = i1 + 1;
        $r5 = r1[$i7];
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String statCurrMove> = $r5;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean currMoveModified> = 1;
        goto label16;

     label3:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("currmovenumber");
        if $z3 == 0 goto label4;

        $i8 = i1;
        i1 = i1 + 1;
        $r6 = r1[$i8];
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statCurrMoveNr> = $i9;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean currMoveModified> = 1;
        goto label16;

     label4:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("time");
        if $z4 == 0 goto label5;

        $i10 = i1;
        i1 = i1 + 1;
        $r7 = r1[$i10];
        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statTime> = $i11;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statsModified> = 1;
        goto label16;

     label5:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("nodes");
        if $z5 == 0 goto label6;

        $i12 = i1;
        i1 = i1 + 1;
        $r8 = r1[$i12];
        $l13 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: long statNodes> = $l13;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statsModified> = 1;
        goto label16;

     label6:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("nps");
        if $z6 == 0 goto label7;

        $i14 = i1;
        i1 = i1 + 1;
        $r9 = r1[$i14];
        $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statNps> = $i15;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statsModified> = 1;
        goto label16;

     label7:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("multipv");
        if $z7 == 0 goto label10;

        $i16 = i1;
        i1 = i1 + 1;
        $r10 = r1[$i16];
        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);
        $i18 = $i17 - 1;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int pvNum> = $i18;
        $i19 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int pvNum>;
        if $i19 >= 0 goto label8;

        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int pvNum> = 0;

     label8:
        $i20 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int pvNum>;
        if $i20 <= 255 goto label9;

        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int pvNum> = 255;

     label9:
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean pvModified> = 1;
        goto label16;

     label10:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("pv");
        if $z8 == 0 goto label13;

        $r11 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPV>;
        virtualinvoke $r11.<java.util.ArrayList: void clear()>();

     label11:
        if i1 >= i0 goto label12;

        $r12 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPV>;
        $i21 = i1;
        i1 = i1 + 1;
        $r13 = r1[$i21];
        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);
        goto label11;

     label12:
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean pvModified> = 1;
        z0 = 1;
        $i22 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statCurrDepth>;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statPVDepth> = $i22;
        goto label16;

     label13:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("score");
        if $z10 == 0 goto label16;

        i23 = i1 + 1;
        $r14 = r1[i1];
        $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("mate");
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statIsMate> = $z11;
        i1 = i23 + 1;
        $r15 = r1[i23];
        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statScore> = $i24;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statUpperBound> = 0;
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statLowerBound> = 0;
        $r16 = r1[i1];
        $z12 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("upperbound");
        if $z12 == 0 goto label14;

        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statUpperBound> = 1;
        i1 = i1 + 1;
        goto label15;

     label14:
        $r17 = r1[i1];
        $z13 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("lowerbound");
        if $z13 == 0 goto label15;

        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statLowerBound> = 1;
        i1 = i1 + 1;

     label15:
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean pvModified> = 1;

     label16:
        goto label1;

     label17:
        if z0 == 0 goto label23;

     label18:
        $r18 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPvInfo>;
        $i25 = virtualinvoke $r18.<java.util.ArrayList: int size()>();
        $i26 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int pvNum>;
        if $i25 >= $i26 goto label19;

        $r19 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPvInfo>;
        $r20 = new org.petero.droidfish.gamelogic.SearchListener$PvInfo;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        specialinvoke $r20.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: void <init>(int,int,int,long,int,boolean,boolean,boolean,java.util.ArrayList)>(0, 0, 0, 0L, 0, 0, 0, 0, $r3);
        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);
        goto label18;

     label19:
        $r21 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPvInfo>;
        $i27 = virtualinvoke $r21.<java.util.ArrayList: int size()>();
        $i28 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int pvNum>;
        if $i27 > $i28 goto label20;

        $r22 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPvInfo>;
        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(null);
        goto label19;

     label20:
        $r23 = new java.util.ArrayList;
        specialinvoke $r23.<java.util.ArrayList: void <init>()>();
        r24 = $r23;
        $r25 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPV>;
        i2 = virtualinvoke $r25.<java.util.ArrayList: int size()>();
        i29 = 0;

     label21:
        if i29 >= i2 goto label22;

        $r26 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPV>;
        $r27 = virtualinvoke $r26.<java.util.ArrayList: java.lang.Object get(int)>(i29);
        $r28 = (java.lang.String) $r27;
        $r29 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move UCIstringToMove(java.lang.String)>($r28);
        virtualinvoke r24.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);
        i29 = i29 + 1;
        goto label21;

     label22:
        $r30 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPvInfo>;
        $i30 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int pvNum>;
        $r31 = new org.petero.droidfish.gamelogic.SearchListener$PvInfo;
        $i31 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statPVDepth>;
        $i32 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statScore>;
        $i33 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statTime>;
        $l34 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: long statNodes>;
        $i35 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statNps>;
        $z17 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statIsMate>;
        $z18 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statUpperBound>;
        $z19 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statLowerBound>;
        specialinvoke $r31.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: void <init>(int,int,int,long,int,boolean,boolean,boolean,java.util.ArrayList)>($i31, $i32, $i33, $l34, $i35, $z17, $z18, $z19, r24);
        virtualinvoke $r30.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i30, $r31);

     label23:
        goto label26;

     label24:
        $r33 := @caughtexception;
        r34 = $r33;
        goto label26;

     label25:
        $r35 := @caughtexception;
        r36 = $r35;

     label26:
        return;

        catch java.lang.NumberFormatException from label0 to label23 with label24;
        catch java.lang.ArrayIndexOutOfBoundsException from label0 to label23 with label25;
    }

    private final synchronized void notifyGUI()
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        java.lang.Thread $r1;
        long l0, $l2, $l3, $l7;
        int i1, $i5, $i6, $i8, $i9;
        org.petero.droidfish.gamelogic.Move r2, $r13, $r17, $r24;
        org.petero.droidfish.gamelogic.Position r3, $r7, $r14, $r21;
        org.petero.droidfish.gamelogic.UndoInfo r4, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b4;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest $r5, $r6, $r11, $r12, $r16, $r20, $r23;
        org.petero.droidfish.engine.DroidComputerPlayer$EngineState $r8;
        org.petero.droidfish.gamelogic.SearchListener $r9, $r18, $r19, $r25;
        java.lang.String $r10;
        java.util.ArrayList $r22;

        r0 := @this: org.petero.droidfish.engine.DroidComputerPlayer;
        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z0 = virtualinvoke $r1.<java.lang.Thread: boolean isInterrupted()>();
        if $z0 == 0 goto label0;

        return;

     label0:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $l2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: long lastGUIUpdate>;
        $l3 = $l2 + 100L;
        $b4 = l0 cmp $l3;
        if $b4 >= 0 goto label1;

        return;

     label1:
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: long lastGUIUpdate> = l0;
        $r5 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        if $r5 == null goto label2;

        $r6 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r7 = $r6.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        if $r7 != null goto label3;

     label2:
        return;

     label3:
        $r8 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$EngineState engineState>;
        i1 = $r8.<org.petero.droidfish.engine.DroidComputerPlayer$EngineState: int searchId>;
        $z1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean depthModified>;
        if $z1 == 0 goto label4;

        $r9 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        $i5 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statCurrDepth>;
        interfaceinvoke $r9.<org.petero.droidfish.gamelogic.SearchListener: void notifyDepth(int,int)>(i1, $i5);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean depthModified> = 0;

     label4:
        $z2 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean currMoveModified>;
        if $z2 == 0 goto label6;

        $r10 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String statCurrMove>;
        r2 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move UCIstringToMove(java.lang.String)>($r10);
        $r11 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        r3 = $r11.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        $r12 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r13 = $r12.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r13 == null goto label5;

        if r2 == null goto label5;

        $r14 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r14.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r3);
        r3 = $r14;
        $r15 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r15.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r4 = $r15;
        $r16 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r17 = $r16.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        virtualinvoke r3.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r17, r4);

     label5:
        $r18 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        $i6 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statCurrMoveNr>;
        interfaceinvoke $r18.<org.petero.droidfish.gamelogic.SearchListener: void notifyCurrMove(int,org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,int)>(i1, r3, r2, $i6);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean currMoveModified> = 0;

     label6:
        $z3 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean pvModified>;
        if $z3 == 0 goto label7;

        $r19 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        $r20 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r21 = $r20.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Position currPos>;
        $r22 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: java.util.ArrayList statPvInfo>;
        $r23 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest>;
        $r24 = $r23.<org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.gamelogic.Move ponderMove>;
        interfaceinvoke $r19.<org.petero.droidfish.gamelogic.SearchListener: void notifyPV(int,org.petero.droidfish.gamelogic.Position,java.util.ArrayList,org.petero.droidfish.gamelogic.Move)>(i1, $r21, $r22, $r24);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean pvModified> = 0;

     label7:
        $z4 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statsModified>;
        if $z4 == 0 goto label8;

        $r25 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        $l7 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: long statNodes>;
        $i8 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statNps>;
        $i9 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: int statTime>;
        interfaceinvoke $r25.<org.petero.droidfish.gamelogic.SearchListener: void notifyStats(int,long,int,int)>(i1, $l7, $i8, $i9);
        r0.<org.petero.droidfish.engine.DroidComputerPlayer: boolean statsModified> = 0;

     label8:
        return;
    }

    private static final int getNumCPUs()
    {
        int i0, i1, $i2, i4, $i5;
        java.io.FileReader r0, $r3;
        java.io.BufferedReader r1, $r4;
        java.lang.String r2, $r5;
        boolean $z0, $z1;
        char $c3;
        java.io.IOException $r6, r7;

        i0 = 1;

     label0:
        $r3 = new java.io.FileReader;
        specialinvoke $r3.<java.io.FileReader: void <init>(java.lang.String)>("/proc/stat");
        r0 = $r3;
        $r4 = new java.io.BufferedReader;
        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r0, 8192);
        r1 = $r4;
        i1 = 0;

     label1:
        $r5 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();
        r2 = $r5;
        if $r5 == null goto label2;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();
        if $i2 < 4 goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("cpu");
        if $z0 == 0 goto label1;

        $c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(3);
        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c3);
        if $z1 == 0 goto label1;

        i1 = i1 + 1;
        goto label1;

     label2:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();
        if i1 >= 1 goto label3;

        i1 = 1;

     label3:
        i0 = i1;

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;
        r7 = $r6;

     label6:
        i4 = staticinvoke <org.petero.droidfish.engine.EngineUtil: int getNPhysicalProcessors()>();
        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i4);
        return $i5;

        catch java.io.IOException from label0 to label4 with label5;
    }

    private static final void myAssert(boolean)
    {
        boolean z0;
        java.lang.RuntimeException $r0;

        z0 := @parameter0: boolean;
        if z0 != 0 goto label0;

        $r0 = new java.lang.RuntimeException;
        specialinvoke $r0.<java.lang.RuntimeException: void <init>()>();
        throw $r0;

     label0:
        return;
    }

    static org.petero.droidfish.gamelogic.SearchListener access$000(org.petero.droidfish.engine.DroidComputerPlayer)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.gamelogic.SearchListener $r1;

        r0 := @parameter0: org.petero.droidfish.engine.DroidComputerPlayer;
        $r1 = r0.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.SearchListener listener>;
        return $r1;
    }

    static void access$100(org.petero.droidfish.engine.DroidComputerPlayer, org.petero.droidfish.engine.UCIEngine)
    {
        org.petero.droidfish.engine.DroidComputerPlayer r0;
        org.petero.droidfish.engine.UCIEngine r1;

        r0 := @parameter0: org.petero.droidfish.engine.DroidComputerPlayer;
        r1 := @parameter1: org.petero.droidfish.engine.UCIEngine;
        specialinvoke r0.<org.petero.droidfish.engine.DroidComputerPlayer: void monitorLoop(org.petero.droidfish.engine.UCIEngine)>(r1);
        return;
    }
}
final class org.petero.droidfish.engine.EngineUtil$CpuAbi extends java.lang.Object
{

    private void <init>()
    {
        org.petero.droidfish.engine.EngineUtil$CpuAbi r0;

        r0 := @this: org.petero.droidfish.engine.EngineUtil$CpuAbi;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static final java.lang.String get()
    {
        java.lang.String $r0;

        $r0 = <android.os.Build: java.lang.String CPU_ABI>;
        return $r0;
    }
}
public class org.petero.droidfish.engine.EngineUtil extends java.lang.Object
{
    public static java.lang.Object nativeLock;

    public void <init>()
    {
        org.petero.droidfish.engine.EngineUtil r0;

        r0 := @this: org.petero.droidfish.engine.EngineUtil;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    static final native int getNPhysicalProcessors();

    public static java.lang.String internalStockFishName()
    {
        java.lang.String $r0, r1, $r5;
        int i0;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r3, $r4;

        $r0 = <android.os.Build$VERSION: java.lang.String SDK>;
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);
        if i0 >= 4 goto label0;

        return "stockfish15.mygz";

     label0:
        r1 = staticinvoke <org.petero.droidfish.engine.EngineUtil$CpuAbi: java.lang.String get()>();
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("x86");
        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("armeabi-v7a");
        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("mips");
        if $z2 != 0 goto label1;

        r1 = "armeabi";

     label1:
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stockfish-");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;
    }

    static final native boolean chmod(java.lang.String);

    static void <clinit>()
    {
        java.lang.Object $r0;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("nativeutil");
        $r0 = new java.lang.Object;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        <org.petero.droidfish.engine.EngineUtil: java.lang.Object nativeLock> = $r0;
        return;
    }
}
class org.petero.droidfish.engine.ExternalEngine$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.engine.ExternalEngine this$0;

    void <init>(org.petero.droidfish.engine.ExternalEngine)
    {
        org.petero.droidfish.engine.ExternalEngine$1 r0;
        org.petero.droidfish.engine.ExternalEngine r1;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine$1;
        r1 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        r0.<org.petero.droidfish.engine.ExternalEngine$1: org.petero.droidfish.engine.ExternalEngine this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.ExternalEngine$1 r0;
        java.lang.InterruptedException r1, $r2;
        org.petero.droidfish.engine.ExternalEngine $r3, $r4, $r5, $r6, $r8;
        boolean $z0, $z1, $z2;
        org.petero.droidfish.engine.UCIEngine$Report $r7;
        android.content.Context $r9;
        java.lang.String $r10;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine$1;

     label0:
        staticinvoke <java.lang.Thread: void sleep(long)>(10000L);

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;
        return;

     label3:
        $r3 = r0.<org.petero.droidfish.engine.ExternalEngine$1: org.petero.droidfish.engine.ExternalEngine this$0>;
        $z0 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: boolean access$000(org.petero.droidfish.engine.ExternalEngine)>($r3);
        if $z0 == 0 goto label4;

        $r4 = r0.<org.petero.droidfish.engine.ExternalEngine$1: org.petero.droidfish.engine.ExternalEngine this$0>;
        $z1 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: boolean access$100(org.petero.droidfish.engine.ExternalEngine)>($r4);
        if $z1 == 0 goto label4;

        $r5 = r0.<org.petero.droidfish.engine.ExternalEngine$1: org.petero.droidfish.engine.ExternalEngine this$0>;
        $z2 = $r5.<org.petero.droidfish.engine.ExternalEngine: boolean isUCI>;
        if $z2 != 0 goto label4;

        $r6 = r0.<org.petero.droidfish.engine.ExternalEngine$1: org.petero.droidfish.engine.ExternalEngine this$0>;
        $r7 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.UCIEngine$Report access$200(org.petero.droidfish.engine.ExternalEngine)>($r6);
        $r8 = r0.<org.petero.droidfish.engine.ExternalEngine$1: org.petero.droidfish.engine.ExternalEngine this$0>;
        $r9 = $r8.<org.petero.droidfish.engine.ExternalEngine: android.content.Context context>;
        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getString(int)>(2131099830);
        interfaceinvoke $r7.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r10);

     label4:
        return;

        catch java.lang.InterruptedException from label0 to label1 with label2;
    }
}
class org.petero.droidfish.engine.ExternalEngine$2 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.engine.ExternalEngine this$0;

    void <init>(org.petero.droidfish.engine.ExternalEngine)
    {
        org.petero.droidfish.engine.ExternalEngine$2 r0;
        org.petero.droidfish.engine.ExternalEngine r1;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine$2;
        r1 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        r0.<org.petero.droidfish.engine.ExternalEngine$2: org.petero.droidfish.engine.ExternalEngine this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.ExternalEngine$2 r0;
        java.lang.Process r1;
        org.petero.droidfish.engine.ExternalEngine $r2, $r3, $r4, $r5, $r7, $r10, $r12;
        boolean $z1;
        org.petero.droidfish.engine.UCIEngine$Report $r6, $r11;
        android.content.Context $r8, $r13;
        java.lang.String $r9, $r14;
        java.lang.InterruptedException $r15, r16;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine$2;

     label0:
        $r2 = r0.<org.petero.droidfish.engine.ExternalEngine$2: org.petero.droidfish.engine.ExternalEngine this$0>;
        r1 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: java.lang.Process access$300(org.petero.droidfish.engine.ExternalEngine)>($r2);
        if r1 == null goto label1;

        virtualinvoke r1.<java.lang.Process: int waitFor()>();

     label1:
        $r3 = r0.<org.petero.droidfish.engine.ExternalEngine$2: org.petero.droidfish.engine.ExternalEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.ExternalEngine: boolean access$102(org.petero.droidfish.engine.ExternalEngine,boolean)>($r3, 0);
        $r4 = r0.<org.petero.droidfish.engine.ExternalEngine$2: org.petero.droidfish.engine.ExternalEngine this$0>;
        $z1 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: boolean access$000(org.petero.droidfish.engine.ExternalEngine)>($r4);
        if $z1 != 0 goto label2;

        $r5 = r0.<org.petero.droidfish.engine.ExternalEngine$2: org.petero.droidfish.engine.ExternalEngine this$0>;
        $r6 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.UCIEngine$Report access$200(org.petero.droidfish.engine.ExternalEngine)>($r5);
        $r7 = r0.<org.petero.droidfish.engine.ExternalEngine$2: org.petero.droidfish.engine.ExternalEngine this$0>;
        $r8 = $r7.<org.petero.droidfish.engine.ExternalEngine: android.content.Context context>;
        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getString(int)>(2131099828);
        interfaceinvoke $r6.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r9);
        goto label3;

     label2:
        $r10 = r0.<org.petero.droidfish.engine.ExternalEngine$2: org.petero.droidfish.engine.ExternalEngine this$0>;
        $r11 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.UCIEngine$Report access$200(org.petero.droidfish.engine.ExternalEngine)>($r10);
        $r12 = r0.<org.petero.droidfish.engine.ExternalEngine$2: org.petero.droidfish.engine.ExternalEngine this$0>;
        $r13 = $r12.<org.petero.droidfish.engine.ExternalEngine: android.content.Context context>;
        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.String getString(int)>(2131099829);
        interfaceinvoke $r11.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r14);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;
        r16 = $r15;

     label5:
        return;

        catch java.lang.InterruptedException from label0 to label3 with label4;
    }
}
class org.petero.droidfish.engine.ExternalEngine$3 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.engine.ExternalEngine this$0;

    void <init>(org.petero.droidfish.engine.ExternalEngine)
    {
        org.petero.droidfish.engine.ExternalEngine$3 r0;
        org.petero.droidfish.engine.ExternalEngine r1;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine$3;
        r1 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        r0.<org.petero.droidfish.engine.ExternalEngine$3: org.petero.droidfish.engine.ExternalEngine this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.ExternalEngine$3 r0;
        java.lang.Process r1;
        java.io.InputStream r2;
        java.io.InputStreamReader r3, $r9;
        java.io.BufferedReader r4, $r10;
        boolean z0, $z1;
        java.lang.String r5, $r11;
        org.petero.droidfish.engine.LocalPipe r6, $r14, $r16, $r23;
        java.lang.Throwable r7, $r19;
        org.petero.droidfish.engine.ExternalEngine $r8, $r13, $r15, $r17, $r18, $r22;
        java.lang.Thread $r12;
        java.io.IOException $r20, r21;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine$3;
        $r8 = r0.<org.petero.droidfish.engine.ExternalEngine$3: org.petero.droidfish.engine.ExternalEngine this$0>;
        r1 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: java.lang.Process access$300(org.petero.droidfish.engine.ExternalEngine)>($r8);
        if r1 != null goto label0;

        return;

     label0:
        r2 = virtualinvoke r1.<java.lang.Process: java.io.InputStream getInputStream()>();
        $r9 = new java.io.InputStreamReader;
        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);
        r3 = $r9;
        $r10 = new java.io.BufferedReader;
        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r3, 8192);
        r4 = $r10;

     label1:
        z0 = 1;

     label2:
        $r11 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();
        r5 = $r11;
        if $r11 == null goto label12;

        if r1 == null goto label3;

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z1 = virtualinvoke $r12.<java.lang.Thread: boolean isInterrupted()>();
        if $z1 == 0 goto label4;

     label3:
        return;

     label4:
        $r13 = r0.<org.petero.droidfish.engine.ExternalEngine$3: org.petero.droidfish.engine.ExternalEngine this$0>;
        $r14 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.LocalPipe access$400(org.petero.droidfish.engine.ExternalEngine)>($r13);
        r6 = $r14;
        entermonitor $r14;

     label5:
        $r15 = r0.<org.petero.droidfish.engine.ExternalEngine$3: org.petero.droidfish.engine.ExternalEngine this$0>;
        $r16 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.LocalPipe access$400(org.petero.droidfish.engine.ExternalEngine)>($r15);
        virtualinvoke $r16.<org.petero.droidfish.engine.LocalPipe: void addLine(java.lang.String)>(r5);
        if z0 == 0 goto label6;

        $r17 = r0.<org.petero.droidfish.engine.ExternalEngine$3: org.petero.droidfish.engine.ExternalEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.ExternalEngine: boolean access$002(org.petero.droidfish.engine.ExternalEngine,boolean)>($r17, 1);
        $r18 = r0.<org.petero.droidfish.engine.ExternalEngine$3: org.petero.droidfish.engine.ExternalEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.ExternalEngine: boolean access$102(org.petero.droidfish.engine.ExternalEngine,boolean)>($r18, 1);
        z0 = 0;

     label6:
        exitmonitor r6;

     label7:
        goto label11;

     label8:
        $r19 := @caughtexception;

     label9:
        r7 = $r19;
        exitmonitor r6;

     label10:
        throw r7;

     label11:
        goto label2;

     label12:
        goto label14;

     label13:
        $r20 := @caughtexception;
        r21 = $r20;

     label14:
        $r22 = r0.<org.petero.droidfish.engine.ExternalEngine$3: org.petero.droidfish.engine.ExternalEngine this$0>;
        $r23 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.LocalPipe access$400(org.petero.droidfish.engine.ExternalEngine)>($r22);
        virtualinvoke $r23.<org.petero.droidfish.engine.LocalPipe: void close()>();
        return;

        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
        catch java.io.IOException from label1 to label3 with label13;
        catch java.io.IOException from label4 to label12 with label13;
    }
}
class org.petero.droidfish.engine.ExternalEngine$4 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.engine.ExternalEngine this$0;

    void <init>(org.petero.droidfish.engine.ExternalEngine)
    {
        org.petero.droidfish.engine.ExternalEngine$4 r0;
        org.petero.droidfish.engine.ExternalEngine r1;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine$4;
        r1 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        r0.<org.petero.droidfish.engine.ExternalEngine$4: org.petero.droidfish.engine.ExternalEngine this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.ExternalEngine$4 r0;
        byte[] r1;
        java.lang.Process r2;
        int i0;
        org.petero.droidfish.engine.ExternalEngine $r3;
        java.lang.Thread $r4;
        boolean $z0;
        java.io.InputStream $r5;
        java.io.IOException $r6, r7;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine$4;
        r1 = newarray (byte)[128];

     label0:
        $r3 = r0.<org.petero.droidfish.engine.ExternalEngine$4: org.petero.droidfish.engine.ExternalEngine this$0>;
        r2 = staticinvoke <org.petero.droidfish.engine.ExternalEngine: java.lang.Process access$300(org.petero.droidfish.engine.ExternalEngine)>($r3);
        if r2 == null goto label1;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z0 = virtualinvoke $r4.<java.lang.Thread: boolean isInterrupted()>();
        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r5 = virtualinvoke r2.<java.lang.Process: java.io.InputStream getErrorStream()>();
        i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>(r1, 0, 1);
        if i0 >= 0 goto label4;

     label3:
        goto label7;

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;
        r7 = $r6;
        return;

     label6:
        goto label0;

     label7:
        return;

        catch java.io.IOException from label2 to label3 with label5;
    }
}
public class org.petero.droidfish.engine.ExternalEngine extends org.petero.droidfish.engine.UCIEngineBase
{
    protected final android.content.Context context;
    private java.io.File engineFileName;
    protected static final java.lang.String intSfPath;
    private static final java.lang.String exePath;
    private final org.petero.droidfish.engine.UCIEngine$Report report;
    private java.lang.Process engineProc;
    private java.lang.Thread startupThread;
    private java.lang.Thread exitThread;
    private java.lang.Thread stdInThread;
    private java.lang.Thread stdErrThread;
    private org.petero.droidfish.engine.LocalPipe inLines;
    private boolean startedOk;
    private boolean isRunning;
    private int hashMB;
    private java.lang.String gaviotaTbPath;
    private boolean optionsInitialized;

    public void <init>(android.content.Context, java.lang.String, org.petero.droidfish.engine.UCIEngine$Report)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        android.content.Context r1;
        java.lang.String r2;
        org.petero.droidfish.engine.UCIEngine$Report r3;
        java.io.File $r4;
        org.petero.droidfish.engine.LocalPipe $r5;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.petero.droidfish.engine.UCIEngine$Report;
        specialinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void <init>()>();
        r0.<org.petero.droidfish.engine.ExternalEngine: int hashMB> = -1;
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.String gaviotaTbPath> = "";
        r0.<org.petero.droidfish.engine.ExternalEngine: boolean optionsInitialized> = 0;
        r0.<org.petero.droidfish.engine.ExternalEngine: android.content.Context context> = r1;
        r0.<org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.UCIEngine$Report report> = r3;
        $r4 = new java.io.File;
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r2);
        r0.<org.petero.droidfish.engine.ExternalEngine: java.io.File engineFileName> = $r4;
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Process engineProc> = null;
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread startupThread> = null;
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread exitThread> = null;
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdInThread> = null;
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdErrThread> = null;
        $r5 = new org.petero.droidfish.engine.LocalPipe;
        specialinvoke $r5.<org.petero.droidfish.engine.LocalPipe: void <init>()>();
        r0.<org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.LocalPipe inLines> = $r5;
        r0.<org.petero.droidfish.engine.ExternalEngine: boolean startedOk> = 0;
        r0.<org.petero.droidfish.engine.ExternalEngine: boolean isRunning> = 0;
        return;
    }

    protected void startProcess()
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        java.io.File $r1, $r5;
        java.lang.ProcessBuilder r2, $r6;
        java.lang.Object r3, $r8;
        java.lang.Throwable r4, $r10;
        java.lang.String[] $r7;
        java.lang.Process $r9;
        java.lang.Thread $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22;
        org.petero.droidfish.engine.ExternalEngine$1 $r12;
        org.petero.droidfish.engine.ExternalEngine$2 $r15;
        org.petero.droidfish.engine.ExternalEngine$3 $r18;
        org.petero.droidfish.engine.ExternalEngine$4 $r21;
        java.io.IOException $r23, r24;
        org.petero.droidfish.engine.UCIEngine$Report $r25;
        java.lang.String $r26;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;

     label0:
        $r5 = r0.<org.petero.droidfish.engine.ExternalEngine: java.io.File engineFileName>;
        $r1 = new java.io.File;
        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/data/data/org.petero.droidfish/engine.exe");
        virtualinvoke r0.<org.petero.droidfish.engine.ExternalEngine: void copyFile(java.io.File,java.io.File)>($r5, $r1);
        specialinvoke r0.<org.petero.droidfish.engine.ExternalEngine: void chmod(java.lang.String)>("/data/data/org.petero.droidfish/engine.exe");
        $r6 = new java.lang.ProcessBuilder;
        $r7 = newarray (java.lang.String)[1];
        $r7[0] = "/data/data/org.petero.droidfish/engine.exe";
        specialinvoke $r6.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>($r7);
        r2 = $r6;
        $r8 = <org.petero.droidfish.engine.EngineUtil: java.lang.Object nativeLock>;
        r3 = $r8;
        entermonitor $r8;

     label1:
        $r9 = virtualinvoke r2.<java.lang.ProcessBuilder: java.lang.Process start()>();
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Process engineProc> = $r9;
        exitmonitor r3;

     label2:
        goto label6;

     label3:
        $r10 := @caughtexception;

     label4:
        r4 = $r10;
        exitmonitor r3;

     label5:
        throw r4;

     label6:
        $r11 = new java.lang.Thread;
        $r12 = new org.petero.droidfish.engine.ExternalEngine$1;
        specialinvoke $r12.<org.petero.droidfish.engine.ExternalEngine$1: void <init>(org.petero.droidfish.engine.ExternalEngine)>(r0);
        specialinvoke $r11.<java.lang.Thread: void <init>(java.lang.Runnable)>($r12);
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread startupThread> = $r11;
        $r13 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread startupThread>;
        virtualinvoke $r13.<java.lang.Thread: void start()>();
        $r14 = new java.lang.Thread;
        $r15 = new org.petero.droidfish.engine.ExternalEngine$2;
        specialinvoke $r15.<org.petero.droidfish.engine.ExternalEngine$2: void <init>(org.petero.droidfish.engine.ExternalEngine)>(r0);
        specialinvoke $r14.<java.lang.Thread: void <init>(java.lang.Runnable)>($r15);
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread exitThread> = $r14;
        $r16 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread exitThread>;
        virtualinvoke $r16.<java.lang.Thread: void start()>();
        $r17 = new java.lang.Thread;
        $r18 = new org.petero.droidfish.engine.ExternalEngine$3;
        specialinvoke $r18.<org.petero.droidfish.engine.ExternalEngine$3: void <init>(org.petero.droidfish.engine.ExternalEngine)>(r0);
        specialinvoke $r17.<java.lang.Thread: void <init>(java.lang.Runnable)>($r18);
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdInThread> = $r17;
        $r19 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdInThread>;
        virtualinvoke $r19.<java.lang.Thread: void start()>();
        $r20 = new java.lang.Thread;
        $r21 = new org.petero.droidfish.engine.ExternalEngine$4;
        specialinvoke $r21.<org.petero.droidfish.engine.ExternalEngine$4: void <init>(org.petero.droidfish.engine.ExternalEngine)>(r0);
        specialinvoke $r20.<java.lang.Thread: void <init>(java.lang.Runnable)>($r21);
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdErrThread> = $r20;
        $r22 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdErrThread>;
        virtualinvoke $r22.<java.lang.Thread: void start()>();

     label7:
        goto label9;

     label8:
        $r23 := @caughtexception;
        r24 = $r23;
        $r25 = r0.<org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.UCIEngine$Report report>;
        $r26 = virtualinvoke r24.<java.io.IOException: java.lang.String getMessage()>();
        interfaceinvoke $r25.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r26);

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
        catch java.io.IOException from label0 to label7 with label8;
    }

    public void initOptions(org.petero.droidfish.EngineOptions)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        org.petero.droidfish.EngineOptions r1;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        specialinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void initOptions(org.petero.droidfish.EngineOptions)>(r1);
        $i0 = r1.<org.petero.droidfish.EngineOptions: int hashMB>;
        $i1 = specialinvoke r0.<org.petero.droidfish.engine.ExternalEngine: int getHashMB(int)>($i0);
        r0.<org.petero.droidfish.engine.ExternalEngine: int hashMB> = $i1;
        $i2 = r0.<org.petero.droidfish.engine.ExternalEngine: int hashMB>;
        virtualinvoke r0.<org.petero.droidfish.engine.ExternalEngine: void setOption(java.lang.String,int)>("Hash", $i2);
        $z0 = r1.<org.petero.droidfish.EngineOptions: boolean engineProbe>;
        if $z0 == 0 goto label0;

        $r2 = r1.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.String gaviotaTbPath> = $r2;
        $r3 = r1.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        virtualinvoke r0.<org.petero.droidfish.engine.ExternalEngine: void setOption(java.lang.String,java.lang.String)>("GaviotaTbPath", $r3);
        virtualinvoke r0.<org.petero.droidfish.engine.ExternalEngine: void setOption(java.lang.String,int)>("GaviotaTbCache", 8);

     label0:
        r0.<org.petero.droidfish.engine.ExternalEngine: boolean optionsInitialized> = 1;
        return;
    }

    private final int getHashMB(int)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        int i0, i1;
        java.lang.Runtime $r1;
        long $l2, $l3;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        i0 := @parameter0: int;
        if i0 <= 16 goto label1;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
        $l2 = virtualinvoke $r1.<java.lang.Runtime: long maxMemory()>();
        $l3 = $l2 / 1048576L;
        i1 = (int) $l3;
        if i1 >= 16 goto label0;

        i1 = 16;

     label0:
        if i0 <= i1 goto label1;

        i0 = i1;

     label1:
        return i0;
    }

    public boolean optionsOk(org.petero.droidfish.EngineOptions)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        org.petero.droidfish.EngineOptions r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.lang.String $r2, $r3;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        $z0 = r0.<org.petero.droidfish.engine.ExternalEngine: boolean optionsInitialized>;
        if $z0 != 0 goto label0;

        return 1;

     label0:
        $i0 = r0.<org.petero.droidfish.engine.ExternalEngine: int hashMB>;
        $i1 = r1.<org.petero.droidfish.EngineOptions: int hashMB>;
        $i2 = specialinvoke r0.<org.petero.droidfish.engine.ExternalEngine: int getHashMB(int)>($i1);
        if $i0 == $i2 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<org.petero.droidfish.engine.ExternalEngine: boolean haveOption(java.lang.String)>("gaviotatbpath");
        if $z1 == 0 goto label2;

        $r2 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.String gaviotaTbPath>;
        $r3 = r1.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z2 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public void setStrength(int)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        int i0;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        i0 := @parameter0: int;
        return;
    }

    public java.lang.String readLineFromEngine(int)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        int i0, $i1;
        java.lang.String r1;
        org.petero.droidfish.engine.LocalPipe $r2;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        i0 := @parameter0: int;
        $r2 = r0.<org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.LocalPipe inLines>;
        r1 = virtualinvoke $r2.<org.petero.droidfish.engine.LocalPipe: java.lang.String readLine(int)>(i0);
        if r1 != null goto label0;

        return null;

     label0:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i1 <= 0 goto label1;

     label1:
        return r1;
    }

    public void writeLineToEngine(java.lang.String)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        java.lang.String r1, r6;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.Process r3;
        java.io.OutputStream $r7;
        byte[] $r8;
        java.io.IOException $r9, r10;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        r3 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Process engineProc>;
        if r3 == null goto label1;

        $r7 = virtualinvoke r3.<java.lang.Process: java.io.OutputStream getOutputStream()>();
        $r8 = virtualinvoke r6.<java.lang.String: byte[] getBytes()>();
        virtualinvoke $r7.<java.io.OutputStream: void write(byte[])>($r8);

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r10 = $r9;

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void shutDown()
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        java.lang.Thread $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r10;
        java.lang.Process $r5, $r6;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        $r1 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread startupThread>;
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread startupThread>;
        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();

     label0:
        $r3 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread exitThread>;
        if $r3 == null goto label1;

        $r4 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread exitThread>;
        virtualinvoke $r4.<java.lang.Thread: void interrupt()>();

     label1:
        specialinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void shutDown()>();
        $r5 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Process engineProc>;
        if $r5 == null goto label2;

        $r6 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Process engineProc>;
        virtualinvoke $r6.<java.lang.Process: void destroy()>();

     label2:
        r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Process engineProc> = null;
        $r7 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdInThread>;
        if $r7 == null goto label3;

        $r8 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdInThread>;
        virtualinvoke $r8.<java.lang.Thread: void interrupt()>();

     label3:
        $r9 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdErrThread>;
        if $r9 == null goto label4;

        $r10 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Thread stdErrThread>;
        virtualinvoke $r10.<java.lang.Thread: void interrupt()>();

     label4:
        return;
    }

    protected void copyFile(java.io.File, java.io.File) throws java.io.IOException
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        java.io.File r1, r2, $r3;
        java.nio.channels.FileChannel r4, r5;
        long l0, $l1, $l2, $l4, $l5, $l7, $l8, $l10, $l11;
        java.lang.Throwable r6, $r15;
        java.io.IOException r7, $r10, $r11, r12, $r13, r14, $r16, $r17, r18;
        boolean $z1, $z2;
        byte $b3, $b6, $b9;
        java.io.FileInputStream $r8;
        java.io.FileOutputStream $r9;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        r1 := @parameter0: java.io.File;
        r2 := @parameter1: java.io.File;
        $r3 = new java.io.File;
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>("/data/data/org.petero.droidfish/internal_sf");
        virtualinvoke $r3.<java.io.File: boolean delete()>();
        $z1 = virtualinvoke r2.<java.io.File: boolean exists()>();
        if $z1 == 0 goto label0;

        $l1 = virtualinvoke r1.<java.io.File: long length()>();
        $l2 = virtualinvoke r2.<java.io.File: long length()>();
        $b3 = $l1 cmp $l2;
        if $b3 != 0 goto label0;

        $l4 = virtualinvoke r1.<java.io.File: long lastModified()>();
        $l5 = virtualinvoke r2.<java.io.File: long lastModified()>();
        $b6 = $l4 cmp $l5;
        if $b6 != 0 goto label0;

        return;

     label0:
        $z2 = virtualinvoke r2.<java.io.File: boolean exists()>();
        if $z2 == 0 goto label1;

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label1:
        virtualinvoke r2.<java.io.File: boolean createNewFile()>();
        r4 = null;
        r5 = null;

     label2:
        $r8 = new java.io.FileInputStream;
        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>(r1);
        r4 = virtualinvoke $r8.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();
        $r9 = new java.io.FileOutputStream;
        specialinvoke $r9.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);
        r5 = virtualinvoke $r9.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();
        $l7 = virtualinvoke r4.<java.nio.channels.FileChannel: long size()>();
        l0 = virtualinvoke r5.<java.nio.channels.FileChannel: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)>(r4, 0L, $l7);
        $l8 = virtualinvoke r4.<java.nio.channels.FileChannel: long size()>();
        $b9 = l0 cmp $l8;
        if $b9 >= 0 goto label3;

        $r10 = new java.io.IOException;
        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("File copy failed");
        throw $r10;

     label3:
        if r4 == null goto label7;

     label4:
        virtualinvoke r4.<java.nio.channels.FileChannel: void close()>();

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;
        r12 = $r11;

     label7:
        if r5 == null goto label11;

     label8:
        virtualinvoke r5.<java.nio.channels.FileChannel: void close()>();

     label9:
        goto label11;

     label10:
        $r13 := @caughtexception;
        r14 = $r13;

     label11:
        $l10 = virtualinvoke r1.<java.io.File: long lastModified()>();
        virtualinvoke r2.<java.io.File: boolean setLastModified(long)>($l10);
        goto label23;

     label12:
        $r15 := @caughtexception;

     label13:
        r6 = $r15;

     label14:
        if r4 == null goto label18;

     label15:
        virtualinvoke r4.<java.nio.channels.FileChannel: void close()>();

     label16:
        goto label18;

     label17:
        $r16 := @caughtexception;
        r7 = $r16;

     label18:
        if r5 == null goto label22;

     label19:
        virtualinvoke r5.<java.nio.channels.FileChannel: void close()>();

     label20:
        goto label22;

     label21:
        $r17 := @caughtexception;
        r18 = $r17;

     label22:
        $l11 = virtualinvoke r1.<java.io.File: long lastModified()>();
        virtualinvoke r2.<java.io.File: boolean setLastModified(long)>($l11);
        throw r6;

     label23:
        return;

        catch java.io.IOException from label4 to label5 with label6;
        catch java.io.IOException from label8 to label9 with label10;
        catch java.lang.Throwable from label2 to label3 with label12;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private final void chmod(java.lang.String) throws java.io.IOException
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        java.lang.String r1;
        boolean $z0;
        java.io.IOException $r2;

        r0 := @this: org.petero.droidfish.engine.ExternalEngine;
        r1 := @parameter0: java.lang.String;
        $z0 = staticinvoke <org.petero.droidfish.engine.EngineUtil: boolean chmod(java.lang.String)>(r1);
        if $z0 != 0 goto label0;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("chmod failed");
        throw $r2;

     label0:
        return;
    }

    static boolean access$000(org.petero.droidfish.engine.ExternalEngine)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        $z0 = r0.<org.petero.droidfish.engine.ExternalEngine: boolean startedOk>;
        return $z0;
    }

    static boolean access$100(org.petero.droidfish.engine.ExternalEngine)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        $z0 = r0.<org.petero.droidfish.engine.ExternalEngine: boolean isRunning>;
        return $z0;
    }

    static org.petero.droidfish.engine.UCIEngine$Report access$200(org.petero.droidfish.engine.ExternalEngine)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        org.petero.droidfish.engine.UCIEngine$Report $r1;

        r0 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        $r1 = r0.<org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.UCIEngine$Report report>;
        return $r1;
    }

    static java.lang.Process access$300(org.petero.droidfish.engine.ExternalEngine)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        java.lang.Process $r1;

        r0 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        $r1 = r0.<org.petero.droidfish.engine.ExternalEngine: java.lang.Process engineProc>;
        return $r1;
    }

    static boolean access$102(org.petero.droidfish.engine.ExternalEngine, boolean)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        z0 := @parameter1: boolean;
        r0.<org.petero.droidfish.engine.ExternalEngine: boolean isRunning> = z0;
        return z0;
    }

    static org.petero.droidfish.engine.LocalPipe access$400(org.petero.droidfish.engine.ExternalEngine)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        org.petero.droidfish.engine.LocalPipe $r1;

        r0 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        $r1 = r0.<org.petero.droidfish.engine.ExternalEngine: org.petero.droidfish.engine.LocalPipe inLines>;
        return $r1;
    }

    static boolean access$002(org.petero.droidfish.engine.ExternalEngine, boolean)
    {
        org.petero.droidfish.engine.ExternalEngine r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.engine.ExternalEngine;
        z0 := @parameter1: boolean;
        r0.<org.petero.droidfish.engine.ExternalEngine: boolean startedOk> = z0;
        return z0;
    }
}
public class org.petero.droidfish.engine.InternalStockFish extends org.petero.droidfish.engine.ExternalEngine
{

    public void <init>(android.content.Context, org.petero.droidfish.engine.UCIEngine$Report)
    {
        org.petero.droidfish.engine.InternalStockFish r0;
        android.content.Context r1;
        org.petero.droidfish.engine.UCIEngine$Report r2;

        r0 := @this: org.petero.droidfish.engine.InternalStockFish;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: org.petero.droidfish.engine.UCIEngine$Report;
        specialinvoke r0.<org.petero.droidfish.engine.ExternalEngine: void <init>(android.content.Context,java.lang.String,org.petero.droidfish.engine.UCIEngine$Report)>(r1, "", r2);
        return;
    }

    public final void setStrength(int)
    {
        org.petero.droidfish.engine.InternalStockFish r0;
        int i0, $i1;

        r0 := @this: org.petero.droidfish.engine.InternalStockFish;
        i0 := @parameter0: int;
        $i1 = i0 / 50;
        virtualinvoke r0.<org.petero.droidfish.engine.InternalStockFish: void setOption(java.lang.String,int)>("Skill Level", $i1);
        return;
    }

    private final long readCheckSum(java.io.File)
    {
        org.petero.droidfish.engine.InternalStockFish r0;
        java.io.File r1;
        java.io.FileInputStream r2, $r7;
        java.io.DataInputStream r3, $r8;
        long l0, l1;
        java.io.IOException r4, r6, $r9, $r10, r11, $r12, r13, $r15;
        java.lang.Throwable r5, $r14;

        r0 := @this: org.petero.droidfish.engine.InternalStockFish;
        r1 := @parameter0: java.io.File;
        r2 = null;

     label0:
        $r7 = new java.io.FileInputStream;
        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>(r1);
        r2 = $r7;
        $r8 = new java.io.DataInputStream;
        specialinvoke $r8.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);
        r3 = $r8;
        l0 = virtualinvoke r3.<java.io.DataInputStream: long readLong()>();

     label1:
        if r2 == null goto label5;

     label2:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;
        r4 = $r9;

     label5:
        return l0;

     label6:
        $r10 := @caughtexception;

     label7:
        r11 = $r10;
        l1 = 0L;

     label8:
        if r2 == null goto label12;

     label9:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r12 := @caughtexception;
        r13 = $r12;

     label12:
        return l1;

     label13:
        $r14 := @caughtexception;

     label14:
        r5 = $r14;

     label15:
        if r2 == null goto label19;

     label16:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r15 := @caughtexception;
        r6 = $r15;

     label19:
        throw r5;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label0 to label1 with label6;
        catch java.io.IOException from label9 to label10 with label11;
        catch java.lang.Throwable from label0 to label1 with label13;
        catch java.lang.Throwable from label7 to label8 with label13;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private final void writeCheckSum(java.io.File, long)
    {
        org.petero.droidfish.engine.InternalStockFish r0;
        java.io.File r1;
        long l0;
        java.io.FileOutputStream r2, $r6;
        java.io.DataOutputStream r3, $r7;
        java.lang.Throwable r4, $r14;
        java.io.IOException r5, $r8, r9, $r10, r11, $r12, r13, $r15;

        r0 := @this: org.petero.droidfish.engine.InternalStockFish;
        r1 := @parameter0: java.io.File;
        l0 := @parameter1: long;
        r2 = null;

     label0:
        $r6 = new java.io.FileOutputStream;
        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);
        r2 = $r6;
        $r7 = new java.io.DataOutputStream;
        specialinvoke $r7.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r2);
        r3 = $r7;
        virtualinvoke r3.<java.io.DataOutputStream: void writeLong(long)>(l0);

     label1:
        if r2 == null goto label18;

     label2:
        virtualinvoke r2.<java.io.OutputStream: void close()>();

     label3:
        goto label18;

     label4:
        $r8 := @caughtexception;
        r9 = $r8;
        goto label18;

     label5:
        $r10 := @caughtexception;

     label6:
        r11 = $r10;

     label7:
        if r2 == null goto label18;

     label8:
        virtualinvoke r2.<java.io.OutputStream: void close()>();

     label9:
        goto label18;

     label10:
        $r12 := @caughtexception;
        r13 = $r12;
        goto label18;

     label11:
        $r14 := @caughtexception;

     label12:
        r4 = $r14;

     label13:
        if r2 == null goto label17;

     label14:
        virtualinvoke r2.<java.io.OutputStream: void close()>();

     label15:
        goto label17;

     label16:
        $r15 := @caughtexception;
        r5 = $r15;

     label17:
        throw r4;

     label18:
        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label0 to label1 with label5;
        catch java.io.IOException from label8 to label9 with label10;
        catch java.lang.Throwable from label0 to label1 with label11;
        catch java.lang.Throwable from label6 to label7 with label11;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private final long computeAssetsCheckSum(java.lang.String)
    {
        org.petero.droidfish.engine.InternalStockFish r0;
        java.lang.String r1;
        java.io.InputStream r2;
        java.security.MessageDigest r3;
        byte[] r4, $r11, r12;
        int i0, i2, $i5;
        long l1, $l4, $l6, l7, l8, l9;
        java.io.IOException r5, r7, $r13, $r14, r15, $r16, r17, $r20, r21, $r23;
        java.lang.Throwable r6, $r22;
        android.content.Context $r8;
        android.content.res.AssetManager $r9;
        boolean $z0;
        java.util.zip.GZIPInputStream $r10;
        byte $b3;
        java.security.NoSuchAlgorithmException $r18, r19;

        r0 := @this: org.petero.droidfish.engine.InternalStockFish;
        r1 := @parameter0: java.lang.String;
        r2 = null;

     label0:
        $r8 = r0.<org.petero.droidfish.engine.InternalStockFish: android.content.Context context>;
        $r9 = virtualinvoke $r8.<android.content.Context: android.content.res.AssetManager getAssets()>();
        r2 = virtualinvoke $r9.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(r1);
        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".mygz");
        if $z0 == 0 goto label1;

        $r10 = new java.util.zip.GZIPInputStream;
        specialinvoke $r10.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r2);
        r2 = $r10;

     label1:
        r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");
        r4 = newarray (byte)[8192];

     label2:
        i0 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r4);
        if i0 > 0 goto label3;

        goto label4;

     label3:
        virtualinvoke r3.<java.security.MessageDigest: void update(byte[],int,int)>(r4, 0, i0);
        goto label2;

     label4:
        $r11 = newarray (byte)[1];
        $r11[0] = 0;
        r12 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>($r11);
        l1 = 0L;
        i2 = 0;

     label5:
        if i2 >= 8 goto label6;

        $b3 = r12[i2];
        $l4 = (long) $b3;
        $i5 = i2 * 8;
        $l6 = $l4 << $i5;
        l1 = l1 ^ $l6;
        i2 = i2 + 1;
        goto label5;

     label6:
        l7 = l1;

     label7:
        if r2 == null goto label11;

     label8:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label9:
        goto label11;

     label10:
        $r13 := @caughtexception;
        r5 = $r13;

     label11:
        return l7;

     label12:
        $r14 := @caughtexception;

     label13:
        r15 = $r14;
        l8 = -1L;

     label14:
        if r2 == null goto label18;

     label15:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r16 := @caughtexception;
        r17 = $r16;

     label18:
        return l8;

     label19:
        $r18 := @caughtexception;

     label20:
        r19 = $r18;
        l9 = -1L;

     label21:
        if r2 == null goto label25;

     label22:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label23:
        goto label25;

     label24:
        $r20 := @caughtexception;
        r21 = $r20;

     label25:
        return l9;

     label26:
        $r22 := @caughtexception;

     label27:
        r6 = $r22;

     label28:
        if r2 == null goto label32;

     label29:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label30:
        goto label32;

     label31:
        $r23 := @caughtexception;
        r7 = $r23;

     label32:
        throw r6;

        catch java.io.IOException from label8 to label9 with label10;
        catch java.io.IOException from label0 to label7 with label12;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.security.NoSuchAlgorithmException from label0 to label7 with label19;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Throwable from label0 to label7 with label26;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    protected void copyFile(java.io.File, java.io.File) throws java.io.IOException
    {
        org.petero.droidfish.engine.InternalStockFish r0;
        java.io.File r1, r2, $r4, $r22;
        java.lang.String r3;
        long l0, l1;
        java.io.InputStream r5;
        java.io.FileOutputStream r6, $r13;
        byte[] r7;
        int i2;
        java.lang.Throwable r8, $r18;
        java.io.IOException r9, $r14, r15, $r16, r17, $r19, $r20, r21;
        byte $b3;
        boolean $z0, $z3;
        android.content.Context $r10;
        android.content.res.AssetManager $r11;
        java.util.zip.GZIPInputStream $r12;

        r0 := @this: org.petero.droidfish.engine.InternalStockFish;
        r1 := @parameter0: java.io.File;
        r2 := @parameter1: java.io.File;
        r3 = staticinvoke <org.petero.droidfish.engine.EngineUtil: java.lang.String internalStockFishName()>();
        $r4 = new java.io.File;
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("/data/data/org.petero.droidfish/internal_sf");
        l0 = specialinvoke r0.<org.petero.droidfish.engine.InternalStockFish: long readCheckSum(java.io.File)>($r4);
        l1 = specialinvoke r0.<org.petero.droidfish.engine.InternalStockFish: long computeAssetsCheckSum(java.lang.String)>(r3);
        $b3 = l0 cmp l1;
        if $b3 != 0 goto label0;

        return;

     label0:
        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label1:
        virtualinvoke r2.<java.io.File: boolean createNewFile()>();
        $r10 = r0.<org.petero.droidfish.engine.InternalStockFish: android.content.Context context>;
        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.AssetManager getAssets()>();
        r5 = virtualinvoke $r11.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(r3);
        $z3 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>(".mygz");
        if $z3 == 0 goto label2;

        $r12 = new java.util.zip.GZIPInputStream;
        specialinvoke $r12.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r5);
        r5 = $r12;

     label2:
        $r13 = new java.io.FileOutputStream;
        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);
        r6 = $r13;

     label3:
        r7 = newarray (byte)[8192];

     label4:
        i2 = virtualinvoke r5.<java.io.InputStream: int read(byte[])>(r7);
        if i2 > 0 goto label5;

        goto label6;

     label5:
        virtualinvoke r6.<java.io.OutputStream: void write(byte[],int,int)>(r7, 0, i2);
        goto label4;

     label6:
        if r5 == null goto label10;

     label7:
        virtualinvoke r5.<java.io.InputStream: void close()>();

     label8:
        goto label10;

     label9:
        $r14 := @caughtexception;
        r15 = $r14;

     label10:
        if r6 == null goto label25;

     label11:
        virtualinvoke r6.<java.io.OutputStream: void close()>();

     label12:
        goto label25;

     label13:
        $r16 := @caughtexception;
        r17 = $r16;
        goto label25;

     label14:
        $r18 := @caughtexception;

     label15:
        r8 = $r18;

     label16:
        if r5 == null goto label20;

     label17:
        virtualinvoke r5.<java.io.InputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r19 := @caughtexception;
        r9 = $r19;

     label20:
        if r6 == null goto label24;

     label21:
        virtualinvoke r6.<java.io.OutputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r20 := @caughtexception;
        r21 = $r20;

     label24:
        throw r8;

     label25:
        $r22 = new java.io.File;
        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>("/data/data/org.petero.droidfish/internal_sf");
        specialinvoke r0.<org.petero.droidfish.engine.InternalStockFish: void writeCheckSum(java.io.File,long)>($r22, l1);
        return;

        catch java.io.IOException from label7 to label8 with label9;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.Throwable from label3 to label6 with label14;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label15 to label16 with label14;
    }
}
public class org.petero.droidfish.engine.LocalPipe extends java.lang.Object
{
    private java.util.LinkedList lines;
    private boolean closed;

    public void <init>()
    {
        org.petero.droidfish.engine.LocalPipe r0;
        java.util.LinkedList $r1;

        r0 := @this: org.petero.droidfish.engine.LocalPipe;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.LinkedList;
        specialinvoke $r1.<java.util.LinkedList: void <init>()>();
        r0.<org.petero.droidfish.engine.LocalPipe: java.util.LinkedList lines> = $r1;
        r0.<org.petero.droidfish.engine.LocalPipe: boolean closed> = 0;
        return;
    }

    public final synchronized void printLine(java.lang.String)
    {
        org.petero.droidfish.engine.LocalPipe r0;
        java.lang.String r1, r2;
        java.lang.Object[] $r3;

        r0 := @this: org.petero.droidfish.engine.LocalPipe;
        r1 := @parameter0: java.lang.String;
        $r3 = newarray (java.lang.Object)[0];
        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r3);
        virtualinvoke r0.<org.petero.droidfish.engine.LocalPipe: void addLine(java.lang.String)>(r2);
        return;
    }

    public final synchronized transient void printLine(java.lang.String, java.lang.Object[])
    {
        org.petero.droidfish.engine.LocalPipe r0;
        java.lang.String r1, r3;
        java.lang.Object[] r2;

        r0 := @this: org.petero.droidfish.engine.LocalPipe;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.Object[];
        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);
        virtualinvoke r0.<org.petero.droidfish.engine.LocalPipe: void addLine(java.lang.String)>(r3);
        return;
    }

    public final synchronized void addLine(java.lang.String)
    {
        org.petero.droidfish.engine.LocalPipe r0;
        java.lang.String r1;
        java.util.LinkedList $r2;

        r0 := @this: org.petero.droidfish.engine.LocalPipe;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.petero.droidfish.engine.LocalPipe: java.util.LinkedList lines>;
        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);
        virtualinvoke r0.<java.lang.Object: void notify()>();
        return;
    }

    public final synchronized java.lang.String readLine()
    {
        org.petero.droidfish.engine.LocalPipe r0;
        java.lang.String $r1;

        r0 := @this: org.petero.droidfish.engine.LocalPipe;
        $r1 = virtualinvoke r0.<org.petero.droidfish.engine.LocalPipe: java.lang.String readLine(int)>(-1);
        return $r1;
    }

    public final synchronized java.lang.String readLine(int)
    {
        org.petero.droidfish.engine.LocalPipe r0;
        int i0;
        java.lang.String r1, $r4;
        boolean $z0, $z1, $z2, $z3;
        java.util.LinkedList $r2, $r3, $r5, $r7;
        long $l1;
        java.lang.Object $r6;
        java.lang.InterruptedException $r10, r11;

        r0 := @this: org.petero.droidfish.engine.LocalPipe;
        i0 := @parameter0: int;
        $z0 = r0.<org.petero.droidfish.engine.LocalPipe: boolean closed>;
        if $z0 == 0 goto label0;

        return null;

     label0:
        $r2 = r0.<org.petero.droidfish.engine.LocalPipe: java.util.LinkedList lines>;
        $z1 = virtualinvoke $r2.<java.util.LinkedList: boolean isEmpty()>();
        if $z1 == 0 goto label2;

        if i0 <= 0 goto label1;

        $l1 = (long) i0;
        virtualinvoke r0.<java.lang.Object: void wait(long)>($l1);
        goto label2;

     label1:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label2:
        $r3 = r0.<org.petero.droidfish.engine.LocalPipe: java.util.LinkedList lines>;
        $z2 = virtualinvoke $r3.<java.util.LinkedList: boolean isEmpty()>();
        if $z2 == 0 goto label5;

        $z3 = r0.<org.petero.droidfish.engine.LocalPipe: boolean closed>;
        if $z3 == 0 goto label3;

        $r4 = null;
        goto label4;

     label3:
        $r4 = "";

     label4:
        return $r4;

     label5:
        $r5 = r0.<org.petero.droidfish.engine.LocalPipe: java.util.LinkedList lines>;
        $r6 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object get(int)>(0);
        r1 = (java.lang.String) $r6;
        $r7 = r0.<org.petero.droidfish.engine.LocalPipe: java.util.LinkedList lines>;
        virtualinvoke $r7.<java.util.LinkedList: java.lang.Object remove(int)>(0);

     label6:
        return r1;

     label7:
        $r10 := @caughtexception;
        r11 = $r10;
        return null;

        catch java.lang.InterruptedException from label0 to label4 with label7;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    public final synchronized void close()
    {
        org.petero.droidfish.engine.LocalPipe r0;

        r0 := @this: org.petero.droidfish.engine.LocalPipe;
        r0.<org.petero.droidfish.engine.LocalPipe: boolean closed> = 1;
        virtualinvoke r0.<java.lang.Object: void notify()>();
        return;
    }

    public final synchronized boolean isClosed()
    {
        org.petero.droidfish.engine.LocalPipe r0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.engine.LocalPipe;
        $z0 = r0.<org.petero.droidfish.engine.LocalPipe: boolean closed>;
        return $z0;
    }
}
class org.petero.droidfish.engine.NetworkEngine$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.engine.NetworkEngine this$0;

    void <init>(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine$1 r0;
        org.petero.droidfish.engine.NetworkEngine r1;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine$1;
        r1 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        r0.<org.petero.droidfish.engine.NetworkEngine$1: org.petero.droidfish.engine.NetworkEngine this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.NetworkEngine$1 r0;
        java.lang.InterruptedException r1, $r2;
        org.petero.droidfish.engine.NetworkEngine $r3, $r4, $r5, $r6, $r7, $r9;
        boolean $z0, $z1, $z2;
        org.petero.droidfish.engine.UCIEngine$Report $r8;
        android.content.Context $r10;
        java.lang.String $r11;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine$1;

     label0:
        staticinvoke <java.lang.Thread: void sleep(long)>(10000L);

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;
        return;

     label3:
        $r3 = r0.<org.petero.droidfish.engine.NetworkEngine$1: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z0 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$000(org.petero.droidfish.engine.NetworkEngine)>($r3);
        if $z0 == 0 goto label4;

        $r4 = r0.<org.petero.droidfish.engine.NetworkEngine$1: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z1 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r4);
        if $z1 == 0 goto label4;

        $r5 = r0.<org.petero.droidfish.engine.NetworkEngine$1: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z2 = $r5.<org.petero.droidfish.engine.NetworkEngine: boolean isUCI>;
        if $z2 != 0 goto label4;

        $r6 = r0.<org.petero.droidfish.engine.NetworkEngine$1: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r6, 1);
        $r7 = r0.<org.petero.droidfish.engine.NetworkEngine$1: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r8 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r7);
        $r9 = r0.<org.petero.droidfish.engine.NetworkEngine$1: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r10 = $r9.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getString(int)>(2131099830);
        interfaceinvoke $r8.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r11);

     label4:
        return;

        catch java.lang.InterruptedException from label0 to label1 with label2;
    }
}
class org.petero.droidfish.engine.NetworkEngine$2 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.engine.NetworkEngine this$0;

    void <init>(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine$2 r0;
        org.petero.droidfish.engine.NetworkEngine r1;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine$2;
        r1 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.NetworkEngine$2 r0;
        java.io.InputStream r1;
        java.io.InputStreamReader r2, $r12;
        java.io.BufferedReader r3, $r13;
        boolean z0, $z1, $z4, $z7, $z8, $z11, $z12, $z15, $z16, $z19;
        java.lang.String r4, $r14, $r37, $r42, $r54, $r59, $r72, $r77, $r90, $r95;
        org.petero.droidfish.engine.LocalPipe r5, $r17, $r19, $r28;
        java.lang.Throwable r6, r7, r8, $r22, $r25, $r45, $r62, r63, $r80, r81, $r98, r99;
        org.petero.droidfish.engine.NetworkEngine $r9, $r10, $r16, $r18, $r20, $r21, $r27, $r29, $r30, $r31, $r32, $r33, $r35, $r38, $r40, $r43, $r46, $r47, $r48, $r49, $r50, $r52, $r55, $r57, $r60, $r64, $r65, $r66, $r67, $r68, $r70, $r73, $r75, $r78, $r82, $r83, $r84, $r85, $r86, $r88, $r91, $r93, $r96;
        java.net.Socket $r11, $r44, $r61, $r79, $r97;
        java.lang.Thread $r15;
        java.io.IOException $r23, r24, $r26;
        org.petero.droidfish.engine.UCIEngine$Report $r34, $r39, $r51, $r56, $r69, $r74, $r87, $r92;
        android.content.Context $r36, $r41, $r53, $r58, $r71, $r76, $r89, $r94;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine$2;
        $r9 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: void access$400(org.petero.droidfish.engine.NetworkEngine)>($r9);

     label0:
        $r10 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r11 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r10);
        r1 = virtualinvoke $r11.<java.net.Socket: java.io.InputStream getInputStream()>();
        $r12 = new java.io.InputStreamReader;
        specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);
        r2 = $r12;
        $r13 = new java.io.BufferedReader;
        specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r2, 8192);
        r3 = $r13;
        z0 = 1;

     label1:
        $r14 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();
        r4 = $r14;
        if $r14 == null goto label11;

        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z1 = virtualinvoke $r15.<java.lang.Thread: boolean isInterrupted()>();
        if $z1 == 0 goto label3;

        goto label20;

     label2:
        return;

     label3:
        $r16 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r17 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe access$600(org.petero.droidfish.engine.NetworkEngine)>($r16);
        r5 = $r17;
        entermonitor $r17;

     label4:
        $r18 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r19 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe access$600(org.petero.droidfish.engine.NetworkEngine)>($r18);
        virtualinvoke $r19.<org.petero.droidfish.engine.LocalPipe: void addLine(java.lang.String)>(r4);
        if z0 == 0 goto label5;

        $r20 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$002(org.petero.droidfish.engine.NetworkEngine,boolean)>($r20, 1);
        $r21 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$102(org.petero.droidfish.engine.NetworkEngine,boolean)>($r21, 1);
        z0 = 0;

     label5:
        exitmonitor r5;

     label6:
        goto label10;

     label7:
        $r22 := @caughtexception;

     label8:
        r6 = $r22;
        exitmonitor r5;

     label9:
        throw r6;

     label10:
        goto label1;

     label11:
        goto label26;

     label12:
        goto label19;

     label13:
        $r23 := @caughtexception;

     label14:
        r24 = $r23;
        goto label32;

     label15:
        goto label19;

     label16:
        $r25 := @caughtexception;

     label17:
        r7 = $r25;
        goto label38;

     label18:
        throw r7;

     label19:
        $r27 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r28 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe access$600(org.petero.droidfish.engine.NetworkEngine)>($r27);
        virtualinvoke $r28.<org.petero.droidfish.engine.LocalPipe: void close()>();
        return;

     label20:
        $r29 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z4 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r29);
        if $z4 == 0 goto label22;

        $r30 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r30, 1);
        $r31 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$102(org.petero.droidfish.engine.NetworkEngine,boolean)>($r31, 0);
        $r32 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z7 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$000(org.petero.droidfish.engine.NetworkEngine)>($r32);
        if $z7 != 0 goto label21;

        $r33 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r34 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r33);
        $r35 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r36 = $r35.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r37 = virtualinvoke $r36.<android.content.Context: java.lang.String getString(int)>(2131099828);
        interfaceinvoke $r34.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r37);
        goto label22;

     label21:
        $r38 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r39 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r38);
        $r40 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r41 = $r40.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r42 = virtualinvoke $r41.<android.content.Context: java.lang.String getString(int)>(2131099829);
        interfaceinvoke $r39.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r42);

     label22:
        $r43 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r44 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r43);
        virtualinvoke $r44.<java.net.Socket: void close()>();

     label23:
        goto label25;

     label24:
        $r45 := @caughtexception;
        r8 = $r45;

     label25:
        goto label2;

     label26:
        $r46 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z8 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r46);
        if $z8 == 0 goto label28;

        $r47 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r47, 1);
        $r48 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$102(org.petero.droidfish.engine.NetworkEngine,boolean)>($r48, 0);
        $r49 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z11 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$000(org.petero.droidfish.engine.NetworkEngine)>($r49);
        if $z11 != 0 goto label27;

        $r50 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r51 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r50);
        $r52 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r53 = $r52.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r54 = virtualinvoke $r53.<android.content.Context: java.lang.String getString(int)>(2131099828);
        interfaceinvoke $r51.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r54);
        goto label28;

     label27:
        $r55 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r56 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r55);
        $r57 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r58 = $r57.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r59 = virtualinvoke $r58.<android.content.Context: java.lang.String getString(int)>(2131099829);
        interfaceinvoke $r56.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r59);

     label28:
        $r60 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r61 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r60);
        virtualinvoke $r61.<java.net.Socket: void close()>();

     label29:
        goto label31;

     label30:
        $r62 := @caughtexception;
        r63 = $r62;

     label31:
        goto label12;

     label32:
        $r64 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z12 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r64);
        if $z12 == 0 goto label34;

        $r65 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r65, 1);
        $r66 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$102(org.petero.droidfish.engine.NetworkEngine,boolean)>($r66, 0);
        $r67 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z15 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$000(org.petero.droidfish.engine.NetworkEngine)>($r67);
        if $z15 != 0 goto label33;

        $r68 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r69 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r68);
        $r70 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r71 = $r70.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r72 = virtualinvoke $r71.<android.content.Context: java.lang.String getString(int)>(2131099828);
        interfaceinvoke $r69.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r72);
        goto label34;

     label33:
        $r73 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r74 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r73);
        $r75 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r76 = $r75.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r77 = virtualinvoke $r76.<android.content.Context: java.lang.String getString(int)>(2131099829);
        interfaceinvoke $r74.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r77);

     label34:
        $r78 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r79 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r78);
        virtualinvoke $r79.<java.net.Socket: void close()>();

     label35:
        goto label37;

     label36:
        $r80 := @caughtexception;
        r81 = $r80;

     label37:
        goto label15;

     label38:
        $r82 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z16 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r82);
        if $z16 == 0 goto label40;

        $r83 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r83, 1);
        $r84 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$102(org.petero.droidfish.engine.NetworkEngine,boolean)>($r84, 0);
        $r85 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z19 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$000(org.petero.droidfish.engine.NetworkEngine)>($r85);
        if $z19 != 0 goto label39;

        $r86 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r87 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r86);
        $r88 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r89 = $r88.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r90 = virtualinvoke $r89.<android.content.Context: java.lang.String getString(int)>(2131099828);
        interfaceinvoke $r87.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r90);
        goto label40;

     label39:
        $r91 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r92 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r91);
        $r93 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r94 = $r93.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r95 = virtualinvoke $r94.<android.content.Context: java.lang.String getString(int)>(2131099829);
        interfaceinvoke $r92.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r95);

     label40:
        $r96 = r0.<org.petero.droidfish.engine.NetworkEngine$2: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r97 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r96);
        virtualinvoke $r97.<java.net.Socket: void close()>();

     label41:
        goto label43;

     label42:
        $r98 := @caughtexception;
        r99 = $r98;

     label43:
        goto label18;

        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
        catch java.io.IOException from label0 to label2 with label13;
        catch java.io.IOException from label3 to label11 with label13;
        catch java.lang.Throwable from label0 to label2 with label16;
        catch java.lang.Throwable from label3 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label34 to label35 with label36;
        catch java.lang.Throwable from label40 to label41 with label42;
    }
}
class org.petero.droidfish.engine.NetworkEngine$3 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.engine.NetworkEngine this$0;

    void <init>(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine$3 r0;
        org.petero.droidfish.engine.NetworkEngine r1;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine$3;
        r1 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.NetworkEngine$3 r0;
        java.lang.String r1, $r7, r12, $r23, $r33, $r45, $r58, $r71;
        java.lang.Throwable r2, r3, $r24, $r37, $r49, r50, $r62, r63, $r75, r76;
        org.petero.droidfish.engine.NetworkEngine $r4, $r5, $r13, $r19, $r20, $r21, $r26, $r27, $r28, $r29, $r31, $r34, $r35, $r38, $r39, $r40, $r41, $r43, $r46, $r47, $r51, $r52, $r53, $r54, $r56, $r59, $r60, $r64, $r65, $r66, $r67, $r69, $r72, $r73;
        org.petero.droidfish.engine.LocalPipe $r6;
        java.lang.Thread $r8;
        boolean $z0, $z1, $z3, $z4, $z7, $z8, $z11, $z12, $z15, $z16;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.net.Socket $r14, $r36, $r48, $r61, $r74;
        java.io.OutputStream $r15;
        byte[] $r16;
        java.io.IOException $r17, r18, $r25;
        org.petero.droidfish.engine.UCIEngine$Report $r22, $r30, $r42, $r55, $r68;
        android.content.Context $r32, $r44, $r57, $r70;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine$3;

     label0:
        $r4 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: void access$400(org.petero.droidfish.engine.NetworkEngine)>($r4);

     label1:
        $r5 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r6 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe access$700(org.petero.droidfish.engine.NetworkEngine)>($r5);
        $r7 = virtualinvoke $r6.<org.petero.droidfish.engine.LocalPipe: java.lang.String readLine()>();
        r1 = $r7;
        if $r7 == null goto label4;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
        $z0 = virtualinvoke $r8.<java.lang.Thread: boolean isInterrupted()>();
        if $z0 == 0 goto label3;

        goto label14;

     label2:
        return;

     label3:
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r14 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r13);
        $r15 = virtualinvoke $r14.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        $r16 = virtualinvoke r12.<java.lang.String: byte[] getBytes()>();
        virtualinvoke $r15.<java.io.OutputStream: void write(byte[])>($r16);
        goto label1;

     label4:
        goto label20;

     label5:
        goto label13;

     label6:
        $r17 := @caughtexception;

     label7:
        r18 = $r17;
        $r19 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z1 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r19);
        if $z1 == 0 goto label8;

        $r20 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r20, 1);
        $r21 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r22 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r21);
        $r23 = virtualinvoke r18.<java.io.IOException: java.lang.String getMessage()>();
        interfaceinvoke $r22.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r23);

     label8:
        goto label26;

     label9:
        goto label13;

     label10:
        $r24 := @caughtexception;

     label11:
        r2 = $r24;
        goto label32;

     label12:
        throw r2;

     label13:
        return;

     label14:
        $r26 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z3 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r26);
        if $z3 == 0 goto label15;

        $r27 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z4 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$200(org.petero.droidfish.engine.NetworkEngine)>($r27);
        if $z4 != 0 goto label15;

        $r28 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r28, 1);
        $r29 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r30 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r29);
        $r31 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r32 = $r31.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r33 = virtualinvoke $r32.<android.content.Context: java.lang.String getString(int)>(2131099829);
        interfaceinvoke $r30.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r33);

     label15:
        $r34 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$102(org.petero.droidfish.engine.NetworkEngine,boolean)>($r34, 0);

     label16:
        $r35 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r36 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r35);
        virtualinvoke $r36.<java.net.Socket: void close()>();

     label17:
        goto label19;

     label18:
        $r37 := @caughtexception;
        r3 = $r37;

     label19:
        goto label2;

     label20:
        $r38 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z7 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r38);
        if $z7 == 0 goto label21;

        $r39 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z8 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$200(org.petero.droidfish.engine.NetworkEngine)>($r39);
        if $z8 != 0 goto label21;

        $r40 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r40, 1);
        $r41 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r42 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r41);
        $r43 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r44 = $r43.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r45 = virtualinvoke $r44.<android.content.Context: java.lang.String getString(int)>(2131099829);
        interfaceinvoke $r42.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r45);

     label21:
        $r46 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$102(org.petero.droidfish.engine.NetworkEngine,boolean)>($r46, 0);

     label22:
        $r47 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r48 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r47);
        virtualinvoke $r48.<java.net.Socket: void close()>();

     label23:
        goto label25;

     label24:
        $r49 := @caughtexception;
        r50 = $r49;

     label25:
        goto label5;

     label26:
        $r51 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z11 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r51);
        if $z11 == 0 goto label27;

        $r52 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z12 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$200(org.petero.droidfish.engine.NetworkEngine)>($r52);
        if $z12 != 0 goto label27;

        $r53 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r53, 1);
        $r54 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r55 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r54);
        $r56 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r57 = $r56.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r58 = virtualinvoke $r57.<android.content.Context: java.lang.String getString(int)>(2131099829);
        interfaceinvoke $r55.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r58);

     label27:
        $r59 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$102(org.petero.droidfish.engine.NetworkEngine,boolean)>($r59, 0);

     label28:
        $r60 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r61 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r60);
        virtualinvoke $r61.<java.net.Socket: void close()>();

     label29:
        goto label31;

     label30:
        $r62 := @caughtexception;
        r63 = $r62;

     label31:
        goto label9;

     label32:
        $r64 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z15 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$100(org.petero.droidfish.engine.NetworkEngine)>($r64);
        if $z15 == 0 goto label33;

        $r65 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $z16 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$200(org.petero.droidfish.engine.NetworkEngine)>($r65);
        if $z16 != 0 goto label33;

        $r66 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$202(org.petero.droidfish.engine.NetworkEngine,boolean)>($r66, 1);
        $r67 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r68 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)>($r67);
        $r69 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r70 = $r69.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r71 = virtualinvoke $r70.<android.content.Context: java.lang.String getString(int)>(2131099829);
        interfaceinvoke $r68.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r71);

     label33:
        $r72 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        staticinvoke <org.petero.droidfish.engine.NetworkEngine: boolean access$102(org.petero.droidfish.engine.NetworkEngine,boolean)>($r72, 0);

     label34:
        $r73 = r0.<org.petero.droidfish.engine.NetworkEngine$3: org.petero.droidfish.engine.NetworkEngine this$0>;
        $r74 = staticinvoke <org.petero.droidfish.engine.NetworkEngine: java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)>($r73);
        virtualinvoke $r74.<java.net.Socket: void close()>();

     label35:
        goto label37;

     label36:
        $r75 := @caughtexception;
        r76 = $r75;

     label37:
        goto label12;

        catch java.io.IOException from label0 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
        catch java.lang.Throwable from label0 to label2 with label10;
        catch java.lang.Throwable from label3 to label5 with label10;
        catch java.lang.Throwable from label7 to label9 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label34 to label35 with label36;
    }
}
public class org.petero.droidfish.engine.NetworkEngine extends org.petero.droidfish.engine.UCIEngineBase
{
    protected final android.content.Context context;
    private final org.petero.droidfish.engine.UCIEngine$Report report;
    private java.lang.String fileName;
    private java.lang.String networkID;
    private java.net.Socket socket;
    private java.lang.Thread startupThread;
    private java.lang.Thread stdInThread;
    private java.lang.Thread stdOutThread;
    private org.petero.droidfish.engine.LocalPipe guiToEngine;
    private org.petero.droidfish.engine.LocalPipe engineToGui;
    private boolean startedOk;
    private boolean isRunning;
    private boolean isError;
    private int hashMB;
    private java.lang.String gaviotaTbPath;
    private boolean optionsInitialized;

    public void <init>(android.content.Context, java.lang.String, org.petero.droidfish.EngineOptions, org.petero.droidfish.engine.UCIEngine$Report)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        android.content.Context r1;
        java.lang.String r2, $r5;
        org.petero.droidfish.EngineOptions r3;
        org.petero.droidfish.engine.UCIEngine$Report r4;
        org.petero.droidfish.engine.LocalPipe $r6, $r7;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine;
        r1 := @parameter0: android.content.Context;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: org.petero.droidfish.EngineOptions;
        r4 := @parameter3: org.petero.droidfish.engine.UCIEngine$Report;
        specialinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void <init>()>();
        r0.<org.petero.droidfish.engine.NetworkEngine: int hashMB> = -1;
        r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.String gaviotaTbPath> = "";
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean optionsInitialized> = 0;
        r0.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context> = r1;
        r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report report> = r4;
        r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.String fileName> = r2;
        $r5 = r3.<org.petero.droidfish.EngineOptions: java.lang.String networkID>;
        r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.String networkID> = $r5;
        r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread startupThread> = null;
        r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread stdInThread> = null;
        $r6 = new org.petero.droidfish.engine.LocalPipe;
        specialinvoke $r6.<org.petero.droidfish.engine.LocalPipe: void <init>()>();
        r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe guiToEngine> = $r6;
        $r7 = new org.petero.droidfish.engine.LocalPipe;
        specialinvoke $r7.<org.petero.droidfish.engine.LocalPipe: void <init>()>();
        r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe engineToGui> = $r7;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean startedOk> = 0;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean isRunning> = 0;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean isError> = 0;
        return;
    }

    private final synchronized void connect()
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        java.lang.String r1, r2, $r5, $r6, $r11, $r17, $r22, $r26;
        boolean z0, $z1;
        java.lang.String[] r3;
        java.net.Socket $r4, $r12, $r13, $r27, $r28;
        int $i0, i1;
        java.io.IOException $r7, r8, $r23, r24;
        org.petero.droidfish.engine.UCIEngine$Report $r9, $r16, $r20, $r25;
        android.content.Context $r10, $r21;
        java.net.UnknownHostException $r14, r15;
        java.lang.NumberFormatException $r18, r19;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine;
        $r4 = r0.<org.petero.droidfish.engine.NetworkEngine: java.net.Socket socket>;
        if $r4 != null goto label12;

        r1 = null;
        r2 = null;
        z0 = 0;

     label0:
        $r5 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.String fileName>;
        r3 = staticinvoke <org.petero.droidfish.Util: java.lang.String[] readFile(java.lang.String)>($r5);
        $i0 = lengthof r3;
        if $i0 < 3 goto label1;

        $r6 = r3[0];
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("NETE");
        if $z1 != 0 goto label2;

     label1:
        z0 = 1;
        goto label3;

     label2:
        r1 = r3[1];
        r2 = r3[2];

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;
        r8 = $r7;
        z0 = 1;

     label5:
        if z0 == 0 goto label6;

        r0.<org.petero.droidfish.engine.NetworkEngine: boolean isError> = 1;
        $r9 = r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report report>;
        $r10 = r0.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.String getString(int)>(2131099831);
        interfaceinvoke $r9.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r11);
        goto label11;

     label6:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
        $r12 = new java.net.Socket;
        specialinvoke $r12.<java.net.Socket: void <init>(java.lang.String,int)>(r1, i1);
        r0.<org.petero.droidfish.engine.NetworkEngine: java.net.Socket socket> = $r12;
        $r13 = r0.<org.petero.droidfish.engine.NetworkEngine: java.net.Socket socket>;
        virtualinvoke $r13.<java.net.Socket: void setTcpNoDelay(boolean)>(1);

     label7:
        goto label11;

     label8:
        $r14 := @caughtexception;
        r15 = $r14;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean isError> = 1;
        $r16 = r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report report>;
        $r17 = virtualinvoke r15.<java.net.UnknownHostException: java.lang.String getMessage()>();
        interfaceinvoke $r16.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r17);
        goto label11;

     label9:
        $r18 := @caughtexception;
        r19 = $r18;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean isError> = 1;
        $r20 = r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report report>;
        $r21 = r0.<org.petero.droidfish.engine.NetworkEngine: android.content.Context context>;
        $r22 = virtualinvoke $r21.<android.content.Context: java.lang.String getString(int)>(2131099832);
        interfaceinvoke $r20.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r22);
        goto label11;

     label10:
        $r23 := @caughtexception;
        r24 = $r23;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean isError> = 1;
        $r25 = r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report report>;
        $r26 = virtualinvoke r24.<java.io.IOException: java.lang.String getMessage()>();
        interfaceinvoke $r25.<org.petero.droidfish.engine.UCIEngine$Report: void reportError(java.lang.String)>($r26);

     label11:
        $r27 = r0.<org.petero.droidfish.engine.NetworkEngine: java.net.Socket socket>;
        if $r27 != null goto label12;

        $r28 = new java.net.Socket;
        specialinvoke $r28.<java.net.Socket: void <init>()>();
        r0.<org.petero.droidfish.engine.NetworkEngine: java.net.Socket socket> = $r28;

     label12:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.net.UnknownHostException from label6 to label7 with label8;
        catch java.lang.NumberFormatException from label6 to label7 with label9;
        catch java.io.IOException from label6 to label7 with label10;
    }

    protected void startProcess()
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        java.lang.Thread $r1, $r3, $r4, $r6, $r7, $r9;
        org.petero.droidfish.engine.NetworkEngine$1 $r2;
        org.petero.droidfish.engine.NetworkEngine$2 $r5;
        org.petero.droidfish.engine.NetworkEngine$3 $r8;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine;
        $r1 = new java.lang.Thread;
        $r2 = new org.petero.droidfish.engine.NetworkEngine$1;
        specialinvoke $r2.<org.petero.droidfish.engine.NetworkEngine$1: void <init>(org.petero.droidfish.engine.NetworkEngine)>(r0);
        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);
        r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread startupThread> = $r1;
        $r3 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread startupThread>;
        virtualinvoke $r3.<java.lang.Thread: void start()>();
        $r4 = new java.lang.Thread;
        $r5 = new org.petero.droidfish.engine.NetworkEngine$2;
        specialinvoke $r5.<org.petero.droidfish.engine.NetworkEngine$2: void <init>(org.petero.droidfish.engine.NetworkEngine)>(r0);
        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);
        r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread stdInThread> = $r4;
        $r6 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread stdInThread>;
        virtualinvoke $r6.<java.lang.Thread: void start()>();
        $r7 = new java.lang.Thread;
        $r8 = new org.petero.droidfish.engine.NetworkEngine$3;
        specialinvoke $r8.<org.petero.droidfish.engine.NetworkEngine$3: void <init>(org.petero.droidfish.engine.NetworkEngine)>(r0);
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);
        r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread stdOutThread> = $r7;
        $r9 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread stdOutThread>;
        virtualinvoke $r9.<java.lang.Thread: void start()>();
        return;
    }

    public void initOptions(org.petero.droidfish.EngineOptions)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        org.petero.droidfish.EngineOptions r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.String $r2, $r3;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        specialinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void initOptions(org.petero.droidfish.EngineOptions)>(r1);
        $i0 = r1.<org.petero.droidfish.EngineOptions: int hashMB>;
        r0.<org.petero.droidfish.engine.NetworkEngine: int hashMB> = $i0;
        $i1 = r1.<org.petero.droidfish.EngineOptions: int hashMB>;
        virtualinvoke r0.<org.petero.droidfish.engine.NetworkEngine: void setOption(java.lang.String,int)>("Hash", $i1);
        $z0 = r1.<org.petero.droidfish.EngineOptions: boolean engineProbe>;
        if $z0 == 0 goto label0;

        $r2 = r1.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.String gaviotaTbPath> = $r2;
        $r3 = r1.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        virtualinvoke r0.<org.petero.droidfish.engine.NetworkEngine: void setOption(java.lang.String,java.lang.String)>("GaviotaTbPath", $r3);
        virtualinvoke r0.<org.petero.droidfish.engine.NetworkEngine: void setOption(java.lang.String,int)>("GaviotaTbCache", 8);

     label0:
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean optionsInitialized> = 1;
        return;
    }

    public boolean optionsOk(org.petero.droidfish.EngineOptions)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        org.petero.droidfish.EngineOptions r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r2, $r3, $r4, $r5;
        int $i0, $i1;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        $z0 = r0.<org.petero.droidfish.engine.NetworkEngine: boolean isError>;
        if $z0 == 0 goto label0;

        return 0;

     label0:
        $z1 = r0.<org.petero.droidfish.engine.NetworkEngine: boolean optionsInitialized>;
        if $z1 != 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.String networkID>;
        $r3 = r1.<org.petero.droidfish.EngineOptions: java.lang.String networkID>;
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z2 != 0 goto label2;

        return 0;

     label2:
        $i0 = r0.<org.petero.droidfish.engine.NetworkEngine: int hashMB>;
        $i1 = r1.<org.petero.droidfish.EngineOptions: int hashMB>;
        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $z3 = virtualinvoke r0.<org.petero.droidfish.engine.NetworkEngine: boolean haveOption(java.lang.String)>("gaviotatbpath");
        if $z3 == 0 goto label4;

        $r4 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.String gaviotaTbPath>;
        $r5 = r1.<org.petero.droidfish.EngineOptions: java.lang.String gtbPath>;
        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z4 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public void setStrength(int)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        int i0;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine;
        i0 := @parameter0: int;
        return;
    }

    public java.lang.String readLineFromEngine(int)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        int i0, $i1;
        java.lang.String r1;
        org.petero.droidfish.engine.LocalPipe $r2;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine;
        i0 := @parameter0: int;
        $r2 = r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe engineToGui>;
        r1 = virtualinvoke $r2.<org.petero.droidfish.engine.LocalPipe: java.lang.String readLine(int)>(i0);
        if r1 != null goto label0;

        return null;

     label0:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i1 <= 0 goto label1;

     label1:
        return r1;
    }

    public void writeLineToEngine(java.lang.String)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        java.lang.String r1;
        org.petero.droidfish.engine.LocalPipe $r2;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe guiToEngine>;
        virtualinvoke $r2.<org.petero.droidfish.engine.LocalPipe: void addLine(java.lang.String)>(r1);
        return;
    }

    public void shutDown()
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        java.io.IOException r1, $r9, $r11, r12;
        java.lang.Thread $r2, $r3, $r13, $r14, $r15, $r16;
        java.net.Socket $r4, $r5, $r10;
        java.io.OutputStream $r6;
        java.lang.String $r7;
        byte[] $r8;

        r0 := @this: org.petero.droidfish.engine.NetworkEngine;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean isRunning> = 0;
        $r2 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread startupThread>;
        if $r2 == null goto label0;

        $r3 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread startupThread>;
        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

     label0:
        $r4 = r0.<org.petero.droidfish.engine.NetworkEngine: java.net.Socket socket>;
        if $r4 == null goto label7;

     label1:
        $r5 = r0.<org.petero.droidfish.engine.NetworkEngine: java.net.Socket socket>;
        $r6 = virtualinvoke $r5.<java.net.Socket: java.io.OutputStream getOutputStream()>();
        $r7 = "quit\n";
        $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();
        virtualinvoke $r6.<java.io.OutputStream: void write(byte[])>($r8);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;
        r1 = $r9;

     label4:
        $r10 = r0.<org.petero.droidfish.engine.NetworkEngine: java.net.Socket socket>;
        virtualinvoke $r10.<java.net.Socket: void close()>();

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;
        r12 = $r11;

     label7:
        specialinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void shutDown()>();
        $r13 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread stdOutThread>;
        if $r13 == null goto label8;

        $r14 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread stdOutThread>;
        virtualinvoke $r14.<java.lang.Thread: void interrupt()>();

     label8:
        $r15 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread stdInThread>;
        if $r15 == null goto label9;

        $r16 = r0.<org.petero.droidfish.engine.NetworkEngine: java.lang.Thread stdInThread>;
        virtualinvoke $r16.<java.lang.Thread: void interrupt()>();

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    static boolean access$000(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        $z0 = r0.<org.petero.droidfish.engine.NetworkEngine: boolean startedOk>;
        return $z0;
    }

    static boolean access$100(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        $z0 = r0.<org.petero.droidfish.engine.NetworkEngine: boolean isRunning>;
        return $z0;
    }

    static boolean access$202(org.petero.droidfish.engine.NetworkEngine, boolean)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        z0 := @parameter1: boolean;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean isError> = z0;
        return z0;
    }

    static org.petero.droidfish.engine.UCIEngine$Report access$300(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        org.petero.droidfish.engine.UCIEngine$Report $r1;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        $r1 = r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.UCIEngine$Report report>;
        return $r1;
    }

    static void access$400(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine r0;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        specialinvoke r0.<org.petero.droidfish.engine.NetworkEngine: void connect()>();
        return;
    }

    static java.net.Socket access$500(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        java.net.Socket $r1;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        $r1 = r0.<org.petero.droidfish.engine.NetworkEngine: java.net.Socket socket>;
        return $r1;
    }

    static org.petero.droidfish.engine.LocalPipe access$600(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        org.petero.droidfish.engine.LocalPipe $r1;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        $r1 = r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe engineToGui>;
        return $r1;
    }

    static boolean access$002(org.petero.droidfish.engine.NetworkEngine, boolean)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        z0 := @parameter1: boolean;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean startedOk> = z0;
        return z0;
    }

    static boolean access$102(org.petero.droidfish.engine.NetworkEngine, boolean)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        boolean z0;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        z0 := @parameter1: boolean;
        r0.<org.petero.droidfish.engine.NetworkEngine: boolean isRunning> = z0;
        return z0;
    }

    static org.petero.droidfish.engine.LocalPipe access$700(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        org.petero.droidfish.engine.LocalPipe $r1;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        $r1 = r0.<org.petero.droidfish.engine.NetworkEngine: org.petero.droidfish.engine.LocalPipe guiToEngine>;
        return $r1;
    }

    static boolean access$200(org.petero.droidfish.engine.NetworkEngine)
    {
        org.petero.droidfish.engine.NetworkEngine r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.engine.NetworkEngine;
        $z0 = r0.<org.petero.droidfish.engine.NetworkEngine: boolean isError>;
        return $z0;
    }
}
public interface  org.petero.droidfish.engine.UCIEngine$Report extends java.lang.Object
{

    public abstract void reportError(java.lang.String);
}
public interface  org.petero.droidfish.engine.UCIEngine extends java.lang.Object
{

    public abstract void initialize();

    public abstract void initOptions(org.petero.droidfish.EngineOptions);

    public abstract boolean optionsOk(org.petero.droidfish.EngineOptions);

    public abstract void shutDown();

    public abstract java.lang.String readLineFromEngine(int);

    public abstract void writeLineToEngine(java.lang.String);

    public abstract void setStrength(int);

    public abstract void setOption(java.lang.String, int);

    public abstract void setOption(java.lang.String, boolean);

    public abstract void setOption(java.lang.String, java.lang.String);

    public abstract void clearOptions();

    public abstract void registerOption(java.lang.String);
}
public abstract class org.petero.droidfish.engine.UCIEngineBase extends java.lang.Object implements org.petero.droidfish.engine.UCIEngine
{
    private boolean processAlive;
    private java.util.HashSet allOptions;
    private java.util.HashMap currOptions;
    protected boolean isUCI;

    public static org.petero.droidfish.engine.UCIEngine getEngine(android.content.Context, java.lang.String, org.petero.droidfish.EngineOptions, org.petero.droidfish.engine.UCIEngine$Report)
    {
        android.content.Context r0;
        java.lang.String r1, $r4, $r8, $r9, $r11, $r15, $r16;
        org.petero.droidfish.EngineOptions r2;
        org.petero.droidfish.engine.UCIEngine$Report r3;
        boolean z0, $z1, $z2, $z3, $z4;
        java.io.FileInputStream r5, $r13;
        java.io.InputStreamReader r6, $r14;
        char[] r7;
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine $r10;
        org.petero.droidfish.engine.InternalStockFish $r12;
        int $i0;
        java.io.IOException $r17, r18;
        org.petero.droidfish.engine.NetworkEngine $r19;
        org.petero.droidfish.engine.ExternalEngine $r20;

        r0 := @parameter0: android.content.Context;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: org.petero.droidfish.EngineOptions;
        r3 := @parameter3: org.petero.droidfish.engine.UCIEngine$Report;
        $r4 = "stockfish";
        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z1 == 0 goto label0;

        $r8 = staticinvoke <org.petero.droidfish.engine.EngineUtil: java.lang.String internalStockFishName()>();
        if $r8 != null goto label0;

        r1 = "cuckoochess";

     label0:
        $r9 = "cuckoochess";
        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z2 == 0 goto label1;

        $r10 = new org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        specialinvoke $r10.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: void <init>(org.petero.droidfish.engine.UCIEngine$Report)>(r3);
        return $r10;

     label1:
        $r11 = "stockfish";
        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z3 == 0 goto label2;

        $r12 = new org.petero.droidfish.engine.InternalStockFish;
        specialinvoke $r12.<org.petero.droidfish.engine.InternalStockFish: void <init>(android.content.Context,org.petero.droidfish.engine.UCIEngine$Report)>(r0, r3);
        return $r12;

     label2:
        z0 = 0;

     label3:
        $r13 = new java.io.FileInputStream;
        specialinvoke $r13.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);
        r5 = $r13;
        $r14 = new java.io.InputStreamReader;
        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r5);
        r6 = $r14;
        r7 = newarray (char)[4];
        $i0 = virtualinvoke r6.<java.io.InputStreamReader: int read(char[])>(r7);
        if $i0 != 4 goto label4;

        $r15 = "NETE";
        $r16 = new java.lang.String;
        specialinvoke $r16.<java.lang.String: void <init>(char[])>(r7);
        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);
        if $z4 == 0 goto label4;

        z0 = 1;

     label4:
        virtualinvoke r6.<java.io.InputStreamReader: void close()>();

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;
        r18 = $r17;

     label7:
        if z0 == 0 goto label8;

        $r19 = new org.petero.droidfish.engine.NetworkEngine;
        specialinvoke $r19.<org.petero.droidfish.engine.NetworkEngine: void <init>(android.content.Context,java.lang.String,org.petero.droidfish.EngineOptions,org.petero.droidfish.engine.UCIEngine$Report)>(r0, r1, r2, r3);
        return $r19;

     label8:
        $r20 = new org.petero.droidfish.engine.ExternalEngine;
        specialinvoke $r20.<org.petero.droidfish.engine.ExternalEngine: void <init>(android.content.Context,java.lang.String,org.petero.droidfish.engine.UCIEngine$Report)>(r0, r1, r3);
        return $r20;

        catch java.io.IOException from label3 to label5 with label6;
    }

    protected void <init>()
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        java.util.HashSet $r1;
        java.util.HashMap $r2;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.engine.UCIEngineBase: boolean processAlive> = 0;
        $r1 = new java.util.HashSet;
        specialinvoke $r1.<java.util.HashSet: void <init>()>();
        r0.<org.petero.droidfish.engine.UCIEngineBase: java.util.HashSet allOptions> = $r1;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        r0.<org.petero.droidfish.engine.UCIEngineBase: java.util.HashMap currOptions> = $r2;
        r0.<org.petero.droidfish.engine.UCIEngineBase: boolean isUCI> = 0;
        return;
    }

    protected abstract void startProcess();

    public final void initialize()
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        $z0 = r0.<org.petero.droidfish.engine.UCIEngineBase: boolean processAlive>;
        if $z0 != 0 goto label0;

        virtualinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void startProcess()>();
        r0.<org.petero.droidfish.engine.UCIEngineBase: boolean processAlive> = 1;

     label0:
        return;
    }

    public void initOptions(org.petero.droidfish.EngineOptions)
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        org.petero.droidfish.EngineOptions r1;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        r0.<org.petero.droidfish.engine.UCIEngineBase: boolean isUCI> = 1;
        return;
    }

    public void shutDown()
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        $z0 = r0.<org.petero.droidfish.engine.UCIEngineBase: boolean processAlive>;
        if $z0 == 0 goto label0;

        virtualinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void writeLineToEngine(java.lang.String)>("quit");
        r0.<org.petero.droidfish.engine.UCIEngineBase: boolean processAlive> = 0;

     label0:
        return;
    }

    public void clearOptions()
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        java.util.HashSet $r1;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        $r1 = r0.<org.petero.droidfish.engine.UCIEngineBase: java.util.HashSet allOptions>;
        virtualinvoke $r1.<java.util.HashSet: void clear()>();
        return;
    }

    public void registerOption(java.lang.String)
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        java.lang.String r1;
        java.util.HashSet $r2;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.petero.droidfish.engine.UCIEngineBase: java.util.HashSet allOptions>;
        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);
        return;
    }

    protected boolean haveOption(java.lang.String)
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        java.lang.String r1;
        java.util.HashSet $r2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.petero.droidfish.engine.UCIEngineBase: java.util.HashSet allOptions>;
        $z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);
        return $z0;
    }

    public void setOption(java.lang.String, int)
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        java.lang.String r1, $r4;
        int i0;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = newarray (java.lang.Object)[1];
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r2[0] = $r3;
        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r2);
        virtualinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void setOption(java.lang.String,java.lang.String)>(r1, $r4);
        return;
    }

    public void setOption(java.lang.String, boolean)
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        java.lang.String r1, $r4;
        boolean z0;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        if z0 == 0 goto label0;

        $r4 = "true";
        goto label1;

     label0:
        $r4 = "false";

     label1:
        virtualinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void setOption(java.lang.String,java.lang.String)>(r1, $r4);
        return;
    }

    public void setOption(java.lang.String, java.lang.String)
    {
        org.petero.droidfish.engine.UCIEngineBase r0;
        java.lang.String r1, r2, r3, r4, $r9;
        java.util.HashSet $r5;
        boolean $z0, $z1;
        java.util.HashMap $r6, $r10;
        java.lang.Object $r7;
        java.lang.Object[] $r8;

        r0 := @this: org.petero.droidfish.engine.UCIEngineBase;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();
        $r5 = r0.<org.petero.droidfish.engine.UCIEngineBase: java.util.HashSet allOptions>;
        $z0 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>(r3);
        if $z0 != 0 goto label0;

        return;

     label0:
        $r6 = r0.<org.petero.droidfish.engine.UCIEngineBase: java.util.HashMap currOptions>;
        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);
        r4 = (java.lang.String) $r7;
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z1 == 0 goto label1;

        return;

     label1:
        $r8 = newarray (java.lang.Object)[2];
        $r8[0] = r1;
        $r8[1] = r2;
        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("setoption name %s value %s", $r8);
        virtualinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void writeLineToEngine(java.lang.String)>($r9);
        $r10 = r0.<org.petero.droidfish.engine.UCIEngineBase: java.util.HashMap currOptions>;
        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2);
        return;
    }
}
class org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.engine.cuckoochess.CuckooChessEngine this$0;

    void <init>(org.petero.droidfish.engine.cuckoochess.CuckooChessEngine)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1 r0;
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r1;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1;
        r1 := @parameter0: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1 r0;
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine $r1, $r2, $r4;
        org.petero.droidfish.engine.LocalPipe $r3, $r5;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1;
        $r1 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine this$0>;
        $r2 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine this$0>;
        $r3 = staticinvoke <org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.LocalPipe access$000(org.petero.droidfish.engine.cuckoochess.CuckooChessEngine)>($r2);
        $r4 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine this$0>;
        $r5 = staticinvoke <org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.LocalPipe access$100(org.petero.droidfish.engine.cuckoochess.CuckooChessEngine)>($r4);
        staticinvoke <org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: void access$200(org.petero.droidfish.engine.cuckoochess.CuckooChessEngine,org.petero.droidfish.engine.LocalPipe,org.petero.droidfish.engine.LocalPipe)>($r1, $r3, $r5);
        return;
    }
}
public class org.petero.droidfish.engine.cuckoochess.CuckooChessEngine extends org.petero.droidfish.engine.UCIEngineBase
{
    private chess.Position pos;
    private java.util.ArrayList moves;
    private org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine;
    private boolean quit;
    private org.petero.droidfish.engine.LocalPipe guiToEngine;
    private org.petero.droidfish.engine.LocalPipe engineToGui;
    private java.lang.Thread engineThread;

    public void <init>(org.petero.droidfish.engine.UCIEngine$Report)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        org.petero.droidfish.engine.UCIEngine$Report r1;
        java.util.ArrayList $r2;
        org.petero.droidfish.engine.LocalPipe $r3, $r4;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r1 := @parameter0: org.petero.droidfish.engine.UCIEngine$Report;
        specialinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: chess.Position pos> = null;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.util.ArrayList moves> = $r2;
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: boolean quit> = 0;
        $r3 = new org.petero.droidfish.engine.LocalPipe;
        specialinvoke $r3.<org.petero.droidfish.engine.LocalPipe: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.LocalPipe guiToEngine> = $r3;
        $r4 = new org.petero.droidfish.engine.LocalPipe;
        specialinvoke $r4.<org.petero.droidfish.engine.LocalPipe: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.LocalPipe engineToGui> = $r4;
        return;
    }

    protected final void startProcess()
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        java.lang.Thread $r1, $r3, $r4;
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1 $r2;
        byte b0, b1;
        int i2, $i3, $i4;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        $r1 = new java.lang.Thread;
        $r2 = new org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1;
        specialinvoke $r2.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine$1: void <init>(org.petero.droidfish.engine.cuckoochess.CuckooChessEngine)>(r0);
        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.lang.Thread engineThread> = $r1;
        b0 = 1;
        b1 = 5;
        $i3 = b1 - b0;
        $i4 = $i3 / 2;
        i2 = b0 + $i4;
        $r3 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.lang.Thread engineThread>;
        virtualinvoke $r3.<java.lang.Thread: void setPriority(int)>(i2);
        $r4 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.lang.Thread engineThread>;
        virtualinvoke $r4.<java.lang.Thread: void start()>();
        return;
    }

    public final void initOptions(org.petero.droidfish.EngineOptions)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        org.petero.droidfish.EngineOptions r1;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        specialinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void initOptions(org.petero.droidfish.EngineOptions)>(r1);
        return;
    }

    public boolean optionsOk(org.petero.droidfish.EngineOptions)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        org.petero.droidfish.EngineOptions r1;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        return 1;
    }

    public final void setStrength(int)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        int i0;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        i0 := @parameter0: int;
        virtualinvoke r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: void setOption(java.lang.String,int)>("strength", i0);
        return;
    }

    private final void mainLoop(org.petero.droidfish.engine.LocalPipe, org.petero.droidfish.engine.LocalPipe)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        org.petero.droidfish.engine.LocalPipe r1, r2;
        java.lang.String r3, $r4;
        boolean $z0;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r1 := @parameter0: org.petero.droidfish.engine.LocalPipe;
        r2 := @parameter1: org.petero.droidfish.engine.LocalPipe;

     label0:
        $r4 = virtualinvoke r1.<org.petero.droidfish.engine.LocalPipe: java.lang.String readLine()>();
        r3 = $r4;
        if $r4 == null goto label1;

        specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: void handleCommand(java.lang.String,org.petero.droidfish.engine.LocalPipe)>(r3, r2);
        $z0 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: boolean quit>;
        if $z0 == 0 goto label0;

        goto label1;

     label1:
        return;
    }

    public void shutDown()
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        org.petero.droidfish.engine.LocalPipe $r1;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        specialinvoke r0.<org.petero.droidfish.engine.UCIEngineBase: void shutDown()>();
        $r1 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.LocalPipe guiToEngine>;
        virtualinvoke $r1.<org.petero.droidfish.engine.LocalPipe: void close()>();
        return;
    }

    public final java.lang.String readLineFromEngine(int)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        int i0, $i1;
        java.lang.String r1;
        java.lang.Thread $r2, $r3;
        boolean $z0;
        org.petero.droidfish.engine.LocalPipe $r4;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        i0 := @parameter0: int;
        $r2 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.lang.Thread engineThread>;
        if $r2 == null goto label0;

        $r3 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.lang.Thread engineThread>;
        $z0 = virtualinvoke $r3.<java.lang.Thread: boolean isAlive()>();
        if $z0 != 0 goto label0;

        return null;

     label0:
        $r4 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.LocalPipe engineToGui>;
        r1 = virtualinvoke $r4.<org.petero.droidfish.engine.LocalPipe: java.lang.String readLine(int)>(i0);
        if r1 != null goto label1;

        return null;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i1 <= 0 goto label2;

     label2:
        return r1;
    }

    public final synchronized void writeLineToEngine(java.lang.String)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        java.lang.String r1;
        org.petero.droidfish.engine.LocalPipe $r2;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.LocalPipe guiToEngine>;
        virtualinvoke $r2.<org.petero.droidfish.engine.LocalPipe: void addLine(java.lang.String)>(r1);
        return;
    }

    private final void handleCommand(java.lang.String, org.petero.droidfish.engine.LocalPipe)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        java.lang.String r1, r4, $r5, $r13, $r14, $r15, $r16, $r19, $r20, $r21, $r25, $r26, $r27, $r28, r31, $r32, $r33, $r36, $r37, $r40, $r43, $r44, r48, $r49, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59;
        org.petero.droidfish.engine.LocalPipe r2;
        java.lang.String[] r3;
        java.lang.StringBuilder r6, r7, $r11, $r12, $r34, r35;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, i7, $i8, $i9, $i10, i11, i12, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        chess.Move r8, r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, z14, $z15, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30;
        java.lang.Object[] $r10;
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl $r24, $r29, $r30, $r65, $r68, $r71, $r72, $r73, $r74;
        chess.Position $r41, $r60, $r61, $r66, $r69;
        java.util.ArrayList $r42, $r45, $r67, $r70;
        org.petero.droidfish.engine.cuckoochess.SearchParams $r46, r47;
        java.util.List $r50;
        chess.ChessParseError $r62, r63, $r75, r76;
        java.lang.RuntimeException $r64;
        java.lang.ArrayIndexOutOfBoundsException $r77, r78;
        java.lang.NumberFormatException $r79, r80;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.petero.droidfish.engine.LocalPipe;
        r3 = specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.lang.String[] tokenize(java.lang.String)>(r1);

     label0:
        r4 = r3[0];
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("uci");
        if $z0 == 0 goto label1;

        $r10 = newarray (java.lang.Object)[1];
        $r5 = <chess.ComputerPlayer: java.lang.String engineName>;
        $r10[0] = $r5;
        virtualinvoke r2.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String,java.lang.Object[])>("id name %s", $r10);
        virtualinvoke r2.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String)>("id author Peter Osterlund");
        staticinvoke <org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void printOptions(org.petero.droidfish.engine.LocalPipe)>(r2);
        virtualinvoke r2.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String)>("uciok");
        goto label42;

     label1:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("isready");
        if $z1 == 0 goto label2;

        specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: void initEngine(org.petero.droidfish.engine.LocalPipe)>(r2);
        virtualinvoke r2.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String)>("readyok");
        goto label42;

     label2:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("setoption");
        if $z2 == 0 goto label8;

        specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: void initEngine(org.petero.droidfish.engine.LocalPipe)>(r2);
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        r6 = $r11;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();
        r7 = $r12;
        $r13 = r3[1];
        $z3 = virtualinvoke $r13.<java.lang.String: boolean endsWith(java.lang.String)>("name");
        if $z3 == 0 goto label7;

        i0 = 2;

     label3:
        $i1 = lengthof r3;
        if i0 >= $i1 goto label4;

        $r14 = r3[i0];
        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("value");
        if $z4 != 0 goto label4;

        $i2 = i0;
        i0 = i0 + 1;
        $r15 = r3[$i2];
        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        goto label3;

     label4:
        $i3 = lengthof r3;
        if i0 >= $i3 goto label6;

        i4 = i0 + 1;
        $r19 = r3[i0];
        $z5 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("value");
        if $z5 == 0 goto label6;

     label5:
        $i5 = lengthof r3;
        if i4 >= $i5 goto label6;

        $i6 = i4;
        i4 = i4 + 1;
        $r20 = r3[$i6];
        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        goto label5;

     label6:
        $r24 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        $r25 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();
        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String trim()>();
        $r27 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $r28 = virtualinvoke $r27.<java.lang.String: java.lang.String trim()>();
        virtualinvoke $r24.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void setOption(java.lang.String,java.lang.String)>($r26, $r28);

     label7:
        goto label42;

     label8:
        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("ucinewgame");
        if $z6 == 0 goto label9;

        $r29 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        if $r29 == null goto label42;

        $r30 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        virtualinvoke $r30.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void newGame()>();
        goto label42;

     label9:
        $z7 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("position");
        if $z7 == 0 goto label16;

        r31 = null;
        i7 = 1;
        $r32 = r3[i7];
        $z8 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("startpos");
        if $z8 == 0 goto label10;

        i7 = i7 + 1;
        r31 = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
        goto label13;

     label10:
        $r33 = r3[i7];
        $z9 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("fen");
        if $z9 == 0 goto label13;

        i7 = i7 + 1;
        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();
        r35 = $r34;

     label11:
        $i8 = lengthof r3;
        if i7 >= $i8 goto label12;

        $r36 = r3[i7];
        $z10 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>("moves");
        if $z10 != 0 goto label12;

        $i9 = i7;
        i7 = i7 + 1;
        $r37 = r3[$i9];
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        goto label11;

     label12:
        $r40 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();
        r31 = virtualinvoke $r40.<java.lang.String: java.lang.String trim()>();

     label13:
        if r31 == null goto label15;

        $r41 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>(r31);
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: chess.Position pos> = $r41;
        $r42 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.util.ArrayList moves>;
        virtualinvoke $r42.<java.util.ArrayList: void clear()>();
        $i10 = lengthof r3;
        if i7 >= $i10 goto label15;

        i11 = i7 + 1;
        $r43 = r3[i7];
        $z11 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("moves");
        if $z11 == 0 goto label15;

        i12 = i11;

     label14:
        $i13 = lengthof r3;
        if i12 >= $i13 goto label15;

        $r44 = r3[i12];
        r8 = staticinvoke <chess.TextIO: chess.Move uciStringToMove(java.lang.String)>($r44);
        if r8 == null goto label15;

        $r45 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.util.ArrayList moves>;
        virtualinvoke $r45.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);
        i12 = i12 + 1;
        goto label14;

     label15:
        goto label42;

     label16:
        $z13 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("go");
        if $z13 == 0 goto label38;

        specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: void initEngine(org.petero.droidfish.engine.LocalPipe)>(r2);
        i14 = 1;
        $r46 = new org.petero.droidfish.engine.cuckoochess.SearchParams;
        specialinvoke $r46.<org.petero.droidfish.engine.cuckoochess.SearchParams: void <init>()>();
        r47 = $r46;
        z14 = 0;

     label17:
        $i15 = lengthof r3;
        if i14 >= $i15 goto label31;

        $i16 = i14;
        i14 = i14 + 1;
        r48 = r3[$i16];
        $z15 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("searchmoves");
        if $z15 == 0 goto label19;

     label18:
        $i17 = lengthof r3;
        if i14 >= $i17 goto label30;

        $r49 = r3[i14];
        r9 = staticinvoke <chess.TextIO: chess.Move uciStringToMove(java.lang.String)>($r49);
        if r9 == null goto label30;

        $r50 = r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: java.util.List searchMoves>;
        interfaceinvoke $r50.<java.util.List: boolean add(java.lang.Object)>(r9);
        i14 = i14 + 1;
        goto label18;

     label19:
        $z17 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("ponder");
        if $z17 == 0 goto label20;

        z14 = 1;
        goto label30;

     label20:
        $z18 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("wtime");
        if $z18 == 0 goto label21;

        $i18 = i14;
        i14 = i14 + 1;
        $r51 = r3[$i18];
        $i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r51);
        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: int wTime> = $i19;
        goto label30;

     label21:
        $z19 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("btime");
        if $z19 == 0 goto label22;

        $i20 = i14;
        i14 = i14 + 1;
        $r52 = r3[$i20];
        $i21 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r52);
        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: int bTime> = $i21;
        goto label30;

     label22:
        $z20 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("winc");
        if $z20 == 0 goto label23;

        $i22 = i14;
        i14 = i14 + 1;
        $r53 = r3[$i22];
        $i23 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r53);
        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: int wInc> = $i23;
        goto label30;

     label23:
        $z21 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("binc");
        if $z21 == 0 goto label24;

        $i24 = i14;
        i14 = i14 + 1;
        $r54 = r3[$i24];
        $i25 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r54);
        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: int bInc> = $i25;
        goto label30;

     label24:
        $z22 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("movestogo");
        if $z22 == 0 goto label25;

        $i26 = i14;
        i14 = i14 + 1;
        $r55 = r3[$i26];
        $i27 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r55);
        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: int movesToGo> = $i27;
        goto label30;

     label25:
        $z23 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("depth");
        if $z23 == 0 goto label26;

        $i28 = i14;
        i14 = i14 + 1;
        $r56 = r3[$i28];
        $i29 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r56);
        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: int depth> = $i29;
        goto label30;

     label26:
        $z24 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("nodes");
        if $z24 == 0 goto label27;

        $i30 = i14;
        i14 = i14 + 1;
        $r57 = r3[$i30];
        $i31 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r57);
        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: int nodes> = $i31;
        goto label30;

     label27:
        $z25 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("mate");
        if $z25 == 0 goto label28;

        $i32 = i14;
        i14 = i14 + 1;
        $r58 = r3[$i32];
        $i33 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r58);
        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: int mate> = $i33;
        goto label30;

     label28:
        $z26 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("movetime");
        if $z26 == 0 goto label29;

        $i34 = i14;
        i14 = i14 + 1;
        $r59 = r3[$i34];
        $i35 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r59);
        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: int moveTime> = $i35;
        goto label30;

     label29:
        $z27 = virtualinvoke r48.<java.lang.String: boolean equals(java.lang.Object)>("infinite");
        if $z27 == 0 goto label30;

        r47.<org.petero.droidfish.engine.cuckoochess.SearchParams: boolean infinite> = 1;

     label30:
        goto label17;

     label31:
        $r60 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: chess.Position pos>;
        if $r60 != null goto label35;

     label32:
        $r61 = staticinvoke <chess.TextIO: chess.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: chess.Position pos> = $r61;

     label33:
        goto label35;

     label34:
        $r62 := @caughtexception;
        r63 = $r62;
        $r64 = new java.lang.RuntimeException;
        specialinvoke $r64.<java.lang.RuntimeException: void <init>()>();
        throw $r64;

     label35:
        if z14 == 0 goto label36;

        $r65 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        $r66 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: chess.Position pos>;
        $r67 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.util.ArrayList moves>;
        virtualinvoke $r65.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void startPonder(chess.Position,java.util.List,org.petero.droidfish.engine.cuckoochess.SearchParams)>($r66, $r67, r47);
        goto label37;

     label36:
        $r68 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        $r69 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: chess.Position pos>;
        $r70 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: java.util.ArrayList moves>;
        virtualinvoke $r68.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void startSearch(chess.Position,java.util.ArrayList,org.petero.droidfish.engine.cuckoochess.SearchParams)>($r69, $r70, r47);

     label37:
        goto label42;

     label38:
        $z28 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("stop");
        if $z28 == 0 goto label39;

        $r71 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        virtualinvoke $r71.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void stopSearch()>();
        goto label42;

     label39:
        $z29 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("ponderhit");
        if $z29 == 0 goto label40;

        $r72 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        virtualinvoke $r72.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void ponderHit()>();
        goto label42;

     label40:
        $z30 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("quit");
        if $z30 == 0 goto label42;

        $r73 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        if $r73 == null goto label41;

        $r74 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        virtualinvoke $r74.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void stopSearch()>();

     label41:
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: boolean quit> = 1;

     label42:
        goto label46;

     label43:
        $r75 := @caughtexception;
        r76 = $r75;
        goto label46;

     label44:
        $r77 := @caughtexception;
        r78 = $r77;
        goto label46;

     label45:
        $r79 := @caughtexception;
        r80 = $r79;

     label46:
        return;

        catch chess.ChessParseError from label32 to label33 with label34;
        catch chess.ChessParseError from label0 to label42 with label43;
        catch java.lang.ArrayIndexOutOfBoundsException from label0 to label42 with label44;
        catch java.lang.NumberFormatException from label0 to label42 with label45;
    }

    private final void initEngine(org.petero.droidfish.engine.LocalPipe)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        org.petero.droidfish.engine.LocalPipe r1;
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl $r2, $r3;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r1 := @parameter0: org.petero.droidfish.engine.LocalPipe;
        $r3 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine>;
        if $r3 != null goto label0;

        $r2 = new org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        specialinvoke $r2.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void <init>(org.petero.droidfish.engine.LocalPipe)>(r1);
        r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.cuckoochess.DroidEngineControl engine> = $r2;

     label0:
        return;
    }

    private final java.lang.String[] tokenize(java.lang.String)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        java.lang.String r1, r2;
        java.lang.String[] $r3;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");
        return $r3;
    }

    static org.petero.droidfish.engine.LocalPipe access$000(org.petero.droidfish.engine.cuckoochess.CuckooChessEngine)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        org.petero.droidfish.engine.LocalPipe $r1;

        r0 := @parameter0: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        $r1 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.LocalPipe guiToEngine>;
        return $r1;
    }

    static org.petero.droidfish.engine.LocalPipe access$100(org.petero.droidfish.engine.cuckoochess.CuckooChessEngine)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        org.petero.droidfish.engine.LocalPipe $r1;

        r0 := @parameter0: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        $r1 = r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: org.petero.droidfish.engine.LocalPipe engineToGui>;
        return $r1;
    }

    static void access$200(org.petero.droidfish.engine.cuckoochess.CuckooChessEngine, org.petero.droidfish.engine.LocalPipe, org.petero.droidfish.engine.LocalPipe)
    {
        org.petero.droidfish.engine.cuckoochess.CuckooChessEngine r0;
        org.petero.droidfish.engine.LocalPipe r1, r2;

        r0 := @parameter0: org.petero.droidfish.engine.cuckoochess.CuckooChessEngine;
        r1 := @parameter1: org.petero.droidfish.engine.LocalPipe;
        r2 := @parameter2: org.petero.droidfish.engine.LocalPipe;
        specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.CuckooChessEngine: void mainLoop(org.petero.droidfish.engine.LocalPipe,org.petero.droidfish.engine.LocalPipe)>(r1, r2);
        return;
    }
}
class org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1 extends java.lang.Object implements java.lang.Runnable
{
    final chess.MoveGen$MoveList val$srchMoves;
    final int val$srchmaxDepth;
    final int val$maxNodes;
    final org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0;

    void <init>(org.petero.droidfish.engine.cuckoochess.DroidEngineControl, chess.MoveGen$MoveList, int, int)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1 r0;
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r1;
        chess.MoveGen$MoveList r2;
        int i0, i1;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1;
        r1 := @parameter0: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        r2 := @parameter1: chess.MoveGen$MoveList;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0> = r1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: chess.MoveGen$MoveList val$srchMoves> = r2;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: int val$srchmaxDepth> = i0;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: int val$maxNodes> = i1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1 r0;
        chess.Move r1, r20;
        chess.Book r2, $r7;
        java.lang.Object r3, $r22;
        java.lang.Throwable r4, $r34;
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl $r5, $r6, $r8, $r10, $r13, $r14, $r17, $r18, $r21, $r23, $r28, $r32, $r33;
        boolean $z0, $z1, $z2, $z3;
        chess.Position $r9, $r19;
        chess.Search $r11;
        chess.MoveGen$MoveList $r12;
        int $i0, $i1;
        long $l2;
        java.lang.InterruptedException $r15, r16;
        org.petero.droidfish.engine.LocalPipe $r24, $r29;
        java.lang.Object[] $r25, $r30;
        java.lang.String $r26, $r27, $r31;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1;
        r1 = null;
        $r5 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $z0 = $r5.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ownBook>;
        if $z0 == 0 goto label0;

        $r6 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $z1 = $r6.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean analyseMode>;
        if $z1 != 0 goto label0;

        $r7 = new chess.Book;
        specialinvoke $r7.<chess.Book: void <init>(boolean)>(0);
        r2 = $r7;
        $r8 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $r9 = $r8.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Position pos>;
        r1 = virtualinvoke r2.<chess.Book: chess.Move getBookMove(chess.Position)>($r9);

     label0:
        if r1 != null goto label1;

        $r10 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $r11 = $r10.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Search sc>;
        $r12 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: chess.MoveGen$MoveList val$srchMoves>;
        $i0 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: int val$srchmaxDepth>;
        $i1 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: int val$maxNodes>;
        $l2 = (long) $i1;
        r1 = virtualinvoke $r11.<chess.Search: chess.Move iterativeDeepening(chess.MoveGen$MoveList,int,long,boolean)>($r12, $i0, $l2, 0);

     label1:
        $r13 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $z2 = $r13.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ponder>;
        if $z2 != 0 goto label2;

        $r14 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $z3 = $r14.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean infinite>;
        if $z3 == 0 goto label5;

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(10L);

     label3:
        goto label1;

     label4:
        $r15 := @caughtexception;
        r16 = $r15;
        goto label5;

     label5:
        $r17 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $r18 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $r19 = $r18.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Position pos>;
        r20 = virtualinvoke $r17.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Move getPonderMove(chess.Position,chess.Move)>($r19, r1);
        $r21 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $r22 = staticinvoke <org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Object access$000(org.petero.droidfish.engine.cuckoochess.DroidEngineControl)>($r21);
        r3 = $r22;
        entermonitor $r22;

     label6:
        if r20 == null goto label7;

        $r23 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $r24 = $r23.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: org.petero.droidfish.engine.LocalPipe os>;
        $r25 = newarray (java.lang.Object)[2];
        $r26 = staticinvoke <org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.String moveToString(chess.Move)>(r1);
        $r25[0] = $r26;
        $r27 = staticinvoke <org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.String moveToString(chess.Move)>(r20);
        $r25[1] = $r27;
        virtualinvoke $r24.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String,java.lang.Object[])>("bestmove %s ponder %s", $r25);
        goto label8;

     label7:
        $r28 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $r29 = $r28.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: org.petero.droidfish.engine.LocalPipe os>;
        $r30 = newarray (java.lang.Object)[1];
        $r31 = staticinvoke <org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.String moveToString(chess.Move)>(r1);
        $r30[0] = $r31;
        virtualinvoke $r29.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String,java.lang.Object[])>("bestmove %s", $r30);

     label8:
        $r32 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $r32.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Thread engineThread> = null;
        $r33 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: org.petero.droidfish.engine.cuckoochess.DroidEngineControl this$0>;
        $r33.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Search sc> = null;
        exitmonitor r3;

     label9:
        goto label13;

     label10:
        $r34 := @caughtexception;

     label11:
        r4 = $r34;
        exitmonitor r3;

     label12:
        throw r4;

     label13:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label6 to label9 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
class org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener extends java.lang.Object implements chess.Search$Listener
{
    org.petero.droidfish.engine.LocalPipe os;

    void <init>(org.petero.droidfish.engine.LocalPipe)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener r0;
        org.petero.droidfish.engine.LocalPipe r1;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener;
        r1 := @parameter0: org.petero.droidfish.engine.LocalPipe;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener: org.petero.droidfish.engine.LocalPipe os> = r1;
        return;
    }

    public void notifyDepth(int)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener r0;
        int i0;
        org.petero.droidfish.engine.LocalPipe $r1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener: org.petero.droidfish.engine.LocalPipe os>;
        $r2 = newarray (java.lang.Object)[1];
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r2[0] = $r3;
        virtualinvoke $r1.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String,java.lang.Object[])>("info depth %d", $r2);
        return;
    }

    public void notifyCurrMove(chess.Move, int)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener r0;
        chess.Move r1;
        int i0;
        org.petero.droidfish.engine.LocalPipe $r2;
        java.lang.Object[] $r3;
        java.lang.String $r4;
        java.lang.Integer $r5;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener;
        r1 := @parameter0: chess.Move;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener: org.petero.droidfish.engine.LocalPipe os>;
        $r3 = newarray (java.lang.Object)[2];
        $r4 = staticinvoke <org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.String moveToString(chess.Move)>(r1);
        $r3[0] = $r4;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r3[1] = $r5;
        virtualinvoke $r2.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String,java.lang.Object[])>("info currmove %s currmovenumber %d", $r3);
        return;
    }

    public void notifyPV(int, int, int, long, int, boolean, boolean, boolean, java.util.ArrayList)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener r0;
        int i0, i1, i2, i4;
        long l3;
        boolean z0, z1, z2, $z3;
        java.util.ArrayList r1;
        java.lang.StringBuilder $r2, r3;
        java.util.Iterator r4;
        chess.Move r5;
        java.lang.Object $r6;
        java.lang.String $r8, r10, $r12, $r16, $r21;
        org.petero.droidfish.engine.LocalPipe $r11;
        java.lang.Object[] $r13;
        java.lang.Integer $r14, $r17, $r18, $r20;
        byte $b5;
        java.lang.Long $r19;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        l3 := @parameter3: long;
        i4 := @parameter4: int;
        z0 := @parameter5: boolean;
        z1 := @parameter6: boolean;
        z2 := @parameter7: boolean;
        r1 := @parameter8: java.util.ArrayList;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        r3 = $r2;
        r4 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z3 == 0 goto label1;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (chess.Move) $r6;
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r8 = staticinvoke <org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.String moveToString(chess.Move)>(r5);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        goto label0;

     label1:
        r10 = "";
        if z1 == 0 goto label2;

        r10 = " upperbound";
        goto label3;

     label2:
        if z2 == 0 goto label3;

        r10 = " lowerbound";

     label3:
        $r11 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener: org.petero.droidfish.engine.LocalPipe os>;
        $r12 = "info depth %d score %s %d%s time %d nodes %d nps %d pv%s";
        $r13 = newarray (java.lang.Object)[8];
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r13[0] = $r14;
        $b5 = 1;
        if z0 == 0 goto label4;

        $r16 = "mate";
        goto label5;

     label4:
        $r16 = "cp";

     label5:
        $r13[$b5] = $r16;
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r13[2] = $r17;
        $r13[3] = r10;
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r13[4] = $r18;
        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);
        $r13[5] = $r19;
        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);
        $r13[6] = $r20;
        $r21 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13[7] = $r21;
        virtualinvoke $r11.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String,java.lang.Object[])>($r12, $r13);
        return;
    }

    public void notifyStats(long, int, int)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener r0;
        long l0;
        int i1, i2;
        org.petero.droidfish.engine.LocalPipe $r1;
        java.lang.Object[] $r2;
        java.lang.Long $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener;
        l0 := @parameter0: long;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r1 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener: org.petero.droidfish.engine.LocalPipe os>;
        $r2 = newarray (java.lang.Object)[3];
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);
        $r2[0] = $r3;
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r2[1] = $r4;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r2[2] = $r5;
        virtualinvoke $r1.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String,java.lang.Object[])>("info nodes %d nps %d time %d", $r2);
        return;
    }
}
public class org.petero.droidfish.engine.cuckoochess.DroidEngineControl extends java.lang.Object
{
    org.petero.droidfish.engine.LocalPipe os;
    java.lang.Thread engineThread;
    private final java.lang.Object threadMutex;
    chess.Search sc;
    chess.TranspositionTable tt;
    chess.History ht;
    chess.MoveGen moveGen;
    chess.Position pos;
    long[] posHashList;
    int posHashListSize;
    boolean ponder;
    boolean onePossibleMove;
    boolean infinite;
    int minTimeLimit;
    int maxTimeLimit;
    int maxDepth;
    int maxNodes;
    java.util.List searchMoves;
    int hashSizeMB;
    boolean ownBook;
    boolean analyseMode;
    boolean ponderMode;
    private int strength;
    private long randomSeed;
    private java.util.Random rndGen;

    public void <init>(org.petero.droidfish.engine.LocalPipe)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        org.petero.droidfish.engine.LocalPipe r1;
        java.util.Random $r2;
        java.lang.Object $r3;
        chess.History $r4;
        chess.MoveGen $r5;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        r1 := @parameter0: org.petero.droidfish.engine.LocalPipe;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int hashSizeMB> = 2;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ownBook> = 0;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean analyseMode> = 0;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ponderMode> = 1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int strength> = 1000;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: long randomSeed> = 0L;
        $r2 = new java.util.Random;
        specialinvoke $r2.<java.util.Random: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.util.Random rndGen> = $r2;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: org.petero.droidfish.engine.LocalPipe os> = r1;
        $r3 = new java.lang.Object;
        specialinvoke $r3.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Object threadMutex> = $r3;
        specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void setupTT()>();
        $r4 = new chess.History;
        specialinvoke $r4.<chess.History: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.History ht> = $r4;
        $r5 = new chess.MoveGen;
        specialinvoke $r5.<chess.MoveGen: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.MoveGen moveGen> = $r5;
        return;
    }

    public final void startSearch(chess.Position, java.util.ArrayList, org.petero.droidfish.engine.cuckoochess.SearchParams)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        chess.Position r1, $r4;
        java.util.ArrayList r2;
        org.petero.droidfish.engine.cuckoochess.SearchParams r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        java.util.List $r6;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: java.util.ArrayList;
        r3 := @parameter2: org.petero.droidfish.engine.cuckoochess.SearchParams;
        $r4 = new chess.Position;
        specialinvoke $r4.<chess.Position: void <init>(chess.Position)>(r1);
        virtualinvoke r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void setupPosition(chess.Position,java.util.List)>($r4, r2);
        virtualinvoke r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void computeTimeLimit(org.petero.droidfish.engine.cuckoochess.SearchParams)>(r3);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ponder> = 0;
        $i0 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit>;
        if $i0 >= 0 goto label0;

        $i1 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxDepth>;
        if $i1 >= 0 goto label0;

        $i2 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxNodes>;
        if $i2 >= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean infinite> = $z0;
        $r6 = r3.<org.petero.droidfish.engine.cuckoochess.SearchParams: java.util.List searchMoves>;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.util.List searchMoves> = $r6;
        $i3 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit>;
        $i4 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit>;
        $i5 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxDepth>;
        $i6 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxNodes>;
        specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void startThread(int,int,int,int)>($i3, $i4, $i5, $i6);
        return;
    }

    public final void startPonder(chess.Position, java.util.List, org.petero.droidfish.engine.cuckoochess.SearchParams)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        chess.Position r1, $r4;
        java.util.List r2;
        org.petero.droidfish.engine.cuckoochess.SearchParams r3;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: java.util.List;
        r3 := @parameter2: org.petero.droidfish.engine.cuckoochess.SearchParams;
        $r4 = new chess.Position;
        specialinvoke $r4.<chess.Position: void <init>(chess.Position)>(r1);
        virtualinvoke r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void setupPosition(chess.Position,java.util.List)>($r4, r2);
        virtualinvoke r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void computeTimeLimit(org.petero.droidfish.engine.cuckoochess.SearchParams)>(r3);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ponder> = 1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean infinite> = 0;
        specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void startThread(int,int,int,int)>(-1, -1, -1, -1);
        return;
    }

    public final void ponderHit()
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        java.lang.Object r1, $r4;
        chess.Search r2;
        java.lang.Throwable r3, $r5;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        $r4 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Object threadMutex>;
        r1 = $r4;
        entermonitor $r4;

     label0:
        r2 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Search sc>;
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;

     label3:
        r3 = $r5;
        exitmonitor r1;

     label4:
        throw r3;

     label5:
        if r2 == null goto label8;

        $z0 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean onePossibleMove>;
        if $z0 == 0 goto label7;

        $i0 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit>;
        if $i0 <= 1 goto label6;

        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit> = 1;

     label6:
        $i1 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit>;
        if $i1 <= 1 goto label7;

        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit> = 1;

     label7:
        $i2 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit>;
        $i3 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit>;
        virtualinvoke r2.<chess.Search: void timeLimit(int,int)>($i2, $i3);

     label8:
        $i4 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit>;
        if $i4 >= 0 goto label9;

        $i5 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxDepth>;
        if $i5 >= 0 goto label9;

        $i6 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxNodes>;
        if $i6 >= 0 goto label9;

        $z1 = 1;
        goto label10;

     label9:
        $z1 = 0;

     label10:
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean infinite> = $z1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ponder> = 0;
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public final void stopSearch()
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        virtualinvoke r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void stopThread()>();
        return;
    }

    public final void newGame()
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        java.util.Random $r1;
        long $l0;
        chess.TranspositionTable $r2;
        chess.History $r3;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        $r1 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.util.Random rndGen>;
        $l0 = virtualinvoke $r1.<java.util.Random: long nextLong()>();
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: long randomSeed> = $l0;
        $r2 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.TranspositionTable tt>;
        virtualinvoke $r2.<chess.TranspositionTable: void clear()>();
        $r3 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.History ht>;
        virtualinvoke $r3.<chess.History: void init()>();
        return;
    }

    public final void computeTimeLimit(org.petero.droidfish.engine.cuckoochess.SearchParams)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        org.petero.droidfish.engine.cuckoochess.SearchParams r1;
        int $i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        boolean $z0, $z1, z2;
        chess.Position $r2;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        r1 := @parameter0: org.petero.droidfish.engine.cuckoochess.SearchParams;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit> = -1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit> = -1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxDepth> = -1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxNodes> = -1;
        $z0 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: boolean infinite>;
        if $z0 == 0 goto label0;

        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit> = -1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit> = -1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxDepth> = -1;
        goto label11;

     label0:
        $i6 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int depth>;
        if $i6 <= 0 goto label1;

        $i7 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int depth>;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxDepth> = $i7;
        goto label11;

     label1:
        $i8 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int mate>;
        if $i8 <= 0 goto label2;

        $i9 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int mate>;
        $i10 = $i9 * 2;
        $i11 = $i10 - 1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxDepth> = $i11;
        goto label11;

     label2:
        $i12 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int moveTime>;
        if $i12 <= 0 goto label3;

        $i0 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int moveTime>;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit> = $i0;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit> = $i0;
        goto label11;

     label3:
        $i13 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int nodes>;
        if $i13 <= 0 goto label4;

        $i14 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int nodes>;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxNodes> = $i14;
        goto label11;

     label4:
        i1 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int movesToGo>;
        if i1 != 0 goto label5;

        i1 = 999;

     label5:
        i15 = staticinvoke <java.lang.Math: int min(int,int)>(i1, 45);
        $z1 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ponderMode>;
        if $z1 == 0 goto label6;

        d0 = 0.35;
        $d1 = (double) i15;
        $d2 = $d1 * 0.65;
        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);
        i15 = (int) $d3;

     label6:
        $r2 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Position pos>;
        z2 = $r2.<chess.Position: boolean whiteMove>;
        if z2 == 0 goto label7;

        $i16 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int wTime>;
        goto label8;

     label7:
        $i16 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int bTime>;

     label8:
        i2 = $i16;
        if z2 == 0 goto label9;

        $i17 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int wInc>;
        goto label10;

     label9:
        $i17 = r1.<org.petero.droidfish.engine.cuckoochess.SearchParams: int bInc>;

     label10:
        i3 = $i17;
        $i18 = i2 * 9;
        $i19 = $i18 / 10;
        i4 = staticinvoke <java.lang.Math: int min(int,int)>(1000, $i19);
        $i20 = i15 - 1;
        $i21 = i3 * $i20;
        $i22 = i2 + $i21;
        $i23 = $i22 - i4;
        i5 = $i23 / i15;
        $d4 = (double) i5;
        $d5 = $d4 * 0.85;
        $i24 = (int) $d5;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit> = $i24;
        $i25 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit>;
        $d6 = (double) $i25;
        $d7 = (double) i15;
        $d8 = $d7 / 2.0;
        $d9 = staticinvoke <java.lang.Math: double min(double,double)>(4.0, $d8);
        $d10 = staticinvoke <java.lang.Math: double max(double,double)>(2.5, $d9);
        $d11 = $d6 * $d10;
        $i26 = (int) $d11;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit> = $i26;
        $i27 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit>;
        $i28 = i2 - i4;
        $i29 = staticinvoke <org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int clamp(int,int,int)>($i27, 1, $i28);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int minTimeLimit> = $i29;
        $i30 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit>;
        $i31 = i2 - i4;
        $i32 = staticinvoke <org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int clamp(int,int,int)>($i30, 1, $i31);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int maxTimeLimit> = $i32;

     label11:
        return;
    }

    static final int clamp(int, int, int)
    {
        int i0, i1, i2;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        if i0 >= i1 goto label0;

        return i1;

     label0:
        if i0 <= i2 goto label1;

        return i2;

     label1:
        return i0;
    }

    private final void startThread(int, int, int, int)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i8, $i9;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, $r6;
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1 r3, $r27;
        java.lang.ThreadGroup r4, $r28;
        chess.Search $r7, $r12, $r13, $r16, $r17;
        chess.Position $r8, $r19, $r21;
        long[] $r9;
        chess.TranspositionTable $r10, $r26;
        chess.History $r11;
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener $r14;
        org.petero.droidfish.engine.LocalPipe $r15;
        long $l7;
        chess.MoveGen $r18;
        chess.MoveGen$MoveList r20, r25;
        java.util.List $r22, $r23, $r24;
        boolean $z0, $z1;
        java.lang.Thread $r29, $r30;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        $r5 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Object threadMutex>;
        r1 = $r5;
        entermonitor $r5;

     label0:
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r6 := @caughtexception;

     label3:
        r2 = $r6;
        exitmonitor r1;

     label4:
        throw r2;

     label5:
        $r7 = new chess.Search;
        $r8 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Position pos>;
        $r9 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: long[] posHashList>;
        $i5 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int posHashListSize>;
        $r10 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.TranspositionTable tt>;
        $r11 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.History ht>;
        specialinvoke $r7.<chess.Search: void <init>(chess.Position,long[],int,chess.TranspositionTable,chess.History)>($r8, $r9, $i5, $r10, $r11);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Search sc> = $r7;
        $r12 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Search sc>;
        virtualinvoke $r12.<chess.Search: void timeLimit(int,int)>(i0, i1);
        $r13 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Search sc>;
        $r14 = new org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener;
        $r15 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: org.petero.droidfish.engine.LocalPipe os>;
        specialinvoke $r14.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$SearchListener: void <init>(org.petero.droidfish.engine.LocalPipe)>($r15);
        virtualinvoke $r13.<chess.Search: void setListener(chess.Search$Listener)>($r14);
        $r16 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Search sc>;
        $i6 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int strength>;
        $l7 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: long randomSeed>;
        virtualinvoke $r16.<chess.Search: void setStrength(int,long)>($i6, $l7);
        $r17 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Search sc>;
        $r17.<chess.Search: int nodesBetweenTimeCheck> = 500;
        $r18 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.MoveGen moveGen>;
        $r19 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Position pos>;
        r20 = virtualinvoke $r18.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>($r19);
        $r21 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Position pos>;
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>($r21, r20);
        $r22 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.util.List searchMoves>;
        if $r22 == null goto label6;

        $r23 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.util.List searchMoves>;
        $i8 = interfaceinvoke $r23.<java.util.List: int size()>();
        if $i8 <= 0 goto label6;

        $r24 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.util.List searchMoves>;
        virtualinvoke r20.<chess.MoveGen$MoveList: void filter(java.util.List)>($r24);

     label6:
        r25 = r20;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean onePossibleMove> = 0;
        $i9 = r25.<chess.MoveGen$MoveList: int size>;
        if $i9 >= 2 goto label8;

        $z0 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean infinite>;
        if $z0 != 0 goto label8;

        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean onePossibleMove> = 1;
        $z1 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ponder>;
        if $z1 != 0 goto label8;

        if i2 < 0 goto label7;

        if i2 <= 2 goto label8;

     label7:
        i2 = 2;

     label8:
        $r26 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.TranspositionTable tt>;
        virtualinvoke $r26.<chess.TranspositionTable: void nextGeneration()>();
        i4 = i2;
        $r27 = new org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1;
        specialinvoke $r27.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl$1: void <init>(org.petero.droidfish.engine.cuckoochess.DroidEngineControl,chess.MoveGen$MoveList,int,int)>(r0, r25, i4, i3);
        r3 = $r27;
        $r28 = new java.lang.ThreadGroup;
        specialinvoke $r28.<java.lang.ThreadGroup: void <init>(java.lang.String)>("searcher");
        r4 = $r28;
        $r29 = new java.lang.Thread;
        specialinvoke $r29.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>(r4, r3, "searcher", 32768L);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Thread engineThread> = $r29;
        $r30 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Thread engineThread>;
        virtualinvoke $r30.<java.lang.Thread: void start()>();
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public final void stopThread()
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        java.lang.Object r1, $r5;
        java.lang.Thread r2;
        chess.Search r3;
        java.lang.Throwable r4, $r6;
        java.lang.InterruptedException $r7, r8;
        java.lang.RuntimeException $r9;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        $r5 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Object threadMutex>;
        r1 = $r5;
        entermonitor $r5;

     label0:
        r2 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Thread engineThread>;
        r3 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Search sc>;
        exitmonitor r1;

     label1:
        goto label5;

     label2:
        $r6 := @caughtexception;

     label3:
        r4 = $r6;
        exitmonitor r1;

     label4:
        throw r4;

     label5:
        if r2 == null goto label9;

        virtualinvoke r3.<chess.Search: void timeLimit(int,int)>(0, 0);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean infinite> = 0;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ponder> = 0;

     label6:
        virtualinvoke r2.<java.lang.Thread: void join()>();

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = new java.lang.RuntimeException;
        specialinvoke $r9.<java.lang.RuntimeException: void <init>()>();
        throw $r9;

     label9:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.InterruptedException from label6 to label7 with label8;
    }

    private final void setupTT()
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4;
        chess.TranspositionTable $r1;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        $i2 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int hashSizeMB>;
        if $i2 <= 0 goto label0;

        $i3 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int hashSizeMB>;
        $i4 = $i3 * 1048576;
        $i5 = $i4 / 24;
        goto label1;

     label0:
        $i5 = 1024;

     label1:
        i0 = $i5;
        $d0 = (double) i0;
        $d1 = staticinvoke <java.lang.Math: double log(double)>($d0);
        $d2 = staticinvoke <java.lang.Math: double log(double)>(2.0);
        $d3 = $d1 / $d2;
        $d4 = staticinvoke <java.lang.Math: double floor(double)>($d3);
        i1 = (int) $d4;
        $r1 = new chess.TranspositionTable;
        specialinvoke $r1.<chess.TranspositionTable: void <init>(int)>(i1);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.TranspositionTable tt> = $r1;
        return;
    }

    final void setupPosition(chess.Position, java.util.List)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        chess.Position r1;
        java.util.List r2;
        chess.UndoInfo $r3, r4;
        java.util.Iterator r5;
        chess.Move r6;
        int $i0, $i1, $i2, $i3;
        long[] $r7, $r9;
        boolean $z0;
        java.lang.Object $r8;
        long $l4;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: java.util.List;
        $r3 = new chess.UndoInfo;
        specialinvoke $r3.<chess.UndoInfo: void <init>()>();
        r4 = $r3;
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();
        $i2 = 200 + $i1;
        $r7 = newarray (long)[$i2];
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: long[] posHashList> = $r7;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int posHashListSize> = 0;
        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (chess.Move) $r8;
        $r9 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: long[] posHashList>;
        $i0 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int posHashListSize>;
        $i3 = $i0 + 1;
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int posHashListSize> = $i3;
        $l4 = virtualinvoke r1.<chess.Position: long zobristHash()>();
        $r9[$i0] = $l4;
        virtualinvoke r1.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r6, r4);
        goto label0;

     label1:
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.Position pos> = r1;
        return;
    }

    final chess.Move getPonderMove(chess.Position, chess.Move)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        chess.Position r1;
        chess.Move r2, r3, $r9;
        chess.UndoInfo r4, $r7;
        chess.TranspositionTable$TTEntry r5;
        chess.MoveGen$MoveList r6;
        chess.TranspositionTable $r8;
        long $l0;
        byte $b1;
        chess.MoveGen $r10;
        chess.Move[] $r11;
        java.util.List $r12;
        boolean $z0;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        r1 := @parameter0: chess.Position;
        r2 := @parameter1: chess.Move;
        if r2 != null goto label0;

        return null;

     label0:
        r3 = null;
        $r7 = new chess.UndoInfo;
        specialinvoke $r7.<chess.UndoInfo: void <init>()>();
        r4 = $r7;
        virtualinvoke r1.<chess.Position: void makeMove(chess.Move,chess.UndoInfo)>(r2, r4);
        $r8 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.TranspositionTable tt>;
        $l0 = virtualinvoke r1.<chess.Position: long historyHash()>();
        r5 = virtualinvoke $r8.<chess.TranspositionTable: chess.TranspositionTable$TTEntry probe(long)>($l0);
        $b1 = r5.<chess.TranspositionTable$TTEntry: byte type>;
        if $b1 == 3 goto label1;

        $r9 = new chess.Move;
        specialinvoke $r9.<chess.Move: void <init>(int,int,int)>(0, 0, 0);
        r3 = $r9;
        virtualinvoke r5.<chess.TranspositionTable$TTEntry: void getMove(chess.Move)>(r3);
        $r10 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: chess.MoveGen moveGen>;
        r6 = virtualinvoke $r10.<chess.MoveGen: chess.MoveGen$MoveList pseudoLegalMoves(chess.Position)>(r1);
        staticinvoke <chess.MoveGen: void removeIllegal(chess.Position,chess.MoveGen$MoveList)>(r1, r6);
        $r11 = r6.<chess.MoveGen$MoveList: chess.Move[] m>;
        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11);
        $z0 = interfaceinvoke $r12.<java.util.List: boolean contains(java.lang.Object)>(r3);
        if $z0 != 0 goto label1;

        r3 = null;

     label1:
        virtualinvoke r1.<chess.Position: void unMakeMove(chess.Move,chess.UndoInfo)>(r2, r4);
        return r3;
    }

    static final java.lang.String moveToString(chess.Move)
    {
        chess.Move r0;
        java.lang.String r1, $r4, r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @parameter0: chess.Move;
        if r0 != null goto label0;

        return "0000";

     label0:
        $i0 = r0.<chess.Move: int 'from'>;
        r1 = staticinvoke <chess.TextIO: java.lang.String squareToString(int)>($i0);
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $i1 = r0.<chess.Move: int 'to'>;
        $r4 = staticinvoke <chess.TextIO: java.lang.String squareToString(int)>($i1);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $i2 = r0.<chess.Move: int promoteTo>;
        tableswitch($i2)
        {
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label5;
            case 8: goto label1;
            case 9: goto label2;
            case 10: goto label3;
            case 11: goto label4;
            default: goto label5;
        };

     label1:
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("q");
        r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label5;

     label2:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("r");
        r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label5;

     label3:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");
        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label5;

     label4:
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n");
        r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label5;

     label5:
        return r6;
    }

    static void printOptions(org.petero.droidfish.engine.LocalPipe)
    {
        org.petero.droidfish.engine.LocalPipe r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;

        r0 := @parameter0: org.petero.droidfish.engine.LocalPipe;
        virtualinvoke r0.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String)>("option name Hash type spin default 2 min 1 max 2048");
        virtualinvoke r0.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String)>("option name OwnBook type check default false");
        virtualinvoke r0.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String)>("option name Ponder type check default true");
        virtualinvoke r0.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String)>("option name UCI_AnalyseMode type check default false");
        $r2 = newarray (java.lang.Object)[1];
        $r1 = <chess.ComputerPlayer: java.lang.String engineName>;
        $r2[0] = $r1;
        virtualinvoke r0.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String,java.lang.Object[])>("option name UCI_EngineAbout type string default %s by Peter Osterlund, see http://web.comhem.se/petero2home/javachess/index.html", $r2);
        virtualinvoke r0.<org.petero.droidfish.engine.LocalPipe: void printLine(java.lang.String)>("option name Strength type spin default 1000 min 0 max 1000");
        return;
    }

    final void setOption(java.lang.String, java.lang.String)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        java.lang.String r1, r2;
        java.lang.NumberFormatException r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int $i0, $i1;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("hash");
        if $z0 == 0 goto label1;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int hashSizeMB> = $i0;
        specialinvoke r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: void setupTT()>();
        goto label5;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ownbook");
        if $z1 == 0 goto label2;

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ownBook> = $z2;
        goto label5;

     label2:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ponder");
        if $z3 == 0 goto label3;

        $z4 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean ponderMode> = $z4;
        goto label5;

     label3:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("uci_analysemode");
        if $z5 == 0 goto label4;

        $z6 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: boolean analyseMode> = $z6;
        goto label5;

     label4:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("strength");
        if $z7 == 0 goto label5;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);
        r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: int strength> = $i1;

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;
        r3 = $r4;

     label7:
        return;

        catch java.lang.NumberFormatException from label0 to label5 with label6;
    }

    static java.lang.Object access$000(org.petero.droidfish.engine.cuckoochess.DroidEngineControl)
    {
        org.petero.droidfish.engine.cuckoochess.DroidEngineControl r0;
        java.lang.Object $r1;

        r0 := @parameter0: org.petero.droidfish.engine.cuckoochess.DroidEngineControl;
        $r1 = r0.<org.petero.droidfish.engine.cuckoochess.DroidEngineControl: java.lang.Object threadMutex>;
        return $r1;
    }
}
public class org.petero.droidfish.engine.cuckoochess.SearchParams extends java.lang.Object
{
    java.util.List searchMoves;
    int wTime;
    int bTime;
    int wInc;
    int bInc;
    int movesToGo;
    int depth;
    int nodes;
    int mate;
    int moveTime;
    boolean infinite;

    public void <init>()
    {
        org.petero.droidfish.engine.cuckoochess.SearchParams r0;
        java.util.ArrayList $r1;

        r0 := @this: org.petero.droidfish.engine.cuckoochess.SearchParams;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.engine.cuckoochess.SearchParams: java.util.List searchMoves> = $r1;
        return;
    }
}
public class org.petero.droidfish.gamelogic.ChessParseError extends java.lang.Exception
{
    private static final long serialVersionUID;
    public org.petero.droidfish.gamelogic.Position pos;
    public int resourceId;

    public void <init>(java.lang.String)
    {
        org.petero.droidfish.gamelogic.ChessParseError r0;
        java.lang.String r1;

        r0 := @this: org.petero.droidfish.gamelogic.ChessParseError;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);
        r0.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId> = -1;
        r0.<org.petero.droidfish.gamelogic.ChessParseError: org.petero.droidfish.gamelogic.Position pos> = null;
        return;
    }

    public void <init>(java.lang.String, org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.ChessParseError r0;
        java.lang.String r1;
        org.petero.droidfish.gamelogic.Position r2;

        r0 := @this: org.petero.droidfish.gamelogic.ChessParseError;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.petero.droidfish.gamelogic.Position;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);
        r0.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId> = -1;
        r0.<org.petero.droidfish.gamelogic.ChessParseError: org.petero.droidfish.gamelogic.Position pos> = r2;
        return;
    }

    public void <init>(int)
    {
        org.petero.droidfish.gamelogic.ChessParseError r0;
        int i0;

        r0 := @this: org.petero.droidfish.gamelogic.ChessParseError;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>("");
        r0.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId> = -1;
        r0.<org.petero.droidfish.gamelogic.ChessParseError: org.petero.droidfish.gamelogic.Position pos> = null;
        r0.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId> = i0;
        return;
    }

    public void <init>(int, org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.ChessParseError r0;
        int i0;
        org.petero.droidfish.gamelogic.Position r1;

        r0 := @this: org.petero.droidfish.gamelogic.ChessParseError;
        i0 := @parameter0: int;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Position;
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>("");
        r0.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId> = -1;
        r0.<org.petero.droidfish.gamelogic.ChessParseError: org.petero.droidfish.gamelogic.Position pos> = r1;
        r0.<org.petero.droidfish.gamelogic.ChessParseError: int resourceId> = i0;
        return;
    }
}
class org.petero.droidfish.gamelogic.DroidChessController$1 extends java.lang.Object
{
    static final int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$SearchType;

    static void <clinit>()
    {
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType[] $r0;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType $r1, $r7, $r11;
        java.lang.NoSuchFieldError r2, $r5, $r8, r9, $r12, r13;
        int $i0, $i1, $i2, $i3;
        int[] $r3, $r4, $r6, $r10;

        $r0 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType[] values()>();
        $i0 = lengthof $r0;
        $r3 = newarray (int)[$i0];
        <org.petero.droidfish.gamelogic.DroidChessController$1: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$SearchType> = $r3;

     label0:
        $r4 = <org.petero.droidfish.gamelogic.DroidChessController$1: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$SearchType>;
        $r1 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType SEARCH>;
        $i1 = virtualinvoke $r1.<org.petero.droidfish.engine.DroidComputerPlayer$SearchType: int ordinal()>();
        $r4[$i1] = 1;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;

     label3:
        $r6 = <org.petero.droidfish.gamelogic.DroidChessController$1: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$SearchType>;
        $r7 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType PONDER>;
        $i2 = virtualinvoke $r7.<org.petero.droidfish.engine.DroidComputerPlayer$SearchType: int ordinal()>();
        $r6[$i2] = 2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;

     label6:
        $r10 = <org.petero.droidfish.gamelogic.DroidChessController$1: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$SearchType>;
        $r11 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType ANALYZE>;
        $i3 = virtualinvoke $r11.<org.petero.droidfish.engine.DroidComputerPlayer$SearchType: int ordinal()>();
        $r10[$i3] = 3;

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;
        r13 = $r12;

     label9:
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
    }
}
public final class org.petero.droidfish.gamelogic.DroidChessController$CommentInfo extends java.lang.Object
{
    public java.lang.String move;
    public java.lang.String preComment;
    public java.lang.String postComment;
    public int nag;

    public void <init>()
    {
        org.petero.droidfish.gamelogic.DroidChessController$CommentInfo r0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$CommentInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
class org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1 extends java.lang.Object implements java.lang.Runnable
{
    final int val$id;
    final java.util.ArrayList val$pvMoves;
    final java.lang.String val$newPV;
    final java.lang.String val$statStr;
    final java.lang.String val$newBookInfo;
    final org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1;

    void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener, int, java.util.ArrayList, java.lang.String, java.lang.String, java.lang.String)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r1;
        int i0;
        java.util.ArrayList r2;
        java.lang.String r3, r4, r5;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1;
        r1 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter1: int;
        r2 := @parameter2: java.util.ArrayList;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.String;
        r5 := @parameter5: java.lang.String;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1> = r1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: int val$id> = i0;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: java.util.ArrayList val$pvMoves> = r2;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: java.lang.String val$newPV> = r3;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: java.lang.String val$statStr> = r4;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: java.lang.String val$newBookInfo> = r5;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r1, $r7;
        org.petero.droidfish.gamelogic.DroidChessController $r2;
        int $i0;
        java.util.ArrayList $r3, $r8;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: int val$id>;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: java.util.ArrayList val$pvMoves>;
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: java.lang.String val$newPV>;
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: java.lang.String val$statStr>;
        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: java.lang.String val$newBookInfo>;
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1>;
        $r8 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList access$200(org.petero.droidfish.gamelogic.DroidChessController$SearchListener)>($r7);
        staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: void access$300(org.petero.droidfish.gamelogic.DroidChessController,int,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList)>($r2, $i0, $r3, $r4, $r5, $r6, $r8);
        return;
    }
}
class org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 this$2;

    void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 r1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1;
        r1 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 this$2> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 $r1, $r4, $r5, $r7;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r2;
        org.petero.droidfish.gamelogic.DroidChessController $r3;
        int $i0;
        java.lang.String $r6;
        org.petero.droidfish.gamelogic.Move $r8;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 this$2>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1>;
        $r3 = $r2.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 this$2>;
        $i0 = $r4.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: int val$id>;
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 this$2>;
        $r6 = $r5.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: java.lang.String val$cmd>;
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 this$2>;
        $r8 = $r7.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: org.petero.droidfish.gamelogic.Move val$ponder>;
        staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: void access$600(org.petero.droidfish.gamelogic.DroidChessController,int,java.lang.String,org.petero.droidfish.gamelogic.Move)>($r3, $i0, $r6, $r8);
        return;
    }
}
class org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 extends java.lang.Object implements java.lang.Runnable
{
    final int val$id;
    final java.lang.String val$cmd;
    final org.petero.droidfish.gamelogic.Move val$ponder;
    final org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1;

    void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener, int, java.lang.String, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r1;
        int i0;
        java.lang.String r2;
        org.petero.droidfish.gamelogic.Move r3;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2;
        r1 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: org.petero.droidfish.gamelogic.Move;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1> = r1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: int val$id> = i0;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: java.lang.String val$cmd> = r2;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: org.petero.droidfish.gamelogic.Move val$ponder> = r3;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1 $r1;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r2;
        org.petero.droidfish.gamelogic.DroidChessController $r3;
        org.petero.droidfish.GUIInterface $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1>;
        $r3 = $r2.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r4 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface access$100(org.petero.droidfish.gamelogic.DroidChessController)>($r3);
        $r1 = new org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2$1: void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2)>(r0);
        interfaceinvoke $r4.<org.petero.droidfish.GUIInterface: void runOnUIThread(java.lang.Runnable)>($r1);
        return;
    }
}
class org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$engineName;
    final org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1;

    void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener, java.lang.String)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r1;
        java.lang.String r2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3;
        r1 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        r2 := @parameter1: java.lang.String;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1> = r1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3: java.lang.String val$engineName> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r1, $r4;
        org.petero.droidfish.gamelogic.DroidChessController $r2, $r5;
        java.lang.String $r3, $r7;
        org.petero.droidfish.GUIInterface $r6;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3: java.lang.String val$engineName>;
        staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: void access$700(org.petero.droidfish.gamelogic.DroidChessController,java.lang.String)>($r2, $r3);
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1>;
        $r5 = $r4.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r6 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface access$100(org.petero.droidfish.gamelogic.DroidChessController)>($r5);
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3: java.lang.String val$engineName>;
        interfaceinvoke $r6.<org.petero.droidfish.GUIInterface: void reportEngineName(java.lang.String)>($r7);
        return;
    }
}
class org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4 extends java.lang.Object implements java.lang.Runnable
{
    final java.lang.String val$errMsg;
    final org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1;

    void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener, java.lang.String)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r1;
        java.lang.String r2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4;
        r1 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        r2 := @parameter1: java.lang.String;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1> = r1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4: java.lang.String val$errMsg> = r2;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4 r0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r1;
        org.petero.droidfish.gamelogic.DroidChessController $r2;
        org.petero.droidfish.GUIInterface $r3;
        java.lang.String $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4: org.petero.droidfish.gamelogic.DroidChessController$SearchListener this$1>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r3 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface access$100(org.petero.droidfish.gamelogic.DroidChessController)>($r2);
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4: java.lang.String val$errMsg>;
        interfaceinvoke $r3.<org.petero.droidfish.GUIInterface: void reportEngineError(java.lang.String)>($r4);
        return;
    }
}
final class org.petero.droidfish.gamelogic.DroidChessController$SearchListener extends java.lang.Object implements org.petero.droidfish.gamelogic.SearchListener
{
    private int currDepth;
    private int currMoveNr;
    private org.petero.droidfish.gamelogic.Move currMove;
    private java.lang.String currMoveStr;
    private long currNodes;
    private int currNps;
    private int currTime;
    private boolean whiteMove;
    private java.lang.String bookInfo;
    private java.util.ArrayList bookMoves;
    private org.petero.droidfish.gamelogic.Move ponderMove;
    private java.util.ArrayList pvInfoV;
    private int pvInfoSearchId;
    final org.petero.droidfish.gamelogic.DroidChessController this$0;

    private void <init>(org.petero.droidfish.gamelogic.DroidChessController)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        org.petero.droidfish.gamelogic.DroidChessController r1;
        java.util.ArrayList $r2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        r1 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currDepth> = 0;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currMoveNr> = 0;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move currMove> = null;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.lang.String currMoveStr> = "";
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: long currNodes> = 0L;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currNps> = 0;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currTime> = 0;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: boolean whiteMove> = 1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.lang.String bookInfo> = "";
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList bookMoves> = null;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move ponderMove> = null;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList pvInfoV> = $r2;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int pvInfoSearchId> = -1;
        return;
    }

    public final void clearSearchInfo(int)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        int i0;
        java.util.ArrayList $r1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter0: int;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int pvInfoSearchId> = -1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move ponderMove> = null;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList pvInfoV>;
        virtualinvoke $r1.<java.util.ArrayList: void clear()>();
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currDepth> = 0;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.lang.String bookInfo> = "";
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList bookMoves> = null;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void setSearchInfo(int)>(i0);
        return;
    }

    private final void setSearchInfo(int)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i13, $i14, $i15, i16, $i17;
        java.lang.StringBuilder $r1, r2;
        org.petero.droidfish.gamelogic.SearchListener$PvInfo r3, $r51, $r56;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10;
        java.lang.String r4, $r14, $r19, $r23, $r27, $r29, r31, r32, $r36, r40, r41, r42;
        java.util.ArrayList r5, $r8, $r9, $r43, r44, $r45, $r47, $r49, $r52, $r54, $r57;
        java.util.Iterator r6;
        org.petero.droidfish.gamelogic.Move r7, $r46, $r48;
        java.lang.Object $r10, $r50, $r53, $r55;
        java.lang.Object[] $r12, $r21, $r25, $r33;
        java.lang.Integer $r13, $r22, $r34, $r35, $r39;
        org.petero.droidfish.gamelogic.DroidChessController $r16, $r58;
        org.petero.droidfish.GUIInterface $r17, $r59;
        double $d0, $d1, $d2, $d3;
        java.lang.Double $r26, $r37;
        long l10;
        byte $b11, $b12;
        java.lang.Long $r38;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1 $r60;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter0: int;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        i1 = 0;

     label0:
        $r8 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList pvInfoV>;
        $i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();
        if i1 >= $i3 goto label14;

        $r9 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList pvInfoV>;
        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        r3 = (org.petero.droidfish.gamelogic.SearchListener$PvInfo) $r10;
        $i4 = r3.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int depth>;
        if $i4 > 0 goto label1;

        goto label13;

     label1:
        if i1 <= 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label2:
        $r12 = newarray (java.lang.Object)[1];
        $i5 = r3.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int depth>;
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        $r12[0] = $r13;
        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%d] ", $r12);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $z2 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: boolean whiteMove>;
        if $z2 != 0 goto label3;

        $r16 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r17 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface access$100(org.petero.droidfish.gamelogic.DroidChessController)>($r16);
        $z3 = interfaceinvoke $r17.<org.petero.droidfish.GUIInterface: boolean whiteBasedScores()>();
        if $z3 == 0 goto label3;

        $z4 = 1;
        goto label4;

     label3:
        $z4 = 0;

     label4:
        z0 = $z4;
        $z5 = r3.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: boolean upperBound>;
        if $z5 != 0 goto label5;

        $z6 = r3.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: boolean lowerBound>;
        if $z6 == 0 goto label8;

     label5:
        $z7 = r3.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: boolean upperBound>;
        z1 = $z7 ^ z0;
        if z1 == 0 goto label6;

        $r19 = "<=";
        goto label7;

     label6:
        $r19 = ">=";

     label7:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label8:
        if z0 == 0 goto label9;

        $i6 = r3.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int score>;
        $i7 = neg $i6;
        goto label10;

     label9:
        $i7 = r3.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int score>;

     label10:
        i8 = $i7;
        $z8 = r3.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: boolean isMate>;
        if $z8 == 0 goto label11;

        $r21 = newarray (java.lang.Object)[1];
        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
        $r21[0] = $r22;
        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("m%d", $r21);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        goto label12;

     label11:
        $r25 = newarray (java.lang.Object)[1];
        $d0 = (double) i8;
        $d1 = $d0 / 100.0;
        $r26 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
        $r25[0] = $r26;
        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r25);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label12:
        $r29 = r3.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: java.lang.String pvStr>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

     label13:
        i1 = i1 + 1;
        goto label0;

     label14:
        r31 = "";
        $i9 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currDepth>;
        if $i9 <= 0 goto label18;

        l10 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: long currNodes>;
        r32 = "";
        $b11 = l10 cmp 100000000L;
        if $b11 <= 0 goto label15;

        l10 = l10 / 1000000L;
        r32 = "M";
        goto label16;

     label15:
        $b12 = l10 cmp 100000L;
        if $b12 <= 0 goto label16;

        l10 = l10 / 1000L;
        r32 = "k";

     label16:
        i2 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currNps>;
        r4 = "";
        if i2 <= 100000 goto label17;

        i2 = i2 / 1000;
        r4 = "k";

     label17:
        $r33 = newarray (java.lang.Object)[8];
        $i13 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currDepth>;
        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);
        $r33[0] = $r34;
        $i14 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currMoveNr>;
        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);
        $r33[1] = $r35;
        $r36 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.lang.String currMoveStr>;
        $r33[2] = $r36;
        $i15 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currTime>;
        $d2 = (double) $i15;
        $d3 = $d2 / 1000.0;
        $r37 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);
        $r33[3] = $r37;
        $r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l10);
        $r33[4] = $r38;
        $r33[5] = r32;
        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r33[6] = $r39;
        $r33[7] = r4;
        r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("d:%d %d:%s t:%.2f n:%d%s nps:%d%s", $r33);

     label18:
        r40 = r31;
        r41 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        r42 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.lang.String bookInfo>;
        $r43 = new java.util.ArrayList;
        specialinvoke $r43.<java.util.ArrayList: void <init>()>();
        r44 = $r43;
        i16 = 0;

     label19:
        $r45 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList pvInfoV>;
        $i17 = virtualinvoke $r45.<java.util.ArrayList: int size()>();
        if i16 >= $i17 goto label24;

        $r46 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r46 == null goto label22;

        $r47 = new java.util.ArrayList;
        specialinvoke $r47.<java.util.ArrayList: void <init>()>();
        r5 = $r47;
        $r48 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move ponderMove>;
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r48);
        $r49 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList pvInfoV>;
        $r50 = virtualinvoke $r49.<java.util.ArrayList: java.lang.Object get(int)>(i16);
        $r51 = (org.petero.droidfish.gamelogic.SearchListener$PvInfo) $r50;
        $r52 = $r51.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: java.util.ArrayList pv>;
        r6 = virtualinvoke $r52.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z10 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z10 == 0 goto label21;

        $r53 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (org.petero.droidfish.gamelogic.Move) $r53;
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);
        goto label20;

     label21:
        virtualinvoke r44.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);
        goto label23;

     label22:
        $r54 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList pvInfoV>;
        $r55 = virtualinvoke $r54.<java.util.ArrayList: java.lang.Object get(int)>(i16);
        $r56 = (org.petero.droidfish.gamelogic.SearchListener$PvInfo) $r55;
        $r57 = $r56.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: java.util.ArrayList pv>;
        virtualinvoke r44.<java.util.ArrayList: boolean add(java.lang.Object)>($r57);

     label23:
        i16 = i16 + 1;
        goto label19;

     label24:
        $r58 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r59 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface access$100(org.petero.droidfish.gamelogic.DroidChessController)>($r58);
        $r60 = new org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1;
        specialinvoke $r60.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$1: void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener,int,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String)>(r0, i0, r44, r41, r40, r42);
        interfaceinvoke $r59.<org.petero.droidfish.GUIInterface: void runOnUIThread(java.lang.Runnable)>($r60);
        return;
    }

    public void notifyDepth(int, int)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        int i0, i1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currDepth> = i1;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void setSearchInfo(int)>(i0);
        return;
    }

    public void notifyCurrMove(int, org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move, int)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        int i0, i1;
        org.petero.droidfish.gamelogic.Position r1;
        org.petero.droidfish.gamelogic.Move r2;
        org.petero.droidfish.gamelogic.DroidChessController $r3;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter0: int;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Position;
        r2 := @parameter2: org.petero.droidfish.gamelogic.Move;
        i1 := @parameter3: int;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move currMove> = r2;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $z0 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: boolean access$400(org.petero.droidfish.gamelogic.DroidChessController)>($r3);
        $r4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean)>(r1, r2, 0, $z0);
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.lang.String currMoveStr> = $r4;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currMoveNr> = i1;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void setSearchInfo(int)>(i0);
        return;
    }

    public void notifyPV(int, org.petero.droidfish.gamelogic.Position, java.util.ArrayList, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        int i0, $i1, $i3;
        org.petero.droidfish.gamelogic.Position r1, r7, $r16;
        java.util.ArrayList r2, $r13, $r22;
        org.petero.droidfish.gamelogic.Move r3, r10;
        java.util.Iterator r4, r23;
        org.petero.droidfish.gamelogic.SearchListener$PvInfo r5;
        java.lang.StringBuilder r6, $r15;
        org.petero.droidfish.gamelogic.UndoInfo r8, $r17;
        java.lang.String r9, r11, $r20, $r27, $r29;
        java.lang.Object $r12, $r14, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        long $l2;
        org.petero.droidfish.gamelogic.DroidChessController $r18, $r25;
        java.lang.Object[] $r19, $r26;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter0: int;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Position;
        r2 := @parameter2: java.util.ArrayList;
        r3 := @parameter3: org.petero.droidfish.gamelogic.Move;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move ponderMove> = r3;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int pvInfoSearchId> = i0;
        $r12 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object clone()>();
        $r13 = (java.util.ArrayList) $r12;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList pvInfoV> = $r13;
        r4 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label6;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.petero.droidfish.gamelogic.SearchListener$PvInfo) $r14;
        $i1 = r5.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int time>;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currTime> = $i1;
        $l2 = r5.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: long nodes>;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: long currNodes> = $l2;
        $i3 = r5.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int nps>;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currNps> = $i3;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        r6 = $r15;
        $r16 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r16.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r1);
        r7 = $r16;
        $r17 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r17.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r8 = $r17;
        if r3 == null goto label1;

        $r18 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $z1 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: boolean access$400(org.petero.droidfish.gamelogic.DroidChessController)>($r18);
        r9 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean)>(r7, r3, 0, $z1);
        $r19 = newarray (java.lang.Object)[1];
        $r19[0] = r9;
        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" [%s]", $r19);
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        virtualinvoke r7.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r3, r8);

     label1:
        $r22 = r5.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: java.util.ArrayList pv>;
        r23 = virtualinvoke $r22.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label5;

        $r24 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();
        r10 = (org.petero.droidfish.gamelogic.Move) $r24;
        if r10 != null goto label3;

        goto label5;

     label3:
        $z3 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: boolean isValid(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move)>(r7, r10);
        if $z3 != 0 goto label4;

        goto label5;

     label4:
        $r25 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $z4 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: boolean access$400(org.petero.droidfish.gamelogic.DroidChessController)>($r25);
        r11 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean)>(r7, r10, 0, $z4);
        $r26 = newarray (java.lang.Object)[1];
        $r26[0] = r11;
        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %s", $r26);
        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        virtualinvoke r7.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r10, r8);
        goto label2;

     label5:
        $r29 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();
        r5.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: java.lang.String pvStr> = $r29;
        goto label0;

     label6:
        $z5 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if r3 == null goto label7;

        $z6 = 1;
        goto label8;

     label7:
        $z6 = 0;

     label8:
        $z7 = $z5 ^ $z6;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: boolean whiteMove> = $z7;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void setSearchInfo(int)>(i0);
        return;
    }

    public void notifyStats(int, long, int, int)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        int i0, i2, i3;
        long l1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter0: int;
        l1 := @parameter1: long;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: long currNodes> = l1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currNps> = i2;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currTime> = i3;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void setSearchInfo(int)>(i0);
        return;
    }

    public void notifyBookInfo(int, java.lang.String, java.util.ArrayList)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        int i0;
        java.lang.String r1;
        java.util.ArrayList r2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.util.ArrayList;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.lang.String bookInfo> = r1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList bookMoves> = r2;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void setSearchInfo(int)>(i0);
        return;
    }

    public void prefsChanged(int, boolean)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        int i0, $i1, $i2;
        boolean z0;
        org.petero.droidfish.gamelogic.Position r1;
        org.petero.droidfish.gamelogic.DroidChessController $r2;
        org.petero.droidfish.gamelogic.Game $r3;
        org.petero.droidfish.gamelogic.Move $r4, $r5, $r7;
        java.util.ArrayList $r6;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        if z0 == 0 goto label1;

        $i1 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int pvInfoSearchId>;
        if i0 != $i1 goto label1;

        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r3 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game access$500(org.petero.droidfish.gamelogic.DroidChessController)>($r2);
        r1 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move currMove>;
        if $r4 == null goto label0;

        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move currMove>;
        $i2 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: int currMoveNr>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void notifyCurrMove(int,org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,int)>(i0, r1, $r5, $i2);

     label0:
        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList pvInfoV>;
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.Move ponderMove>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void notifyPV(int,org.petero.droidfish.gamelogic.Position,java.util.ArrayList,org.petero.droidfish.gamelogic.Move)>(i0, r1, $r6, $r7);
        goto label2;

     label1:
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void setSearchInfo(int)>(i0);

     label2:
        return;
    }

    public void notifySearchResult(int, java.lang.String, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        int i0;
        java.lang.String r1;
        org.petero.droidfish.gamelogic.Move r2;
        java.lang.Thread $r3;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2 $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: org.petero.droidfish.gamelogic.Move;
        $r3 = new java.lang.Thread;
        $r4 = new org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2;
        specialinvoke $r4.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$2: void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener,int,java.lang.String,org.petero.droidfish.gamelogic.Move)>(r0, i0, r1, r2);
        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);
        virtualinvoke $r3.<java.lang.Thread: void start()>();
        return;
    }

    public void notifyEngineName(java.lang.String)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        java.lang.String r1;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3 $r2;
        org.petero.droidfish.gamelogic.DroidChessController $r3;
        org.petero.droidfish.GUIInterface $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r4 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface access$100(org.petero.droidfish.gamelogic.DroidChessController)>($r3);
        $r2 = new org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$3: void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener,java.lang.String)>(r0, r1);
        interfaceinvoke $r4.<org.petero.droidfish.GUIInterface: void runOnUIThread(java.lang.Runnable)>($r2);
        return;
    }

    public void reportEngineError(java.lang.String)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        java.lang.String r1;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4 $r2;
        org.petero.droidfish.gamelogic.DroidChessController $r3;
        org.petero.droidfish.GUIInterface $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: org.petero.droidfish.gamelogic.DroidChessController this$0>;
        $r4 = staticinvoke <org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface access$100(org.petero.droidfish.gamelogic.DroidChessController)>($r3);
        $r2 = new org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener$4: void <init>(org.petero.droidfish.gamelogic.DroidChessController$SearchListener,java.lang.String)>(r0, r1);
        interfaceinvoke $r4.<org.petero.droidfish.GUIInterface: void runOnUIThread(java.lang.Runnable)>($r2);
        return;
    }

    void <init>(org.petero.droidfish.gamelogic.DroidChessController, org.petero.droidfish.gamelogic.DroidChessController$1)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        org.petero.droidfish.gamelogic.DroidChessController r1;
        org.petero.droidfish.gamelogic.DroidChessController$1 r2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        r1 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController;
        r2 := @parameter1: org.petero.droidfish.gamelogic.DroidChessController$1;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void <init>(org.petero.droidfish.gamelogic.DroidChessController)>(r1);
        return;
    }

    static java.util.ArrayList access$200(org.petero.droidfish.gamelogic.DroidChessController$SearchListener)
    {
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: java.util.ArrayList bookMoves>;
        return $r1;
    }
}
public class org.petero.droidfish.gamelogic.DroidChessController extends java.lang.Object
{
    private org.petero.droidfish.engine.DroidComputerPlayer computerPlayer;
    private org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener;
    private org.petero.droidfish.book.BookOptions bookOptions;
    private org.petero.droidfish.EngineOptions engineOptions;
    private org.petero.droidfish.gamelogic.Game game;
    private org.petero.droidfish.gamelogic.Move ponderMove;
    private org.petero.droidfish.GUIInterface gui;
    private org.petero.droidfish.GameMode gameMode;
    private org.petero.droidfish.PGNOptions pgnOptions;
    private java.lang.String engine;
    private int strength;
    private int numPV;
    private int timeControl;
    private int movesPerSession;
    private int timeIncrement;
    private org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener;
    private boolean guiPaused;
    private org.petero.droidfish.gamelogic.Move promoteMove;
    private int searchId;

    public void <init>(org.petero.droidfish.GUIInterface, org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver, org.petero.droidfish.PGNOptions)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.GUIInterface r1;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver r2;
        org.petero.droidfish.PGNOptions r3;
        org.petero.droidfish.book.BookOptions $r4;
        org.petero.droidfish.EngineOptions $r5;
        org.petero.droidfish.GameMode $r6;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r7;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.GUIInterface;
        r2 := @parameter1: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver;
        r3 := @parameter2: org.petero.droidfish.PGNOptions;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer> = null;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener> = null;
        $r4 = new org.petero.droidfish.book.BookOptions;
        specialinvoke $r4.<org.petero.droidfish.book.BookOptions: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.book.BookOptions bookOptions> = $r4;
        $r5 = new org.petero.droidfish.EngineOptions;
        specialinvoke $r5.<org.petero.droidfish.EngineOptions: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.EngineOptions engineOptions> = $r5;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game> = null;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move ponderMove> = null;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String engine> = "";
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int strength> = 1000;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int numPV> = 1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean guiPaused> = 0;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui> = r1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener> = r2;
        $r6 = new org.petero.droidfish.GameMode;
        specialinvoke $r6.<org.petero.droidfish.GameMode: void <init>(int)>(3);
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode> = $r6;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.PGNOptions pgnOptions> = r3;
        $r7 = new org.petero.droidfish.gamelogic.DroidChessController$SearchListener;
        specialinvoke $r7.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void <init>(org.petero.droidfish.gamelogic.DroidChessController,org.petero.droidfish.gamelogic.DroidChessController$1)>(r0, null);
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener> = $r7;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId> = 0;
        return;
    }

    public final synchronized void newGame(org.petero.droidfish.GameMode)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.GameMode r1;
        boolean z0;
        org.petero.droidfish.engine.DroidComputerPlayer $r2, $r3, $r7, $r9, $r11, $r16;
        org.petero.droidfish.GUIInterface $r4;
        android.content.Context $r5;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r6;
        org.petero.droidfish.book.BookOptions $r8;
        org.petero.droidfish.EngineOptions $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r12;
        org.petero.droidfish.gamelogic.Game $r14, $r17;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver $r15;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.GameMode;
        z0 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        if z0 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label0:
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode> = r1;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r2 != null goto label1;

        $r3 = new org.petero.droidfish.engine.DroidComputerPlayer;
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        $r5 = interfaceinvoke $r4.<org.petero.droidfish.GUIInterface: android.content.Context getContext()>();
        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener>;
        specialinvoke $r3.<org.petero.droidfish.engine.DroidComputerPlayer: void <init>(android.content.Context,org.petero.droidfish.gamelogic.SearchListener)>($r5, $r6);
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer> = $r3;
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $r8 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.book.BookOptions bookOptions>;
        virtualinvoke $r7.<org.petero.droidfish.engine.DroidComputerPlayer: void setBookOptions(org.petero.droidfish.book.BookOptions)>($r8);
        $r9 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $r10 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.EngineOptions engineOptions>;
        virtualinvoke $r9.<org.petero.droidfish.engine.DroidComputerPlayer: void setEngineOptions(org.petero.droidfish.EngineOptions)>($r10);

     label1:
        $r11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String engine>;
        virtualinvoke $r11.<org.petero.droidfish.engine.DroidComputerPlayer: void queueStartEngine(int,java.lang.String)>($i0, $r12);
        $i1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $i2 = $i1 + 1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId> = $i2;
        $r14 = new org.petero.droidfish.gamelogic.Game;
        $r15 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        $i3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeControl>;
        $i4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int movesPerSession>;
        $i5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeIncrement>;
        specialinvoke $r14.<org.petero.droidfish.gamelogic.Game: void <init>(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,int,int,int)>($r15, $i3, $i4, $i5);
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game> = $r14;
        $r16 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        virtualinvoke $r16.<org.petero.droidfish.engine.DroidComputerPlayer: void clearTT()>();
        $r17 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setPlayerNames(org.petero.droidfish.gamelogic.Game)>($r17);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGameMode()>();
        return;
    }

    public final synchronized void startGame()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setSelection()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGameMode()>();
        return;
    }

    public final synchronized void setTimeLimit(int, int, int)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0, i1, i2, $i3, $i5, $i6;
        org.petero.droidfish.gamelogic.Game $r1, $r2;
        org.petero.droidfish.gamelogic.TimeControl $r3;
        long $l4, $l7;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeControl> = i0;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int movesPerSession> = i1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeIncrement> = i2;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r3 = $r2.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $i3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeControl>;
        $l4 = (long) $i3;
        $i5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int movesPerSession>;
        $i6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeIncrement>;
        $l7 = (long) $i6;
        virtualinvoke $r3.<org.petero.droidfish.gamelogic.TimeControl: void setTimeControl(long,int,long)>($l4, $i5, $l7);

     label0:
        return;
    }

    public final int[] getTimeLimit()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int[] r1;
        int $i0, $i1, $i2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 = newarray (int)[3];
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeControl>;
        r1[0] = $i0;
        $i1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int movesPerSession>;
        r1[1] = $i1;
        $i2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeIncrement>;
        r1[2] = $i2;
        return r1;
    }

    public final synchronized void setGuiPaused(boolean)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        boolean z0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        z0 := @parameter0: boolean;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean guiPaused> = z0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGameMode()>();
        return;
    }

    public final synchronized void setGameMode(org.petero.droidfish.GameMode)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.GameMode r1, $r2, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.petero.droidfish.gamelogic.Game $r3, $r8;
        org.petero.droidfish.gamelogic.Position $r4;
        int $i0, $i1;
        org.petero.droidfish.GUIInterface $r9;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.GameMode;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z0 = virtualinvoke $r2.<org.petero.droidfish.GameMode: boolean equals(java.lang.Object)>(r1);
        if $z0 != 0 goto label3;

        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z1 = $r4.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $z2 = virtualinvoke r1.<org.petero.droidfish.GameMode: boolean humansTurn(boolean)>($z1);
        if $z2 == 0 goto label0;

        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $i1 = $i0 + 1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId> = $i1;

     label0:
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode> = r1;
        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z3 = virtualinvoke $r6.<org.petero.droidfish.GameMode: boolean playerWhite()>();
        if $z3 == 0 goto label1;

        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z4 = virtualinvoke $r7.<org.petero.droidfish.GameMode: boolean playerBlack()>();
        if $z4 != 0 goto label2;

     label1:
        $r8 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setPlayerNames(org.petero.droidfish.gamelogic.Game)>($r8);

     label2:
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGameMode()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        $r9 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r9.<org.petero.droidfish.GUIInterface: void updateEngineTitle()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label3:
        return;
    }

    public org.petero.droidfish.GameMode getGameMode()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.GameMode $r1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        return $r1;
    }

    public final boolean analysisMode()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.GameMode $r1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z0 = virtualinvoke $r1.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        return $z0;
    }

    public final synchronized void setBookOptions(org.petero.droidfish.book.BookOptions)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.book.BookOptions r1, $r2, $r5;
        boolean $z0;
        org.petero.droidfish.engine.DroidComputerPlayer $r3, $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.book.BookOptions;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.book.BookOptions bookOptions>;
        $z0 = virtualinvoke $r2.<org.petero.droidfish.book.BookOptions: boolean equals(java.lang.Object)>(r1);
        if $z0 != 0 goto label0;

        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.book.BookOptions bookOptions> = r1;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r3 == null goto label0;

        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.book.BookOptions bookOptions>;
        virtualinvoke $r4.<org.petero.droidfish.engine.DroidComputerPlayer: void setBookOptions(org.petero.droidfish.book.BookOptions)>($r5);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateBookHints()>();

     label0:
        return;
    }

    public final synchronized void setEngineOptions(org.petero.droidfish.EngineOptions, boolean)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.EngineOptions r1, $r2, $r5;
        boolean z0, $z1;
        org.petero.droidfish.engine.DroidComputerPlayer $r3, $r4;
        org.petero.droidfish.gamelogic.Game $r6;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.EngineOptions;
        z0 := @parameter1: boolean;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.EngineOptions engineOptions>;
        $z1 = virtualinvoke $r2.<org.petero.droidfish.EngineOptions: boolean equals(java.lang.Object)>(r1);
        if $z1 != 0 goto label1;

        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.EngineOptions engineOptions> = r1;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r3 == null goto label0;

        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.EngineOptions engineOptions>;
        virtualinvoke $r4.<org.petero.droidfish.engine.DroidComputerPlayer: void setEngineOptions(org.petero.droidfish.EngineOptions)>($r5);

     label0:
        if z0 == 0 goto label1;

        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        if $r6 == null goto label1;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label1:
        return;
    }

    public final synchronized void setEngineStrength(java.lang.String, int)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        java.lang.String r1, $r2;
        int i0, $i1;
        boolean z0, $z1, $z2;
        org.petero.droidfish.gamelogic.Game $r3;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String engine>;
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z1 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        z0 = $z2;
        if z0 == 0 goto label2;

        r0.<org.petero.droidfish.gamelogic.DroidChessController: int numPV> = 1;

     label2:
        if z0 != 0 goto label3;

        $i1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int strength>;
        if i0 == $i1 goto label4;

     label3:
        r0.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String engine> = r1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int strength> = i0;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        if $r3 == null goto label4;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label4:
        return;
    }

    public final synchronized java.lang.String getEngine()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        java.lang.String $r1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String engine>;
        return $r1;
    }

    public final synchronized void prefsChanged(boolean)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        boolean z0;
        org.petero.droidfish.gamelogic.Game $r1, $r2;
        org.petero.droidfish.gamelogic.GameTree $r3;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r4;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        z0 := @parameter0: boolean;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        if $r1 != null goto label0;

        z0 = 0;

     label0:
        if z0 == 0 goto label1;

        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r3 = $r2.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r3.<org.petero.droidfish.gamelogic.GameTree: void translateMoves()>();

     label1:
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateBookHints()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateMoveList()>();
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener>;
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void prefsChanged(int,boolean)>($i0, z0);
        if z0 == 0 goto label2;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label2:
        return;
    }

    public final synchronized void fromByteArray(byte[])
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        byte[] r1;
        org.petero.droidfish.gamelogic.Game $r2, $r3;
        org.petero.droidfish.gamelogic.GameTree $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: byte[];
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.Game: void fromByteArray(byte[])>(r1);
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.GameTree: void translateMoves()>();
        return;
    }

    public final synchronized byte[] toByteArray()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1;
        org.petero.droidfish.gamelogic.GameTree $r2;
        byte[] $r3;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r3 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.GameTree: byte[] toByteArray()>();
        return $r3;
    }

    public final synchronized java.lang.String getFEN()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1;
        org.petero.droidfish.gamelogic.GameTree $r2;
        org.petero.droidfish.gamelogic.Position $r3;
        java.lang.String $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r3 = $r2.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $r4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String toFEN(org.petero.droidfish.gamelogic.Position)>($r3);
        return $r4;
    }

    public final synchronized java.lang.String getPGN()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1;
        org.petero.droidfish.gamelogic.GameTree $r2;
        org.petero.droidfish.PGNOptions $r3;
        java.lang.String $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.PGNOptions pgnOptions>;
        $r4 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.GameTree: java.lang.String toPGN(org.petero.droidfish.PGNOptions)>($r3);
        return $r4;
    }

    public final synchronized void setFENOrPGN(java.lang.String) throws org.petero.droidfish.gamelogic.ChessParseError
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        java.lang.String r1;
        org.petero.droidfish.gamelogic.Game $r2, r3;
        org.petero.droidfish.gamelogic.Position r4;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver $r5, $r11;
        int $i0, $i1, $i2, $i3, $i4;
        org.petero.droidfish.gamelogic.ChessParseError $r6, r7;
        org.petero.droidfish.PGNOptions $r8;
        boolean $z0;
        org.petero.droidfish.gamelogic.GameTree $r9;
        org.petero.droidfish.engine.DroidComputerPlayer $r12;
        org.petero.droidfish.GUIInterface $r13;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.petero.droidfish.gamelogic.Game;
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeControl>;
        $i1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int movesPerSession>;
        $i2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int timeIncrement>;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.Game: void <init>(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,int,int,int)>($r5, $i0, $i1, $i2);
        r3 = $r2;

     label0:
        r4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>(r1);
        virtualinvoke r3.<org.petero.droidfish.gamelogic.Game: void setPos(org.petero.droidfish.gamelogic.Position)>(r4);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setPlayerNames(org.petero.droidfish.gamelogic.Game)>(r3);

     label1:
        goto label4;

     label2:
        $r6 := @caughtexception;
        r7 = $r6;
        $r8 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.PGNOptions pgnOptions>;
        $z0 = virtualinvoke r3.<org.petero.droidfish.gamelogic.Game: boolean readPGN(java.lang.String,org.petero.droidfish.PGNOptions)>(r1, $r8);
        if $z0 != 0 goto label3;

        throw r7;

     label3:
        $r9 = r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r9.<org.petero.droidfish.gamelogic.GameTree: void translateMoves()>();

     label4:
        $i3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $i4 = $i3 + 1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId> = $i4;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game> = r3;
        $r11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        interfaceinvoke $r11.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void clear()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGameMode()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        virtualinvoke $r12.<org.petero.droidfish.engine.DroidComputerPlayer: void clearTT()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        $r13 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r13.<org.petero.droidfish.GUIInterface: void setSelection(int)>(-1);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        return;

        catch org.petero.droidfish.gamelogic.ChessParseError from label0 to label1 with label2;
    }

    public final synchronized boolean humansTurn()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1, $r3;
        org.petero.droidfish.GameMode $r2;
        org.petero.droidfish.gamelogic.Position $r4;
        boolean $z0, $z1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        if $r1 != null goto label0;

        return 0;

     label0:
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z0 = $r4.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $z1 = virtualinvoke $r2.<org.petero.droidfish.GameMode: boolean humansTurn(boolean)>($z0);
        return $z1;
    }

    public final synchronized boolean computerBusy()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.engine.DroidComputerPlayer $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $z0 = virtualinvoke $r2.<org.petero.droidfish.engine.DroidComputerPlayer: boolean computerBusy()>();
        if $z0 == 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        return $z1;
    }

    public final synchronized void makeHumanMove(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Move r1, $r6;
        org.petero.droidfish.gamelogic.Position r2, $r3, $r5;
        boolean $z0, $z1, $z2, $z3;
        org.petero.droidfish.gamelogic.Game $r4;
        org.petero.droidfish.GameMode $r7;
        org.petero.droidfish.engine.DroidComputerPlayer $r8, $r11;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType $r9, $r10;
        int $i0;
        org.petero.droidfish.GUIInterface $r12;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z0 == 0 goto label3;

        $r3 = new org.petero.droidfish.gamelogic.Position;
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r5 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        specialinvoke $r3.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r5);
        r2 = $r3;
        $z1 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean doMove(org.petero.droidfish.gamelogic.Move)>(r1);
        if $z1 == 0 goto label2;

        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move ponderMove>;
        $z2 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Move: boolean equals(java.lang.Object)>($r6);
        if $z2 == 0 goto label0;

        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z3 = virtualinvoke $r7.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        if $z3 != 0 goto label0;

        $r8 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $r9 = virtualinvoke $r8.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchType getSearchType()>();
        $r10 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType PONDER>;
        if $r9 != $r10 goto label0;

        $r11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        virtualinvoke $r11.<org.petero.droidfish.engine.DroidComputerPlayer: void ponderHit(int)>($i0);
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move ponderMove> = null;
        goto label1;

     label0:
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();

     label1:
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setAnimMove(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean)>(r2, r1, 1);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        goto label3;

     label2:
        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r12.<org.petero.droidfish.GUIInterface: void setSelection(int)>(-1);

     label3:
        return;
    }

    public final synchronized void reportPromotePiece(int)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0;
        boolean z0;
        byte b1, $b2, $b3, $b4, $b5;
        org.petero.droidfish.gamelogic.Move r1, $r2, $r5;
        org.petero.droidfish.gamelogic.Game $r3;
        org.petero.droidfish.gamelogic.Position $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter0: int;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move promoteMove>;
        if $r2 != null goto label0;

        return;

     label0:
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        z0 = $r4.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label7;
            default: goto label10;
        };

     label1:
        if z0 == 0 goto label2;

        $b2 = 3;
        goto label3;

     label2:
        $b2 = 9;

     label3:
        b1 = $b2;
        goto label13;

     label4:
        if z0 == 0 goto label5;

        $b3 = 4;
        goto label6;

     label5:
        $b3 = 10;

     label6:
        b1 = $b3;
        goto label13;

     label7:
        if z0 == 0 goto label8;

        $b4 = 5;
        goto label9;

     label8:
        $b4 = 11;

     label9:
        b1 = $b4;
        goto label13;

     label10:
        if z0 == 0 goto label11;

        $b5 = 2;
        goto label12;

     label11:
        $b5 = 8;

     label12:
        b1 = $b5;

     label13:
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move promoteMove>;
        $r5.<org.petero.droidfish.gamelogic.Move: int promoteTo> = b1;
        r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move promoteMove>;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move promoteMove> = null;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void makeHumanMove(org.petero.droidfish.gamelogic.Move)>(r1);
        return;
    }

    public final synchronized void makeHumanNullMove()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0;
        boolean $z0;
        org.petero.droidfish.gamelogic.Game $r1, $r3;
        org.petero.droidfish.gamelogic.GameTree $r2, $r4;
        org.petero.droidfish.GUIInterface $r5;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z0 == 0 goto label0;

        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        i0 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.GameTree: int addMove(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>("--", "", 0, "", "");
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(i0);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r5.<org.petero.droidfish.GUIInterface: void setSelection(int)>(-1);

     label0:
        return;
    }

    public final synchronized boolean claimDrawIfPossible()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $z0 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean findValidDrawClaim()>();
        if $z0 != 0 goto label0;

        return 0;

     label0:
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        return 1;
    }

    public final synchronized void resignGame()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game$GameState $r1, $r3;
        org.petero.droidfish.gamelogic.Game $r2, $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r3 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $r1 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if $r3 != $r1 goto label0;

        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.Game: boolean processString(java.lang.String)>("resign");
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label0:
        return;
    }

    public final synchronized void undoMove()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        boolean z0;
        org.petero.droidfish.gamelogic.Game $r1, $r3, $r5;
        org.petero.droidfish.gamelogic.Move $r2, $r6;
        org.petero.droidfish.gamelogic.Position $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r2 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Move getLastMove()>();
        if $r2 == null goto label1;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        z0 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean undoMoveNoUpdate()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setSelection()>();
        if z0 == 0 goto label0;

        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r6 = virtualinvoke $r5.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Move getNextMove()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setAnimMove(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean)>($r4, $r6, 0);

     label0:
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label1:
        return;
    }

    public final synchronized void redoMove()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1, $r2, $r4;
        boolean $z0;
        org.petero.droidfish.gamelogic.Position $r3;
        org.petero.droidfish.gamelogic.Move $r5;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $z0 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: boolean canRedoMove()>();
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void redoMoveNoUpdate()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setSelection()>();
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r3 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position prevPos()>();
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r5 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Move getLastMove()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setAnimMove(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean)>($r3, $r5, 1);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label0:
        return;
    }

    public final synchronized void gotoMove(int)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12, i14, $i15, $i16, i18;
        boolean z0, $z1, $z3, $z4, $z5;
        org.petero.droidfish.gamelogic.Game $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.petero.droidfish.gamelogic.Position $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;
        byte $b6, $b9, $b13, $b17;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter0: int;
        z0 = 0;

     label0:
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r2 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $i3 = $r2.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        if $i3 <= i0 goto label6;

        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $i4 = $r4.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $i5 = $i4 * 2;
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r6 = virtualinvoke $r5.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z1 = $r6.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z1 == 0 goto label1;

        $b6 = 0;
        goto label2;

     label1:
        $b6 = 1;

     label2:
        i1 = $i5 + $b6;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean undoMoveNoUpdate()>();
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r8 = virtualinvoke $r7.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $i7 = $r8.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $i8 = $i7 * 2;
        $r9 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r10 = virtualinvoke $r9.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z3 = $r10.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z3 == 0 goto label3;

        $b9 = 0;
        goto label4;

     label3:
        $b9 = 1;

     label4:
        i2 = $i8 + $b9;
        if i2 < i1 goto label5;

        goto label6;

     label5:
        z0 = 1;
        goto label0;

     label6:
        $r11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r12 = virtualinvoke $r11.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $i10 = $r12.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        if $i10 >= i0 goto label12;

        $r13 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r14 = virtualinvoke $r13.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $i11 = $r14.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $i12 = $i11 * 2;
        $r15 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r16 = virtualinvoke $r15.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z4 = $r16.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z4 == 0 goto label7;

        $b13 = 0;
        goto label8;

     label7:
        $b13 = 1;

     label8:
        i14 = $i12 + $b13;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void redoMoveNoUpdate()>();
        $r17 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r18 = virtualinvoke $r17.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $i15 = $r18.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $i16 = $i15 * 2;
        $r19 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r20 = virtualinvoke $r19.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z5 = $r20.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z5 == 0 goto label9;

        $b17 = 0;
        goto label10;

     label9:
        $b17 = 1;

     label10:
        i18 = $i16 + $b17;
        if i18 > i14 goto label11;

        goto label12;

     label11:
        z0 = 1;
        goto label6;

     label12:
        if z0 == 0 goto label13;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setSelection()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label13:
        return;
    }

    public final synchronized void gotoStartOfVariation()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        boolean z0, $z1;
        org.petero.droidfish.gamelogic.Game $r1;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        z0 = 0;

     label0:
        $z1 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean undoMoveNoUpdate()>();
        if $z1 != 0 goto label1;

        goto label2;

     label1:
        z0 = 1;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $i0 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: int numVariations()>();
        if $i0 <= 1 goto label0;

        goto label2;

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setSelection()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label3:
        return;
    }

    public final synchronized void goNode(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1;
        org.petero.droidfish.gamelogic.Game $r2, $r3, $r5, $r6;
        boolean $z0, $z1, $z2;
        org.petero.droidfish.gamelogic.Move $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        if r1 != null goto label0;

        return;

     label0:
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $z0 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.Game: boolean goNode(org.petero.droidfish.gamelogic.GameTree$Node)>(r1);
        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z1 != 0 goto label2;

        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Move getLastMove()>();
        if $r4 == null goto label2;

        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.Game: void undoMove()>();
        $z2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z2 != 0 goto label2;

        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r6.<org.petero.droidfish.gamelogic.Game: void redoMove()>();

     label2:
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setSelection()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        return;
    }

    public final synchronized int numVariations()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $i0 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: int numVariations()>();
        return $i0;
    }

    public final synchronized int currVariation()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $i0 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: int currVariation()>();
        return $i0;
    }

    public final synchronized void changeVariation(int)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0, $i1;
        org.petero.droidfish.gamelogic.Game $r1, $r2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $i1 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: int numVariations()>();
        if $i1 <= 1 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.Game: void changeVariation(int)>(i0);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setSelection()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label0:
        return;
    }

    public final synchronized void removeSubTree()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: void removeSubTree()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setSelection()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        return;
    }

    public final synchronized void moveVariation(int)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0, $i1;
        org.petero.droidfish.gamelogic.Game $r1, $r2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $i1 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: int numVariations()>();
        if $i1 <= 1 goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.Game: void moveVariation(int)>(i0);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label0:
        return;
    }

    public final synchronized void addVariation(java.lang.String, java.util.List, boolean)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        java.lang.String r1, r4, r5, $r7;
        java.util.List r2;
        boolean z0;
        int i0, i1, $i2, i3, $i4;
        org.petero.droidfish.gamelogic.Move r3;
        java.lang.Object $r6;
        org.petero.droidfish.gamelogic.Game $r8, $r10, $r12;
        org.petero.droidfish.gamelogic.GameTree $r9, $r11, $r13;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver $r14;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.List;
        z0 := @parameter2: boolean;
        i0 = 0;

     label0:
        $i2 = interfaceinvoke r2.<java.util.List: int size()>();
        if i0 >= $i2 goto label3;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);
        r3 = (org.petero.droidfish.gamelogic.Move) $r6;
        r4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>(r3);
        if i0 != 0 goto label1;

        $r7 = r1;
        goto label2;

     label1:
        $r7 = "";

     label2:
        r5 = $r7;
        $r8 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r9 = $r8.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        i1 = virtualinvoke $r9.<org.petero.droidfish.gamelogic.GameTree: int addMove(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>(r4, "", 0, r5, "");
        $r10 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r11 = $r10.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r11.<org.petero.droidfish.gamelogic.GameTree: void goForward(int,boolean)>(i1, z0);
        i0 = i0 + 1;
        goto label0;

     label3:
        i3 = 0;

     label4:
        $i4 = interfaceinvoke r2.<java.util.List: int size()>();
        if i3 >= $i4 goto label5;

        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r13 = $r12.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r13.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        i3 = i3 + 1;
        goto label4;

     label5:
        $r14 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        interfaceinvoke $r14.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void clear()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        return;
    }

    public final synchronized void updateRemainingTime()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        long l0, l1, l2, l3, l4, $l7, l8;
        org.petero.droidfish.gamelogic.Game $r1, $r3, $r5, $r7;
        org.petero.droidfish.gamelogic.TimeControl $r2, $r4, $r6;
        int $i5, $i6;
        boolean $z0, $z1;
        org.petero.droidfish.gamelogic.Position $r8;
        byte $b9;
        org.petero.droidfish.GUIInterface $r9;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $i5 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.TimeControl: int getRemainingTime(boolean,long)>(1, l0);
        l1 = (long) $i5;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $i6 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.TimeControl: int getRemainingTime(boolean,long)>(0, l0);
        l2 = (long) $i6;
        l3 = 0L;
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r6 = $r5.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $z0 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.TimeControl: boolean clockRunning()>();
        if $z0 == 0 goto label3;

        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r8 = virtualinvoke $r7.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z1 = $r8.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z1 == 0 goto label0;

        $l7 = l1;
        goto label1;

     label0:
        $l7 = l2;

     label1:
        l4 = $l7;
        l8 = l4 % 1000L;
        $b9 = l8 cmp 0L;
        if $b9 >= 0 goto label2;

        l8 = l8 + 1000L;

     label2:
        l3 = l8 + 1L;

     label3:
        $r9 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r9.<org.petero.droidfish.GUIInterface: void setRemainingTime(long,long,long)>(l1, l2, l3);
        return;
    }

    public final synchronized int maxPV()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.engine.DroidComputerPlayer $r1, $r2;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r1 != null goto label0;

        return 1;

     label0:
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $i0 = virtualinvoke $r2.<org.petero.droidfish.engine.DroidComputerPlayer: int getMaxPV()>();
        return $i0;
    }

    public final synchronized int getNumPV()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int numPV>;
        return $i0;
    }

    public final synchronized void setMultiPVMode(int)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0, $i1, $i2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter0: int;
        if i0 >= 1 goto label0;

        i0 = 1;

     label0:
        $i1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: int maxPV()>();
        if i0 <= $i1 goto label1;

        i0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: int maxPV()>();

     label1:
        $i2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int numPV>;
        if i0 == $i2 goto label2;

        r0.<org.petero.droidfish.gamelogic.DroidChessController: int numPV> = i0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label2:
        return;
    }

    public final synchronized void stopSearch()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        boolean $z0;
        org.petero.droidfish.engine.DroidComputerPlayer $r1, $r2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z0 != 0 goto label0;

        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        virtualinvoke $r2.<org.petero.droidfish.engine.DroidComputerPlayer: void moveNow()>();

     label0:
        return;
    }

    public final synchronized void stopPonder()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType $r1, $r4;
        boolean z0, $z1;
        org.petero.droidfish.engine.DroidComputerPlayer $r2, $r3;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $z1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z1 == 0 goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r2 == null goto label0;

        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $r4 = virtualinvoke $r3.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchType getSearchType()>();
        $r1 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType PONDER>;
        if $r4 != $r1 goto label0;

        z0 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        if z0 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();

     label0:
        return;
    }

    public final synchronized void shutdownEngine()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.GameMode $r1;
        org.petero.droidfish.engine.DroidComputerPlayer $r2;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = new org.petero.droidfish.GameMode;
        specialinvoke $r1.<org.petero.droidfish.GameMode: void <init>(int)>(3);
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode> = $r1;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean abortSearch()>();
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        virtualinvoke $r2.<org.petero.droidfish.engine.DroidComputerPlayer: void shutdownEngine()>();
        return;
    }

    public final synchronized void getHeaders(java.util.Map)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        java.util.Map r1;
        org.petero.droidfish.gamelogic.Game $r2, $r3;
        org.petero.droidfish.gamelogic.GameTree $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: java.util.Map;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        if $r2 == null goto label0;

        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.GameTree: void getHeaders(java.util.Map)>(r1);

     label0:
        return;
    }

    public final synchronized void setHeaders(java.util.Map)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        java.util.Map r1;
        org.petero.droidfish.gamelogic.Game $r2;
        org.petero.droidfish.gamelogic.GameTree $r3;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: java.util.Map;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r3 = $r2.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r3.<org.petero.droidfish.gamelogic.GameTree: void setHeaders(java.util.Map)>(r1);
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        interfaceinvoke $r4.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void clear()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        return;
    }

    public final synchronized org.petero.droidfish.gamelogic.DroidChessController$CommentInfo getComments()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1;
        org.petero.droidfish.gamelogic.DroidChessController$CommentInfo r2, $r5;
        org.petero.droidfish.gamelogic.Game $r3;
        org.petero.droidfish.gamelogic.GameTree $r4;
        java.lang.String $r6, $r7, $r8;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        r1 = $r4.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r5 = new org.petero.droidfish.gamelogic.DroidChessController$CommentInfo;
        specialinvoke $r5.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: void <init>()>();
        r2 = $r5;
        $r6 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStrLocal>;
        r2.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String move> = $r6;
        $r7 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment>;
        r2.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String preComment> = $r7;
        $r8 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment>;
        r2.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String postComment> = $r8;
        $i0 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: int nag>;
        r2.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: int nag> = $i0;
        return r2;
    }

    public final synchronized void setComments(org.petero.droidfish.gamelogic.DroidChessController$CommentInfo)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.DroidChessController$CommentInfo r1;
        org.petero.droidfish.gamelogic.GameTree$Node r2;
        org.petero.droidfish.gamelogic.Game $r3;
        org.petero.droidfish.gamelogic.GameTree $r4;
        java.lang.String $r5, $r6;
        int $i0;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver $r7;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController$CommentInfo;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        r2 = $r4.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r5 = r1.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String preComment>;
        r2.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment> = $r5;
        $r6 = r1.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: java.lang.String postComment>;
        r2.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment> = $r6;
        $i0 = r1.<org.petero.droidfish.gamelogic.DroidChessController$CommentInfo: int nag>;
        r2.<org.petero.droidfish.gamelogic.GameTree$Node: int nag> = $i0;
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        interfaceinvoke $r7.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void clear()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        return;
    }

    private final boolean localPt()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.PGNOptions $r1;
        org.petero.droidfish.PGNOptions$Viewer $r2;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.PGNOptions pgnOptions>;
        $r2 = $r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $i0 = $r2.<org.petero.droidfish.PGNOptions$Viewer: int pieceType>;
        tableswitch($i0)
        {
            case 0: goto label0;
            case 1: goto label1;
            case 2: goto label1;
            default: goto label1;
        };

     label0:
        return 0;

     label1:
        return 1;
    }

    private final boolean abortSearch()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int $i0, $i1, $i2;
        org.petero.droidfish.engine.DroidComputerPlayer $r2, $r3;
        boolean $z0;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move ponderMove> = null;
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $i1 = $i0 + 1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId> = $i1;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r2 != null goto label0;

        return 0;

     label0:
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $z0 = virtualinvoke $r3.<org.petero.droidfish.engine.DroidComputerPlayer: boolean stopSearch()>();
        if $z0 == 0 goto label1;

        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener>;
        $i2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void clearSearchInfo(int)>($i2);
        return 1;

     label1:
        return 0;
    }

    private final void updateBookHints()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Pair r1;
        boolean $z0, $z1;
        org.petero.droidfish.engine.DroidComputerPlayer $r2;
        org.petero.droidfish.gamelogic.Game $r3;
        org.petero.droidfish.gamelogic.Position $r4;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r5;
        int $i0;
        java.lang.Object $r6, $r8;
        java.lang.String $r7;
        java.util.ArrayList $r9;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z0 == 0 goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r4 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z1 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean localPt()>();
        r1 = virtualinvoke $r2.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.gamelogic.Pair getBookHints(org.petero.droidfish.gamelogic.Position,boolean)>($r4, $z1);
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener>;
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $r6 = r1.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        $r7 = (java.lang.String) $r6;
        $r8 = r1.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        $r9 = (java.util.ArrayList) $r8;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void notifyBookInfo(int,java.lang.String,java.util.ArrayList)>($i0, $r7, $r9);

     label0:
        return;
    }

    private final void updateGameMode()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.petero.droidfish.gamelogic.Game$AddMoveBehavior r1;
        org.petero.droidfish.gamelogic.Game $r2, $r4, $r7;
        org.petero.droidfish.GameMode $r3, $r6;
        org.petero.droidfish.GUIInterface $r5;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        if $r2 == null goto label6;

        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z1 = virtualinvoke $r3.<org.petero.droidfish.GameMode: boolean clocksActive()>();
        if $z1 == 0 goto label0;

        $z2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z2 == 0 goto label1;

        $z3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean guiPaused>;
        if $z3 == 0 goto label1;

     label0:
        $z4 = 1;
        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.Game: void setGamePaused(boolean)>(z0);
        virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateRemainingTime()>();
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        $z5 = interfaceinvoke $r5.<org.petero.droidfish.GUIInterface: boolean discardVariations()>();
        if $z5 == 0 goto label3;

        r1 = <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior REPLACE>;
        goto label5;

     label3:
        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z6 = virtualinvoke $r6.<org.petero.droidfish.GameMode: boolean clocksActive()>();
        if $z6 == 0 goto label4;

        r1 = <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior ADD_FIRST>;
        goto label5;

     label4:
        r1 = <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior ADD_LAST>;

     label5:
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r7.<org.petero.droidfish.gamelogic.Game: void setAddFirst(org.petero.droidfish.gamelogic.Game$AddMoveBehavior)>(r1);

     label6:
        return;
    }

    private final void updateComputeThreads()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game$GameState $r1, $r9;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12, $z13, $z14, $z15, $z16;
        org.petero.droidfish.gamelogic.Pair r2, r30;
        org.petero.droidfish.gamelogic.Position $r3, $r18, $r22, $r31, $r33, r34, $r47;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest r4, r6;
        long l0;
        int i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        org.petero.droidfish.gamelogic.Move r5, $r12, $r45;
        org.petero.droidfish.gamelogic.Game $r7, $r16, $r21, $r23, $r29, $r32, $r35, $r37, $r39, $r41, $r43, $r50;
        org.petero.droidfish.gamelogic.GameTree $r8;
        org.petero.droidfish.GameMode $r10;
        org.petero.droidfish.GUIInterface $r11, $r25, $r51, $r53;
        org.petero.droidfish.engine.DroidComputerPlayer $r13, $r15, $r26, $r54, $r55;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r14, $r27, $r28;
        java.lang.Object $r17, $r19, $r46, $r48;
        java.util.ArrayList $r20, $r49;
        java.lang.String $r24, $r52, $r56;
        org.petero.droidfish.gamelogic.TimeControl $r36, $r38, $r40, $r42, $r44;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r8 = $r7.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r9 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $r1 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if $r9 != $r1 goto label0;

        $z4 = 1;
        goto label1;

     label0:
        $z4 = 0;

     label1:
        z0 = $z4;
        $r10 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z5 = virtualinvoke $r10.<org.petero.droidfish.GameMode: boolean analysisMode()>();
        if $z5 == 0 goto label2;

        if z0 == 0 goto label2;

        $z6 = 1;
        goto label3;

     label2:
        $z6 = 0;

     label3:
        z1 = $z6;
        $z7 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z7 != 0 goto label4;

        if z0 == 0 goto label4;

        $z8 = 1;
        goto label5;

     label4:
        $z8 = 0;

     label5:
        z2 = $z8;
        $r11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        $z9 = interfaceinvoke $r11.<org.petero.droidfish.GUIInterface: boolean ponderMode()>();
        if $z9 == 0 goto label6;

        if z1 != 0 goto label6;

        if z2 != 0 goto label6;

        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move ponderMove>;
        if $r12 == null goto label6;

        if z0 == 0 goto label6;

        $z10 = 1;
        goto label7;

     label6:
        $z10 = 0;

     label7:
        z3 = $z10;
        if z1 != 0 goto label8;

        if z2 != 0 goto label8;

        if z3 != 0 goto label8;

        $r13 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        virtualinvoke $r13.<org.petero.droidfish.engine.DroidComputerPlayer: boolean stopSearch()>();

     label8:
        $r14 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener>;
        $i5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        virtualinvoke $r14.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void clearSearchInfo(int)>($i5);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateBookHints()>();
        $r15 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $i6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $z12 = virtualinvoke $r15.<org.petero.droidfish.engine.DroidComputerPlayer: boolean sameSearchId(int)>($i6);
        if $z12 != 0 goto label15;

        if z1 == 0 goto label9;

        $r16 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        r2 = virtualinvoke $r16.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Pair getUCIHistory()>();
        $i7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $r17 = r2.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        $r18 = (org.petero.droidfish.gamelogic.Position) $r17;
        $r19 = r2.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        $r20 = (java.util.ArrayList) $r19;
        $r3 = new org.petero.droidfish.gamelogic.Position;
        $r21 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r22 = virtualinvoke $r21.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        specialinvoke $r3.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r22);
        $r23 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $z13 = virtualinvoke $r23.<org.petero.droidfish.gamelogic.Game: boolean haveDrawOffer()>();
        $r24 = r0.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String engine>;
        $r25 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        $i8 = interfaceinvoke $r25.<org.petero.droidfish.GUIInterface: int engineThreads()>();
        $i9 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int numPV>;
        r4 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest analyzeRequest(int,org.petero.droidfish.gamelogic.Position,java.util.ArrayList,org.petero.droidfish.gamelogic.Position,boolean,java.lang.String,int,int)>($i7, $r18, $r20, $r3, $z13, $r24, $i8, $i9);
        $r26 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        virtualinvoke $r26.<org.petero.droidfish.engine.DroidComputerPlayer: void queueAnalyzeRequest(org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest)>(r4);
        goto label15;

     label9:
        if z2 != 0 goto label10;

        if z3 == 0 goto label14;

     label10:
        $r27 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener>;
        $i10 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        virtualinvoke $r27.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void clearSearchInfo(int)>($i10);
        $r28 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener>;
        $i11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        virtualinvoke $r28.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void notifyBookInfo(int,java.lang.String,java.util.ArrayList)>($i11, "", null);
        $r29 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        r30 = virtualinvoke $r29.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Pair getUCIHistory()>();
        $r31 = new org.petero.droidfish.gamelogic.Position;
        $r32 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r33 = virtualinvoke $r32.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        specialinvoke $r31.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r33);
        r34 = $r31;
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $r35 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r36 = $r35.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        i1 = virtualinvoke $r36.<org.petero.droidfish.gamelogic.TimeControl: int getRemainingTime(boolean,long)>(1, l0);
        $r37 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r38 = $r37.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        i2 = virtualinvoke $r38.<org.petero.droidfish.gamelogic.TimeControl: int getRemainingTime(boolean,long)>(0, l0);
        $r39 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r40 = $r39.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        i3 = virtualinvoke $r40.<org.petero.droidfish.gamelogic.TimeControl: int getIncrement()>();
        $r41 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r42 = $r41.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        i4 = virtualinvoke $r42.<org.petero.droidfish.gamelogic.TimeControl: int getMovesToTC()>();
        if z3 == 0 goto label11;

        $z14 = r34.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z14 != 0 goto label11;

        if i4 <= 0 goto label11;

        i4 = i4 + -1;
        if i4 > 0 goto label11;

        $r43 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r44 = $r43.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $i12 = virtualinvoke $r44.<org.petero.droidfish.gamelogic.TimeControl: int getMovesPerSession()>();
        i4 = i4 + $i12;

     label11:
        if z3 == 0 goto label12;

        $r45 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move ponderMove>;
        goto label13;

     label12:
        $r45 = null;

     label13:
        r5 = $r45;
        $i13 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $r46 = r30.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        $r47 = (org.petero.droidfish.gamelogic.Position) $r46;
        $r48 = r30.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        $r49 = (java.util.ArrayList) $r48;
        $r50 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $z15 = virtualinvoke $r50.<org.petero.droidfish.gamelogic.Game: boolean haveDrawOffer()>();
        $r51 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        $z16 = interfaceinvoke $r51.<org.petero.droidfish.GUIInterface: boolean ponderMode()>();
        $r52 = r0.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String engine>;
        $r53 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        $i14 = interfaceinvoke $r53.<org.petero.droidfish.GUIInterface: int engineThreads()>();
        $i15 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int strength>;
        r6 = staticinvoke <org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest: org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest searchRequest(int,long,org.petero.droidfish.gamelogic.Position,java.util.ArrayList,org.petero.droidfish.gamelogic.Position,boolean,int,int,int,int,boolean,org.petero.droidfish.gamelogic.Move,java.lang.String,int,int)>($i13, l0, $r47, $r49, r34, $z15, i1, i2, i3, i4, $z16, r5, $r52, $i14, $i15);
        $r54 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        virtualinvoke $r54.<org.petero.droidfish.engine.DroidComputerPlayer: void queueSearchRequest(org.petero.droidfish.engine.DroidComputerPlayer$SearchRequest)>(r6);
        goto label15;

     label14:
        $r55 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        $i16 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $r56 = r0.<org.petero.droidfish.gamelogic.DroidChessController: java.lang.String engine>;
        virtualinvoke $r55.<org.petero.droidfish.engine.DroidComputerPlayer: void queueStartEngine(int,java.lang.String)>($i16, $r56);

     label15:
        return;
    }

    private final synchronized void makeComputerMove(int, java.lang.String, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r1;
        org.petero.droidfish.gamelogic.Move r2, $r12;
        org.petero.droidfish.gamelogic.Position r3, $r5, $r7;
        org.petero.droidfish.gamelogic.Game $r6, $r8, $r11;
        org.petero.droidfish.GUIInterface $r9;
        org.petero.droidfish.gamelogic.DroidChessController$SearchListener $r10;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: org.petero.droidfish.gamelogic.Move;
        $i1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        if $i1 == i0 goto label0;

        return;

     label0:
        $i2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $i3 = $i2 + 1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId> = $i3;
        $r5 = new org.petero.droidfish.gamelogic.Position;
        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r7 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        specialinvoke $r5.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r7);
        r3 = $r5;
        $r8 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.Game: boolean processString(java.lang.String)>(r1);
        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move ponderMove> = r2;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGameMode()>();
        $r9 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r9.<org.petero.droidfish.GUIInterface: void computerMoveMade()>();
        $r10 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.DroidChessController$SearchListener listener>;
        $i4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        virtualinvoke $r10.<org.petero.droidfish.gamelogic.DroidChessController$SearchListener: void clearSearchInfo(int)>($i4);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateComputeThreads()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setSelection()>();
        $r11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r12 = virtualinvoke $r11.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Move getLastMove()>();
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setAnimMove(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean)>(r3, $r12, 1);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateGUI()>();
        return;
    }

    private final void setPlayerNames(org.petero.droidfish.gamelogic.Game)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game r1;
        java.lang.String r2, r3, r4, r5, $r12, $r16, $r18;
        org.petero.droidfish.engine.DroidComputerPlayer $r6, $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r8, $r9, $r13;
        java.lang.Object[] $r10;
        double $d0, $d1;
        java.lang.Double $r11;
        org.petero.droidfish.GUIInterface $r14;
        org.petero.droidfish.GameMode $r15, $r17;
        boolean $z0, $z1;
        org.petero.droidfish.gamelogic.GameTree $r19;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Game;
        if r1 == null goto label5;

        r2 = "Computer";
        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r6 == null goto label0;

        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        r2 = virtualinvoke $r7.<org.petero.droidfish.engine.DroidComputerPlayer: java.lang.String getEngineName()>();
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int strength>;
        if $i0 >= 1000 goto label0;

        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r10 = newarray (java.lang.Object)[1];
        $i1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int strength>;
        $d0 = (double) $i1;
        $d1 = $d0 * 0.1;
        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
        $r10[0] = $r11;
        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" (%.1f%%)", $r10);
        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $r14 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        r3 = interfaceinvoke $r14.<org.petero.droidfish.GUIInterface: java.lang.String playerName()>();
        $r15 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z0 = virtualinvoke $r15.<org.petero.droidfish.GameMode: boolean playerWhite()>();
        if $z0 == 0 goto label1;

        $r16 = r3;
        goto label2;

     label1:
        $r16 = r2;

     label2:
        r4 = $r16;
        $r17 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z1 = virtualinvoke $r17.<org.petero.droidfish.GameMode: boolean playerBlack()>();
        if $z1 == 0 goto label3;

        $r18 = r3;
        goto label4;

     label3:
        $r18 = r2;

     label4:
        r5 = $r18;
        $r19 = r1.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r19.<org.petero.droidfish.gamelogic.GameTree: void setPlayerNames(java.lang.String,java.lang.String)>(r4, r5);

     label5:
        return;
    }

    private final synchronized void updatePlayerNames(java.lang.String)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        java.lang.String r1, r2, r3, $r9, $r14, $r18;
        org.petero.droidfish.gamelogic.Game $r4, $r12, $r16, $r19;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r6, $r10;
        java.lang.Object[] $r7;
        double $d0, $d1;
        java.lang.Double $r8;
        org.petero.droidfish.GameMode $r11, $r15;
        boolean $z0, $z1;
        org.petero.droidfish.gamelogic.GameTree $r13, $r17, $r20;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: java.lang.String;
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        if $r4 == null goto label5;

        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int strength>;
        if $i0 >= 1000 goto label0;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r7 = newarray (java.lang.Object)[1];
        $i1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int strength>;
        $d0 = (double) $i1;
        $d1 = $d0 * 0.1;
        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);
        $r7[0] = $r8;
        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" (%.1f%%)", $r7);
        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $r11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z0 = virtualinvoke $r11.<org.petero.droidfish.GameMode: boolean playerWhite()>();
        if $z0 == 0 goto label1;

        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r13 = $r12.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r14 = $r13.<org.petero.droidfish.gamelogic.GameTree: java.lang.String white>;
        goto label2;

     label1:
        $r14 = r1;

     label2:
        r2 = $r14;
        $r15 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z1 = virtualinvoke $r15.<org.petero.droidfish.GameMode: boolean playerBlack()>();
        if $z1 == 0 goto label3;

        $r16 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r17 = $r16.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r18 = $r17.<org.petero.droidfish.gamelogic.GameTree: java.lang.String black>;
        goto label4;

     label3:
        $r18 = r1;

     label4:
        r3 = $r18;
        $r19 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r20 = $r19.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r20.<org.petero.droidfish.gamelogic.GameTree: void setPlayerNames(java.lang.String,java.lang.String)>(r2, r3);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateMoveList()>();

     label5:
        return;
    }

    private final boolean undoMoveNoUpdate()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1, $r4, $r5, $r7, $r8, $r11;
        org.petero.droidfish.gamelogic.Move $r2, $r6;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        org.petero.droidfish.GameMode $r9, $r10;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r2 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Move getLastMove()>();
        if $r2 != null goto label0;

        return 0;

     label0:
        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $i1 = $i0 + 1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId> = $i1;
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.Game: void undoMove()>();
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z0 != 0 goto label3;

        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r6 = virtualinvoke $r5.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Move getLastMove()>();
        if $r6 == null goto label1;

        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r7.<org.petero.droidfish.gamelogic.Game: void undoMove()>();
        $z1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z1 != 0 goto label3;

        $r8 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.Game: void redoMove()>();
        goto label3;

     label1:
        $r9 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z2 = virtualinvoke $r9.<org.petero.droidfish.GameMode: boolean playerWhite()>();
        if $z2 != 0 goto label2;

        $r10 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GameMode gameMode>;
        $z3 = virtualinvoke $r10.<org.petero.droidfish.GameMode: boolean playerBlack()>();
        if $z3 == 0 goto label3;

     label2:
        $r11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r11.<org.petero.droidfish.gamelogic.Game: void redoMove()>();
        return 0;

     label3:
        return 1;
    }

    private final void redoMoveNoUpdate()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $z0 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game: boolean canRedoMove()>();
        if $z0 == 0 goto label0;

        $i0 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        $i1 = $i0 + 1;
        r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId> = $i1;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game: void redoMove()>();
        $z1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z1 != 0 goto label0;

        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $z2 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.Game: boolean canRedoMove()>();
        if $z2 == 0 goto label0;

        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.Game: void redoMove()>();
        $z3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean humansTurn()>();
        if $z3 != 0 goto label0;

        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r6.<org.petero.droidfish.gamelogic.Game: void undoMove()>();

     label0:
        return;
    }

    private final boolean doMove(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Move r1, r5;
        org.petero.droidfish.gamelogic.Position r2;
        java.util.ArrayList r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Iterator r4;
        java.lang.String r6;
        org.petero.droidfish.gamelogic.Game $r7, $r11;
        org.petero.droidfish.gamelogic.MoveGen $r8;
        boolean $z0;
        java.lang.Object $r9;
        org.petero.droidfish.GUIInterface $r10, $r12;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        $r7 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        r2 = virtualinvoke $r7.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $r8 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r8.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        r3 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r2);
        i0 = r1.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.petero.droidfish.gamelogic.Move) $r9;
        $i1 = r5.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i2 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i1 != $i2 goto label2;

        $i3 = r5.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i4 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i3 != $i4 goto label2;

        $i5 = r5.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        if $i5 == 0 goto label1;

        if i0 != 0 goto label1;

        r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Move promoteMove> = r5;
        $r10 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r10.<org.petero.droidfish.GUIInterface: void requestPromotePiece()>();
        return 0;

     label1:
        $i6 = r5.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        if $i6 != i0 goto label2;

        r6 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean,java.util.List)>(r2, r5, 0, 0, r3);
        $r11 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r11.<org.petero.droidfish.gamelogic.Game: boolean processString(java.lang.String)>(r6);
        return 1;

     label2:
        goto label0;

     label3:
        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r12.<org.petero.droidfish.GUIInterface: void reportInvalidMove(org.petero.droidfish.gamelogic.Move)>(r1);
        return 0;
    }

    private final void updateGUI()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.GUIInterface$GameStatus $r1, r2;
        org.petero.droidfish.engine.DroidComputerPlayer$SearchType r3;
        org.petero.droidfish.gamelogic.Position r4, $r11, $r13, $r56;
        java.util.ArrayList r5, $r60;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.petero.droidfish.gamelogic.Game $r6, $r10, $r12, $r21, $r26, $r29, $r32, $r34, $r35, $r38, $r47, $r52, $r55, $r58;
        org.petero.droidfish.gamelogic.Game$GameState $r7, $r8, $r9, $r17, $r18, $r19, $r20;
        boolean $z0, $z1, $z2;
        org.petero.droidfish.engine.DroidComputerPlayer $r14, $r15;
        int[] $r16;
        java.lang.String $r22, $r41, $r45, $r50, $r57;
        org.petero.droidfish.GUIInterface $r23, $r54;
        java.lang.StringBuilder $r24, r25;
        org.petero.droidfish.gamelogic.GameTree $r27, $r30, $r33, $r36, $r39, $r48, $r53, $r59;
        org.petero.droidfish.gamelogic.GameTree$Node $r28, $r31, $r40, $r49;
        java.lang.Object $r43;
        org.petero.droidfish.gamelogic.Move $r44;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = new org.petero.droidfish.GUIInterface$GameStatus;
        specialinvoke $r1.<org.petero.droidfish.GUIInterface$GameStatus: void <init>()>();
        r2 = $r1;
        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r7 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        r2.<org.petero.droidfish.GUIInterface$GameStatus: org.petero.droidfish.gamelogic.Game$GameState state> = $r7;
        $r8 = r2.<org.petero.droidfish.GUIInterface$GameStatus: org.petero.droidfish.gamelogic.Game$GameState state>;
        $r9 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if $r8 != $r9 goto label5;

        $r10 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r11 = virtualinvoke $r10.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $i1 = $r11.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        r2.<org.petero.droidfish.GUIInterface$GameStatus: int moveNr> = $i1;
        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r13 = virtualinvoke $r12.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z0 = $r13.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        r2.<org.petero.droidfish.GUIInterface$GameStatus: boolean white> = $z0;
        r3 = <org.petero.droidfish.engine.DroidComputerPlayer$SearchType: org.petero.droidfish.engine.DroidComputerPlayer$SearchType NONE>;
        $r14 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        if $r14 == null goto label0;

        $r15 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.engine.DroidComputerPlayer computerPlayer>;
        r3 = virtualinvoke $r15.<org.petero.droidfish.engine.DroidComputerPlayer: org.petero.droidfish.engine.DroidComputerPlayer$SearchType getSearchType()>();

     label0:
        $r16 = <org.petero.droidfish.gamelogic.DroidChessController$1: int[] $SwitchMap$org$petero$droidfish$engine$DroidComputerPlayer$SearchType>;
        $i2 = virtualinvoke r3.<org.petero.droidfish.engine.DroidComputerPlayer$SearchType: int ordinal()>();
        $i3 = $r16[$i2];
        tableswitch($i3)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        r2.<org.petero.droidfish.GUIInterface$GameStatus: boolean thinking> = 1;
        goto label4;

     label2:
        r2.<org.petero.droidfish.GUIInterface$GameStatus: boolean ponder> = 1;
        goto label4;

     label3:
        r2.<org.petero.droidfish.GUIInterface$GameStatus: boolean analyzing> = 1;

     label4:
        goto label7;

     label5:
        $r17 = r2.<org.petero.droidfish.GUIInterface$GameStatus: org.petero.droidfish.gamelogic.Game$GameState state>;
        $r18 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_REP>;
        if $r17 == $r18 goto label6;

        $r19 = r2.<org.petero.droidfish.GUIInterface$GameStatus: org.petero.droidfish.gamelogic.Game$GameState state>;
        $r20 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_50>;
        if $r19 != $r20 goto label7;

     label6:
        $r21 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $z1 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean localPt()>();
        $r22 = virtualinvoke $r21.<org.petero.droidfish.gamelogic.Game: java.lang.String getDrawInfo(boolean)>($z1);
        r2.<org.petero.droidfish.GUIInterface$GameStatus: java.lang.String drawInfo> = $r22;

     label7:
        $r23 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r23.<org.petero.droidfish.GUIInterface: void setStatus(org.petero.droidfish.GUIInterface$GameStatus)>(r2);
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateMoveList()>();
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
        r25 = $r24;
        $r26 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r27 = $r26.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r28 = $r27.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r29 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r30 = $r29.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r31 = $r30.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r28 == $r31 goto label13;

        $r32 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r33 = $r32.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r33.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        $r34 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        r4 = virtualinvoke $r34.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $r35 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r36 = $r35.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        r5 = virtualinvoke $r36.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        i0 = 0;

     label8:
        $i4 = interfaceinvoke r5.<java.util.List: int size()>();
        if i0 >= $i4 goto label12;

        if i0 <= 0 goto label9;

        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label9:
        $r38 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r39 = $r38.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r40 = $r39.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $i5 = $r40.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        if i0 != $i5 goto label10;

        $r41 = <org.petero.droidfish.Util: java.lang.String boldStart>;
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

     label10:
        $r43 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i0);
        $r44 = (org.petero.droidfish.gamelogic.Move) $r43;
        $z2 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean localPt()>();
        $r45 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean)>(r4, $r44, 0, $z2);
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);
        $r47 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r48 = $r47.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r49 = $r48.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $i6 = $r49.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        if i0 != $i6 goto label11;

        $r50 = <org.petero.droidfish.Util: java.lang.String boldStop>;
        virtualinvoke r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

     label11:
        i0 = i0 + 1;
        goto label8;

     label12:
        $r52 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r53 = $r52.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r53.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(-1);

     label13:
        $r54 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        $r55 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r56 = virtualinvoke $r55.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $r57 = virtualinvoke r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r58 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r59 = $r58.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r60 = virtualinvoke $r59.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        interfaceinvoke $r54.<org.petero.droidfish.GUIInterface: void setPosition(org.petero.droidfish.gamelogic.Position,java.lang.String,java.util.ArrayList)>($r56, $r57, $r60);
        virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateRemainingTime()>();
        virtualinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updateMaterialDiffList()>();
        return;
    }

    public final void updateMaterialDiffList()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.GUIInterface $r1;
        org.petero.droidfish.gamelogic.Game $r2;
        org.petero.droidfish.gamelogic.Position $r3;
        org.petero.droidfish.Util$MaterialDiff $r4;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r3 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $r4 = staticinvoke <org.petero.droidfish.Util: org.petero.droidfish.Util$MaterialDiff getMaterialDiff(org.petero.droidfish.gamelogic.Position)>($r3);
        interfaceinvoke $r1.<org.petero.droidfish.GUIInterface: void updateMaterialDifferenceTitle(org.petero.droidfish.Util$MaterialDiff)>($r4);
        return;
    }

    private final synchronized void setThinkingInfo(int, java.util.ArrayList, java.lang.String, java.lang.String, java.lang.String, java.util.ArrayList)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0, $i1;
        java.util.ArrayList r1, r5;
        java.lang.String r2, r3, r4;
        org.petero.droidfish.GUIInterface $r6;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter0: int;
        r1 := @parameter1: java.util.ArrayList;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.String;
        r5 := @parameter5: java.util.ArrayList;
        $i1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: int searchId>;
        if i0 != $i1 goto label0;

        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r6.<org.petero.droidfish.GUIInterface: void setThinkingInfo(java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList)>(r2, r3, r4, r1, r5);

     label0:
        return;
    }

    private final void updateMoveList()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.PGNOptions r1, $r4, $r6, $r9, $r12, $r18;
        org.petero.droidfish.gamelogic.Game $r2, $r21, $r25;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver $r3, $r20, $r23, $r24;
        boolean $z0, $z1, $z2, $z3;
        org.petero.droidfish.PGNOptions$Export $r5, $r8, $r11, $r14, $r15, $r16, $r17;
        org.petero.droidfish.PGNOptions$Viewer $r7, $r10, $r13, $r19;
        int $i0;
        org.petero.droidfish.gamelogic.GameTree $r22, $r26;
        org.petero.droidfish.gamelogic.GameTree$Node $r27;
        org.petero.droidfish.GUIInterface $r28;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        if $r2 != null goto label0;

        return;

     label0:
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        $z0 = interfaceinvoke $r3.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: boolean isUpToDate()>();
        if $z0 != 0 goto label1;

        $r4 = new org.petero.droidfish.PGNOptions;
        specialinvoke $r4.<org.petero.droidfish.PGNOptions: void <init>()>();
        r1 = $r4;
        $r5 = r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r6 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.PGNOptions pgnOptions>;
        $r7 = $r6.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $z1 = $r7.<org.petero.droidfish.PGNOptions$Viewer: boolean variations>;
        $r5.<org.petero.droidfish.PGNOptions$Export: boolean variations> = $z1;
        $r8 = r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r9 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.PGNOptions pgnOptions>;
        $r10 = $r9.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $z2 = $r10.<org.petero.droidfish.PGNOptions$Viewer: boolean comments>;
        $r8.<org.petero.droidfish.PGNOptions$Export: boolean comments> = $z2;
        $r11 = r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.PGNOptions pgnOptions>;
        $r13 = $r12.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $z3 = $r13.<org.petero.droidfish.PGNOptions$Viewer: boolean nag>;
        $r11.<org.petero.droidfish.PGNOptions$Export: boolean nag> = $z3;
        $r14 = r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r14.<org.petero.droidfish.PGNOptions$Export: boolean playerAction> = 0;
        $r15 = r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r15.<org.petero.droidfish.PGNOptions$Export: boolean clockInfo> = 0;
        $r16 = r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r16.<org.petero.droidfish.PGNOptions$Export: boolean moveNrAfterNag> = 0;
        $r17 = r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r18 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.PGNOptions pgnOptions>;
        $r19 = $r18.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Viewer view>;
        $i0 = $r19.<org.petero.droidfish.PGNOptions$Viewer: int pieceType>;
        $r17.<org.petero.droidfish.PGNOptions$Export: int pieceType> = $i0;
        $r20 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        interfaceinvoke $r20.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void clear()>();
        $r21 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r22 = $r21.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r23 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        virtualinvoke $r22.<org.petero.droidfish.gamelogic.GameTree: void pgnTreeWalker(org.petero.droidfish.PGNOptions,org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver)>(r1, $r23);

     label1:
        $r24 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        $r25 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r26 = $r25.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r27 = $r26.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        interfaceinvoke $r24.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void setCurrent(org.petero.droidfish.gamelogic.GameTree$Node)>($r27);
        $r28 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r28.<org.petero.droidfish.GUIInterface: void moveListUpdated()>();
        return;
    }

    private final void setSelection()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Move r1;
        int i0, $i1, $i2, $i3;
        org.petero.droidfish.gamelogic.Game $r2;
        org.petero.droidfish.GUIInterface $r3;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        r1 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Move getLastMove()>();
        if r1 == null goto label0;

        $i1 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i2 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i1 == $i2 goto label0;

        $i3 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        goto label1;

     label0:
        $i3 = -1;

     label1:
        i0 = $i3;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r3.<org.petero.droidfish.GUIInterface: void setSelection(int)>(i0);
        return;
    }

    private void setAnimMove(org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move, boolean)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Position r1;
        org.petero.droidfish.gamelogic.Move r2;
        boolean z0;
        org.petero.droidfish.GUIInterface $r3;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r2 := @parameter1: org.petero.droidfish.gamelogic.Move;
        z0 := @parameter2: boolean;
        $r3 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        interfaceinvoke $r3.<org.petero.droidfish.GUIInterface: void setAnimMove(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean)>(r1, r2, z0);
        return;
    }

    private final boolean findValidDrawClaim()
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game$GameState $r1, $r3, $r6, $r7, $r10, $r11, $r14, $r15;
        org.petero.droidfish.gamelogic.Game $r2, $r4, $r5, $r8, $r9, $r12, $r13;

        r0 := @this: org.petero.droidfish.gamelogic.DroidChessController;
        $r2 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r3 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $r1 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if $r3 == $r1 goto label0;

        return 1;

     label0:
        $r4 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.Game: boolean processString(java.lang.String)>("draw accept");
        $r5 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r6 = virtualinvoke $r5.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $r7 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if $r6 == $r7 goto label1;

        return 1;

     label1:
        $r8 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.Game: boolean processString(java.lang.String)>("draw rep");
        $r9 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r10 = virtualinvoke $r9.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $r11 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if $r10 == $r11 goto label2;

        return 1;

     label2:
        $r12 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        virtualinvoke $r12.<org.petero.droidfish.gamelogic.Game: boolean processString(java.lang.String)>("draw 50");
        $r13 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        $r14 = virtualinvoke $r13.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $r15 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if $r14 == $r15 goto label3;

        return 1;

     label3:
        return 0;
    }

    static org.petero.droidfish.GUIInterface access$100(org.petero.droidfish.gamelogic.DroidChessController)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.GUIInterface $r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.GUIInterface gui>;
        return $r1;
    }

    static void access$300(org.petero.droidfish.gamelogic.DroidChessController, int, java.util.ArrayList, java.lang.String, java.lang.String, java.lang.String, java.util.ArrayList)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0;
        java.util.ArrayList r1, r5;
        java.lang.String r2, r3, r4;

        r0 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter1: int;
        r1 := @parameter2: java.util.ArrayList;
        r2 := @parameter3: java.lang.String;
        r3 := @parameter4: java.lang.String;
        r4 := @parameter5: java.lang.String;
        r5 := @parameter6: java.util.ArrayList;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void setThinkingInfo(int,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.util.ArrayList)>(i0, r1, r2, r3, r4, r5);
        return;
    }

    static boolean access$400(org.petero.droidfish.gamelogic.DroidChessController)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController;
        $z0 = specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: boolean localPt()>();
        return $z0;
    }

    static org.petero.droidfish.gamelogic.Game access$500(org.petero.droidfish.gamelogic.DroidChessController)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        org.petero.droidfish.gamelogic.Game $r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController;
        $r1 = r0.<org.petero.droidfish.gamelogic.DroidChessController: org.petero.droidfish.gamelogic.Game game>;
        return $r1;
    }

    static void access$600(org.petero.droidfish.gamelogic.DroidChessController, int, java.lang.String, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        int i0;
        java.lang.String r1;
        org.petero.droidfish.gamelogic.Move r2;

        r0 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        r2 := @parameter3: org.petero.droidfish.gamelogic.Move;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void makeComputerMove(int,java.lang.String,org.petero.droidfish.gamelogic.Move)>(i0, r1, r2);
        return;
    }

    static void access$700(org.petero.droidfish.gamelogic.DroidChessController, java.lang.String)
    {
        org.petero.droidfish.gamelogic.DroidChessController r0;
        java.lang.String r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.DroidChessController;
        r1 := @parameter1: java.lang.String;
        specialinvoke r0.<org.petero.droidfish.gamelogic.DroidChessController: void updatePlayerNames(java.lang.String)>(r1);
        return;
    }
}
public final enum class org.petero.droidfish.gamelogic.Game$AddMoveBehavior extends java.lang.Enum
{
    public static final enum org.petero.droidfish.gamelogic.Game$AddMoveBehavior ADD_FIRST;
    public static final enum org.petero.droidfish.gamelogic.Game$AddMoveBehavior ADD_LAST;
    public static final enum org.petero.droidfish.gamelogic.Game$AddMoveBehavior REPLACE;
    private static final org.petero.droidfish.gamelogic.Game$AddMoveBehavior[] $VALUES;

    public static org.petero.droidfish.gamelogic.Game$AddMoveBehavior[] values()
    {
        org.petero.droidfish.gamelogic.Game$AddMoveBehavior[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.petero.droidfish.gamelogic.Game$AddMoveBehavior[]) $r1;
        return $r2;
    }

    public static org.petero.droidfish.gamelogic.Game$AddMoveBehavior valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.petero.droidfish.gamelogic.Game$AddMoveBehavior $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/petero/droidfish/gamelogic/Game$AddMoveBehavior", r0);
        $r2 = (org.petero.droidfish.gamelogic.Game$AddMoveBehavior) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.petero.droidfish.gamelogic.Game$AddMoveBehavior r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.petero.droidfish.gamelogic.Game$AddMoveBehavior;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        org.petero.droidfish.gamelogic.Game$AddMoveBehavior $r0, $r1, $r2, $r4, $r5, $r6;
        org.petero.droidfish.gamelogic.Game$AddMoveBehavior[] $r3;

        $r0 = new org.petero.droidfish.gamelogic.Game$AddMoveBehavior;
        specialinvoke $r0.<org.petero.droidfish.gamelogic.Game$AddMoveBehavior: void <init>(java.lang.String,int)>("ADD_FIRST", 0);
        <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior ADD_FIRST> = $r0;
        $r1 = new org.petero.droidfish.gamelogic.Game$AddMoveBehavior;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.Game$AddMoveBehavior: void <init>(java.lang.String,int)>("ADD_LAST", 1);
        <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior ADD_LAST> = $r1;
        $r2 = new org.petero.droidfish.gamelogic.Game$AddMoveBehavior;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.Game$AddMoveBehavior: void <init>(java.lang.String,int)>("REPLACE", 2);
        <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior REPLACE> = $r2;
        $r3 = newarray (org.petero.droidfish.gamelogic.Game$AddMoveBehavior)[3];
        $r4 = <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior ADD_FIRST>;
        $r3[0] = $r4;
        $r5 = <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior ADD_LAST>;
        $r3[1] = $r5;
        $r6 = <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior REPLACE>;
        $r3[2] = $r6;
        <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior[] $VALUES> = $r3;
        return;
    }
}
public final enum class org.petero.droidfish.gamelogic.Game$GameState extends java.lang.Enum
{
    public static final enum org.petero.droidfish.gamelogic.Game$GameState ALIVE;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState WHITE_MATE;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState BLACK_MATE;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState WHITE_STALEMATE;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState BLACK_STALEMATE;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState DRAW_REP;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState DRAW_50;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState DRAW_NO_MATE;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState DRAW_AGREE;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState RESIGN_WHITE;
    public static final enum org.petero.droidfish.gamelogic.Game$GameState RESIGN_BLACK;
    private static final org.petero.droidfish.gamelogic.Game$GameState[] $VALUES;

    public static org.petero.droidfish.gamelogic.Game$GameState[] values()
    {
        org.petero.droidfish.gamelogic.Game$GameState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r2 = (org.petero.droidfish.gamelogic.Game$GameState[]) $r1;
        return $r2;
    }

    public static org.petero.droidfish.gamelogic.Game$GameState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.petero.droidfish.gamelogic.Game$GameState $r2;

        r0 := @parameter0: java.lang.String;
        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/petero/droidfish/gamelogic/Game$GameState", r0);
        $r2 = (org.petero.droidfish.gamelogic.Game$GameState) $r1;
        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        org.petero.droidfish.gamelogic.Game$GameState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.petero.droidfish.gamelogic.Game$GameState;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);
        return;
    }

    static void <clinit>()
    {
        org.petero.droidfish.gamelogic.Game$GameState $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        org.petero.droidfish.gamelogic.Game$GameState[] $r11;

        $r0 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r0.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("ALIVE", 0);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE> = $r0;
        $r1 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("WHITE_MATE", 1);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_MATE> = $r1;
        $r2 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("BLACK_MATE", 2);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_MATE> = $r2;
        $r3 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("WHITE_STALEMATE", 3);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_STALEMATE> = $r3;
        $r4 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r4.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("BLACK_STALEMATE", 4);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_STALEMATE> = $r4;
        $r5 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r5.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("DRAW_REP", 5);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_REP> = $r5;
        $r6 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r6.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("DRAW_50", 6);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_50> = $r6;
        $r7 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r7.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("DRAW_NO_MATE", 7);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_NO_MATE> = $r7;
        $r8 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r8.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("DRAW_AGREE", 8);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_AGREE> = $r8;
        $r9 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r9.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("RESIGN_WHITE", 9);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_WHITE> = $r9;
        $r10 = new org.petero.droidfish.gamelogic.Game$GameState;
        specialinvoke $r10.<org.petero.droidfish.gamelogic.Game$GameState: void <init>(java.lang.String,int)>("RESIGN_BLACK", 10);
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_BLACK> = $r10;
        $r11 = newarray (org.petero.droidfish.gamelogic.Game$GameState)[11];
        $r12 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        $r11[0] = $r12;
        $r13 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_MATE>;
        $r11[1] = $r13;
        $r14 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_MATE>;
        $r11[2] = $r14;
        $r15 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_STALEMATE>;
        $r11[3] = $r15;
        $r16 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_STALEMATE>;
        $r11[4] = $r16;
        $r17 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_REP>;
        $r11[5] = $r17;
        $r18 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_50>;
        $r11[6] = $r18;
        $r19 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_NO_MATE>;
        $r11[7] = $r19;
        $r20 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_AGREE>;
        $r11[8] = $r20;
        $r21 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_WHITE>;
        $r11[9] = $r21;
        $r22 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_BLACK>;
        $r11[10] = $r22;
        <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState[] $VALUES> = $r11;
        return;
    }
}
public class org.petero.droidfish.gamelogic.Game extends java.lang.Object
{
    boolean pendingDrawOffer;
    org.petero.droidfish.gamelogic.GameTree tree;
    org.petero.droidfish.gamelogic.TimeControl timeController;
    private boolean gamePaused;
    private org.petero.droidfish.gamelogic.Game$AddMoveBehavior addMoveBehavior;
    org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener;

    public void <init>(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver, int, int, int)
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver r1;
        int i0, i1, i2;
        org.petero.droidfish.gamelogic.GameTree $r2;
        org.petero.droidfish.gamelogic.TimeControl $r3, $r4;
        long $l3, $l4;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        r1 := @parameter0: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener> = r1;
        $r2 = new org.petero.droidfish.gamelogic.GameTree;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.GameTree: void <init>(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver)>(r1);
        r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree> = $r2;
        $r3 = new org.petero.droidfish.gamelogic.TimeControl;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.TimeControl: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController> = $r3;
        $r4 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $l3 = (long) i0;
        $l4 = (long) i2;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.TimeControl: void setTimeControl(long,int,long)>($l3, i1, $l4);
        r0.<org.petero.droidfish.gamelogic.Game: boolean gamePaused> = 0;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: void newGame()>();
        return;
    }

    final void fromByteArray(byte[])
    {
        org.petero.droidfish.gamelogic.Game r0;
        byte[] r1;
        org.petero.droidfish.gamelogic.GameTree $r2;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        r1 := @parameter0: byte[];
        $r2 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.GameTree: void fromByteArray(byte[])>(r1);
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(1);
        return;
    }

    public final void setGamePaused(boolean)
    {
        org.petero.droidfish.gamelogic.Game r0;
        boolean z0, $z1;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        z0 := @parameter0: boolean;
        $z1 = r0.<org.petero.droidfish.gamelogic.Game: boolean gamePaused>;
        if z0 == $z1 goto label0;

        r0.<org.petero.droidfish.gamelogic.Game: boolean gamePaused> = z0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(0);

     label0:
        return;
    }

    public final void setAddFirst(org.petero.droidfish.gamelogic.Game$AddMoveBehavior)
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.Game$AddMoveBehavior r1;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Game$AddMoveBehavior;
        r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$AddMoveBehavior addMoveBehavior> = r1;
        return;
    }

    final void setPos(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.Position r1, $r2;
        org.petero.droidfish.gamelogic.GameTree $r3;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r1);
        virtualinvoke $r3.<org.petero.droidfish.gamelogic.GameTree: void setStartPos(org.petero.droidfish.gamelogic.Position)>($r2);
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(0);
        return;
    }

    final boolean readPGN(java.lang.String, org.petero.droidfish.PGNOptions) throws org.petero.droidfish.gamelogic.ChessParseError
    {
        org.petero.droidfish.gamelogic.Game r0;
        java.lang.String r1;
        org.petero.droidfish.PGNOptions r2;
        boolean z0;
        org.petero.droidfish.gamelogic.GameTree $r3;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.petero.droidfish.PGNOptions;
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        z0 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.GameTree: boolean readPGN(java.lang.String,org.petero.droidfish.PGNOptions)>(r1, r2);
        if z0 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(0);

     label0:
        return z0;
    }

    final org.petero.droidfish.gamelogic.Position currPos()
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.GameTree $r1;
        org.petero.droidfish.gamelogic.Position $r2;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        return $r2;
    }

    final org.petero.droidfish.gamelogic.Position prevPos()
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.Move r1;
        org.petero.droidfish.gamelogic.Position r2, $r6, $r7, $r9;
        org.petero.droidfish.gamelogic.GameTree $r3, $r5, $r8;
        org.petero.droidfish.gamelogic.GameTree$Node $r4;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        r1 = $r4.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        if r1 == null goto label0;

        $r5 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        $r6 = new org.petero.droidfish.gamelogic.Position;
        $r7 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        specialinvoke $r6.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r7);
        r2 = $r6;
        $r8 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(-1);
        return r2;

     label0:
        $r9 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        return $r9;
    }

    public final org.petero.droidfish.gamelogic.Move getNextMove()
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.Move r1;
        boolean $z0;
        org.petero.droidfish.gamelogic.GameTree $r2, $r3, $r5;
        org.petero.droidfish.gamelogic.GameTree$Node $r4;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: boolean canRedoMove()>();
        if $z0 == 0 goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(-1);
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        r1 = $r4.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        $r5 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        return r1;

     label0:
        return null;
    }

    public final boolean processString(java.lang.String)
    {
        org.petero.droidfish.gamelogic.Game r0;
        java.lang.String r1, r3, $r11;
        org.petero.droidfish.gamelogic.Game$GameState $r2, $r4;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        org.petero.droidfish.gamelogic.Move $r5, r6, $r10;
        org.petero.droidfish.gamelogic.Position $r7, $r8;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        r1 := @parameter0: java.lang.String;
        $r4 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $r2 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if $r4 == $r2 goto label0;

        return 0;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("draw ");
        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        $i1 = $i0 + 1;
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void handleDrawCmd(java.lang.String)>(r3);
        return 1;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("resign");
        if $z1 == 0 goto label2;

        $r5 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r5.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(0, 0, 0);
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void addToGameTree(org.petero.droidfish.gamelogic.Move,java.lang.String)>($r5, "resign");
        return 1;

     label2:
        r6 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move UCIstringToMove(java.lang.String)>(r1);
        if r6 == null goto label3;

        $r7 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        $z2 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: boolean isValid(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move)>($r7, r6);
        if $z2 != 0 goto label3;

        r6 = null;

     label3:
        if r6 != null goto label4;

        $r8 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        r6 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move stringToMove(org.petero.droidfish.gamelogic.Position,java.lang.String)>($r8, r1);

     label4:
        if r6 != null goto label5;

        return 0;

     label5:
        $r10 = r6;
        $z3 = r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer>;
        if $z3 == 0 goto label6;

        $r11 = "draw offer";
        goto label7;

     label6:
        $r11 = "";

     label7:
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void addToGameTree(org.petero.droidfish.gamelogic.Move,java.lang.String)>($r10, $r11);
        return 1;
    }

    private final void addToGameTree(org.petero.droidfish.gamelogic.Move, java.lang.String)
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.Move r1, $r3, $r8, $r17;
        java.lang.String r2, r18;
        java.util.ArrayList r4, r5;
        int i0, i1, i2, $i3, i4, i5, i7;
        boolean z0, $z1, $z2, z3, $z4, $z5, $z6, $z7;
        org.petero.droidfish.gamelogic.GameTree $r6, $r9, $r10, $r14, $r15, $r19, $r22, $r23, $r25;
        java.lang.Object $r7, $r13, $r16;
        org.petero.droidfish.gamelogic.Game$AddMoveBehavior $r11, $r12, $r20, $r21;
        org.petero.droidfish.gamelogic.TimeControl $r24;
        long $l6;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(0, 0, 0);
        $z1 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Move: boolean equals(java.lang.Object)>($r3);
        if $z1 == 0 goto label2;

        $r6 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        r4 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        $i3 = interfaceinvoke r4.<java.util.List: int size()>();
        i0 = $i3 - 1;

     label0:
        if i0 < 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0);
        $r8 = (org.petero.droidfish.gamelogic.Move) $r7;
        $z2 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.Move: boolean equals(java.lang.Object)>(r1);
        if $z2 == 0 goto label1;

        $r9 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r9.<org.petero.droidfish.gamelogic.GameTree: void deleteVariation(int)>(i0);

     label1:
        i0 = i0 + -1;
        goto label0;

     label2:
        z3 = 0;
        $r10 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        r5 = virtualinvoke $r10.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();
        $r11 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$AddMoveBehavior addMoveBehavior>;
        $r12 = <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior REPLACE>;
        if $r11 != $r12 goto label6;

        z0 = 0;
        i2 = i1 - 1;

     label3:
        if i2 < 0 goto label5;

        $r13 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);
        $z4 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Move: boolean equals(java.lang.Object)>($r13);
        if $z4 != 0 goto label4;

        $r14 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r14.<org.petero.droidfish.gamelogic.GameTree: void deleteVariation(int)>(i2);
        z0 = 1;

     label4:
        i2 = i2 + -1;
        goto label3;

     label5:
        if z0 == 0 goto label6;

        $r15 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        r5 = virtualinvoke $r15.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        i1 = virtualinvoke r5.<java.util.ArrayList: int size()>();

     label6:
        i4 = 0;

     label7:
        if i4 >= i1 goto label9;

        $r16 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);
        $r17 = (org.petero.droidfish.gamelogic.Move) $r16;
        $z5 = virtualinvoke $r17.<org.petero.droidfish.gamelogic.Move: boolean equals(java.lang.Object)>(r1);
        if $z5 == 0 goto label8;

        z3 = 1;
        goto label9;

     label8:
        i4 = i4 + 1;
        goto label7;

     label9:
        if z3 != 0 goto label10;

        r18 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>(r1);
        $r19 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        i4 = virtualinvoke $r19.<org.petero.droidfish.gamelogic.GameTree: int addMove(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>(r18, r2, 0, "", "");

     label10:
        i5 = 0;
        $r20 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$AddMoveBehavior addMoveBehavior>;
        $r21 = <org.petero.droidfish.gamelogic.Game$AddMoveBehavior: org.petero.droidfish.gamelogic.Game$AddMoveBehavior ADD_LAST>;
        if $r20 != $r21 goto label11;

        i5 = i4;

     label11:
        $r22 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r22.<org.petero.droidfish.gamelogic.GameTree: void reorderVariation(int,int)>(i4, i5);
        $r23 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r23.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(i5);
        $r24 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $z6 = r0.<org.petero.droidfish.gamelogic.Game: boolean gamePaused>;
        if $z6 != 0 goto label12;

        $z7 = 1;
        goto label13;

     label12:
        $z7 = 0;

     label13:
        i7 = virtualinvoke $r24.<org.petero.droidfish.gamelogic.TimeControl: int moveMade(long,boolean)>($l6, $z7);
        $r25 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r25.<org.petero.droidfish.gamelogic.GameTree: void setRemainingTime(int)>(i7);
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(1);
        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 0;
        return;
    }

    private final void updateTimeControl(boolean)
    {
        org.petero.droidfish.gamelogic.Game r0;
        boolean z0, z1, $z2, $z3, $z4, z5, $z6;
        org.petero.droidfish.gamelogic.Position r1, $r11;
        int i0, i1, i2, i3, $i4;
        org.petero.droidfish.gamelogic.ChessParseError r2, $r12;
        org.petero.droidfish.gamelogic.TimeControl $r3, $r4, $r5, $r8, $r13, $r14;
        org.petero.droidfish.gamelogic.GameTree $r6, $r7;
        long $l5, $l6, l7;
        org.petero.droidfish.gamelogic.Game$GameState $r9, $r10;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        z0 := @parameter0: boolean;
        r1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Position currPos()>();
        i0 = r1.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        z1 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if z0 != 0 goto label0;

        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $i4 = $r3.<org.petero.droidfish.gamelogic.TimeControl: int currentMove>;
        if i0 != $i4 goto label0;

        $r4 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $z2 = $r4.<org.petero.droidfish.gamelogic.TimeControl: boolean whiteToMove>;
        if z1 == $z2 goto label1;

     label0:
        $r5 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        i1 = virtualinvoke $r5.<org.petero.droidfish.gamelogic.TimeControl: int getInitialTime()>();
        $r6 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        i2 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.GameTree: int getRemainingTime(boolean,int)>(1, i1);
        $r7 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        i3 = virtualinvoke $r7.<org.petero.droidfish.gamelogic.GameTree: int getRemainingTime(boolean,int)>(0, i1);
        $r8 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        $l5 = (long) i2;
        $l6 = (long) i3;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.TimeControl: void setCurrentMove(int,boolean,long,long)>(i0, z1, $l5, $l6);

     label1:
        l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        $z3 = r0.<org.petero.droidfish.gamelogic.Game: boolean gamePaused>;
        if $z3 != 0 goto label2;

        $r9 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $r10 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if $r9 == $r10 goto label3;

     label2:
        $z4 = 1;
        goto label4;

     label3:
        $z4 = 0;

     label4:
        z5 = $z4;
        if z5 != 0 goto label8;

     label5:
        $r11 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        $z6 = virtualinvoke $r11.<org.petero.droidfish.gamelogic.Position: boolean equals(java.lang.Object)>(r1);
        if $z6 == 0 goto label6;

        z5 = 1;

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;
        r2 = $r12;

     label8:
        if z5 == 0 goto label9;

        $r13 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        virtualinvoke $r13.<org.petero.droidfish.gamelogic.TimeControl: void stopTimer(long)>(l7);
        goto label10;

     label9:
        $r14 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        virtualinvoke $r14.<org.petero.droidfish.gamelogic.TimeControl: void startTimer(long)>(l7);

     label10:
        return;

        catch org.petero.droidfish.gamelogic.ChessParseError from label5 to label6 with label7;
    }

    public final java.lang.String getDrawInfo(boolean)
    {
        org.petero.droidfish.gamelogic.Game r0;
        boolean z0;
        org.petero.droidfish.gamelogic.GameTree $r1;
        java.lang.String $r2;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        z0 := @parameter0: boolean;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.GameTree: java.lang.String getGameStateInfo(boolean)>(z0);
        return $r2;
    }

    public final org.petero.droidfish.gamelogic.Move getLastMove()
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.GameTree $r1;
        org.petero.droidfish.gamelogic.GameTree$Node $r2;
        org.petero.droidfish.gamelogic.Move $r3;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r3 = $r2.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        return $r3;
    }

    public final boolean canRedoMove()
    {
        org.petero.droidfish.gamelogic.Game r0;
        int i0;
        org.petero.droidfish.gamelogic.GameTree $r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();
        if i0 <= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final int numVariations()
    {
        org.petero.droidfish.gamelogic.Game r0;
        int i0;
        org.petero.droidfish.gamelogic.GameTree $r1, $r3, $r5, $r6, $r8;
        org.petero.droidfish.gamelogic.GameTree$Node $r2, $r4;
        java.util.ArrayList $r7;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r2 != $r4 goto label0;

        return 1;

     label0:
        $r5 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        $r6 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r7 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();
        $r8 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(-1);
        return i0;
    }

    public final int currVariation()
    {
        org.petero.droidfish.gamelogic.Game r0;
        int i0;
        org.petero.droidfish.gamelogic.GameTree $r1, $r3, $r5, $r6, $r8;
        org.petero.droidfish.gamelogic.GameTree$Node $r2, $r4, $r7;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r2 != $r4 goto label0;

        return 0;

     label0:
        $r5 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        $r6 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r7 = $r6.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        i0 = $r7.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        $r8 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r8.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(-1);
        return i0;
    }

    public final void changeVariation(int)
    {
        org.petero.droidfish.gamelogic.Game r0;
        int i0, i1, i2, i3, i4, $i5, i6;
        org.petero.droidfish.gamelogic.GameTree $r1, $r3, $r5, $r6, $r8, $r10;
        org.petero.droidfish.gamelogic.GameTree$Node $r2, $r4, $r7;
        java.util.ArrayList $r9;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r2 != $r4 goto label0;

        return;

     label0:
        $r5 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        $r6 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r7 = $r6.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        i1 = $r7.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        $r8 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r9 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();
        i3 = i1 + i0;
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i3, 0);
        $i5 = i2 - 1;
        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i4, $i5);
        $r10 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r10.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(i6);
        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(1);
        return;
    }

    public final void moveVariation(int)
    {
        org.petero.droidfish.gamelogic.Game r0;
        int i0, i1, i2, i3, i4, $i5, i6;
        org.petero.droidfish.gamelogic.GameTree $r1, $r3, $r5, $r6, $r8, $r10, $r11;
        org.petero.droidfish.gamelogic.GameTree$Node $r2, $r4, $r7;
        java.util.ArrayList $r9;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r2 != $r4 goto label0;

        return;

     label0:
        $r5 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        $r6 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r7 = $r6.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        i1 = $r7.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        $r8 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r9 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();
        i3 = i1 + i0;
        i4 = staticinvoke <java.lang.Math: int max(int,int)>(i3, 0);
        $i5 = i2 - 1;
        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i4, $i5);
        $r10 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r10.<org.petero.droidfish.gamelogic.GameTree: void reorderVariation(int,int)>(i1, i6);
        $r11 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r11.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(i6);
        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(1);
        return;
    }

    public final void removeSubTree()
    {
        org.petero.droidfish.gamelogic.Game r0;
        int i0;
        org.petero.droidfish.gamelogic.Move $r1;
        org.petero.droidfish.gamelogic.GameTree $r2, $r3, $r5, $r6;
        org.petero.droidfish.gamelogic.GameTree$Node $r4;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.Move getLastMove()>();
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r2.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r4 = $r3.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        i0 = $r4.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        $r5 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r5.<org.petero.droidfish.gamelogic.GameTree: void deleteVariation(int)>(i0);
        goto label1;

     label0:
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: boolean canRedoMove()>();
        if $z0 == 0 goto label1;

        $r6 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r6.<org.petero.droidfish.gamelogic.GameTree: void deleteVariation(int)>(0);
        goto label0;

     label1:
        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(1);
        return;
    }

    public final org.petero.droidfish.gamelogic.Game$GameState getGameState()
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.GameTree $r1;
        org.petero.droidfish.gamelogic.Game$GameState $r2;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        return $r2;
    }

    public final boolean haveDrawOffer()
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.GameTree $r1;
        org.petero.droidfish.gamelogic.GameTree$Node $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r2 = $r1.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r3 = $r2.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("draw offer");
        return $z0;
    }

    public final void undoMove()
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.Move r1;
        org.petero.droidfish.gamelogic.GameTree $r2, $r4;
        org.petero.droidfish.gamelogic.GameTree$Node $r3;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r2 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r3 = $r2.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        r1 = $r3.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        if r1 == null goto label0;

        $r4 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r4.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(1);

     label0:
        return;
    }

    public final void redoMove()
    {
        org.petero.droidfish.gamelogic.Game r0;
        boolean $z0;
        org.petero.droidfish.gamelogic.GameTree $r1;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: boolean canRedoMove()>();
        if $z0 == 0 goto label0;

        $r1 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        virtualinvoke $r1.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(-1);
        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(1);

     label0:
        return;
    }

    public final boolean goNode(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1;
        org.petero.droidfish.gamelogic.GameTree $r2;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        $r2 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $z0 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.GameTree: boolean goNode(org.petero.droidfish.gamelogic.GameTree$Node)>(r1);
        if $z0 != 0 goto label0;

        return 0;

     label0:
        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(1);
        return 1;
    }

    public final void newGame()
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.GameTree $r1;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver $r2;
        org.petero.droidfish.gamelogic.TimeControl $r3;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r1 = new org.petero.droidfish.gamelogic.GameTree;
        $r2 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameTextListener>;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.GameTree: void <init>(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver)>($r2);
        r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree> = $r1;
        $r3 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.TimeControl timeController>;
        virtualinvoke $r3.<org.petero.droidfish.gamelogic.TimeControl: void reset()>();
        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 0;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void updateTimeControl(boolean)>(1);
        return;
    }

    public final org.petero.droidfish.gamelogic.Pair getUCIHistory()
    {
        org.petero.droidfish.gamelogic.Game r0;
        org.petero.droidfish.gamelogic.Pair r1, $r22;
        java.util.List r2;
        org.petero.droidfish.gamelogic.Position r3, r5, $r10, $r12, $r14, $r21;
        java.util.ArrayList r4, $r13;
        org.petero.droidfish.gamelogic.UndoInfo r6, $r15;
        int i0, i1, $i2;
        org.petero.droidfish.gamelogic.GameTree$Node r7;
        org.petero.droidfish.gamelogic.GameTree $r8, $r11;
        java.lang.Object $r9, $r16, $r18;
        java.lang.Integer $r17;
        org.petero.droidfish.gamelogic.Move $r19, $r20;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        $r8 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        r1 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Pair getMoveList()>();
        $r9 = r1.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        r2 = (java.util.List) $r9;
        $r10 = new org.petero.droidfish.gamelogic.Position;
        $r11 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r12 = $r11.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos>;
        specialinvoke $r10.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r12);
        r3 = $r10;
        $r13 = new java.util.ArrayList;
        specialinvoke $r13.<java.util.ArrayList: void <init>()>();
        r4 = $r13;
        $r14 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r14.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r3);
        r5 = $r14;
        $r15 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r15.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r6 = $r15;
        $r16 = r1.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        $r17 = (java.lang.Integer) $r16;
        i0 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();
        i1 = 0;

     label0:
        if i1 >= i0 goto label2;

        $r18 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);
        r7 = (org.petero.droidfish.gamelogic.GameTree$Node) $r18;
        $r19 = r7.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);
        $r20 = r7.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        virtualinvoke r5.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r20, r6);
        $i2 = r5.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        if $i2 != 0 goto label1;

        $r21 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r21.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r5);
        r3 = $r21;
        virtualinvoke r4.<java.util.ArrayList: void clear()>();

     label1:
        i1 = i1 + 1;
        goto label0;

     label2:
        $r22 = new org.petero.droidfish.gamelogic.Pair;
        specialinvoke $r22.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);
        return $r22;
    }

    private final void handleDrawCmd(java.lang.String)
    {
        org.petero.droidfish.gamelogic.Game r0;
        java.lang.String r1, r4, $r29, r30, $r34, r37;
        org.petero.droidfish.gamelogic.Position r2, r6, r9, $r13, $r15, $r18, $r20, $r25, r26;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z8, $z10, $z11;
        org.petero.droidfish.gamelogic.Move r3, $r24, $r36, $r38, $r39;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        org.petero.droidfish.gamelogic.UndoInfo r5, $r12, $r27, r28;
        org.petero.droidfish.gamelogic.Pair r7;
        java.util.List r8;
        org.petero.droidfish.gamelogic.GameTree$Node r10;
        org.petero.droidfish.gamelogic.GameTree $r11, $r14, $r16, $r19;
        java.lang.Object $r17, $r21, $r23;
        java.lang.Integer $r22;
        java.lang.StringBuilder $r31, $r32, $r33, $r35;

        r0 := @this: org.petero.droidfish.gamelogic.Game;
        r1 := @parameter0: java.lang.String;
        $r11 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        r2 = $r11.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("rep");
        if $z2 != 0 goto label0;

        $z3 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("50");
        if $z3 == 0 goto label18;

     label0:
        z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("rep");
        r3 = null;
        r4 = null;
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        if i0 < 0 goto label1;

        $i4 = i0 + 1;
        r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);
        $i5 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i5 <= 0 goto label1;

        r3 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move stringToMove(org.petero.droidfish.gamelogic.Position,java.lang.String)>(r2, r4);

     label1:
        if z0 == 0 goto label8;

        z1 = 0;
        $r12 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r12.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r5 = $r12;
        i1 = 0;
        $r13 = new org.petero.droidfish.gamelogic.Position;
        $r14 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r15 = $r14.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        specialinvoke $r13.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r15);
        r6 = $r13;
        if r3 == null goto label2;

        virtualinvoke r6.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r3, r5);
        i1 = 1;

     label2:
        $r16 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        r7 = virtualinvoke $r16.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Pair getMoveList()>();
        $r17 = r7.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        r8 = (java.util.List) $r17;
        $r18 = new org.petero.droidfish.gamelogic.Position;
        $r19 = r0.<org.petero.droidfish.gamelogic.Game: org.petero.droidfish.gamelogic.GameTree tree>;
        $r20 = $r19.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos>;
        specialinvoke $r18.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r20);
        r9 = $r18;
        $z4 = virtualinvoke r9.<org.petero.droidfish.gamelogic.Position: boolean drawRuleEquals(org.petero.droidfish.gamelogic.Position)>(r6);
        if $z4 == 0 goto label3;

        i1 = i1 + 1;

     label3:
        $r21 = r7.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        $r22 = (java.lang.Integer) $r21;
        i2 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();
        i3 = 0;

     label4:
        if i3 >= i2 goto label6;

        $r23 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i3);
        r10 = (org.petero.droidfish.gamelogic.GameTree$Node) $r23;
        $r24 = r10.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        virtualinvoke r9.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r24, r5);
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void fixupEPSquare(org.petero.droidfish.gamelogic.Position)>(r9);
        $z5 = virtualinvoke r9.<org.petero.droidfish.gamelogic.Position: boolean drawRuleEquals(org.petero.droidfish.gamelogic.Position)>(r6);
        if $z5 == 0 goto label5;

        i1 = i1 + 1;

     label5:
        i3 = i3 + 1;
        goto label4;

     label6:
        if i1 < 3 goto label7;

        z1 = 1;

     label7:
        goto label12;

     label8:
        $r25 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r25.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r2);
        r26 = $r25;
        if r3 == null goto label9;

        $r27 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r27.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r28 = $r27;
        virtualinvoke r26.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r3, r28);

     label9:
        $i6 = r26.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        if $i6 < 100 goto label10;

        $z6 = 1;
        goto label11;

     label10:
        $z6 = 0;

     label11:
        z1 = $z6;

     label12:
        if z1 == 0 goto label16;

        if z0 == 0 goto label13;

        $r29 = "draw rep";
        goto label14;

     label13:
        $r29 = "draw 50";

     label14:
        r30 = $r29;
        if r3 == null goto label15;

        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r34 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean)>(r2, r3, 0, 0);
        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);
        r30 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        $r36 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r36.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(0, 0, 0);
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void addToGameTree(org.petero.droidfish.gamelogic.Move,java.lang.String)>($r36, r30);
        goto label17;

     label16:
        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 1;
        if r3 == null goto label17;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: boolean processString(java.lang.String)>(r4);

     label17:
        goto label21;

     label18:
        $z8 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("offer ");
        if $z8 == 0 goto label20;

        r0.<org.petero.droidfish.gamelogic.Game: boolean pendingDrawOffer> = 1;
        $i7 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");
        $i8 = $i7 + 1;
        r37 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i8);
        $r38 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move stringToMove(org.petero.droidfish.gamelogic.Position,java.lang.String)>(r2, r37);
        if $r38 == null goto label19;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: boolean processString(java.lang.String)>(r37);

     label19:
        goto label21;

     label20:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("accept");
        if $z10 == 0 goto label21;

        $z11 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Game: boolean haveDrawOffer()>();
        if $z11 == 0 goto label21;

        $r39 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r39.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(0, 0, 0);
        specialinvoke r0.<org.petero.droidfish.gamelogic.Game: void addToGameTree(org.petero.droidfish.gamelogic.Move,java.lang.String)>($r39, "draw accept");

     label21:
        return;
    }
}
class org.petero.droidfish.gamelogic.GameTree$1 extends java.lang.Object
{
    static final int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState;

    static void <clinit>()
    {
        org.petero.droidfish.gamelogic.Game$GameState[] $r0;
        org.petero.droidfish.gamelogic.Game$GameState $r1, $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r35, $r39, $r43;
        java.lang.NoSuchFieldError r2, $r5, $r8, r9, $r12, r13, $r16, r17, $r20, r21, $r24, r25, $r28, r29, $r32, r33, $r36, r37, $r40, r41, $r44, r45;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] $r3, $r4, $r6, $r10, $r14, $r18, $r22, $r26, $r30, $r34, $r38, $r42;

        $r0 = staticinvoke <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState[] values()>();
        $i0 = lengthof $r0;
        $r3 = newarray (int)[$i0];
        <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState> = $r3;

     label0:
        $r4 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r1 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        $i1 = virtualinvoke $r1.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r4[$i1] = 1;

     label1:
        goto label3;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;

     label3:
        $r6 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r7 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_MATE>;
        $i2 = virtualinvoke $r7.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r6[$i2] = 2;

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        r9 = $r8;

     label6:
        $r10 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r11 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_BLACK>;
        $i3 = virtualinvoke $r11.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r10[$i3] = 3;

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;
        r13 = $r12;

     label9:
        $r14 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r15 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_MATE>;
        $i4 = virtualinvoke $r15.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r14[$i4] = 4;

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;
        r17 = $r16;

     label12:
        $r18 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r19 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_WHITE>;
        $i5 = virtualinvoke $r19.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r18[$i5] = 5;

     label13:
        goto label15;

     label14:
        $r20 := @caughtexception;
        r21 = $r20;

     label15:
        $r22 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r23 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_STALEMATE>;
        $i6 = virtualinvoke $r23.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r22[$i6] = 6;

     label16:
        goto label18;

     label17:
        $r24 := @caughtexception;
        r25 = $r24;

     label18:
        $r26 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r27 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_STALEMATE>;
        $i7 = virtualinvoke $r27.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r26[$i7] = 7;

     label19:
        goto label21;

     label20:
        $r28 := @caughtexception;
        r29 = $r28;

     label21:
        $r30 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r31 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_REP>;
        $i8 = virtualinvoke $r31.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r30[$i8] = 8;

     label22:
        goto label24;

     label23:
        $r32 := @caughtexception;
        r33 = $r32;

     label24:
        $r34 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r35 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_50>;
        $i9 = virtualinvoke $r35.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r34[$i9] = 9;

     label25:
        goto label27;

     label26:
        $r36 := @caughtexception;
        r37 = $r36;

     label27:
        $r38 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r39 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_NO_MATE>;
        $i10 = virtualinvoke $r39.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r38[$i10] = 10;

     label28:
        goto label30;

     label29:
        $r40 := @caughtexception;
        r41 = $r40;

     label30:
        $r42 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r43 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_AGREE>;
        $i11 = virtualinvoke $r43.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $r42[$i11] = 11;

     label31:
        goto label33;

     label32:
        $r44 := @caughtexception;
        r45 = $r44;

     label33:
        return;

        catch java.lang.NoSuchFieldError from label0 to label1 with label2;
        catch java.lang.NoSuchFieldError from label3 to label4 with label5;
        catch java.lang.NoSuchFieldError from label6 to label7 with label8;
        catch java.lang.NoSuchFieldError from label9 to label10 with label11;
        catch java.lang.NoSuchFieldError from label12 to label13 with label14;
        catch java.lang.NoSuchFieldError from label15 to label16 with label17;
        catch java.lang.NoSuchFieldError from label18 to label19 with label20;
        catch java.lang.NoSuchFieldError from label21 to label22 with label23;
        catch java.lang.NoSuchFieldError from label24 to label25 with label26;
        catch java.lang.NoSuchFieldError from label27 to label28 with label29;
        catch java.lang.NoSuchFieldError from label30 to label31 with label32;
    }
}
final class org.petero.droidfish.gamelogic.GameTree$MoveNumber extends java.lang.Object
{
    final int moveNo;
    final boolean wtm;

    void <init>(int, boolean)
    {
        org.petero.droidfish.gamelogic.GameTree$MoveNumber r0;
        int i0;
        boolean z0;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: int moveNo> = i0;
        r0.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: boolean wtm> = z0;
        return;
    }

    public final org.petero.droidfish.gamelogic.GameTree$MoveNumber next()
    {
        org.petero.droidfish.gamelogic.GameTree$MoveNumber r0, $r1, $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        $z0 = r0.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: boolean wtm>;
        if $z0 == 0 goto label0;

        $r1 = new org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        $i0 = r0.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: int moveNo>;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: void <init>(int,boolean)>($i0, 0);
        return $r1;

     label0:
        $r2 = new org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        $i1 = r0.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: int moveNo>;
        $i2 = $i1 + 1;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: void <init>(int,boolean)>($i2, 1);
        return $r2;
    }

    public final org.petero.droidfish.gamelogic.GameTree$MoveNumber prev()
    {
        org.petero.droidfish.gamelogic.GameTree$MoveNumber r0, $r1, $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        $z0 = r0.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: boolean wtm>;
        if $z0 == 0 goto label0;

        $r1 = new org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        $i0 = r0.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: int moveNo>;
        $i1 = $i0 - 1;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: void <init>(int,boolean)>($i1, 0);
        return $r1;

     label0:
        $r2 = new org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        $i2 = r0.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: int moveNo>;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: void <init>(int,boolean)>($i2, 1);
        return $r2;
    }
}
public class org.petero.droidfish.gamelogic.GameTree$Node extends java.lang.Object
{
    java.lang.String moveStr;
    java.lang.String moveStrLocal;
    org.petero.droidfish.gamelogic.Move move;
    private org.petero.droidfish.gamelogic.UndoInfo ui;
    java.lang.String playerAction;
    int remainingTime;
    int nag;
    java.lang.String preComment;
    java.lang.String postComment;
    private org.petero.droidfish.gamelogic.GameTree$Node parent;
    int defaultChild;
    private java.util.List children;

    public void <init>()
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0;
        java.util.ArrayList $r1;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr> = "";
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStrLocal> = "";
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move> = null;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.UndoInfo ui> = null;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction> = "";
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: int remainingTime> = -2147483648;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent> = null;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children> = $r1;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild> = 0;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: int nag> = 0;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment> = "";
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment> = "";
        return;
    }

    public void <init>(org.petero.droidfish.gamelogic.GameTree$Node, java.lang.String, java.lang.String, int, int, java.lang.String, java.lang.String)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0, r1;
        java.lang.String r2, r3, r4, r5;
        int i0, i1;
        java.util.ArrayList $r6;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$Node;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        i0 := @parameter3: int;
        i1 := @parameter4: int;
        r4 := @parameter5: java.lang.String;
        r5 := @parameter6: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr> = r2;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStrLocal> = r2;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move> = null;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.UndoInfo ui> = null;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction> = r3;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: int remainingTime> = i0;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent> = r1;
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children> = $r6;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild> = 0;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: int nag> = i1;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment> = r4;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment> = r5;
        return;
    }

    public org.petero.droidfish.gamelogic.GameTree$Node getParent()
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0, $r1;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$Node;
        $r1 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent>;
        return $r1;
    }

    private final boolean verifyChildren(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0;
        org.petero.droidfish.gamelogic.Position r1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$Node;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $z0 = specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree$Node: boolean verifyChildren(org.petero.droidfish.gamelogic.Position,java.util.ArrayList)>(r1, null);
        return $z0;
    }

    private final boolean verifyChildren(org.petero.droidfish.gamelogic.Position, java.util.ArrayList)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0, r4, r19;
        org.petero.droidfish.gamelogic.Position r1;
        java.util.ArrayList r2, $r14, r15;
        boolean z0, $z1, $z2;
        java.util.Iterator r3, r17;
        org.petero.droidfish.gamelogic.Move r5, $r8, $r20;
        java.util.List $r6, $r16;
        java.lang.Object $r7, $r18;
        org.petero.droidfish.gamelogic.MoveGen $r9;
        java.lang.String $r10, $r11, $r12;
        org.petero.droidfish.gamelogic.UndoInfo $r13;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$Node;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r2 := @parameter1: java.util.ArrayList;
        z0 = 0;
        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.petero.droidfish.gamelogic.GameTree$Node) $r7;
        $r8 = r4.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        if $r8 != null goto label3;

        if r2 != null goto label1;

        $r9 = <org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.MoveGen instance>;
        r2 = virtualinvoke $r9.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r1);

     label1:
        $r10 = r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr>;
        r5 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move stringToMove(org.petero.droidfish.gamelogic.Position,java.lang.String,java.util.ArrayList)>(r1, $r10, r2);
        if r5 == null goto label2;

        $r11 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean,java.util.List)>(r1, r5, 0, 0, r2);
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr> = $r11;
        $r12 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean,java.util.List)>(r1, r5, 0, 1, r2);
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStrLocal> = $r12;
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move> = r5;
        $r13 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r13.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.UndoInfo ui> = $r13;
        goto label3;

     label2:
        z0 = 1;

     label3:
        goto label0;

     label4:
        if z0 == 0 goto label8;

        $r14 = new java.util.ArrayList;
        specialinvoke $r14.<java.util.ArrayList: void <init>()>();
        r15 = $r14;
        $r16 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label7;

        $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();
        r19 = (org.petero.droidfish.gamelogic.GameTree$Node) $r18;
        $r20 = r19.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        if $r20 == null goto label6;

        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>(r19);

     label6:
        goto label5;

     label7:
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children> = r15;

     label8:
        return z0;
    }

    final java.util.ArrayList getPathFromRoot()
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0, r3, r4, $r5;
        java.util.ArrayList $r1, r2;
        int i0, i1, $i2;
        java.util.List $r6, $r7;
        java.lang.Object $r8;
        java.lang.RuntimeException $r9;
        java.lang.Integer $r10;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$Node;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(64);
        r2 = $r1;
        r3 = r0;

     label0:
        $r5 = r3.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent>;
        if $r5 == null goto label5;

        r4 = r3.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent>;
        i0 = -1;
        i1 = 0;

     label1:
        $r6 = r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();
        if i1 >= $i2 goto label3;

        $r7 = r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);
        if $r8 != r3 goto label2;

        i0 = i1;
        goto label3;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        if i0 != -1 goto label4;

        $r9 = new java.lang.RuntimeException;
        specialinvoke $r9.<java.lang.RuntimeException: void <init>()>();
        throw $r9;

     label4:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);
        r3 = r3.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent>;
        goto label0;

     label5:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r2);
        return r2;
    }

    static final void writeToStream(java.io.DataOutputStream, org.petero.droidfish.gamelogic.GameTree$Node) throws java.io.IOException
    {
        java.io.DataOutputStream r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1, $r13;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r2, $r7, $r8, $r9;
        org.petero.droidfish.gamelogic.Move $r3, $r4, $r5, $r6;
        java.util.List $r10, $r11, $r14;
        java.lang.Object $r12, $r15;

        r0 := @parameter0: java.io.DataOutputStream;
        r1 := @parameter1: org.petero.droidfish.gamelogic.GameTree$Node;

     label0:
        $r2 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r2);
        $r3 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        if $r3 == null goto label1;

        $r4 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        $i2 = $r4.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeByte(int)>($i2);
        $r5 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        $i3 = $r5.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeByte(int)>($i3);
        $r6 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        $i4 = $r6.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeByte(int)>($i4);
        goto label2;

     label1:
        virtualinvoke r0.<java.io.DataOutputStream: void writeByte(int)>(-1);

     label2:
        $r7 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r7);
        $i5 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: int remainingTime>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i5);
        $i6 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: int nag>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i6);
        $r8 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r8);
        $r9 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r9);
        $i7 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>($i7);
        $r10 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        i0 = interfaceinvoke $r10.<java.util.List: int size()>();
        virtualinvoke r0.<java.io.DataOutputStream: void writeInt(int)>(i0);
        if i0 != 0 goto label3;

        goto label6;

     label3:
        i1 = 1;

     label4:
        if i1 >= i0 goto label5;

        $r11 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i1);
        $r13 = (org.petero.droidfish.gamelogic.GameTree$Node) $r12;
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: void writeToStream(java.io.DataOutputStream,org.petero.droidfish.gamelogic.GameTree$Node)>(r0, $r13);
        i1 = i1 + 1;
        goto label4;

     label5:
        $r14 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);
        r1 = (org.petero.droidfish.gamelogic.GameTree$Node) $r15;
        goto label0;

     label6:
        return;
    }

    static final void readFromStream(java.io.DataInputStream, org.petero.droidfish.gamelogic.GameTree$Node) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1, r2, $r10, $r12, r13;
        byte b0, b1, b2;
        java.lang.String $r3, $r4, $r7, $r8, $r9;
        org.petero.droidfish.gamelogic.Move $r5;
        org.petero.droidfish.gamelogic.UndoInfo $r6;
        int $i3, $i4, $i5, i6, i7;
        java.util.List $r11, $r14;

        r0 := @parameter0: java.io.DataInputStream;
        r1 := @parameter1: org.petero.droidfish.gamelogic.GameTree$Node;

     label0:
        $r3 = virtualinvoke r0.<java.io.DataInputStream: java.lang.String readUTF()>();
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr> = $r3;
        $r4 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr>;
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStrLocal> = $r4;
        b0 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();
        if b0 < 0 goto label1;

        b1 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();
        b2 = virtualinvoke r0.<java.io.DataInputStream: byte readByte()>();
        $r5 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r5.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(b0, b1, b2);
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move> = $r5;
        $r6 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r6.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.UndoInfo ui> = $r6;

     label1:
        $r7 = virtualinvoke r0.<java.io.DataInputStream: java.lang.String readUTF()>();
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction> = $r7;
        $i3 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: int remainingTime> = $i3;
        $i4 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: int nag> = $i4;
        $r8 = virtualinvoke r0.<java.io.DataInputStream: java.lang.String readUTF()>();
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment> = $r8;
        $r9 = virtualinvoke r0.<java.io.DataInputStream: java.lang.String readUTF()>();
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment> = $r9;
        $i5 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild> = $i5;
        i6 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();
        if i6 != 0 goto label2;

        goto label5;

     label2:
        i7 = 1;

     label3:
        if i7 >= i6 goto label4;

        $r10 = new org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke $r10.<org.petero.droidfish.gamelogic.GameTree$Node: void <init>()>();
        r2 = $r10;
        r2.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent> = r1;
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: void readFromStream(java.io.DataInputStream,org.petero.droidfish.gamelogic.GameTree$Node)>(r0, r2);
        $r11 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r2);
        i7 = i7 + 1;
        goto label3;

     label4:
        $r12 = new org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke $r12.<org.petero.droidfish.gamelogic.GameTree$Node: void <init>()>();
        r13 = $r12;
        r13.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent> = r1;
        $r14 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        interfaceinvoke $r14.<java.util.List: void add(int,java.lang.Object)>(0, r13);
        r1 = r13;
        goto label0;

     label5:
        return;
    }

    public static final void addPgnData(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver, org.petero.droidfish.gamelogic.GameTree$Node, org.petero.droidfish.gamelogic.GameTree$MoveNumber, org.petero.droidfish.PGNOptions)
    {
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1, $r8, $r12;
        org.petero.droidfish.gamelogic.GameTree$MoveNumber r2, r4;
        org.petero.droidfish.PGNOptions r3;
        boolean z0, $z1;
        int i0, i1;
        java.util.List $r5, $r6, $r10, $r13;
        java.lang.Object $r7, $r11, $r14;
        org.petero.droidfish.PGNOptions$Export $r9;

        r0 := @parameter0: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver;
        r1 := @parameter1: org.petero.droidfish.gamelogic.GameTree$Node;
        r2 := @parameter2: org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        r3 := @parameter3: org.petero.droidfish.PGNOptions;
        z0 = specialinvoke r1.<org.petero.droidfish.gamelogic.GameTree$Node: boolean addPgnDataOneNode(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,org.petero.droidfish.gamelogic.GameTree$MoveNumber,boolean,org.petero.droidfish.PGNOptions)>(r0, r2, 1, r3);

     label0:
        $r5 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        i0 = interfaceinvoke $r5.<java.util.List: int size()>();
        if i0 != 0 goto label1;

        goto label4;

     label1:
        r4 = virtualinvoke r2.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: org.petero.droidfish.gamelogic.GameTree$MoveNumber next()>();
        $r6 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);
        $r8 = (org.petero.droidfish.gamelogic.GameTree$Node) $r7;
        z0 = specialinvoke $r8.<org.petero.droidfish.gamelogic.GameTree$Node: boolean addPgnDataOneNode(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,org.petero.droidfish.gamelogic.GameTree$MoveNumber,boolean,org.petero.droidfish.PGNOptions)>(r0, r4, z0, r3);
        $r9 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $z1 = $r9.<org.petero.droidfish.PGNOptions$Export: boolean variations>;
        if $z1 == 0 goto label3;

        i1 = 1;

     label2:
        if i1 >= i0 goto label3;

        interfaceinvoke r0.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r1, 6, null);
        $r10 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i1);
        $r12 = (org.petero.droidfish.gamelogic.GameTree$Node) $r11;
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: void addPgnData(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.GameTree$MoveNumber,org.petero.droidfish.PGNOptions)>(r0, $r12, r4, r3);
        interfaceinvoke r0.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r1, 7, null);
        z0 = 1;
        i1 = i1 + 1;
        goto label2;

     label3:
        $r13 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);
        r1 = (org.petero.droidfish.gamelogic.GameTree$Node) $r14;
        r2 = virtualinvoke r2.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: org.petero.droidfish.gamelogic.GameTree$MoveNumber next()>();
        goto label0;

     label4:
        return;
    }

    private final boolean addPgnDataOneNode(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver, org.petero.droidfish.gamelogic.GameTree$MoveNumber, boolean, org.petero.droidfish.PGNOptions)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver r1;
        org.petero.droidfish.gamelogic.GameTree$MoveNumber r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.petero.droidfish.PGNOptions r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.String $r4, $r6, $r7, $r8, $r9, $r12, $r14, r16, $r22, $r24, $r26, $r27, $r29, $r31;
        org.petero.droidfish.PGNOptions$Export $r5, $r10, $r15, $r17, $r20, $r23, $r25, $r28, $r30;
        java.lang.Integer $r11, $r13, $r21;
        org.petero.droidfish.gamelogic.Move $r18, $r19;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$Node;
        r1 := @parameter0: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver;
        r2 := @parameter1: org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        z0 := @parameter2: boolean;
        r3 := @parameter3: org.petero.droidfish.PGNOptions;
        $r4 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment>;
        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();
        if $i1 <= 0 goto label0;

        $r5 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $z2 = $r5.<org.petero.droidfish.PGNOptions$Export: boolean comments>;
        if $z2 == 0 goto label0;

        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment>;
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r0, 10, $r6);
        z0 = 1;

     label0:
        $r7 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr>;
        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();
        if $i2 <= 0 goto label8;

        $r8 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr>;
        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("--");
        if $z3 == 0 goto label1;

        $r9 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction>;
        $i3 = virtualinvoke $r9.<java.lang.String: int length()>();
        if $i3 <= 0 goto label1;

        $r10 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $z4 = $r10.<org.petero.droidfish.PGNOptions$Export: boolean playerAction>;
        if $z4 != 0 goto label1;

        $z5 = 1;
        goto label2;

     label1:
        $z5 = 0;

     label2:
        z1 = $z5;
        if z1 != 0 goto label8;

        $z6 = r2.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: boolean wtm>;
        if $z6 == 0 goto label3;

        $i4 = r2.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: int moveNo>;
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        $r12 = virtualinvoke $r11.<java.lang.Integer: java.lang.String toString()>();
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r0, 1, $r12);
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r0, 2, null);
        goto label5;

     label3:
        if z0 == 0 goto label5;

        $i5 = r2.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: int moveNo>;
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        $r14 = virtualinvoke $r13.<java.lang.Integer: java.lang.String toString()>();
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r0, 1, $r14);
        i0 = 0;

     label4:
        if i0 >= 3 goto label5;

        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r0, 2, null);
        i0 = i0 + 1;
        goto label4;

     label5:
        $r15 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $i6 = $r15.<org.petero.droidfish.PGNOptions$Export: int pieceType>;
        if $i6 != 0 goto label6;

        r16 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr>;
        $r17 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $z7 = $r17.<org.petero.droidfish.PGNOptions$Export: boolean pgnPromotions>;
        if $z7 == 0 goto label7;

        $r18 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        if $r18 == null goto label7;

        $r19 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        $i7 = $r19.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        if $i7 == 0 goto label7;

        r16 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pgnPromotion(java.lang.String)>(r16);
        goto label7;

     label6:
        r16 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStrLocal>;

     label7:
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r0, 9, r16);
        z0 = 0;

     label8:
        $i8 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: int nag>;
        if $i8 <= 0 goto label9;

        $r20 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $z8 = $r20.<org.petero.droidfish.PGNOptions$Export: boolean nag>;
        if $z8 == 0 goto label9;

        $i9 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: int nag>;
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r22 = virtualinvoke $r21.<java.lang.Integer: java.lang.String toString()>();
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r0, 8, $r22);
        $r23 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $z9 = $r23.<org.petero.droidfish.PGNOptions$Export: boolean moveNrAfterNag>;
        if $z9 == 0 goto label9;

        z0 = 1;

     label9:
        $r24 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment>;
        $i10 = virtualinvoke $r24.<java.lang.String: int length()>();
        if $i10 <= 0 goto label10;

        $r25 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $z10 = $r25.<org.petero.droidfish.PGNOptions$Export: boolean comments>;
        if $z10 == 0 goto label10;

        $r26 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment>;
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r0, 10, $r26);
        z0 = 1;

     label10:
        $r27 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction>;
        $i11 = virtualinvoke $r27.<java.lang.String: int length()>();
        if $i11 <= 0 goto label11;

        $r28 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $z11 = $r28.<org.petero.droidfish.PGNOptions$Export: boolean playerAction>;
        if $z11 == 0 goto label11;

        $r29 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree$Node: void addExtendedInfo(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r1, "playeraction", $r29);
        z0 = 1;

     label11:
        $i12 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: int remainingTime>;
        if $i12 == -2147483648 goto label12;

        $r30 = r3.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $z12 = $r30.<org.petero.droidfish.PGNOptions$Export: boolean clockInfo>;
        if $z12 == 0 goto label12;

        $i13 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: int remainingTime>;
        $r31 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String getTimeStr(int)>($i13);
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree$Node: void addExtendedInfo(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r1, "clk", $r31);
        z0 = 1;

     label12:
        return z0;
    }

    private final void addExtendedInfo(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver, java.lang.String, java.lang.String)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver r1;
        java.lang.String r2, r3, $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$Node;
        r1 := @parameter0: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[%");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(r0, 10, $r10);
        return;
    }

    private static final java.lang.String getTimeStr(int)
    {
        int i0, i1, i2, i3, $i4, $i5, i6, $i7, i8;
        boolean z0;
        java.lang.StringBuilder r0, $r1;
        double $d0, $d1, $d2;
        java.lang.String $r11;

        i0 := @parameter0: int;
        $i4 = i0 + 999;
        $d0 = (double) $i4;
        $d1 = $d0 / 1000.0;
        $d2 = staticinvoke <java.lang.Math: double floor(double)>($d1);
        i1 = (int) $d2;
        z0 = 0;
        if i1 >= 0 goto label0;

        z0 = 1;
        i1 = neg i1;

     label0:
        i2 = i1 / 60;
        $i5 = i2 * 60;
        i6 = i1 - $i5;
        i3 = i2 / 60;
        $i7 = i3 * 60;
        i8 = i2 - $i7;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r0 = $r1;
        if z0 == 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label1:
        if i3 >= 10 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
        if i8 >= 10 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
        if i6 >= 10 goto label4;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label4:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);
        $r11 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r11;
    }

    private final org.petero.droidfish.gamelogic.GameTree$Node addChild(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0, r1;
        java.util.List $r2;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$Node;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent> = r0;
        $r2 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        return r1;
    }

    public static final void parsePgn(org.petero.droidfish.gamelogic.GameTree$PgnScanner, org.petero.droidfish.gamelogic.GameTree$Node, org.petero.droidfish.PGNOptions)
    {
        org.petero.droidfish.gamelogic.GameTree$PgnScanner r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1, $r3, r4, $r6, $r7, $r9, $r34;
        org.petero.droidfish.PGNOptions r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13;
        org.petero.droidfish.gamelogic.PgnToken r5, $r10, $r30;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15;
        char c2, c9;
        byte b3;
        org.petero.droidfish.PGNOptions$Import $r8, $r11, $r51;
        java.lang.String $r12, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, r27, $r28, $r29, $r32, $r33, $r35, $r36, $r37, $r40, r42, $r43, $r46, r48, $r54, $r56, $r58, $r61, $r63, $r65;
        java.lang.NumberFormatException $r13, r14;
        java.lang.Integer $r31;
        org.petero.droidfish.gamelogic.Pair r38, r44;
        java.lang.Object $r39, $r41, $r45, $r47;
        java.lang.IndexOutOfBoundsException $r49, r50;
        java.lang.StringBuilder $r52, $r55, $r57, $r59, $r62, $r64;

        r0 := @parameter0: org.petero.droidfish.gamelogic.GameTree$PgnScanner;
        r1 := @parameter1: org.petero.droidfish.gamelogic.GameTree$Node;
        r2 := @parameter2: org.petero.droidfish.PGNOptions;
        $r3 = new org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.GameTree$Node: void <init>()>();
        r4 = $r3;
        z0 = 0;

     label0:
        r5 = virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: org.petero.droidfish.gamelogic.PgnToken nextToken()>();
        $i4 = r5.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        tableswitch($i4)
        {
            case 0: goto label40;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label40;
            case 4: goto label40;
            case 5: goto label40;
            case 6: goto label2;
            case 7: goto label40;
            case 8: goto label11;
            case 9: goto label15;
            case 10: goto label32;
            case 11: goto label40;
            default: goto label42;
        };

     label1:
        goto label42;

     label2:
        if z0 == 0 goto label3;

        r1 = specialinvoke r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node addChild(org.petero.droidfish.gamelogic.GameTree$Node)>(r4);
        $r6 = new org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke $r6.<org.petero.droidfish.gamelogic.GameTree$Node: void <init>()>();
        r4 = $r6;
        z0 = 0;

     label3:
        $r7 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent>;
        if $r7 == null goto label4;

        $r8 = r2.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Import imp>;
        $z1 = $r8.<org.petero.droidfish.PGNOptions$Import: boolean variations>;
        if $z1 == 0 goto label4;

        $r9 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent>;
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: void parsePgn(org.petero.droidfish.gamelogic.GameTree$PgnScanner,org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.PGNOptions)>(r0, $r9, r2);
        goto label42;

     label4:
        i0 = 1;

     label5:
        if i0 <= 0 goto label10;

        $r10 = virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: org.petero.droidfish.gamelogic.PgnToken nextToken()>();
        $i5 = $r10.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        lookupswitch($i5)
        {
            case 6: goto label6;
            case 7: goto label7;
            case 11: goto label8;
            default: goto label9;
        };

     label6:
        i0 = i0 + 1;
        goto label9;

     label7:
        i0 = i0 + -1;
        goto label9;

     label8:
        return;

     label9:
        goto label5;

     label10:
        goto label42;

     label11:
        if z0 == 0 goto label42;

        $r11 = r2.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Import imp>;
        $z2 = $r11.<org.petero.droidfish.PGNOptions$Import: boolean nag>;
        if $z2 == 0 goto label42;

     label12:
        $r12 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: int nag> = $i6;

     label13:
        goto label42;

     label14:
        $r13 := @caughtexception;
        r14 = $r13;
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: int nag> = 0;
        goto label42;

     label15:
        $r15 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("1-0");
        if $z3 != 0 goto label16;

        $r16 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $z4 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("0-1");
        if $z4 != 0 goto label16;

        $r17 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("1/2-1/2");
        if $z5 == 0 goto label18;

     label16:
        if z0 == 0 goto label17;

        specialinvoke r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node addChild(org.petero.droidfish.gamelogic.GameTree$Node)>(r4);

     label17:
        return;

     label18:
        $r19 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $r20 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $i7 = virtualinvoke $r20.<java.lang.String: int length()>();
        $i8 = $i7 - 1;
        c9 = virtualinvoke $r19.<java.lang.String: char charAt(int)>($i8);
        if c9 != 43 goto label19;

        $r21 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $r22 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $i10 = virtualinvoke $r22.<java.lang.String: int length()>();
        $i11 = $i10 - 1;
        $r23 = virtualinvoke $r21.<java.lang.String: java.lang.String substring(int,int)>(0, $i11);
        r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = $r23;

     label19:
        if c9 == 33 goto label20;

        if c9 != 63 goto label30;

     label20:
        $r24 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $i12 = virtualinvoke $r24.<java.lang.String: int length()>();
        i1 = $i12 - 1;

     label21:
        if i1 <= 0 goto label23;

        $r25 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $i13 = i1 - 1;
        c2 = virtualinvoke $r25.<java.lang.String: char charAt(int)>($i13);
        if c2 == 33 goto label22;

        if c2 != 63 goto label23;

     label22:
        i1 = i1 + -1;
        goto label21;

     label23:
        $r26 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        r27 = virtualinvoke $r26.<java.lang.String: java.lang.String substring(int)>(i1);
        $r28 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $r29 = virtualinvoke $r28.<java.lang.String: java.lang.String substring(int,int)>(0, i1);
        r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = $r29;
        b3 = 0;
        $z6 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("!");
        if $z6 == 0 goto label24;

        b3 = 1;
        goto label29;

     label24:
        $z7 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("?");
        if $z7 == 0 goto label25;

        b3 = 2;
        goto label29;

     label25:
        $z8 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("!!");
        if $z8 == 0 goto label26;

        b3 = 3;
        goto label29;

     label26:
        $z9 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("??");
        if $z9 == 0 goto label27;

        b3 = 4;
        goto label29;

     label27:
        $z10 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("!?");
        if $z10 == 0 goto label28;

        b3 = 5;
        goto label29;

     label28:
        $z11 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("?!");
        if $z11 == 0 goto label29;

        b3 = 6;

     label29:
        if b3 <= 0 goto label30;

        $r30 = new org.petero.droidfish.gamelogic.PgnToken;
        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b3);
        $r32 = virtualinvoke $r31.<java.lang.Integer: java.lang.String toString()>();
        specialinvoke $r30.<org.petero.droidfish.gamelogic.PgnToken: void <init>(int,java.lang.String)>(8, $r32);
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: void putBack(org.petero.droidfish.gamelogic.PgnToken)>($r30);

     label30:
        $r33 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $i14 = virtualinvoke $r33.<java.lang.String: int length()>();
        if $i14 <= 0 goto label42;

        if z0 == 0 goto label31;

        r1 = specialinvoke r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node addChild(org.petero.droidfish.gamelogic.GameTree$Node)>(r4);
        $r34 = new org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke $r34.<org.petero.droidfish.gamelogic.GameTree$Node: void <init>()>();
        r4 = $r34;
        z12 = 0;

     label31:
        $r35 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr> = $r35;
        $r36 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStrLocal> = $r36;
        z0 = 1;
        goto label42;

     label32:
        $r37 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        r38 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Pair extractExtInfo(java.lang.String,java.lang.String)>($r37, "clk");
        $r39 = r38.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        $r40 = (java.lang.String) $r39;
        r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = $r40;
        $r41 = r38.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        r42 = (java.lang.String) $r41;
        if r42 != null goto label33;

        goto label34;

     label33:
        $i15 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: int parseTimeString(java.lang.String)>(r42);
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: int remainingTime> = $i15;
        goto label32;

     label34:
        $r43 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        r44 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Pair extractExtInfo(java.lang.String,java.lang.String)>($r43, "playeraction");
        $r45 = r44.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first>;
        $r46 = (java.lang.String) $r45;
        r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = $r46;
        $r47 = r44.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second>;
        r48 = (java.lang.String) $r47;
        if r48 != null goto label35;

        goto label36;

     label35:
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction> = r48;
        goto label34;

     label36:
        goto label38;

     label37:
        $r49 := @caughtexception;
        r50 = $r49;

     label38:
        $r51 = r2.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Import imp>;
        $z13 = $r51.<org.petero.droidfish.PGNOptions$Import: boolean comments>;
        if $z13 == 0 goto label42;

        if z0 == 0 goto label39;

        $r52 = new java.lang.StringBuilder;
        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();
        $r54 = r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment>;
        $r55 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);
        $r56 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);
        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String postComment> = $r58;
        goto label42;

     label39:
        $r59 = new java.lang.StringBuilder;
        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();
        $r61 = r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment>;
        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);
        $r63 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);
        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String preComment> = $r65;
        goto label42;

     label40:
        if z0 == 0 goto label41;

        specialinvoke r1.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node addChild(org.petero.droidfish.gamelogic.GameTree$Node)>(r4);

     label41:
        return;

     label42:
        goto label0;

        catch java.lang.NumberFormatException from label12 to label13 with label14;
        catch java.lang.IndexOutOfBoundsException from label32 to label36 with label37;
    }

    private static final org.petero.droidfish.gamelogic.Pair extractExtInfo(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, r4, r5, $r11, $r13;
        int i0, i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12, $r14;
        org.petero.droidfish.gamelogic.Pair $r15;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        r5 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n|\r|\t", " ");
        r2 = r5;
        r3 = null;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[%");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
        r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        i0 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r4);
        if i0 < 0 goto label0;

        i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String,int)>("]", i0);
        if i1 < 0 goto label0;

        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $i2 = i1 + 1;
        $r13 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i2);
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        $i3 = virtualinvoke r4.<java.lang.String: int length()>();
        $i4 = i0 + $i3;
        r3 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>($i4, i1);

     label0:
        $r15 = new org.petero.droidfish.gamelogic.Pair;
        specialinvoke $r15.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>(r2, r3);
        return $r15;
    }

    private static final int parseTimeString(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, $i6, $i7, i8, i9, i10;
        boolean z0;
        char c4, $c5;

        r0 := @parameter0: java.lang.String;
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();
        i0 = 0;
        z0 = 0;
        i1 = 0;
        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);
        if $c5 != 45 goto label0;

        z0 = 1;
        i1 = i1 + 1;

     label0:
        i2 = 0;
        i3 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i1 >= i3 goto label4;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        if c4 < 48 goto label2;

        if c4 > 57 goto label2;

        $i6 = i2 * 10;
        $i7 = $i6 + c4;
        i2 = $i7 - 48;
        goto label3;

     label2:
        if c4 != 58 goto label3;

        i8 = i0 + i2;
        i2 = 0;
        i0 = i8 * 60;

     label3:
        i1 = i1 + 1;
        goto label1;

     label4:
        i9 = i0 + i2;
        i10 = i9 * 1000;
        if z0 == 0 goto label5;

        i10 = neg i10;

     label5:
        return i10;
    }

    public static final java.lang.String nagStr(int)
    {
        int i0;

        i0 := @parameter0: int;
        tableswitch(i0)
        {
            case 1: goto label0;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label14;
            case 8: goto label14;
            case 9: goto label14;
            case 10: goto label14;
            case 11: goto label6;
            case 12: goto label14;
            case 13: goto label7;
            case 14: goto label8;
            case 15: goto label9;
            case 16: goto label10;
            case 17: goto label11;
            case 18: goto label12;
            case 19: goto label13;
            default: goto label14;
        };

     label0:
        return "!";

     label1:
        return "?";

     label2:
        return "!!";

     label3:
        return "??";

     label4:
        return "!?";

     label5:
        return "?!";

     label6:
        return " =";

     label7:
        return " \u221e";

     label8:
        return " +/=";

     label9:
        return " =/+";

     label10:
        return " +/-";

     label11:
        return " -/+";

     label12:
        return " +-";

     label13:
        return " -+";

     label14:
        return "";
    }

    public static final int strToNag(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.lang.NumberFormatException $r2, r3;

        r0 := @parameter0: java.lang.String;
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("!");
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("?");
        if $z1 == 0 goto label1;

        return 2;

     label1:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("!!");
        if $z2 == 0 goto label2;

        return 3;

     label2:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("??");
        if $z3 == 0 goto label3;

        return 4;

     label3:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("!?");
        if $z4 == 0 goto label4;

        return 5;

     label4:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("?!");
        if $z5 == 0 goto label5;

        return 6;

     label5:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("=");
        if $z6 == 0 goto label6;

        return 11;

     label6:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("\u221e");
        if $z7 == 0 goto label7;

        return 13;

     label7:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("+/=");
        if $z8 == 0 goto label8;

        return 14;

     label8:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("=/+");
        if $z9 == 0 goto label9;

        return 15;

     label9:
        $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("+/-");
        if $z10 == 0 goto label10;

        return 16;

     label10:
        $z11 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("-/+");
        if $z11 == 0 goto label11;

        return 17;

     label11:
        $z12 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("+-");
        if $z12 == 0 goto label12;

        return 18;

     label12:
        $z13 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("-+");
        if $z13 == 0 goto label13;

        return 19;

     label13:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("$", "");
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label14:
        return i0;

     label15:
        $r2 := @caughtexception;
        r3 = $r2;
        return 0;

        catch java.lang.NumberFormatException from label13 to label14 with label15;
    }

    static java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0;
        java.util.List $r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        $r1 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.List children>;
        return $r1;
    }

    static boolean access$100(org.petero.droidfish.gamelogic.GameTree$Node, org.petero.droidfish.gamelogic.Position, java.util.ArrayList)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0;
        org.petero.droidfish.gamelogic.Position r1;
        java.util.ArrayList r2;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Position;
        r2 := @parameter2: java.util.ArrayList;
        $z0 = specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree$Node: boolean verifyChildren(org.petero.droidfish.gamelogic.Position,java.util.ArrayList)>(r1, r2);
        return $z0;
    }

    static boolean access$400(org.petero.droidfish.gamelogic.GameTree$Node, org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0;
        org.petero.droidfish.gamelogic.Position r1;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Position;
        $z0 = specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree$Node: boolean verifyChildren(org.petero.droidfish.gamelogic.Position)>(r1);
        return $z0;
    }

    static org.petero.droidfish.gamelogic.GameTree$Node access$500(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0, $r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        $r1 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node parent>;
        return $r1;
    }

    static org.petero.droidfish.gamelogic.UndoInfo access$600(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0;
        org.petero.droidfish.gamelogic.UndoInfo $r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        $r1 = r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.UndoInfo ui>;
        return $r1;
    }

    static org.petero.droidfish.gamelogic.UndoInfo access$602(org.petero.droidfish.gamelogic.GameTree$Node, org.petero.droidfish.gamelogic.UndoInfo)
    {
        org.petero.droidfish.gamelogic.GameTree$Node r0;
        org.petero.droidfish.gamelogic.UndoInfo r1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        r1 := @parameter1: org.petero.droidfish.gamelogic.UndoInfo;
        r0.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.UndoInfo ui> = r1;
        return r1;
    }
}
final class org.petero.droidfish.gamelogic.GameTree$PgnScanner extends java.lang.Object
{
    java.lang.String data;
    int idx;
    java.util.List savedTokens;

    void <init>(java.lang.String)
    {
        org.petero.droidfish.gamelogic.GameTree$PgnScanner r0;
        java.lang.String r1, $r7;
        java.util.ArrayList $r2;
        java.lang.StringBuilder r3, $r4;
        int i0, i1, $i4, $i5;
        boolean z0, $z1;
        char c2, c3;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnScanner;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.util.List savedTokens> = $r2;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        r3 = $r4;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        z0 = 1;
        i1 = 0;

     label0:
        if i1 >= i0 goto label9;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);
        if c2 != 37 goto label4;

        if z0 == 0 goto label4;

     label1:
        $i4 = i1 + 1;
        if $i4 >= i0 goto label3;

        $i5 = i1 + 1;
        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);
        if c3 == 10 goto label3;

        if c3 != 13 goto label2;

        goto label3;

     label2:
        i1 = i1 + 1;
        goto label1;

     label3:
        z0 = 1;
        goto label8;

     label4:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);
        if c2 == 10 goto label5;

        if c2 != 13 goto label6;

     label5:
        $z1 = 1;
        goto label7;

     label6:
        $z1 = 0;

     label7:
        z0 = $z1;

     label8:
        i1 = i1 + 1;
        goto label0;

     label9:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.lang.String data> = $r7;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = 0;
        return;
    }

    final void putBack(org.petero.droidfish.gamelogic.PgnToken)
    {
        org.petero.droidfish.gamelogic.GameTree$PgnScanner r0;
        org.petero.droidfish.gamelogic.PgnToken r1;
        java.util.List $r2;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnScanner;
        r1 := @parameter0: org.petero.droidfish.gamelogic.PgnToken;
        $r2 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.util.List savedTokens>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);
        return;
    }

    final org.petero.droidfish.gamelogic.PgnToken nextToken()
    {
        org.petero.droidfish.gamelogic.GameTree$PgnScanner r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i11, $i12, $i14, $i15, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i27, $i28, $i29;
        org.petero.droidfish.gamelogic.PgnToken r1, $r10, r11;
        java.lang.StringBuilder r2, $r14, $r19, r20, $r25, r26, $r33, r34, $r40, r41;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String r3, $r12, $r15, $r18, $r21, $r24, $r27, $r29, $r32, $r35, $r39, $r43, $r45, $r48;
        java.util.List $r4, $r5, $r6, $r8;
        java.lang.Object $r7;
        char c6, $c9, c10, c13, c16, c21, c26;
        java.lang.StringIndexOutOfBoundsException $r49, r50;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnScanner;
        $r4 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.util.List savedTokens>;
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();
        if $i1 <= 0 goto label0;

        $r5 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.util.List savedTokens>;
        i0 = interfaceinvoke $r5.<java.util.List: int size()>();
        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.util.List savedTokens>;
        $i2 = i0 - 1;
        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i2);
        r1 = (org.petero.droidfish.gamelogic.PgnToken) $r7;
        $r8 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.util.List savedTokens>;
        $i3 = i0 - 1;
        interfaceinvoke $r8.<java.util.List: java.lang.Object remove(int)>($i3);
        return r1;

     label0:
        $r10 = new org.petero.droidfish.gamelogic.PgnToken;
        specialinvoke $r10.<org.petero.droidfish.gamelogic.PgnToken: void <init>(int,java.lang.String)>(11, null);
        r11 = $r10;

     label1:
        $r12 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.lang.String data>;
        $i4 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx>;
        $i5 = $i4 + 1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = $i5;
        c6 = virtualinvoke $r12.<java.lang.String: char charAt(int)>($i4);
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c6);
        if $z1 == 0 goto label2;

        goto label30;

     label2:
        if c6 != 46 goto label3;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 2;
        goto label31;

     label3:
        if c6 != 42 goto label4;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 3;
        goto label31;

     label4:
        if c6 != 91 goto label5;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 4;
        goto label31;

     label5:
        if c6 != 93 goto label6;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 5;
        goto label31;

     label6:
        if c6 != 40 goto label7;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 6;
        goto label31;

     label7:
        if c6 != 41 goto label8;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 7;
        goto label31;

     label8:
        if c6 != 123 goto label11;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 10;
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();
        r2 = $r14;

     label9:
        $r15 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.lang.String data>;
        $i7 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx>;
        $i8 = $i7 + 1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = $i8;
        $c9 = virtualinvoke $r15.<java.lang.String: char charAt(int)>($i7);
        c10 = $c9;
        if $c9 == 125 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c10);
        goto label9;

     label10:
        $r18 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        r11.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = $r18;
        goto label31;

     label11:
        if c6 != 59 goto label15;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 10;
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        r20 = $r19;

     label12:
        $r21 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.lang.String data>;
        $i11 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx>;
        $i12 = $i11 + 1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = $i12;
        c13 = virtualinvoke $r21.<java.lang.String: char charAt(int)>($i11);
        if c13 == 10 goto label14;

        if c13 != 13 goto label13;

        goto label14;

     label13:
        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c13);
        goto label12;

     label14:
        $r24 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();
        r11.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = $r24;
        goto label31;

     label15:
        if c6 != 34 goto label20;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 0;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();
        r26 = $r25;

     label16:
        $r27 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.lang.String data>;
        $i14 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx>;
        $i15 = $i14 + 1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = $i15;
        c16 = virtualinvoke $r27.<java.lang.String: char charAt(int)>($i14);
        if c16 != 34 goto label17;

        goto label19;

     label17:
        if c16 != 92 goto label18;

        $r29 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.lang.String data>;
        $i17 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx>;
        $i18 = $i17 + 1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = $i18;
        c16 = virtualinvoke $r29.<java.lang.String: char charAt(int)>($i17);

     label18:
        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c16);
        goto label16;

     label19:
        $r32 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();
        r11.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = $r32;
        goto label31;

     label20:
        if c6 != 36 goto label24;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 8;
        $r33 = new java.lang.StringBuilder;
        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();
        r34 = $r33;

     label21:
        $r35 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.lang.String data>;
        $i19 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx>;
        $i20 = $i19 + 1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = $i20;
        c21 = virtualinvoke $r35.<java.lang.String: char charAt(int)>($i19);
        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c21);
        if $z2 != 0 goto label22;

        $i22 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx>;
        $i23 = $i22 - 1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = $i23;
        goto label23;

     label22:
        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c21);
        goto label21;

     label23:
        $r39 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();
        r11.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = $r39;
        goto label31;

     label24:
        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 9;
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();
        r41 = $r40;
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6);
        z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c6);
        r3 = ".*[](){;\"$";

     label25:
        $r43 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: java.lang.String data>;
        $i24 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx>;
        $i25 = $i24 + 1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = $i25;
        c26 = virtualinvoke $r43.<java.lang.String: char charAt(int)>($i24);
        $z3 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c26);
        if $z3 != 0 goto label26;

        $r45 = ".*[](){;\"$";
        $i27 = virtualinvoke $r45.<java.lang.String: int indexOf(int)>(c26);
        if $i27 < 0 goto label27;

     label26:
        $i28 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx>;
        $i29 = $i28 - 1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: int idx> = $i29;
        goto label28;

     label27:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c26);
        $z4 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c26);
        if $z4 != 0 goto label25;

        z0 = 0;
        goto label25;

     label28:
        if z0 == 0 goto label29;

        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 1;

     label29:
        $r48 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();
        r11.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = $r48;
        goto label31;

     label30:
        goto label1;

     label31:
        goto label33;

     label32:
        $r49 := @caughtexception;
        r50 = $r49;
        r11.<org.petero.droidfish.gamelogic.PgnToken: int type> = 11;

     label33:
        return r11;

        catch java.lang.StringIndexOutOfBoundsException from label1 to label31 with label32;
    }

    final org.petero.droidfish.gamelogic.PgnToken nextTokenDropComments()
    {
        org.petero.droidfish.gamelogic.GameTree$PgnScanner r0;
        org.petero.droidfish.gamelogic.PgnToken r1;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnScanner;

     label0:
        r1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: org.petero.droidfish.gamelogic.PgnToken nextToken()>();
        $i0 = r1.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i0 == 10 goto label1;

        return r1;

     label1:
        goto label0;
    }
}
class org.petero.droidfish.gamelogic.GameTree$PgnText extends java.lang.Object implements org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver
{
    private java.lang.StringBuilder sb;
    private java.lang.String header;
    private int prevType;

    private void <init>()
    {
        org.petero.droidfish.gamelogic.GameTree$PgnText r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnText;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(256);
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb> = $r1;
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.String header> = "";
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: int prevType> = 11;
        return;
    }

    final java.lang.String getPgnString()
    {
        org.petero.droidfish.gamelogic.GameTree$PgnText r0;
        java.lang.StringBuilder $r1, r2, $r8;
        java.lang.String[] r3;
        int i0, i1, i2, i3, $i4, $i5, i6;
        java.lang.String r4, $r5, $r9, $r10, $r17;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnText;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(4096);
        r2 = $r1;
        $r5 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.String header>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r8 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        r3 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        i0 = 0;
        i1 = lengthof r3;
        i2 = 0;

     label0:
        if i2 >= i1 goto label4;

        $r10 = r3[i2];
        r4 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();
        i3 = virtualinvoke r4.<java.lang.String: int length()>();
        if i3 <= 0 goto label3;

        if i0 != 0 goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        i0 = i3;
        goto label3;

     label1:
        $i4 = i0 + 1;
        $i5 = $i4 + i3;
        if $i5 < 80 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        i0 = i3;
        goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        i6 = i0 + 1;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        i0 = i6 + i3;

     label3:
        i2 = i2 + 1;
        goto label0;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");
        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r17;
    }

    public void processToken(org.petero.droidfish.gamelogic.GameTree$Node, int, java.lang.String)
    {
        org.petero.droidfish.gamelogic.GameTree$PgnText r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String r2, $r4;
        char c3;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnText;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        i0 := @parameter1: int;
        r2 := @parameter2: java.lang.String;
        $i4 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: int prevType>;
        if $i4 != 5 goto label0;

        if i0 == 4 goto label0;

        $r3 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.String header> = $r4;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>(4096);
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb> = $r5;

     label0:
        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label6;
            case 2: goto label8;
            case 3: goto label9;
            case 4: goto label10;
            case 5: goto label11;
            case 6: goto label12;
            case 7: goto label13;
            case 8: goto label14;
            case 9: goto label15;
            case 10: goto label17;
            case 11: goto label19;
            default: goto label19;
        };

     label1:
        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");
        i1 = virtualinvoke r2.<java.lang.String: int length()>();
        i2 = 0;

     label2:
        if i2 >= i1 goto label5;

        c3 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i2);
        if c3 == 92 goto label3;

        if c3 != 34 goto label4;

     label3:
        $r8 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label4:
        $r10 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);
        i2 = i2 + 1;
        goto label2;

     label5:
        $r12 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        goto label19;

     label6:
        $i5 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: int prevType>;
        if $i5 == 6 goto label7;

        $i6 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: int prevType>;
        if $i6 == 5 goto label7;

        $r14 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label7:
        $r16 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        goto label19;

     label8:
        $r18 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
        goto label19;

     label9:
        $r20 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *");
        goto label19;

     label10:
        $r22 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
        goto label19;

     label11:
        $r24 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]\n");
        goto label19;

     label12:
        $r26 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");
        goto label19;

     label13:
        $r28 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
        goto label19;

     label14:
        $r30 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" $");
        $r32 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        goto label19;

     label15:
        $i7 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: int prevType>;
        if $i7 == 5 goto label16;

        $i8 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: int prevType>;
        if $i8 == 4 goto label16;

        $r34 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label16:
        $r36 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        goto label19;

     label17:
        $i9 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: int prevType>;
        if $i9 == 6 goto label18;

        $i10 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: int prevType>;
        if $i10 == 5 goto label18;

        $r38 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label18:
        $r40 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);
        $r42 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r44 = r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.StringBuilder sb>;
        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);
        goto label19;

     label19:
        r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: int prevType> = i0;
        return;
    }

    public boolean isUpToDate()
    {
        org.petero.droidfish.gamelogic.GameTree$PgnText r0;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnText;
        return 1;
    }

    public void clear()
    {
        org.petero.droidfish.gamelogic.GameTree$PgnText r0;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnText;
        return;
    }

    public void setCurrent(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.gamelogic.GameTree$PgnText r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnText;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        return;
    }

    void <init>(org.petero.droidfish.gamelogic.GameTree$1)
    {
        org.petero.droidfish.gamelogic.GameTree$PgnText r0;
        org.petero.droidfish.gamelogic.GameTree$1 r1;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$PgnText;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$1;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree$PgnText: void <init>()>();
        return;
    }
}
final class org.petero.droidfish.gamelogic.GameTree$TagPair extends java.lang.Object
{
    java.lang.String tagName;
    java.lang.String tagValue;

    private void <init>()
    {
        org.petero.droidfish.gamelogic.GameTree$TagPair r0;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$TagPair;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    void <init>(org.petero.droidfish.gamelogic.GameTree$1)
    {
        org.petero.droidfish.gamelogic.GameTree$TagPair r0;
        org.petero.droidfish.gamelogic.GameTree$1 r1;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree$TagPair;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$1;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree$TagPair: void <init>()>();
        return;
    }
}
public class org.petero.droidfish.gamelogic.GameTree extends java.lang.Object
{
    java.lang.String event;
    java.lang.String site;
    java.lang.String date;
    java.lang.String round;
    java.lang.String white;
    java.lang.String black;
    org.petero.droidfish.gamelogic.Position startPos;
    private java.lang.String timeControl;
    private java.util.List tagPairs;
    org.petero.droidfish.gamelogic.GameTree$Node rootNode;
    org.petero.droidfish.gamelogic.GameTree$Node currentNode;
    org.petero.droidfish.gamelogic.Position currentPos;
    private final org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameStateListener;

    public void <init>(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver r1;
        org.petero.droidfish.gamelogic.ChessParseError r2, $r4;
        org.petero.droidfish.gamelogic.Position $r3;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameStateListener> = r1;

     label0:
        $r3 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void setStartPos(org.petero.droidfish.gamelogic.Position)>($r3);

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;

     label3:
        return;

        catch org.petero.droidfish.gamelogic.ChessParseError from label0 to label1 with label2;
    }

    final void setPlayerNames(java.lang.String, java.lang.String)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.lang.String r1, r2;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String white> = r1;
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String black> = r2;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();
        return;
    }

    final void setStartPos(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        org.petero.droidfish.gamelogic.Position r1, $r11, $r12;
        java.util.Calendar r2;
        int i0, i1, i2, $i3;
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5, $r6;
        java.lang.String $r7;
        java.util.ArrayList $r8;
        org.petero.droidfish.gamelogic.GameTree$Node $r9, $r10;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String event> = "?";
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String site> = "?";
        r2 = staticinvoke <java.util.GregorianCalendar: java.util.Calendar getInstance()>();
        i0 = virtualinvoke r2.<java.util.Calendar: int get(int)>(1);
        $i3 = virtualinvoke r2.<java.util.Calendar: int get(int)>(2);
        i1 = $i3 + 1;
        i2 = virtualinvoke r2.<java.util.Calendar: int get(int)>(5);
        $r3 = newarray (java.lang.Object)[3];
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        $r3[0] = $r4;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
        $r3[1] = $r5;
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r3[2] = $r6;
        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%04d.%02d.%02d", $r3);
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String date> = $r7;
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String round> = "?";
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String white> = "?";
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String black> = "?";
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos> = r1;
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String timeControl> = "?";
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs> = $r8;
        $r9 = new org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke $r9.<org.petero.droidfish.gamelogic.GameTree$Node: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode> = $r9;
        $r10 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode> = $r10;
        $r11 = new org.petero.droidfish.gamelogic.Position;
        $r12 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos>;
        specialinvoke $r11.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r12);
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos> = $r11;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();
        return;
    }

    private final void updateListener()
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver $r1, $r2;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        $r1 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameStateListener>;
        if $r1 == null goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver gameStateListener>;
        interfaceinvoke $r2.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void clear()>();

     label0:
        return;
    }

    public final void translateMoves()
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.util.ArrayList $r1, r2;
        org.petero.droidfish.gamelogic.GameTree$Node r3, $r4, $r5, $r6;
        int i0, $i1, i2, $i3;
        java.util.List $r7;
        java.lang.Integer $r8, $r10;
        java.lang.Object $r9;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;

     label0:
        $r4 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r5 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r4 == $r5 goto label1;

        r3 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r7 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r6);
        i0 = interfaceinvoke $r7.<java.util.List: int indexOf(java.lang.Object)>(r3);
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8);
        goto label0;

     label1:
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void translateMovesHelper()>();
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();
        i2 = $i1 - 1;

     label2:
        if i2 < 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);
        $r10 = (java.lang.Integer) $r9;
        $i3 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goForward(int,boolean)>($i3, 0);
        i2 = i2 + -1;
        goto label2;

     label3:
        return;
    }

    private final void translateMovesHelper()
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.util.ArrayList $r1, r2, r3;
        int i0, i1, i2, i3, $i4, i5, i6, $i7, $i8;
        org.petero.droidfish.gamelogic.GameTree$Node r4, $r10, $r12, $r14, $r20;
        java.lang.Integer $r5, $r7, $r22, $r25, $r26;
        boolean $z1;
        java.lang.Object $r6, $r16, $r24;
        org.petero.droidfish.gamelogic.MoveGen $r8;
        org.petero.droidfish.gamelogic.Position $r9, $r11, $r17;
        java.util.List $r13, $r15, $r21;
        org.petero.droidfish.gamelogic.Move $r18;
        java.lang.String $r19;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label0:
        $z1 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();
        if $z1 != 0 goto label5;

        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        i0 = $i4 - 1;
        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        $r7 = (java.lang.Integer) $r6;
        i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();
        if i1 != 0 goto label2;

        $r8 = <org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.MoveGen instance>;
        $r9 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        r3 = virtualinvoke $r8.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>($r9);
        $r10 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r11 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: boolean access$100(org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.Position,java.util.ArrayList)>($r10, $r11, r3);
        $r12 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r13 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r12);
        i2 = interfaceinvoke $r13.<java.util.List: int size()>();
        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r14 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r15 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r14);
        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i3);
        r4 = (org.petero.droidfish.gamelogic.GameTree$Node) $r16;
        $r17 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $r18 = r4.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        $r19 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean,java.util.List)>($r17, $r18, 0, 1, r3);
        r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStrLocal> = $r19;
        i3 = i3 + 1;
        goto label1;

     label2:
        $r20 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r21 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r20);
        i5 = interfaceinvoke $r21.<java.util.List: int size()>();
        if i1 >= i5 goto label3;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goForward(int,boolean)>(i1, 0);
        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);
        goto label4;

     label3:
        virtualinvoke r2.<java.util.ArrayList: java.lang.Object remove(int)>(i0);
        i6 = i0 + -1;
        if i6 < 0 goto label4;

        $r24 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i6);
        $r25 = (java.lang.Integer) $r24;
        $i7 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();
        $i8 = $i7 + 1;
        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);
        virtualinvoke r2.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i6, $r26);
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();

     label4:
        goto label0;

     label5:
        return;
    }

    public final java.lang.String toPGN(org.petero.droidfish.PGNOptions)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        org.petero.droidfish.PGNOptions r1;
        org.petero.droidfish.gamelogic.GameTree$PgnText $r2, r3;
        org.petero.droidfish.PGNOptions$Export $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: org.petero.droidfish.PGNOptions;
        $r2 = new org.petero.droidfish.gamelogic.GameTree$PgnText;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.GameTree$PgnText: void <init>(org.petero.droidfish.gamelogic.GameTree$1)>(null);
        r3 = $r2;
        $r4 = r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r4.<org.petero.droidfish.PGNOptions$Export: boolean pgnPromotions> = 1;
        $r5 = r1.<org.petero.droidfish.PGNOptions: org.petero.droidfish.PGNOptions$Export exp>;
        $r5.<org.petero.droidfish.PGNOptions$Export: int pieceType> = 0;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void pgnTreeWalker(org.petero.droidfish.PGNOptions,org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver)>(r1, r3);
        $r6 = virtualinvoke r3.<org.petero.droidfish.gamelogic.GameTree$PgnText: java.lang.String getPgnString()>();
        return $r6;
    }

    public final void pgnTreeWalker(org.petero.droidfish.PGNOptions, org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        org.petero.droidfish.PGNOptions r1;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver r2;
        java.util.ArrayList $r3, r4, $r12;
        org.petero.droidfish.gamelogic.GameTree$Node r5, $r7, $r8, $r9, $r13, $r14, $r40;
        int i0, $i1, $i2, i3, $i4, i5, $i6, $i7;
        java.lang.String r6, $r17, $r18, $r19, $r20, $r21, $r22, r24, $r25, $r26, $r31, $r35;
        java.util.List $r10, $r27, $r28, $r32;
        java.lang.Integer $r11, $r16;
        java.lang.Object $r15, $r29, $r33;
        org.petero.droidfish.gamelogic.Position $r23, $r37, $r38;
        boolean $z1, $z2, $z3;
        org.petero.droidfish.gamelogic.GameTree$TagPair $r30, $r34;
        org.petero.droidfish.gamelogic.GameTree$MoveNumber $r36, r39, $r41;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: org.petero.droidfish.PGNOptions;
        r2 := @parameter1: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        r4 = $r3;

     label0:
        $r7 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r8 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r7 == $r8 goto label1;

        r5 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        $r9 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r10 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r9);
        i0 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r5);
        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r11);
        goto label0;

     label1:
        $r12 = virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        $i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();
        if $i1 <= 0 goto label2;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goForward(int,boolean)>(0, 0);
        goto label1;

     label2:
        r6 = virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String getPGNResultString()>();

     label3:
        $r13 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r14 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r13 == $r14 goto label4;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        goto label3;

     label4:
        $i2 = interfaceinvoke r4.<java.util.List: int size()>();
        i3 = $i2 - 1;

     label5:
        if i3 < 0 goto label6;

        $r15 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i3);
        $r16 = (java.lang.Integer) $r15;
        $i4 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goForward(int,boolean)>($i4, 0);
        i3 = i3 + -1;
        goto label5;

     label6:
        $r17 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String event>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "Event", $r17);
        $r18 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String site>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "Site", $r18);
        $r19 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String date>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "Date", $r19);
        $r20 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String round>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "Round", $r20);
        $r21 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String white>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "White", $r21);
        $r22 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String black>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "Black", $r22);
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "Result", r6);
        $r23 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos>;
        r24 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String toFEN(org.petero.droidfish.gamelogic.Position)>($r23);
        $z1 = virtualinvoke r24.<java.lang.String: boolean equals(java.lang.Object)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        if $z1 != 0 goto label7;

        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "FEN", r24);
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "Setup", "1");

     label7:
        $r25 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String timeControl>;
        $z2 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("?");
        if $z2 != 0 goto label8;

        $r26 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String timeControl>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, "TimeControl", $r26);

     label8:
        i5 = 0;

     label9:
        $r27 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        $i6 = interfaceinvoke $r27.<java.util.List: int size()>();
        if i5 >= $i6 goto label10;

        $r28 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        $r29 = interfaceinvoke $r28.<java.util.List: java.lang.Object get(int)>(i5);
        $r30 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r29;
        $r31 = $r30.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagName>;
        $r32 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(i5);
        $r34 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r33;
        $r35 = $r34.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,java.lang.String,java.lang.String)>(r2, $r31, $r35);
        i5 = i5 + 1;
        goto label9;

     label10:
        $r36 = new org.petero.droidfish.gamelogic.GameTree$MoveNumber;
        $r37 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos>;
        $i7 = $r37.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $r38 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos>;
        $z3 = $r38.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        specialinvoke $r36.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: void <init>(int,boolean)>($i7, $z3);
        r39 = $r36;
        $r40 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        $r41 = virtualinvoke r39.<org.petero.droidfish.gamelogic.GameTree$MoveNumber: org.petero.droidfish.gamelogic.GameTree$MoveNumber prev()>();
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: void addPgnData(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver,org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.GameTree$MoveNumber,org.petero.droidfish.PGNOptions)>(r2, $r40, $r41, r1);
        interfaceinvoke r2.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(null, 9, r6);
        interfaceinvoke r2.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(null, 11, null);
        return;
    }

    private final void addTagPair(org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver, java.lang.String, java.lang.String)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver r1;
        java.lang.String r2, r3;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(null, 4, null);
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(null, 9, r2);
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(null, 0, r3);
        interfaceinvoke r1.<org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver: void processToken(org.petero.droidfish.gamelogic.GameTree$Node,int,java.lang.String)>(null, 5, null);
        return;
    }

    public final boolean readPGN(java.lang.String, org.petero.droidfish.PGNOptions) throws org.petero.droidfish.gamelogic.ChessParseError
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.lang.String r1, r9, r10, $r13, $r14, $r19, $r22, $r25, $r28, $r31, $r33, $r35, r40, $r43, r47;
        org.petero.droidfish.PGNOptions r2;
        org.petero.droidfish.gamelogic.GameTree$PgnScanner $r3, r4;
        org.petero.droidfish.gamelogic.PgnToken r5, r8, r15, $r16;
        java.util.ArrayList r6, $r11, $r55;
        org.petero.droidfish.gamelogic.GameTree$TagPair r7, $r12, $r42, $r45, $r49, $r51;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.StringBuilder $r17, $r20, $r21, $r23, $r26, $r27, $r29, $r32, $r34;
        org.petero.droidfish.gamelogic.GameTree$Node $r36, r37, $r54, $r59, $r61, $r62, $r63, $r64;
        org.petero.droidfish.gamelogic.Position $r38, $r46, $r58, $r60;
        java.util.List $r39, $r52;
        java.lang.Object $r41, $r44, $r48, $r50, $r53;
        boolean $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z14, $z15, $z16, $z17, $z18, $z19;
        org.petero.droidfish.gamelogic.Game$GameState r56, $r57;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: org.petero.droidfish.PGNOptions;
        $r3 = new org.petero.droidfish.gamelogic.GameTree$PgnScanner;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: void <init>(java.lang.String)>(r1);
        r4 = $r3;
        r5 = virtualinvoke r4.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: org.petero.droidfish.gamelogic.PgnToken nextToken()>();
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r6 = $r11;

     label0:
        $i3 = r5.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i3 != 4 goto label8;

        $r12 = new org.petero.droidfish.gamelogic.GameTree$TagPair;
        specialinvoke $r12.<org.petero.droidfish.gamelogic.GameTree$TagPair: void <init>(org.petero.droidfish.gamelogic.GameTree$1)>(null);
        r7 = $r12;
        r5 = virtualinvoke r4.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: org.petero.droidfish.gamelogic.PgnToken nextTokenDropComments()>();
        $i4 = r5.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i4 == 9 goto label1;

        goto label8;

     label1:
        $r13 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagName> = $r13;
        r5 = virtualinvoke r4.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: org.petero.droidfish.gamelogic.PgnToken nextTokenDropComments()>();
        $i5 = r5.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i5 == 0 goto label2;

        goto label8;

     label2:
        $r14 = r5.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue> = $r14;
        r15 = virtualinvoke r4.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: org.petero.droidfish.gamelogic.PgnToken nextTokenDropComments()>();
        $i6 = r15.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i6 == 5 goto label7;

        $r16 = new org.petero.droidfish.gamelogic.PgnToken;
        specialinvoke $r16.<org.petero.droidfish.gamelogic.PgnToken: void <init>(int,java.lang.String)>(0, "");
        r8 = $r16;

     label3:
        $i7 = r15.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i7 == 0 goto label4;

        $i8 = r15.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i8 != 9 goto label7;

     label4:
        $i9 = r15.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        $i10 = r8.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i9 == $i10 goto label5;

        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();
        $r19 = r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue>;
        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue> = $r22;

     label5:
        $i11 = r15.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i11 != 9 goto label6;

        $i12 = r8.<org.petero.droidfish.gamelogic.PgnToken: int type>;
        if $i12 != 9 goto label6;

        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();
        $r25 = r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue>;
        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue> = $r28;

     label6:
        $r29 = new java.lang.StringBuilder;
        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();
        $r31 = r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue>;
        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);
        $r33 = r15.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token>;
        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();
        r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue> = $r35;
        r8 = r15;
        r15 = virtualinvoke r4.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: org.petero.droidfish.gamelogic.PgnToken nextTokenDropComments()>();
        goto label3;

     label7:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r7);
        r5 = virtualinvoke r4.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: org.petero.droidfish.gamelogic.PgnToken nextToken()>();
        goto label0;

     label8:
        virtualinvoke r4.<org.petero.droidfish.gamelogic.GameTree$PgnScanner: void putBack(org.petero.droidfish.gamelogic.PgnToken)>(r5);
        $r36 = new org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke $r36.<org.petero.droidfish.gamelogic.GameTree$Node: void <init>()>();
        r37 = $r36;
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: void parsePgn(org.petero.droidfish.gamelogic.GameTree$PgnScanner,org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.PGNOptions)>(r4, r37, r2);
        $i13 = interfaceinvoke r6.<java.util.List: int size()>();
        if $i13 != 0 goto label9;

        $r38 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: boolean access$400(org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.Position)>(r37, $r38);
        $r39 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>(r37);
        $i14 = interfaceinvoke $r39.<java.util.List: int size()>();
        if $i14 != 0 goto label9;

        return 0;

     label9:
        r40 = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
        i0 = interfaceinvoke r6.<java.util.List: int size()>();
        i1 = 0;

     label10:
        if i1 >= i0 goto label12;

        $r41 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i1);
        $r42 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r41;
        $r43 = $r42.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagName>;
        $z2 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("FEN");
        if $z2 == 0 goto label11;

        $r44 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i1);
        $r45 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r44;
        r40 = $r45.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue>;

     label11:
        i1 = i1 + 1;
        goto label10;

     label12:
        $r46 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>(r40);
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void setStartPos(org.petero.droidfish.gamelogic.Position)>($r46);
        r47 = "";
        i2 = 0;

     label13:
        if i2 >= i0 goto label24;

        $r48 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i2);
        $r49 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r48;
        r9 = $r49.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagName>;
        $r50 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i2);
        $r51 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r50;
        r10 = $r51.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue>;
        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("FEN");
        if $z3 != 0 goto label23;

        $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("Setup");
        if $z4 == 0 goto label14;

        goto label23;

     label14:
        $z5 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("Event");
        if $z5 == 0 goto label15;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String event> = r10;
        goto label23;

     label15:
        $z6 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("Site");
        if $z6 == 0 goto label16;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String site> = r10;
        goto label23;

     label16:
        $z7 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("Date");
        if $z7 == 0 goto label17;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String date> = r10;
        goto label23;

     label17:
        $z8 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("Round");
        if $z8 == 0 goto label18;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String round> = r10;
        goto label23;

     label18:
        $z9 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("White");
        if $z9 == 0 goto label19;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String white> = r10;
        goto label23;

     label19:
        $z10 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("Black");
        if $z10 == 0 goto label20;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String black> = r10;
        goto label23;

     label20:
        $z11 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("Result");
        if $z11 == 0 goto label21;

        r47 = r10;
        goto label23;

     label21:
        $z12 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("TimeControl");
        if $z12 == 0 goto label22;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String timeControl> = r10;
        goto label23;

     label22:
        $r52 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        $r53 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i2);
        interfaceinvoke $r52.<java.util.List: boolean add(java.lang.Object)>($r53);

     label23:
        i2 = i2 + 1;
        goto label13;

     label24:
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode> = r37;
        $r54 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode> = $r54;

     label25:
        $r55 = virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: java.util.ArrayList variations()>();
        $i15 = virtualinvoke $r55.<java.util.ArrayList: int size()>();
        if $i15 <= 0 goto label26;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>(0);
        goto label25;

     label26:
        r56 = virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $r57 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        if r56 != $r57 goto label32;

        $z14 = virtualinvoke r47.<java.lang.String: boolean equals(java.lang.Object)>("1-0");
        if $z14 == 0 goto label28;

        $r58 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $z15 = $r58.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z15 == 0 goto label27;

        $r59 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r59.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction> = "resign";
        goto label32;

     label27:
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: int addMove(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>("--", "resign", 0, "", "");
        goto label32;

     label28:
        $z16 = virtualinvoke r47.<java.lang.String: boolean equals(java.lang.Object)>("0-1");
        if $z16 == 0 goto label30;

        $r60 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $z17 = $r60.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z17 != 0 goto label29;

        $r61 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r61.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction> = "resign";
        goto label32;

     label29:
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: int addMove(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>("--", "resign", 0, "", "");
        goto label32;

     label30:
        $z18 = virtualinvoke r47.<java.lang.String: boolean equals(java.lang.Object)>("1/2-1/2");
        if $z18 != 0 goto label31;

        $z19 = virtualinvoke r47.<java.lang.String: boolean equals(java.lang.Object)>("1/2");
        if $z19 == 0 goto label32;

     label31:
        $r62 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r62.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction> = "draw offer";
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: int addMove(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>("--", "draw accept", 0, "", "");

     label32:
        $r63 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r64 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r63 == $r64 goto label33;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        goto label32;

     label33:
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();
        return 1;
    }

    public final byte[] toByteArray()
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.io.ByteArrayOutputStream $r1, r2;
        java.io.DataOutputStream r3, $r4;
        int i0, i1, i2, i3, $i4;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r18, $r22;
        org.petero.droidfish.gamelogic.Position $r11;
        java.util.List $r14, $r15, $r19;
        java.lang.Object $r16, $r20, $r26;
        org.petero.droidfish.gamelogic.GameTree$TagPair $r17, $r21;
        org.petero.droidfish.gamelogic.GameTree$Node $r23, $r24;
        java.util.ArrayList r25;
        java.lang.Integer $r27;
        byte[] r28;
        java.io.IOException $r30, r31;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;

     label0:
        $r1 = new java.io.ByteArrayOutputStream;
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>(32768);
        r2 = $r1;
        $r4 = new java.io.DataOutputStream;
        specialinvoke $r4.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r2);
        r3 = $r4;
        $r5 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String event>;
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r5);
        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String site>;
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r6);
        $r7 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String date>;
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r7);
        $r8 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String round>;
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r8);
        $r9 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String white>;
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r9);
        $r10 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String black>;
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r10);
        $r11 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos>;
        $r12 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String toFEN(org.petero.droidfish.gamelogic.Position)>($r11);
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r12);
        $r13 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String timeControl>;
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r13);
        $r14 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        i0 = interfaceinvoke $r14.<java.util.List: int size()>();
        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>(i0);
        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r15 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i1);
        $r17 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r16;
        $r18 = $r17.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagName>;
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r18);
        $r19 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i1);
        $r21 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r20;
        $r22 = $r21.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue>;
        virtualinvoke r3.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r22);
        i1 = i1 + 1;
        goto label1;

     label2:
        $r23 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: void writeToStream(java.io.DataOutputStream,org.petero.droidfish.gamelogic.GameTree$Node)>(r3, $r23);
        $r24 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        r25 = virtualinvoke $r24.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.ArrayList getPathFromRoot()>();
        i2 = virtualinvoke r25.<java.util.ArrayList: int size()>();
        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>(i2);
        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $r26 = virtualinvoke r25.<java.util.ArrayList: java.lang.Object get(int)>(i3);
        $r27 = (java.lang.Integer) $r26;
        $i4 = virtualinvoke $r27.<java.lang.Integer: int intValue()>();
        virtualinvoke r3.<java.io.DataOutputStream: void writeInt(int)>($i4);
        i3 = i3 + 1;
        goto label3;

     label4:
        virtualinvoke r3.<java.io.DataOutputStream: void flush()>();
        virtualinvoke r3.<java.io.DataOutputStream: void close()>();
        r28 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void close()>();

     label5:
        return r28;

     label6:
        $r30 := @caughtexception;
        r31 = $r30;
        return null;

        catch java.io.IOException from label0 to label5 with label6;
    }

    public final void fromByteArray(byte[])
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        byte[] r1;
        java.io.ByteArrayInputStream $r2, r3;
        java.io.DataInputStream r4, $r6;
        int i0, i1, i2, i3, $i4;
        org.petero.droidfish.gamelogic.GameTree$TagPair r5, $r19;
        java.lang.String $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r17, $r20, $r21;
        org.petero.droidfish.gamelogic.Position $r14, $r15, $r16;
        java.util.List $r18, $r22;
        org.petero.droidfish.gamelogic.GameTree$Node $r23, $r24, $r25;
        java.io.IOException $r26, r27;
        org.petero.droidfish.gamelogic.ChessParseError $r28, r29;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: byte[];

     label0:
        $r2 = new java.io.ByteArrayInputStream;
        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);
        r3 = $r2;
        $r6 = new java.io.DataInputStream;
        specialinvoke $r6.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r3);
        r4 = $r6;
        $r7 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String event> = $r7;
        $r8 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String site> = $r8;
        $r9 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String date> = $r9;
        $r10 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String round> = $r10;
        $r11 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String white> = $r11;
        $r12 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String black> = $r12;
        $r13 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        $r14 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Position readFEN(java.lang.String)>($r13);
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos> = $r14;
        $r15 = new org.petero.droidfish.gamelogic.Position;
        $r16 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position startPos>;
        specialinvoke $r15.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r16);
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos> = $r15;
        $r17 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String timeControl> = $r17;
        i0 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();
        $r18 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        interfaceinvoke $r18.<java.util.List: void clear()>();
        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r19 = new org.petero.droidfish.gamelogic.GameTree$TagPair;
        specialinvoke $r19.<org.petero.droidfish.gamelogic.GameTree$TagPair: void <init>(org.petero.droidfish.gamelogic.GameTree$1)>(null);
        r5 = $r19;
        $r20 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        r5.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagName> = $r20;
        $r21 = virtualinvoke r4.<java.io.DataInputStream: java.lang.String readUTF()>();
        r5.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue> = $r21;
        $r22 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>(r5);
        i1 = i1 + 1;
        goto label1;

     label2:
        $r23 = new org.petero.droidfish.gamelogic.GameTree$Node;
        specialinvoke $r23.<org.petero.droidfish.gamelogic.GameTree$Node: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode> = $r23;
        $r24 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: void readFromStream(java.io.DataInputStream,org.petero.droidfish.gamelogic.GameTree$Node)>(r4, $r24);
        $r25 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode> = $r25;
        i2 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();
        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $i4 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>($i4);
        i3 = i3 + 1;
        goto label3;

     label4:
        virtualinvoke r4.<java.io.DataInputStream: void close()>();
        virtualinvoke r3.<java.io.ByteArrayInputStream: void close()>();

     label5:
        goto label8;

     label6:
        $r26 := @caughtexception;
        r27 = $r26;
        goto label8;

     label7:
        $r28 := @caughtexception;
        r29 = $r28;

     label8:
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();
        return;

        catch java.io.IOException from label0 to label5 with label6;
        catch org.petero.droidfish.gamelogic.ChessParseError from label0 to label5 with label7;
    }

    public final void goBack()
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        org.petero.droidfish.gamelogic.GameTree$Node $r1, $r2, $r4, $r6, $r8, $r9;
        org.petero.droidfish.gamelogic.Position $r3;
        org.petero.droidfish.gamelogic.Move $r5;
        org.petero.droidfish.gamelogic.UndoInfo $r7;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        $r1 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r2 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node access$500(org.petero.droidfish.gamelogic.GameTree$Node)>($r1);
        if $r2 == null goto label0;

        $r3 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $r4 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r5 = $r4.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r7 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.UndoInfo access$600(org.petero.droidfish.gamelogic.GameTree$Node)>($r6);
        virtualinvoke $r3.<org.petero.droidfish.gamelogic.Position: void unMakeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r5, $r7);
        $r8 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r9 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node access$500(org.petero.droidfish.gamelogic.GameTree$Node)>($r8);
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode> = $r9;

     label0:
        return;
    }

    public final void goForward(int)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        int i0;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        i0 := @parameter0: int;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goForward(int,boolean)>(i0, 1);
        return;
    }

    public final void goForward(int, boolean)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        int i0, i1;
        boolean z0, $z1;
        org.petero.droidfish.gamelogic.GameTree$Node $r1, $r3, $r4, $r6, $r7, $r10, $r12, $r14;
        org.petero.droidfish.gamelogic.Position $r2, $r11, $r16;
        java.util.List $r5, $r8;
        java.lang.Object $r9;
        org.petero.droidfish.gamelogic.Move $r13;
        org.petero.droidfish.gamelogic.UndoInfo $r15;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        $r1 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r2 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $z1 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: boolean access$400(org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.Position)>($r1, $r2);
        if $z1 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();

     label0:
        if i0 >= 0 goto label1;

        $r3 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        i0 = $r3.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;

     label1:
        $r4 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r5 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r4);
        i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        if i0 < i1 goto label2;

        i0 = 0;

     label2:
        if z0 == 0 goto label3;

        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r6.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild> = i0;

     label3:
        if i1 <= 0 goto label4;

        $r7 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r8 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r7);
        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);
        $r10 = (org.petero.droidfish.gamelogic.GameTree$Node) $r9;
        r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode> = $r10;
        $r11 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $r12 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r13 = $r12.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        $r14 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r15 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.UndoInfo access$600(org.petero.droidfish.gamelogic.GameTree$Node)>($r14);
        virtualinvoke $r11.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r13, $r15);
        $r16 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void fixupEPSquare(org.petero.droidfish.gamelogic.Position)>($r16);

     label4:
        return;
    }

    public final boolean goNode(org.petero.droidfish.gamelogic.GameTree$Node)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        org.petero.droidfish.gamelogic.GameTree$Node r1, $r5, $r6, $r7;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        java.lang.Integer r4;
        boolean $z0;
        java.lang.Object $r8;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: org.petero.droidfish.gamelogic.GameTree$Node;
        $r5 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        if r1 != $r5 goto label0;

        return 0;

     label0:
        r2 = virtualinvoke r1.<org.petero.droidfish.gamelogic.GameTree$Node: java.util.ArrayList getPathFromRoot()>();

     label1:
        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r7 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if $r6 == $r7 goto label2;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goBack()>();
        goto label1;

     label2:
        r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.lang.Integer) $r8;
        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();
        virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void goForward(int)>($i0);
        goto label3;

     label4:
        return 1;
    }

    public final java.util.ArrayList variations()
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.util.ArrayList r1, $r6;
        java.util.Iterator r2;
        org.petero.droidfish.gamelogic.GameTree$Node r3, $r4, $r7;
        org.petero.droidfish.gamelogic.Position $r5;
        boolean $z0, $z1;
        java.util.List $r8;
        java.lang.Object $r9;
        org.petero.droidfish.gamelogic.Move $r10;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        $r4 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r5 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $z0 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: boolean access$400(org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.Position)>($r4, $r5);
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();

     label0:
        $r6 = new java.util.ArrayList;
        specialinvoke $r6.<java.util.ArrayList: void <init>()>();
        r1 = $r6;
        $r7 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r8 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r7);
        r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.petero.droidfish.gamelogic.GameTree$Node) $r9;
        $r10 = r3.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);
        goto label1;

     label2:
        return r1;
    }

    public final int addMove(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.lang.String r1, r2, r3, r4, $r20, $r22;
        int i0, i1;
        org.petero.droidfish.gamelogic.GameTree$Node r5, $r8, $r10, $r12, $r13, $r25;
        org.petero.droidfish.gamelogic.Move r6;
        java.util.ArrayList r7;
        org.petero.droidfish.gamelogic.Position $r9, $r15, $r16, $r18, $r19, $r21;
        boolean $z0;
        java.util.List $r11, $r26;
        org.petero.droidfish.gamelogic.MoveGen $r14, $r17;
        org.petero.droidfish.gamelogic.UndoInfo $r23;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        r3 := @parameter3: java.lang.String;
        r4 := @parameter4: java.lang.String;
        $r8 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r9 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $z0 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: boolean access$400(org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.Position)>($r8, $r9);
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();

     label0:
        $r10 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r11 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r10);
        i1 = interfaceinvoke $r11.<java.util.List: int size()>();
        $r12 = new org.petero.droidfish.gamelogic.GameTree$Node;
        $r13 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        specialinvoke $r12.<org.petero.droidfish.gamelogic.GameTree$Node: void <init>(org.petero.droidfish.gamelogic.GameTree$Node,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String)>($r13, r1, r2, -2147483648, i0, r3, r4);
        r5 = $r12;
        r6 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move UCIstringToMove(java.lang.String)>(r1);
        r7 = null;
        if r6 != null goto label1;

        $r14 = <org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.MoveGen instance>;
        $r15 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        r7 = virtualinvoke $r14.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>($r15);
        $r16 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        r6 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move stringToMove(org.petero.droidfish.gamelogic.Position,java.lang.String,java.util.ArrayList)>($r16, r1, r7);

     label1:
        if r6 != null goto label2;

        return -1;

     label2:
        if r7 != null goto label3;

        $r17 = <org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.MoveGen instance>;
        $r18 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        r7 = virtualinvoke $r17.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>($r18);

     label3:
        $r19 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $r20 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean,java.util.List)>($r19, r6, 0, 0, r7);
        r5.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStr> = $r20;
        $r21 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $r22 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean,java.util.List)>($r21, r6, 0, 1, r7);
        r5.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String moveStrLocal> = $r22;
        r5.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move> = r6;
        $r23 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r23.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.UndoInfo access$602(org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.UndoInfo)>(r5, $r23);
        $r25 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r26 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r25);
        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>(r5);
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();
        return i1;
    }

    public final void reorderVariation(int, int)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        int i0, i1, i2, i3;
        org.petero.droidfish.gamelogic.GameTree$Node r1, $r2, $r4, $r6, $r9, $r12, $r14, $r15;
        org.petero.droidfish.gamelogic.Position $r3;
        boolean $z0;
        java.util.List $r5, $r7, $r10, $r13;
        java.lang.Object $r8;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r3 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $z0 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: boolean access$400(org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.Position)>($r2, $r3);
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();

     label0:
        $r4 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r5 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r4);
        i2 = interfaceinvoke $r5.<java.util.List: int size()>();
        if i0 < 0 goto label1;

        if i0 >= i2 goto label1;

        if i1 < 0 goto label1;

        if i1 < i2 goto label2;

     label1:
        return;

     label2:
        $r6 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r7 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r6);
        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);
        r1 = (org.petero.droidfish.gamelogic.GameTree$Node) $r8;
        $r9 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r10 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r9);
        interfaceinvoke $r10.<java.util.List: java.lang.Object remove(int)>(i0);
        $r12 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r13 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r12);
        interfaceinvoke $r13.<java.util.List: void add(int,java.lang.Object)>(i1, r1);
        $r14 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        i3 = $r14.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        if i0 != i3 goto label3;

        i3 = i1;
        goto label5;

     label3:
        if i0 >= i3 goto label4;

        i3 = i3 + -1;

     label4:
        if i1 > i3 goto label5;

        i3 = i3 + 1;

     label5:
        $r15 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r15.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild> = i3;
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();
        return;
    }

    public final void deleteVariation(int)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        org.petero.droidfish.gamelogic.GameTree$Node $r1, $r3, $r5, $r8, $r9, $r10, $r11;
        org.petero.droidfish.gamelogic.Position $r2;
        boolean $z0;
        java.util.List $r4, $r6;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r2 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $z0 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: boolean access$400(org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.Position)>($r1, $r2);
        if $z0 == 0 goto label0;

        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();

     label0:
        $r3 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r4 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r3);
        i1 = interfaceinvoke $r4.<java.util.List: int size()>();
        if i0 < 0 goto label1;

        if i0 < i1 goto label2;

     label1:
        return;

     label2:
        $r5 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r6 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>($r5);
        interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>(i0);
        $r8 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $i2 = $r8.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        if i0 != $i2 goto label3;

        $r9 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r9.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild> = 0;
        goto label4;

     label3:
        $r10 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $i3 = $r10.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        if i0 >= $i3 goto label4;

        $r11 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $i4 = $r11.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        $i5 = $i4 - 1;
        $r11.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild> = $i5;

     label4:
        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();
        return;
    }

    public final org.petero.droidfish.gamelogic.Pair getMoveList()
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.util.ArrayList $r1, r2;
        org.petero.droidfish.gamelogic.GameTree$Node r3, r6, $r7, r8;
        int i0, $i1, $i2, $i3;
        org.petero.droidfish.gamelogic.Position r4, $r9, $r10;
        org.petero.droidfish.gamelogic.UndoInfo r5, $r11;
        boolean z0, $z2;
        java.util.List $r12, $r13;
        java.lang.Object $r14;
        org.petero.droidfish.gamelogic.Move $r15;
        org.petero.droidfish.gamelogic.Pair $r16;
        java.lang.Integer $r17;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r2 = $r1;
        r3 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;

     label0:
        $r7 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node rootNode>;
        if r3 == $r7 goto label1;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);
        r3 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node access$500(org.petero.droidfish.gamelogic.GameTree$Node)>(r3);
        goto label0;

     label1:
        staticinvoke <java.util.Collections: void reverse(java.util.List)>(r2);
        i0 = interfaceinvoke r2.<java.util.List: int size()>();
        r8 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r9 = new org.petero.droidfish.gamelogic.Position;
        $r10 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        specialinvoke $r9.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>($r10);
        r4 = $r9;
        $r11 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r11.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r5 = $r11;
        z0 = 0;

     label2:
        $z2 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: boolean access$400(org.petero.droidfish.gamelogic.GameTree$Node,org.petero.droidfish.gamelogic.Position)>(r8, r4);
        if $z2 == 0 goto label3;

        z0 = 1;

     label3:
        $i1 = r8.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        $r12 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>(r8);
        $i2 = interfaceinvoke $r12.<java.util.List: int size()>();
        if $i1 < $i2 goto label4;

        goto label5;

     label4:
        $r13 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: java.util.List access$000(org.petero.droidfish.gamelogic.GameTree$Node)>(r8);
        $i3 = r8.<org.petero.droidfish.gamelogic.GameTree$Node: int defaultChild>;
        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>($i3);
        r6 = (org.petero.droidfish.gamelogic.GameTree$Node) $r14;
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);
        $r15 = r6.<org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.Move move>;
        virtualinvoke r4.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>($r15, r5);
        r8 = r6;
        goto label2;

     label5:
        if z0 == 0 goto label6;

        specialinvoke r0.<org.petero.droidfish.gamelogic.GameTree: void updateListener()>();

     label6:
        $r16 = new org.petero.droidfish.gamelogic.Pair;
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        specialinvoke $r16.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>(r2, $r17);
        return $r16;
    }

    final void setRemainingTime(int)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        int i0;
        org.petero.droidfish.gamelogic.GameTree$Node $r1;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r1.<org.petero.droidfish.gamelogic.GameTree$Node: int remainingTime> = i0;
        return;
    }

    final int getRemainingTime(boolean, int)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        boolean z0, z1, $z2;
        int i0, i1, i2;
        org.petero.droidfish.gamelogic.GameTree$Node r1, r2;
        org.petero.droidfish.gamelogic.Position $r3;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        z0 := @parameter0: boolean;
        i0 := @parameter1: int;
        i1 = -2147483648;
        i2 = i1;
        r1 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        $r3 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        z1 = $r3.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;

     label0:
        if z1 == z0 goto label1;

        i2 = r1.<org.petero.droidfish.gamelogic.GameTree$Node: int remainingTime>;
        if i2 == i1 goto label1;

        goto label5;

     label1:
        r2 = staticinvoke <org.petero.droidfish.gamelogic.GameTree$Node: org.petero.droidfish.gamelogic.GameTree$Node access$500(org.petero.droidfish.gamelogic.GameTree$Node)>(r1);
        if r2 != null goto label2;

        goto label5;

     label2:
        if z1 != 0 goto label3;

        $z2 = 1;
        goto label4;

     label3:
        $z2 = 0;

     label4:
        z1 = $z2;
        r1 = r2;
        goto label0;

     label5:
        if i2 != i1 goto label6;

        i2 = i0;

     label6:
        return i2;
    }

    final org.petero.droidfish.gamelogic.Game$GameState getGameState()
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        org.petero.droidfish.gamelogic.Position r1;
        java.lang.String r2;
        java.util.ArrayList r3;
        org.petero.droidfish.gamelogic.GameTree$Node $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.petero.droidfish.gamelogic.Game$GameState $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.petero.droidfish.gamelogic.MoveGen $r6;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Position currentPos>;
        $r4 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        r2 = $r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction>;
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("resign");
        if $z0 == 0 goto label2;

        $z1 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z1 == 0 goto label0;

        $r5 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_BLACK>;
        goto label1;

     label0:
        $r5 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState RESIGN_WHITE>;

     label1:
        return $r5;

     label2:
        $r6 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r6.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        r3 = virtualinvoke $r6.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r1);
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        if $i0 != 0 goto label8;

        $z2 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: boolean inCheck(org.petero.droidfish.gamelogic.Position)>(r1);
        if $z2 == 0 goto label5;

        $z3 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z3 == 0 goto label3;

        $r7 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_MATE>;
        goto label4;

     label3:
        $r7 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_MATE>;

     label4:
        return $r7;

     label5:
        $z4 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z4 == 0 goto label6;

        $r8 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState WHITE_STALEMATE>;
        goto label7;

     label6:
        $r8 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState BLACK_STALEMATE>;

     label7:
        return $r8;

     label8:
        $z5 = staticinvoke <org.petero.droidfish.gamelogic.GameTree: boolean insufficientMaterial(org.petero.droidfish.gamelogic.Position)>(r1);
        if $z5 == 0 goto label9;

        $r9 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_NO_MATE>;
        return $r9;

     label9:
        $z6 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("draw accept");
        if $z6 == 0 goto label10;

        $r10 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_AGREE>;
        return $r10;

     label10:
        $z7 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("draw rep");
        if $z7 == 0 goto label11;

        $r11 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_REP>;
        return $r11;

     label11:
        $z8 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("draw 50");
        if $z8 == 0 goto label12;

        $r12 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState DRAW_50>;
        return $r12;

     label12:
        $r13 = <org.petero.droidfish.gamelogic.Game$GameState: org.petero.droidfish.gamelogic.Game$GameState ALIVE>;
        return $r13;
    }

    final java.lang.String getGameStateInfo(boolean)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        boolean z0, $z1, $z2;
        java.lang.String r1, r2, $r5, $r6, $r9;
        java.lang.StringBuilder r3, $r7;
        int i0, $i2;
        byte b1;
        org.petero.droidfish.gamelogic.GameTree$Node $r4;
        char $c3, $c4;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        z0 := @parameter0: boolean;
        r1 = "";
        $r4 = r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.GameTree$Node currentNode>;
        r2 = $r4.<org.petero.droidfish.gamelogic.GameTree$Node: java.lang.String playerAction>;
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("draw rep ");
        if $z1 == 0 goto label0;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(9);
        r1 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

     label0:
        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("draw 50 ");
        if $z2 == 0 goto label1;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(8);
        r1 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

     label1:
        if z0 == 0 goto label13;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        r3 = $r7;
        i0 = 0;

     label2:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        if i0 >= $i2 goto label12;

        b1 = 0;
        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
        tableswitch($c3)
        {
            case 66: goto label5;
            case 67: goto label9;
            case 68: goto label9;
            case 69: goto label9;
            case 70: goto label9;
            case 71: goto label9;
            case 72: goto label9;
            case 73: goto label9;
            case 74: goto label9;
            case 75: goto label7;
            case 76: goto label9;
            case 77: goto label9;
            case 78: goto label6;
            case 79: goto label9;
            case 80: goto label8;
            case 81: goto label3;
            case 82: goto label4;
            default: goto label9;
        };

     label3:
        b1 = 2;
        goto label9;

     label4:
        b1 = 3;
        goto label9;

     label5:
        b1 = 4;
        goto label9;

     label6:
        b1 = 5;
        goto label9;

     label7:
        b1 = 1;
        goto label9;

     label8:
        b1 = 6;

     label9:
        if b1 != 0 goto label10;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);
        goto label11;

     label10:
        $r9 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pieceToCharLocalized(int)>(b1);
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label11:
        i0 = i0 + 1;
        goto label2;

     label12:
        r1 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        return r1;
    }

    public final java.lang.String getPGNResultString()
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.lang.String r1;
        int[] $r2;
        org.petero.droidfish.gamelogic.Game$GameState $r3;
        int $i0, $i1;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 = "*";
        $r2 = <org.petero.droidfish.gamelogic.GameTree$1: int[] $SwitchMap$org$petero$droidfish$gamelogic$Game$GameState>;
        $r3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.GameTree: org.petero.droidfish.gamelogic.Game$GameState getGameState()>();
        $i0 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.Game$GameState: int ordinal()>();
        $i1 = $r2[$i0];
        tableswitch($i1)
        {
            case 1: goto label0;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label3;
            case 8: goto label3;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            default: goto label4;
        };

     label0:
        goto label4;

     label1:
        r1 = "1-0";
        goto label4;

     label2:
        r1 = "0-1";
        goto label4;

     label3:
        r1 = "1/2-1/2";

     label4:
        return r1;
    }

    private static final boolean insufficientMaterial(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean z0, z1, $z2;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $i7 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(2);
        if $i7 <= 0 goto label0;

        return 0;

     label0:
        $i8 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(3);
        if $i8 <= 0 goto label1;

        return 0;

     label1:
        $i9 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(6);
        if $i9 <= 0 goto label2;

        return 0;

     label2:
        $i10 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(8);
        if $i10 <= 0 goto label3;

        return 0;

     label3:
        $i11 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(9);
        if $i11 <= 0 goto label4;

        return 0;

     label4:
        $i12 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(12);
        if $i12 <= 0 goto label5;

        return 0;

     label5:
        i0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(4);
        i1 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(5);
        i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(10);
        i3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int nPieces(int)>(11);
        $i13 = i0 + i1;
        $i14 = $i13 + i2;
        $i15 = $i14 + i3;
        if $i15 > 1 goto label6;

        return 1;

     label6:
        $i16 = i1 + i3;
        if $i16 != 0 goto label15;

        z0 = 0;
        z1 = 0;
        i4 = 0;

     label7:
        if i4 >= 8 goto label13;

        i5 = 0;

     label8:
        if i5 >= 8 goto label12;

        $i17 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i4, i5);
        i6 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i17);
        if i6 == 10 goto label9;

        if i6 != 4 goto label11;

     label9:
        $z2 = staticinvoke <org.petero.droidfish.gamelogic.Position: boolean darkSquare(int,int)>(i4, i5);
        if $z2 == 0 goto label10;

        z0 = 1;
        goto label11;

     label10:
        z1 = 1;

     label11:
        i5 = i5 + 1;
        goto label8;

     label12:
        i4 = i4 + 1;
        goto label7;

     label13:
        if z0 == 0 goto label14;

        if z1 != 0 goto label15;

     label14:
        return 1;

     label15:
        return 0;
    }

    void setHeaders(java.util.Map)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.util.Map r1;
        java.util.Iterator r2, r6;
        java.util.Map$Entry r3;
        java.lang.String r4, r5, $r14;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.petero.droidfish.gamelogic.GameTree$TagPair r7, $r15, r16;
        java.util.Set $r8;
        java.lang.Object $r9, $r10, $r11, $r13;
        java.util.List $r12, $r17;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: java.util.Map;
        $r8 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label11;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r9;
        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        r4 = (java.lang.String) $r10;
        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        r5 = (java.lang.String) $r11;
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("Event");
        if $z2 == 0 goto label1;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String event> = r5;
        goto label10;

     label1:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("Site");
        if $z3 == 0 goto label2;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String site> = r5;
        goto label10;

     label2:
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("Date");
        if $z4 == 0 goto label3;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String date> = r5;
        goto label10;

     label3:
        $z5 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("Round");
        if $z5 == 0 goto label4;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String round> = r5;
        goto label10;

     label4:
        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("White");
        if $z6 == 0 goto label5;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String white> = r5;
        goto label10;

     label5:
        $z7 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("Black");
        if $z7 == 0 goto label6;

        r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String black> = r5;
        goto label10;

     label6:
        z0 = 0;
        $r12 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        r6 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z8 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z8 == 0 goto label9;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r13;
        $r14 = r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagName>;
        $z9 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z9 == 0 goto label8;

        r7.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue> = r5;
        z0 = 1;
        goto label9;

     label8:
        goto label7;

     label9:
        if z0 != 0 goto label10;

        $r15 = new org.petero.droidfish.gamelogic.GameTree$TagPair;
        specialinvoke $r15.<org.petero.droidfish.gamelogic.GameTree$TagPair: void <init>(org.petero.droidfish.gamelogic.GameTree$1)>(null);
        r16 = $r15;
        r16.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagName> = r4;
        r16.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue> = r5;
        $r17 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(r16);

     label10:
        goto label0;

     label11:
        return;
    }

    void getHeaders(java.util.Map)
    {
        org.petero.droidfish.gamelogic.GameTree r0;
        java.util.Map r1;
        int i0, $i1;
        org.petero.droidfish.gamelogic.GameTree$TagPair r2;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r13, $r18, $r19;
        java.util.List $r15, $r16;
        java.lang.Object $r17;

        r0 := @this: org.petero.droidfish.gamelogic.GameTree;
        r1 := @parameter0: java.util.Map;
        $r3 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String event>;
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Event", $r3);
        $r5 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String site>;
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Site", $r5);
        $r7 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String date>;
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Date", $r7);
        $r9 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String round>;
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Round", $r9);
        $r11 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String white>;
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("White", $r11);
        $r13 = r0.<org.petero.droidfish.gamelogic.GameTree: java.lang.String black>;
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Black", $r13);
        i0 = 0;

     label0:
        $r15 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        $i1 = interfaceinvoke $r15.<java.util.List: int size()>();
        if i0 >= $i1 goto label1;

        $r16 = r0.<org.petero.droidfish.gamelogic.GameTree: java.util.List tagPairs>;
        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i0);
        r2 = (org.petero.droidfish.gamelogic.GameTree$TagPair) $r17;
        $r18 = r2.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagName>;
        $r19 = r2.<org.petero.droidfish.gamelogic.GameTree$TagPair: java.lang.String tagValue>;
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);
        i0 = i0 + 1;
        goto label0;

     label1:
        return;
    }
}
public class org.petero.droidfish.gamelogic.Move extends java.lang.Object
{
    public int 'from';
    public int 'to';
    public int promoteTo;

    public void <init>(int, int, int)
    {
        org.petero.droidfish.gamelogic.Move r0;
        int i0, i1, i2;

        r0 := @this: org.petero.droidfish.gamelogic.Move;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.Move: int 'from'> = i0;
        r0.<org.petero.droidfish.gamelogic.Move: int 'to'> = i1;
        r0.<org.petero.droidfish.gamelogic.Move: int promoteTo> = i2;
        return;
    }

    public void <init>(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.Move r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: org.petero.droidfish.gamelogic.Move;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $i0 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        r0.<org.petero.droidfish.gamelogic.Move: int 'from'> = $i0;
        $i1 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        r0.<org.petero.droidfish.gamelogic.Move: int 'to'> = $i1;
        $i2 = r1.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        r0.<org.petero.droidfish.gamelogic.Move: int promoteTo> = $i2;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.petero.droidfish.gamelogic.Move r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.petero.droidfish.gamelogic.Move;
        r1 := @parameter0: java.lang.Object;
        if r1 == null goto label0;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label1;

     label0:
        return 0;

     label1:
        r2 = (org.petero.droidfish.gamelogic.Move) r1;
        $i0 = r0.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i1 = r2.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $i2 = r0.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i3 = r2.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i2 == $i3 goto label3;

        return 0;

     label3:
        $i4 = r0.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        $i5 = r2.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        if $i4 == $i5 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        org.petero.droidfish.gamelogic.Move r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.petero.droidfish.gamelogic.Move;
        $i0 = r0.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i1 = $i0 * 64;
        $i2 = r0.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i3 = $i1 + $i2;
        $i4 = $i3 * 16;
        $i5 = r0.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        $i6 = $i4 + $i5;
        return $i6;
    }

    public final java.lang.String toString()
    {
        org.petero.droidfish.gamelogic.Move r0;
        java.lang.String $r1;

        r0 := @this: org.petero.droidfish.gamelogic.Move;
        $r1 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)>(r0);
        return $r1;
    }
}
public class org.petero.droidfish.gamelogic.MoveGen extends java.lang.Object
{
    static org.petero.droidfish.gamelogic.MoveGen instance;
    private org.petero.droidfish.gamelogic.Move[] moveCache;
    private int movesInCache;
    private java.lang.Object[] moveListCache;
    private int moveListsInCache;

    public void <init>()
    {
        org.petero.droidfish.gamelogic.MoveGen r0;
        org.petero.droidfish.gamelogic.Move[] $r1;
        java.lang.Object[] $r2;

        r0 := @this: org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (org.petero.droidfish.gamelogic.Move)[2048];
        r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move[] moveCache> = $r1;
        r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache> = 0;
        $r2 = newarray (java.lang.Object)[200];
        r0.<org.petero.droidfish.gamelogic.MoveGen: java.lang.Object[] moveListCache> = $r2;
        r0.<org.petero.droidfish.gamelogic.MoveGen: int moveListsInCache> = 0;
        return;
    }

    public final java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.MoveGen r0;
        org.petero.droidfish.gamelogic.Position r1;
        java.util.ArrayList r2, r3;

        r0 := @this: org.petero.droidfish.gamelogic.MoveGen;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList pseudoLegalMoves(org.petero.droidfish.gamelogic.Position)>(r1);
        r3 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList removeIllegal(org.petero.droidfish.gamelogic.Position,java.util.ArrayList)>(r1, r2);
        return r3;
    }

    public final java.util.ArrayList pseudoLegalMoves(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.MoveGen r0;
        org.petero.droidfish.gamelogic.Position r1;
        java.util.ArrayList r2, r5, r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z29, $z30, $z32, $z34;
        int i0, i1, i2, i3, i4, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i49, $i50, $i51, $i52, $i54, $i55, $i56, $i57, $i58, $i59, i60, i61, $i64, $i65, i66, i67, $i70;
        byte b5, b6, b7, $b20, $b21, $b22, $b47, b48, $b53, $b63, $b69;
        org.petero.droidfish.gamelogic.Move $r3, $r4, $r6, $r8;

        r0 := @this: org.petero.droidfish.gamelogic.MoveGen;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r2 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList getMoveListObj()>();
        z0 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        i0 = 0;

     label0:
        if i0 >= 8 goto label58;

        i1 = 0;

     label1:
        if i1 >= 8 goto label57;

        i2 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i0, i1);
        i3 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i2);
        if i3 == 0 goto label56;

        $z1 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i3);
        if $z1 == z0 goto label2;

        goto label56;

     label2:
        if i3 == 3 goto label3;

        if i3 == 9 goto label3;

        if i3 == 2 goto label3;

        if i3 != 8 goto label7;

     label3:
        $i8 = 7 - i0;
        $z2 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, $i8, 1);
        if $z2 == 0 goto label4;

        return r2;

     label4:
        $i9 = 7 - i1;
        $z3 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, $i9, 8);
        if $z3 == 0 goto label5;

        return r2;

     label5:
        $z4 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, i0, -1);
        if $z4 == 0 goto label6;

        return r2;

     label6:
        $z5 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, i1, -8);
        if $z5 == 0 goto label7;

        return r2;

     label7:
        if i3 == 4 goto label8;

        if i3 == 10 goto label8;

        if i3 == 2 goto label8;

        if i3 != 8 goto label12;

     label8:
        $i10 = 7 - i0;
        $i11 = 7 - i1;
        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i11);
        $z6 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, $i12, 9);
        if $z6 == 0 goto label9;

        return r2;

     label9:
        $i13 = 7 - i1;
        $i14 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i13);
        $z7 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, $i14, 7);
        if $z7 == 0 goto label10;

        return r2;

     label10:
        $i15 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);
        $z8 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, $i15, -9);
        if $z8 == 0 goto label11;

        return r2;

     label11:
        $i16 = 7 - i0;
        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i1);
        $z9 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, $i17, -7);
        if $z9 == 0 goto label12;

        return r2;

     label12:
        if i3 == 5 goto label13;

        if i3 != 11 goto label21;

     label13:
        if i0 >= 6 goto label14;

        if i1 >= 7 goto label14;

        $z10 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, 10);
        if $z10 == 0 goto label14;

        return r2;

     label14:
        if i0 >= 7 goto label15;

        if i1 >= 6 goto label15;

        $z11 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, 17);
        if $z11 == 0 goto label15;

        return r2;

     label15:
        if i0 <= 0 goto label16;

        if i1 >= 6 goto label16;

        $z12 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, 15);
        if $z12 == 0 goto label16;

        return r2;

     label16:
        if i0 <= 1 goto label17;

        if i1 >= 7 goto label17;

        $z13 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, 6);
        if $z13 == 0 goto label17;

        return r2;

     label17:
        if i0 <= 1 goto label18;

        if i1 <= 0 goto label18;

        $z14 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, -10);
        if $z14 == 0 goto label18;

        return r2;

     label18:
        if i0 <= 0 goto label19;

        if i1 <= 1 goto label19;

        $z15 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, -17);
        if $z15 == 0 goto label19;

        return r2;

     label19:
        if i0 >= 7 goto label20;

        if i1 <= 1 goto label20;

        $z16 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, -15);
        if $z16 == 0 goto label20;

        return r2;

     label20:
        if i0 >= 6 goto label21;

        if i1 <= 0 goto label21;

        $z17 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, -6);
        if $z17 == 0 goto label21;

        return r2;

     label21:
        if i3 == 1 goto label22;

        if i3 != 7 goto label40;

     label22:
        if i0 >= 7 goto label23;

        $z18 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, 1);
        if $z18 == 0 goto label23;

        return r2;

     label23:
        if i0 >= 7 goto label24;

        if i1 >= 7 goto label24;

        $z19 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, 9);
        if $z19 == 0 goto label24;

        return r2;

     label24:
        if i1 >= 7 goto label25;

        $z20 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, 8);
        if $z20 == 0 goto label25;

        return r2;

     label25:
        if i0 <= 0 goto label26;

        if i1 >= 7 goto label26;

        $z21 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, 7);
        if $z21 == 0 goto label26;

        return r2;

     label26:
        if i0 <= 0 goto label27;

        $z22 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, -1);
        if $z22 == 0 goto label27;

        return r2;

     label27:
        if i0 <= 0 goto label28;

        if i1 <= 0 goto label28;

        $z23 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, -9);
        if $z23 == 0 goto label28;

        return r2;

     label28:
        if i1 <= 0 goto label29;

        $z24 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, -8);
        if $z24 == 0 goto label29;

        return r2;

     label29:
        if i0 >= 7 goto label30;

        if i1 <= 0 goto label30;

        $z25 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: boolean addDirection(java.util.ArrayList,org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, r1, i2, 1, -7);
        if $z25 == 0 goto label30;

        return r2;

     label30:
        if z0 == 0 goto label31;

        $i18 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(4, 0);
        goto label32;

     label31:
        $i18 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(4, 7);

     label32:
        i4 = $i18;
        $i19 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i0, i1);
        if $i19 != i4 goto label40;

        if z0 == 0 goto label33;

        $b20 = 0;
        goto label34;

     label33:
        $b20 = 2;

     label34:
        b5 = $b20;
        if z0 == 0 goto label35;

        $b21 = 1;
        goto label36;

     label35:
        $b21 = 3;

     label36:
        b6 = $b21;
        if z0 == 0 goto label37;

        $b22 = 3;
        goto label38;

     label37:
        $b22 = 9;

     label38:
        b7 = $b22;
        $i23 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getCastleMask()>();
        $i24 = 1 << b6;
        $i25 = $i23 & $i24;
        if $i25 == 0 goto label39;

        $i26 = i4 + 1;
        $i27 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i26);
        if $i27 != 0 goto label39;

        $i28 = i4 + 2;
        $i29 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i28);
        if $i29 != 0 goto label39;

        $i30 = i4 + 3;
        $i31 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i30);
        if $i31 != b7 goto label39;

        $z26 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: boolean sqAttacked(org.petero.droidfish.gamelogic.Position,int)>(r1, i4);
        if $z26 != 0 goto label39;

        $i32 = i4 + 1;
        $z27 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: boolean sqAttacked(org.petero.droidfish.gamelogic.Position,int)>(r1, $i32);
        if $z27 != 0 goto label39;

        $i33 = i4 + 2;
        $r3 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i4, $i33, 0);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

     label39:
        $i34 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getCastleMask()>();
        $i35 = 1 << b5;
        $i36 = $i34 & $i35;
        if $i36 == 0 goto label40;

        $i37 = i4 - 1;
        $i38 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i37);
        if $i38 != 0 goto label40;

        $i39 = i4 - 2;
        $i40 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i39);
        if $i40 != 0 goto label40;

        $i41 = i4 - 3;
        $i42 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i41);
        if $i42 != 0 goto label40;

        $i43 = i4 - 4;
        $i44 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i43);
        if $i44 != b7 goto label40;

        $z29 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: boolean sqAttacked(org.petero.droidfish.gamelogic.Position,int)>(r1, i4);
        if $z29 != 0 goto label40;

        $i45 = i4 - 1;
        $z30 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: boolean sqAttacked(org.petero.droidfish.gamelogic.Position,int)>(r1, $i45);
        if $z30 != 0 goto label40;

        $i46 = i4 - 2;
        $r4 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i4, $i46, 0);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label40:
        if i3 == 6 goto label41;

        if i3 != 12 goto label56;

     label41:
        if z0 == 0 goto label42;

        $b47 = 8;
        goto label43;

     label42:
        $b47 = -8;

     label43:
        b48 = $b47;
        $i49 = i2 + b48;
        $i50 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i49);
        if $i50 != 0 goto label46;

        $i51 = i2 + b48;
        specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: void addPawnMoves(java.util.ArrayList,int,int)>(r2, i2, $i51);
        $i52 = i1;
        if z0 == 0 goto label44;

        $b53 = 1;
        goto label45;

     label44:
        $b53 = 6;

     label45:
        if $i52 != $b53 goto label46;

        $i54 = 2 * b48;
        $i55 = i2 + $i54;
        $i56 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i55);
        if $i56 != 0 goto label46;

        $i57 = b48 * 2;
        $i58 = i2 + $i57;
        specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: void addPawnMoves(java.util.ArrayList,int,int)>(r2, i2, $i58);

     label46:
        if i0 <= 0 goto label51;

        $i59 = i2 + b48;
        i60 = $i59 - 1;
        i61 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i60);
        if i61 == 0 goto label50;

        $z32 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i61);
        if $z32 == z0 goto label51;

        if z0 == 0 goto label47;

        $b63 = 7;
        goto label48;

     label47:
        $b63 = 1;

     label48:
        if i61 != $b63 goto label49;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: void returnMoveList(java.util.ArrayList)>(r2);
        r5 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList getMoveListObj()>();
        $r6 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i2, i60, 0);
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);
        return r5;

     label49:
        specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: void addPawnMoves(java.util.ArrayList,int,int)>(r2, i2, i60);
        goto label51;

     label50:
        $i64 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if i60 != $i64 goto label51;

        specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: void addPawnMoves(java.util.ArrayList,int,int)>(r2, i2, i60);

     label51:
        if i0 >= 7 goto label56;

        $i65 = i2 + b48;
        i66 = $i65 + 1;
        i67 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i66);
        if i67 == 0 goto label55;

        $z34 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i67);
        if $z34 == z0 goto label56;

        if z0 == 0 goto label52;

        $b69 = 7;
        goto label53;

     label52:
        $b69 = 1;

     label53:
        if i67 != $b69 goto label54;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: void returnMoveList(java.util.ArrayList)>(r2);
        r7 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList getMoveListObj()>();
        $r8 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i2, i66, 0);
        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);
        return r7;

     label54:
        specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: void addPawnMoves(java.util.ArrayList,int,int)>(r2, i2, i66);
        goto label56;

     label55:
        $i70 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if i66 != $i70 goto label56;

        specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: void addPawnMoves(java.util.ArrayList,int,int)>(r2, i2, i66);

     label56:
        i1 = i1 + 1;
        goto label1;

     label57:
        i0 = i0 + 1;
        goto label0;

     label58:
        return r2;
    }

    public static final boolean inCheck(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0;
        boolean $z0, $z1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        i0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getKingSq(boolean)>($z0);
        if i0 >= 0 goto label0;

        return 0;

     label0:
        $z1 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: boolean sqAttacked(org.petero.droidfish.gamelogic.Position,int)>(r0, i0);
        return $z1;
    }

    public static final boolean sqAttacked(org.petero.droidfish.gamelogic.Position, int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, i1, i2, i7, i8, i9, i10, $i15, i16, $i17, $i18, i19, i20, i21, i22, i23, i24, i25, $i26, i27, $i28, $i29, $i30, i31, $i32, $i33, i34, i35, i36, i37, i38, i39, i40, $i41, i42, i43, $i44, $i45, $i46, $i47;
        boolean z0, $z1;
        byte b3, b4, b5, b6, $b11, $b12, $b13, $b14;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter1: int;
        i1 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i0);
        i2 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i0);
        z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if z0 == 0 goto label0;

        $b11 = 8;
        goto label1;

     label0:
        $b11 = 2;

     label1:
        b3 = $b11;
        if z0 == 0 goto label2;

        $b12 = 9;
        goto label3;

     label2:
        $b12 = 3;

     label3:
        b4 = $b12;
        if z0 == 0 goto label4;

        $b13 = 10;
        goto label5;

     label4:
        $b13 = 4;

     label5:
        b5 = $b13;
        if z0 == 0 goto label6;

        $b14 = 11;
        goto label7;

     label6:
        $b14 = 5;

     label7:
        b6 = $b14;
        if i2 <= 0 goto label19;

        i7 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, i2, -8);
        if i7 == b3 goto label8;

        if i7 != b4 goto label9;

     label8:
        return 1;

     label9:
        $i15 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);
        i16 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, $i15, -9);
        if i16 == b3 goto label10;

        if i16 != b5 goto label11;

     label10:
        return 1;

     label11:
        $i17 = 7 - i1;
        $i18 = staticinvoke <java.lang.Math: int min(int,int)>($i17, i2);
        i19 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, $i18, -7);
        if i19 == b3 goto label12;

        if i19 != b5 goto label13;

     label12:
        return 1;

     label13:
        if i1 <= 1 goto label14;

        i20 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, -10);
        if i20 != b6 goto label14;

        return 1;

     label14:
        if i1 <= 0 goto label15;

        if i2 <= 1 goto label15;

        i21 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, -17);
        if i21 != b6 goto label15;

        return 1;

     label15:
        if i1 >= 7 goto label16;

        if i2 <= 1 goto label16;

        i22 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, -15);
        if i22 != b6 goto label16;

        return 1;

     label16:
        if i1 >= 6 goto label17;

        i23 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, -6);
        if i23 != b6 goto label17;

        return 1;

     label17:
        if z0 != 0 goto label19;

        if i1 >= 7 goto label18;

        if i2 <= 1 goto label18;

        i24 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, -7);
        if i24 != 6 goto label18;

        return 1;

     label18:
        if i1 <= 0 goto label19;

        if i2 <= 1 goto label19;

        i25 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, -9);
        if i25 != 6 goto label19;

        return 1;

     label19:
        if i2 >= 7 goto label31;

        $i26 = 7 - i2;
        i27 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, $i26, 8);
        if i27 == b3 goto label20;

        if i27 != b4 goto label21;

     label20:
        return 1;

     label21:
        $i28 = 7 - i1;
        $i29 = 7 - i2;
        $i30 = staticinvoke <java.lang.Math: int min(int,int)>($i28, $i29);
        i31 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, $i30, 9);
        if i31 == b3 goto label22;

        if i31 != b5 goto label23;

     label22:
        return 1;

     label23:
        $i32 = 7 - i2;
        $i33 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i32);
        i34 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, $i33, 7);
        if i34 == b3 goto label24;

        if i34 != b5 goto label25;

     label24:
        return 1;

     label25:
        if i1 >= 6 goto label26;

        i35 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, 10);
        if i35 != b6 goto label26;

        return 1;

     label26:
        if i1 >= 7 goto label27;

        if i2 >= 6 goto label27;

        i36 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, 17);
        if i36 != b6 goto label27;

        return 1;

     label27:
        if i1 <= 0 goto label28;

        if i2 >= 6 goto label28;

        i37 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, 15);
        if i37 != b6 goto label28;

        return 1;

     label28:
        if i1 <= 1 goto label29;

        i38 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, 6);
        if i38 != b6 goto label29;

        return 1;

     label29:
        if z0 == 0 goto label31;

        if i1 >= 7 goto label30;

        if i2 >= 6 goto label30;

        i39 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, 9);
        if i39 != 12 goto label30;

        return 1;

     label30:
        if i1 <= 0 goto label31;

        if i2 >= 6 goto label31;

        i40 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, 1, 7);
        if i40 != 12 goto label31;

        return 1;

     label31:
        $i41 = 7 - i1;
        i42 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, $i41, 1);
        if i42 == b3 goto label32;

        if i42 != b4 goto label33;

     label32:
        return 1;

     label33:
        i43 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: int checkDirection(org.petero.droidfish.gamelogic.Position,int,int,int)>(r0, i0, i1, -1);
        if i43 == b3 goto label34;

        if i43 != b4 goto label35;

     label34:
        return 1;

     label35:
        if z0 != 0 goto label36;

        $z1 = 1;
        goto label37;

     label36:
        $z1 = 0;

     label37:
        i8 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getKingSq(boolean)>($z1);
        if i8 < 0 goto label38;

        i9 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i8);
        i10 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i8);
        $i44 = i1 - i9;
        $i45 = staticinvoke <java.lang.Math: int abs(int)>($i44);
        if $i45 > 1 goto label38;

        $i46 = i2 - i10;
        $i47 = staticinvoke <java.lang.Math: int abs(int)>($i46);
        if $i47 > 1 goto label38;

        return 1;

     label38:
        return 0;
    }

    public static final java.util.ArrayList removeIllegal(org.petero.droidfish.gamelogic.Position, java.util.ArrayList)
    {
        org.petero.droidfish.gamelogic.Position r0;
        java.util.ArrayList r1, $r2, r3;
        org.petero.droidfish.gamelogic.UndoInfo r4, $r6;
        int i0, i1;
        org.petero.droidfish.gamelogic.Move r5;
        java.lang.Object $r7;
        boolean $z0, $z1, $z2, $z4, $z5;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter1: java.util.ArrayList;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        $r6 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r6.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r4 = $r6;
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();
        i1 = 0;

     label0:
        if i1 >= i0 goto label6;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        r5 = (org.petero.droidfish.gamelogic.Move) $r7;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r5, r4);
        $z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z0 != 0 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setWhiteMove(boolean)>($z1);
        $z2 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: boolean inCheck(org.petero.droidfish.gamelogic.Position)>(r0);
        if $z2 != 0 goto label3;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label3:
        $z4 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z4 != 0 goto label4;

        $z5 = 1;
        goto label5;

     label4:
        $z5 = 0;

     label5:
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setWhiteMove(boolean)>($z5);
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void unMakeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r5, r4);
        i1 = i1 + 1;
        goto label0;

     label6:
        return r3;
    }

    private final boolean addDirection(java.util.ArrayList, org.petero.droidfish.gamelogic.Position, int, int, int)
    {
        org.petero.droidfish.gamelogic.MoveGen r0;
        java.util.ArrayList r1, r4;
        org.petero.droidfish.gamelogic.Position r2;
        int i0, i1, i2, i3, i5;
        boolean z0, $z2;
        byte b4, $b6;
        org.petero.droidfish.gamelogic.Move $r3, $r5, $r6;

        r0 := @this: org.petero.droidfish.gamelogic.MoveGen;
        r1 := @parameter0: java.util.ArrayList;
        r2 := @parameter1: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        i2 := @parameter4: int;
        i3 = i0;
        z0 = r2.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if z0 == 0 goto label0;

        $b6 = 7;
        goto label1;

     label0:
        $b6 = 1;

     label1:
        b4 = $b6;

     label2:
        if i1 <= 0 goto label6;

        i3 = i3 + i2;
        i5 = virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i3);
        if i5 != 0 goto label3;

        $r3 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i3, 0);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
        goto label5;

     label3:
        $z2 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i5);
        if $z2 == z0 goto label6;

        if i5 != b4 goto label4;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: void returnMoveList(java.util.ArrayList)>(r1);
        r4 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList getMoveListObj()>();
        $r5 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i3, 0);
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);
        return 1;

     label4:
        $r6 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i3, 0);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);
        goto label6;

     label5:
        i1 = i1 + -1;
        goto label2;

     label6:
        return 0;
    }

    private final void addPawnMoves(java.util.ArrayList, int, int)
    {
        org.petero.droidfish.gamelogic.MoveGen r0;
        java.util.ArrayList r1;
        int i0, i1;
        org.petero.droidfish.gamelogic.Move $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.petero.droidfish.gamelogic.MoveGen;
        r1 := @parameter0: java.util.ArrayList;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if i1 < 56 goto label0;

        $r2 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i1, 2);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);
        $r3 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i1, 5);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
        $r4 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i1, 3);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);
        $r5 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i1, 4);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);
        goto label2;

     label0:
        if i1 >= 8 goto label1;

        $r6 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i1, 8);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);
        $r7 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i1, 11);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);
        $r8 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i1, 9);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);
        $r9 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i1, 10);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);
        goto label2;

     label1:
        $r10 = specialinvoke r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move getMoveObj(int,int,int)>(i0, i1, 0);
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label2:
        return;
    }

    private static final int checkDirection(org.petero.droidfish.gamelogic.Position, int, int, int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, i1, i2, i3;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;

     label0:
        if i1 <= 0 goto label2;

        i0 = i0 + i2;
        i3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i0);
        if i3 == 0 goto label1;

        return i3;

     label1:
        i1 = i1 + -1;
        goto label0;

     label2:
        return 0;
    }

    private final org.petero.droidfish.gamelogic.Move getMoveObj(int, int, int)
    {
        org.petero.droidfish.gamelogic.MoveGen r0;
        int i0, i1, i2, $i3, $i4, $i5;
        org.petero.droidfish.gamelogic.Move r2, $r4;
        org.petero.droidfish.gamelogic.Move[] $r3;

        r0 := @this: org.petero.droidfish.gamelogic.MoveGen;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $i3 = r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache>;
        if $i3 <= 0 goto label0;

        $r3 = r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move[] moveCache>;
        $i4 = r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache>;
        $i5 = $i4 - 1;
        r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache> = $i5;
        r2 = $r3[$i5];
        r2.<org.petero.droidfish.gamelogic.Move: int 'from'> = i0;
        r2.<org.petero.droidfish.gamelogic.Move: int 'to'> = i1;
        r2.<org.petero.droidfish.gamelogic.Move: int promoteTo> = i2;
        return r2;

     label0:
        $r4 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r4.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(i0, i1, i2);
        return $r4;
    }

    private final java.util.ArrayList getMoveListObj()
    {
        org.petero.droidfish.gamelogic.MoveGen r0;
        int $i0, $i1, $i2;
        java.lang.Object[] $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4, $r5;

        r0 := @this: org.petero.droidfish.gamelogic.MoveGen;
        $i0 = r0.<org.petero.droidfish.gamelogic.MoveGen: int moveListsInCache>;
        if $i0 <= 0 goto label0;

        $r2 = r0.<org.petero.droidfish.gamelogic.MoveGen: java.lang.Object[] moveListCache>;
        $i1 = r0.<org.petero.droidfish.gamelogic.MoveGen: int moveListsInCache>;
        $i2 = $i1 - 1;
        r0.<org.petero.droidfish.gamelogic.MoveGen: int moveListsInCache> = $i2;
        $r3 = $r2[$i2];
        $r4 = (java.util.ArrayList) $r3;
        return $r4;

     label0:
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(60);
        return $r5;
    }

    public final void returnMoveList(java.util.ArrayList)
    {
        org.petero.droidfish.gamelogic.MoveGen r0;
        java.util.ArrayList r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.petero.droidfish.gamelogic.Move[] $r2, $r3;
        java.lang.Object $r5;
        org.petero.droidfish.gamelogic.Move $r6;
        java.lang.Object[] $r7, $r8;

        r0 := @this: org.petero.droidfish.gamelogic.MoveGen;
        r1 := @parameter0: java.util.ArrayList;
        $i3 = r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache>;
        $i4 = virtualinvoke r1.<java.util.ArrayList: int size()>();
        $i5 = $i3 + $i4;
        $r2 = r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move[] moveCache>;
        $i6 = lengthof $r2;
        if $i5 > $i6 goto label1;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $r3 = r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move[] moveCache>;
        $i2 = r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache>;
        $i7 = $i2 + 1;
        r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache> = $i7;
        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);
        $r6 = (org.petero.droidfish.gamelogic.Move) $r5;
        $r3[$i2] = $r6;
        i1 = i1 + 1;
        goto label0;

     label1:
        virtualinvoke r1.<java.util.ArrayList: void clear()>();
        $i8 = r0.<org.petero.droidfish.gamelogic.MoveGen: int moveListsInCache>;
        $r7 = r0.<org.petero.droidfish.gamelogic.MoveGen: java.lang.Object[] moveListCache>;
        $i9 = lengthof $r7;
        if $i8 >= $i9 goto label2;

        $r8 = r0.<org.petero.droidfish.gamelogic.MoveGen: java.lang.Object[] moveListCache>;
        $i10 = r0.<org.petero.droidfish.gamelogic.MoveGen: int moveListsInCache>;
        $i11 = $i10 + 1;
        r0.<org.petero.droidfish.gamelogic.MoveGen: int moveListsInCache> = $i11;
        $r8[$i10] = r1;

     label2:
        return;
    }

    public final void returnMove(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.MoveGen r0;
        org.petero.droidfish.gamelogic.Move r1;
        int $i0, $i1, $i2, $i3;
        org.petero.droidfish.gamelogic.Move[] $r2, $r3;

        r0 := @this: org.petero.droidfish.gamelogic.MoveGen;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        $i1 = r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache>;
        $r2 = r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move[] moveCache>;
        $i2 = lengthof $r2;
        if $i1 >= $i2 goto label0;

        $r3 = r0.<org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.Move[] moveCache>;
        $i0 = r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache>;
        $i3 = $i0 + 1;
        r0.<org.petero.droidfish.gamelogic.MoveGen: int movesInCache> = $i3;
        $r3[$i0] = r1;

     label0:
        return;
    }

    static void <clinit>()
    {
        org.petero.droidfish.gamelogic.MoveGen $r0;

        $r0 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r0.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        <org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.MoveGen instance> = $r0;
        return;
    }
}
public final class org.petero.droidfish.gamelogic.Pair extends java.lang.Object
{
    public final java.lang.Object first;
    public final java.lang.Object second;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        org.petero.droidfish.gamelogic.Pair r0;
        java.lang.Object r1, r2;

        r0 := @this: org.petero.droidfish.gamelogic.Pair;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.Object;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.Pair: java.lang.Object first> = r1;
        r0.<org.petero.droidfish.gamelogic.Pair: java.lang.Object second> = r2;
        return;
    }
}
public interface  org.petero.droidfish.gamelogic.PgnToken$PgnTokenReceiver extends java.lang.Object
{

    public abstract boolean isUpToDate();

    public abstract void clear();

    public abstract void processToken(org.petero.droidfish.gamelogic.GameTree$Node, int, java.lang.String);

    public abstract void setCurrent(org.petero.droidfish.gamelogic.GameTree$Node);
}
public class org.petero.droidfish.gamelogic.PgnToken extends java.lang.Object
{
    public static final int STRING;
    public static final int INTEGER;
    public static final int PERIOD;
    public static final int ASTERISK;
    public static final int LEFT_BRACKET;
    public static final int RIGHT_BRACKET;
    public static final int LEFT_PAREN;
    public static final int RIGHT_PAREN;
    public static final int NAG;
    public static final int SYMBOL;
    public static final int COMMENT;
    public static final int EOF;
    int type;
    java.lang.String token;

    void <init>(int, java.lang.String)
    {
        org.petero.droidfish.gamelogic.PgnToken r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.petero.droidfish.gamelogic.PgnToken;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.PgnToken: int type> = i0;
        r0.<org.petero.droidfish.gamelogic.PgnToken: java.lang.String token> = r1;
        return;
    }
}
public class org.petero.droidfish.gamelogic.Piece extends java.lang.Object
{
    public static final int EMPTY;
    public static final int WKING;
    public static final int WQUEEN;
    public static final int WROOK;
    public static final int WBISHOP;
    public static final int WKNIGHT;
    public static final int WPAWN;
    public static final int BKING;
    public static final int BQUEEN;
    public static final int BROOK;
    public static final int BBISHOP;
    public static final int BKNIGHT;
    public static final int BPAWN;
    public static final int nPieceTypes;
    public static final char NOTATION_KING;
    public static final char NOTATION_QUEEN;
    public static final char NOTATION_ROOK;
    public static final char NOTATION_BISHOP;
    public static final char NOTATION_KNIGHT;
    public static final char NOTATION_PAWN;
    public static final char WHITE_KING;
    public static final char WHITE_QUEEN;
    public static final char WHITE_ROOK;
    public static final char WHITE_BISHOP;
    public static final char WHITE_KNIGHT;
    public static final char WHITE_PAWN;
    public static final char BLACK_KING;
    public static final char BLACK_QUEEN;
    public static final char BLACK_ROOK;
    public static final char BLACK_BISHOP;
    public static final char BLACK_KNIGHT;
    public static final char BLACK_PAWN;

    public void <init>()
    {
        org.petero.droidfish.gamelogic.Piece r0;

        r0 := @this: org.petero.droidfish.gamelogic.Piece;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static boolean isWhite(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;
        if i0 >= 7 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public static int makeWhite(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;
        if i0 >= 7 goto label0;

        $i1 = i0;
        goto label1;

     label0:
        $i1 = i0 - 6;

     label1:
        return $i1;
    }

    public static int makeBlack(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;
        if i0 < 1 goto label0;

        if i0 > 6 goto label0;

        $i1 = i0 + 6;
        goto label1;

     label0:
        $i1 = i0;

     label1:
        return $i1;
    }

    public static int swapColor(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;
        if i0 != 0 goto label0;

        return 0;

     label0:
        $z0 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i0);
        if $z0 == 0 goto label1;

        $i1 = i0 + 6;
        goto label2;

     label1:
        $i1 = i0 - 6;

     label2:
        return $i1;
    }

    public static final char toUniCode(int)
    {
        int i0, $i1, $i2;
        char $c3;

        i0 := @parameter0: int;
        $i1 = 9812 + i0;
        $i2 = $i1 - 1;
        $c3 = (char) $i2;
        return $c3;
    }
}
public class org.petero.droidfish.gamelogic.Position extends java.lang.Object
{
    private int[] squares;
    public boolean whiteMove;
    public static final int A1_CASTLE;
    public static final int H1_CASTLE;
    public static final int A8_CASTLE;
    public static final int H8_CASTLE;
    private int castleMask;
    private int epSquare;
    public int halfMoveClock;
    public int fullMoveCounter;
    private long hashKey;
    private int wKingSq;
    private int bKingSq;
    private static long[][] psHashKeys;
    private static long whiteHashKey;
    private static long[] castleHashKeys;
    private static long[] epHashKeys;

    public void <init>()
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0;
        byte $b1;
        int[] $r1, $r2;
        long $l2;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = newarray (int)[64];
        r0.<org.petero.droidfish.gamelogic.Position: int[] squares> = $r1;
        i0 = 0;

     label0:
        if i0 >= 64 goto label1;

        $r2 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $r2[i0] = 0;
        i0 = i0 + 1;
        goto label0;

     label1:
        r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove> = 1;
        r0.<org.petero.droidfish.gamelogic.Position: int castleMask> = 0;
        r0.<org.petero.droidfish.gamelogic.Position: int epSquare> = -1;
        r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock> = 0;
        r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter> = 1;
        $l2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: long computeZobristHash()>();
        r0.<org.petero.droidfish.gamelogic.Position: long hashKey> = $l2;
        $b1 = -1;
        r0.<org.petero.droidfish.gamelogic.Position: int bKingSq> = $b1;
        r0.<org.petero.droidfish.gamelogic.Position: int wKingSq> = $b1;
        return;
    }

    public void <init>(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0, r1;
        int[] $r2, $r3, $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        long $l4;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r2 = newarray (int)[64];
        r0.<org.petero.droidfish.gamelogic.Position: int[] squares> = $r2;
        $r3 = r1.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $r4 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, 64);
        $z0 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove> = $z0;
        $i0 = r1.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        r0.<org.petero.droidfish.gamelogic.Position: int castleMask> = $i0;
        $i1 = r1.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        r0.<org.petero.droidfish.gamelogic.Position: int epSquare> = $i1;
        $i2 = r1.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock> = $i2;
        $i3 = r1.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter> = $i3;
        $l4 = r1.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        r0.<org.petero.droidfish.gamelogic.Position: long hashKey> = $l4;
        $i5 = r1.<org.petero.droidfish.gamelogic.Position: int wKingSq>;
        r0.<org.petero.droidfish.gamelogic.Position: int wKingSq> = $i5;
        $i6 = r1.<org.petero.droidfish.gamelogic.Position: int bKingSq>;
        r0.<org.petero.droidfish.gamelogic.Position: int bKingSq> = $i6;
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.petero.droidfish.gamelogic.Position r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        long $l4, $l5;
        byte $b6;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter0: java.lang.Object;
        if r1 == null goto label0;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        if $r3 == $r4 goto label1;

     label0:
        return 0;

     label1:
        r2 = (org.petero.droidfish.gamelogic.Position) r1;
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean drawRuleEquals(org.petero.droidfish.gamelogic.Position)>(r2);
        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        $i1 = r2.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $i2 = r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $i3 = r2.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        if $i2 == $i3 goto label4;

        return 0;

     label4:
        $l4 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $l5 = r2.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $b6 = $l4 cmp $l5;
        if $b6 == 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        org.petero.droidfish.gamelogic.Position r0;
        long $l0;
        int $i1;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        $l0 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $i1 = (int) $l0;
        return $i1;
    }

    public final long zobristHash()
    {
        org.petero.droidfish.gamelogic.Position r0;
        long $l0;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        $l0 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        return $l0;
    }

    public final boolean drawRuleEquals(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 = 0;

     label0:
        if i0 >= 64 goto label2;

        $r2 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i1 = $r2[i0];
        $r3 = r1.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i2 = $r3[i0];
        if $i1 == $i2 goto label1;

        return 0;

     label1:
        i0 = i0 + 1;
        goto label0;

     label2:
        $z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $z1 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z0 == $z1 goto label3;

        return 0;

     label3:
        $i3 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i4 = r1.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        if $i3 == $i4 goto label4;

        return 0;

     label4:
        $i5 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        $i6 = r1.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        if $i5 == $i6 goto label5;

        return 0;

     label5:
        return 1;
    }

    public final void setWhiteMove(boolean)
    {
        org.petero.droidfish.gamelogic.Position r0;
        boolean z0, $z1;
        long $l0, $l1, $l2;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        z0 := @parameter0: boolean;
        $z1 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if z0 == $z1 goto label0;

        $l1 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $l0 = <org.petero.droidfish.gamelogic.Position: long whiteHashKey>;
        $l2 = $l1 ^ $l0;
        r0.<org.petero.droidfish.gamelogic.Position: long hashKey> = $l2;
        r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove> = z0;

     label0:
        return;
    }

    public static final int getSquare(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i2 = i1 * 8;
        $i3 = $i2 + i0;
        return $i3;
    }

    public static final int getX(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;
        $i1 = i0 & 7;
        return $i1;
    }

    public static final int getY(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;
        $i1 = i0 >> 3;
        return $i1;
    }

    public static final boolean darkSquare(int, int)
    {
        int i0, i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $i2 = i0 & 1;
        $i3 = i1 & 1;
        if $i2 != $i3 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final int getPiece(int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter0: int;
        $r1 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i1 = $r1[i0];
        return $i1;
    }

    public final void setPiece(int, int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, i1, i2;
        long[][] $r1, $r6;
        int[] $r2, $r8;
        long $l3, $l4, $l5, $l6, $l7, $l8;
        long[] $r4, $r7;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        $r2 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        i2 = $r2[i0];
        $l3 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $r1 = <org.petero.droidfish.gamelogic.Position: long[][] psHashKeys>;
        $r4 = $r1[i2];
        $l4 = $r4[i0];
        $l5 = $l3 ^ $l4;
        r0.<org.petero.droidfish.gamelogic.Position: long hashKey> = $l5;
        $l6 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $r6 = <org.petero.droidfish.gamelogic.Position: long[][] psHashKeys>;
        $r7 = $r6[i1];
        $l7 = $r7[i0];
        $l8 = $l6 ^ $l7;
        r0.<org.petero.droidfish.gamelogic.Position: long hashKey> = $l8;
        $r8 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $r8[i0] = i1;
        if i1 != 1 goto label0;

        r0.<org.petero.droidfish.gamelogic.Position: int wKingSq> = i0;
        goto label1;

     label0:
        if i1 != 7 goto label1;

        r0.<org.petero.droidfish.gamelogic.Position: int bKingSq> = i0;

     label1:
        return;
    }

    public final boolean a1Castle()
    {
        org.petero.droidfish.gamelogic.Position r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i1 = $i0 & 1;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean h1Castle()
    {
        org.petero.droidfish.gamelogic.Position r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i1 = $i0 & 2;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean a8Castle()
    {
        org.petero.droidfish.gamelogic.Position r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i1 = $i0 & 4;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final boolean h8Castle()
    {
        org.petero.droidfish.gamelogic.Position r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i1 = $i0 & 8;
        if $i1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final int getCastleMask()
    {
        org.petero.droidfish.gamelogic.Position r0;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        return $i0;
    }

    public final void setCastleMask(int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, $i2;
        long[] $r2, $r4;
        long $l1, $l3, $l4, $l5, $l6, $l7;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter0: int;
        $l1 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $r2 = <org.petero.droidfish.gamelogic.Position: long[] castleHashKeys>;
        $i2 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $l3 = $r2[$i2];
        $l4 = $l1 ^ $l3;
        r0.<org.petero.droidfish.gamelogic.Position: long hashKey> = $l4;
        $l5 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $r4 = <org.petero.droidfish.gamelogic.Position: long[] castleHashKeys>;
        $l6 = $r4[i0];
        $l7 = $l5 ^ $l6;
        r0.<org.petero.droidfish.gamelogic.Position: long hashKey> = $l7;
        r0.<org.petero.droidfish.gamelogic.Position: int castleMask> = i0;
        return;
    }

    public final int getEpSquare()
    {
        org.petero.droidfish.gamelogic.Position r0;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        return $i0;
    }

    public final void setEpSquare(int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, $i1, $i3, $i4, $i5, $i6, $i10, $i11;
        long[] $r1, $r4;
        long $l2, $l7, $l8, $l9, $l12, $l13;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter0: int;
        $i1 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        if $i1 == i0 goto label4;

        $l2 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $r1 = <org.petero.droidfish.gamelogic.Position: long[] epHashKeys>;
        $i3 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        if $i3 < 0 goto label0;

        $i4 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        $i5 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i4);
        $i6 = $i5 + 1;
        goto label1;

     label0:
        $i6 = 0;

     label1:
        $l7 = $r1[$i6];
        $l8 = $l2 ^ $l7;
        r0.<org.petero.droidfish.gamelogic.Position: long hashKey> = $l8;
        $l9 = r0.<org.petero.droidfish.gamelogic.Position: long hashKey>;
        $r4 = <org.petero.droidfish.gamelogic.Position: long[] epHashKeys>;
        if i0 < 0 goto label2;

        $i10 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i0);
        $i11 = $i10 + 1;
        goto label3;

     label2:
        $i11 = 0;

     label3:
        $l12 = $r4[$i11];
        $l13 = $l9 ^ $l12;
        r0.<org.petero.droidfish.gamelogic.Position: long hashKey> = $l13;
        r0.<org.petero.droidfish.gamelogic.Position: int epSquare> = i0;

     label4:
        return;
    }

    public final int getKingSq(boolean)
    {
        org.petero.droidfish.gamelogic.Position r0;
        boolean z0;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        z0 := @parameter0: boolean;
        if z0 == 0 goto label0;

        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int wKingSq>;
        goto label1;

     label0:
        $i0 = r0.<org.petero.droidfish.gamelogic.Position: int bKingSq>;

     label1:
        return $i0;
    }

    public final int nPieces(int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, i1, i2, $i3;
        int[] $r1;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter0: int;
        i1 = 0;
        i2 = 0;

     label0:
        if i2 >= 64 goto label2;

        $r1 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i3 = $r1[i2];
        if $i3 != i0 goto label1;

        i1 = i1 + 1;

     label1:
        i2 = i2 + 1;
        goto label0;

     label2:
        return i1;
    }

    public final void makeMove(org.petero.droidfish.gamelogic.Move, org.petero.droidfish.gamelogic.UndoInfo)
    {
        org.petero.droidfish.gamelogic.Position r0;
        org.petero.droidfish.gamelogic.Move r1;
        org.petero.droidfish.gamelogic.UndoInfo r2;
        boolean z0, z1, $z2, $z3;
        int i0, i1, i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i43, $i45, i46, $i47, $i48, $i49, $i50, i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83;
        byte b2, b4, b5, $b16, $b21, $b42, $b44;
        int[] $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        r2 := @parameter1: org.petero.droidfish.gamelogic.UndoInfo;
        $r3 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i6 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i7 = $r3[$i6];
        r2.<org.petero.droidfish.gamelogic.UndoInfo: int capturedPiece> = $i7;
        $i8 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        r2.<org.petero.droidfish.gamelogic.UndoInfo: int castleMask> = $i8;
        $i9 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        r2.<org.petero.droidfish.gamelogic.UndoInfo: int epSquare> = $i9;
        $i10 = r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        r2.<org.petero.droidfish.gamelogic.UndoInfo: int halfMoveClock> = $i10;
        z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $r4 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i11 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        i0 = $r4[$i11];
        $r5 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i12 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        i1 = $r5[$i12];
        $i13 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i13 != 0 goto label0;

        $i14 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i14 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        z1 = $z2;
        if z1 != 0 goto label4;

        if i1 != 0 goto label4;

        if z0 == 0 goto label2;

        $b16 = 6;
        goto label3;

     label2:
        $b16 = 12;

     label3:
        if i0 != $b16 goto label5;

     label4:
        r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock> = 0;
        goto label6;

     label5:
        $i17 = r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        $i18 = $i17 + 1;
        r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock> = $i18;

     label6:
        if z0 != 0 goto label7;

        $i19 = r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $i20 = $i19 + 1;
        r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter> = $i20;

     label7:
        if z0 == 0 goto label8;

        $b21 = 1;
        goto label9;

     label8:
        $b21 = 7;

     label9:
        b2 = $b21;
        i3 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if i0 != b2 goto label13;

        $i22 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i23 = i3 + 2;
        if $i22 != $i23 goto label10;

        $i24 = i3 + 1;
        $r8 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i25 = i3 + 3;
        $i26 = $r8[$i25];
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i24, $i26);
        $i27 = i3 + 3;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i27, 0);
        goto label11;

     label10:
        $i28 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i29 = i3 - 2;
        if $i28 != $i29 goto label11;

        $i30 = i3 - 1;
        $r9 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i31 = i3 - 4;
        $i32 = $r9[$i31];
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i30, $i32);
        $i33 = i3 - 4;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i33, 0);

     label11:
        if z0 == 0 goto label12;

        $i34 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i35 = $i34 & -2;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>($i35);
        $i36 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i37 = $i36 & -3;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>($i37);
        goto label13;

     label12:
        $i38 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i39 = $i38 & -5;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>($i39);
        $i40 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i41 = $i40 & -9;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>($i41);

     label13:
        if z1 != 0 goto label19;

        if z0 == 0 goto label14;

        $b42 = 3;
        goto label15;

     label14:
        $b42 = 9;

     label15:
        b4 = $b42;
        if i0 != b4 goto label16;

        $i43 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Position: void removeCastleRights(int)>($i43);

     label16:
        if z0 == 0 goto label17;

        $b44 = 9;
        goto label18;

     label17:
        $b44 = 3;

     label18:
        b5 = $b44;
        if i1 != b5 goto label19;

        $i45 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        specialinvoke r0.<org.petero.droidfish.gamelogic.Position: void removeCastleRights(int)>($i45);

     label19:
        i46 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setEpSquare(int)>(-1);
        if i0 != 6 goto label24;

        $i47 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i48 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i49 = $i47 - $i48;
        if $i49 != 16 goto label23;

        $i50 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        i51 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i50);
        if i51 <= 0 goto label20;

        $r10 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i52 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i53 = $i52 - 1;
        $i54 = $r10[$i53];
        if $i54 == 12 goto label21;

     label20:
        if i51 >= 7 goto label22;

        $r11 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i55 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i56 = $i55 + 1;
        $i57 = $r11[$i56];
        if $i57 != 12 goto label22;

     label21:
        $i58 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i59 = $i58 + 8;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setEpSquare(int)>($i59);

     label22:
        goto label29;

     label23:
        $i60 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i60 != i46 goto label29;

        $i61 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i62 = $i61 - 8;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i62, 0);
        goto label29;

     label24:
        if i0 != 12 goto label29;

        $i63 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i64 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i65 = $i63 - $i64;
        if $i65 != -16 goto label28;

        $i66 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        i67 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i66);
        if i67 <= 0 goto label25;

        $r12 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i68 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i69 = $i68 - 1;
        $i70 = $r12[$i69];
        if $i70 == 6 goto label26;

     label25:
        if i67 >= 7 goto label27;

        $r13 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i71 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i72 = $i71 + 1;
        $i73 = $r13[$i72];
        if $i73 != 6 goto label27;

     label26:
        $i74 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i75 = $i74 - 8;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setEpSquare(int)>($i75);

     label27:
        goto label29;

     label28:
        $i76 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i76 != i46 goto label29;

        $i77 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i78 = $i77 + 8;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i78, 0);

     label29:
        $i79 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i79, 0);
        $i80 = r1.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        if $i80 == 0 goto label30;

        $i81 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i82 = r1.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i81, $i82);
        goto label31;

     label30:
        $i83 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i83, i0);

     label31:
        if z0 != 0 goto label32;

        $z3 = 1;
        goto label33;

     label32:
        $z3 = 0;

     label33:
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setWhiteMove(boolean)>($z3);
        return;
    }

    public final void unMakeMove(org.petero.droidfish.gamelogic.Move, org.petero.droidfish.gamelogic.UndoInfo)
    {
        org.petero.droidfish.gamelogic.Position r0;
        org.petero.droidfish.gamelogic.Move r1;
        org.petero.droidfish.gamelogic.UndoInfo r2;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        boolean z0, $z1, $z2;
        byte b1, $b11, $b15;
        int[] $r4, $r6, $r7;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Move;
        r2 := @parameter1: org.petero.droidfish.gamelogic.UndoInfo;
        $z1 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z1 != 0 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setWhiteMove(boolean)>($z2);
        $r4 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i3 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        i0 = $r4[$i3];
        $i4 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i4, i0);
        $i5 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i6 = r2.<org.petero.droidfish.gamelogic.UndoInfo: int capturedPiece>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i5, $i6);
        $i7 = r2.<org.petero.droidfish.gamelogic.UndoInfo: int castleMask>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>($i7);
        $i8 = r2.<org.petero.droidfish.gamelogic.UndoInfo: int epSquare>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setEpSquare(int)>($i8);
        $i9 = r2.<org.petero.droidfish.gamelogic.UndoInfo: int halfMoveClock>;
        r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock> = $i9;
        z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $i10 = r1.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        if $i10 == 0 goto label4;

        if z0 == 0 goto label2;

        $b11 = 6;
        goto label3;

     label2:
        $b11 = 12;

     label3:
        i0 = $b11;
        $i12 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i12, i0);

     label4:
        if z0 != 0 goto label5;

        $i13 = r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        $i14 = $i13 - 1;
        r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter> = $i14;

     label5:
        if z0 == 0 goto label6;

        $b15 = 1;
        goto label7;

     label6:
        $b15 = 7;

     label7:
        b1 = $b15;
        i2 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if i0 != b1 goto label9;

        $i16 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i17 = i2 + 2;
        if $i16 != $i17 goto label8;

        $i18 = i2 + 3;
        $r6 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i19 = i2 + 1;
        $i20 = $r6[$i19];
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i18, $i20);
        $i21 = i2 + 1;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i21, 0);
        goto label9;

     label8:
        $i22 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i23 = i2 - 2;
        if $i22 != $i23 goto label9;

        $i24 = i2 - 4;
        $r7 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        $i25 = i2 - 1;
        $i26 = $r7[$i25];
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i24, $i26);
        $i27 = i2 - 1;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i27, 0);

     label9:
        $i28 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i29 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        if $i28 != $i29 goto label11;

        if i0 != 6 goto label10;

        $i30 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i31 = $i30 - 8;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i31, 12);
        goto label11;

     label10:
        if i0 != 12 goto label11;

        $i32 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i33 = $i32 + 8;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i33, 6);

     label11:
        return;
    }

    private final void removeCastleRights(int)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter0: int;
        $i1 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(0, 0);
        if i0 != $i1 goto label0;

        $i2 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i3 = $i2 & -2;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>($i3);
        goto label3;

     label0:
        $i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(7, 0);
        if i0 != $i4 goto label1;

        $i5 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i6 = $i5 & -3;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>($i6);
        goto label3;

     label1:
        $i7 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(0, 7);
        if i0 != $i7 goto label2;

        $i8 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i9 = $i8 & -5;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>($i9);
        goto label3;

     label2:
        $i10 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(7, 7);
        if i0 != $i10 goto label3;

        $i11 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $i12 = $i11 & -9;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>($i12);

     label3:
        return;
    }

    final long computeZobristHash()
    {
        org.petero.droidfish.gamelogic.Position r0;
        long l0, $l3, $l4, $l6, l7, $l13, l14;
        int i1, i2, $i5, $i9, $i10, $i11, $i12;
        long[][] $r1;
        int[] $r2;
        long[] $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        l0 = 0L;
        i1 = 0;

     label0:
        if i1 >= 64 goto label1;

        $r2 = r0.<org.petero.droidfish.gamelogic.Position: int[] squares>;
        i2 = $r2[i1];
        $r1 = <org.petero.droidfish.gamelogic.Position: long[][] psHashKeys>;
        $r3 = $r1[i2];
        $l3 = $r3[i1];
        l0 = l0 ^ $l3;
        i1 = i1 + 1;
        goto label0;

     label1:
        $z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z0 == 0 goto label2;

        $l4 = <org.petero.droidfish.gamelogic.Position: long whiteHashKey>;
        l0 = l0 ^ $l4;

     label2:
        $r4 = <org.petero.droidfish.gamelogic.Position: long[] castleHashKeys>;
        $i5 = r0.<org.petero.droidfish.gamelogic.Position: int castleMask>;
        $l6 = $r4[$i5];
        l7 = l0 ^ $l6;
        $r5 = <org.petero.droidfish.gamelogic.Position: long[] epHashKeys>;
        $i9 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        if $i9 < 0 goto label3;

        $i10 = r0.<org.petero.droidfish.gamelogic.Position: int epSquare>;
        $i11 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i10);
        $i12 = $i11 + 1;
        goto label4;

     label3:
        $i12 = 0;

     label4:
        $l13 = $r5[$i12];
        l14 = l7 ^ $l13;
        return l14;
    }

    private static final long getRandomHashVal(int)
    {
        int i0, i1, i3, $i4, $i5, $i6, $i10;
        java.security.MessageDigest r0;
        byte[] r1, r2;
        long l2, $l9, $l11;
        byte $b7, $b8;
        java.security.NoSuchAlgorithmException $r3, r4;
        java.lang.UnsupportedOperationException $r5;

        i0 := @parameter0: int;

     label0:
        r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");
        r1 = newarray (byte)[4];
        i1 = 0;

     label1:
        if i1 >= 4 goto label2;

        $i4 = i1 * 8;
        $i5 = i0 >> $i4;
        $i6 = $i5 & 255;
        $b7 = (byte) $i6;
        r1[i1] = $b7;
        i1 = i1 + 1;
        goto label1;

     label2:
        r2 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest(byte[])>(r1);
        l2 = 0L;
        i3 = 0;

     label3:
        if i3 >= 8 goto label4;

        $b8 = r2[i3];
        $l9 = (long) $b8;
        $i10 = i3 * 8;
        $l11 = $l9 << $i10;
        l2 = l2 ^ $l11;
        i3 = i3 + 1;
        goto label3;

     label4:
        return l2;

     label5:
        $r3 := @caughtexception;
        r4 = $r3;
        $r5 = new java.lang.UnsupportedOperationException;
        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("SHA-1 not available");
        throw $r5;

        catch java.security.NoSuchAlgorithmException from label0 to label4 with label5;
    }

    public final java.lang.String toString()
    {
        org.petero.droidfish.gamelogic.Position r0;
        java.lang.String $r1;

        r0 := @this: org.petero.droidfish.gamelogic.Position;
        $r1 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String asciiBoard(org.petero.droidfish.gamelogic.Position)>(r0);
        return $r1;
    }

    static void <clinit>()
    {
        int i0, i1, i2, $i3, i5, i7, $i8, $i9, i11, $i12, $i13;
        long[][] $r0, $r3;
        long[] $r1, $r2, $r4, $r5, $r6, $r7, $r8;
        long $l4, $l6, $l10, $l14;

        $r0 = newmultiarray (long)[13][64];
        <org.petero.droidfish.gamelogic.Position: long[][] psHashKeys> = $r0;
        $r1 = newarray (long)[16];
        <org.petero.droidfish.gamelogic.Position: long[] castleHashKeys> = $r1;
        $r2 = newarray (long)[9];
        <org.petero.droidfish.gamelogic.Position: long[] epHashKeys> = $r2;
        i0 = 0;
        i1 = 0;

     label0:
        if i1 >= 13 goto label3;

        i2 = 0;

     label1:
        if i2 >= 64 goto label2;

        $r3 = <org.petero.droidfish.gamelogic.Position: long[][] psHashKeys>;
        $r4 = $r3[i1];
        $i3 = i0;
        i0 = i0 + 1;
        $l4 = staticinvoke <org.petero.droidfish.gamelogic.Position: long getRandomHashVal(int)>($i3);
        $r4[i2] = $l4;
        i2 = i2 + 1;
        goto label1;

     label2:
        i1 = i1 + 1;
        goto label0;

     label3:
        i5 = i0 + 1;
        $l6 = staticinvoke <org.petero.droidfish.gamelogic.Position: long getRandomHashVal(int)>(i0);
        <org.petero.droidfish.gamelogic.Position: long whiteHashKey> = $l6;
        i7 = 0;

     label4:
        $r5 = <org.petero.droidfish.gamelogic.Position: long[] castleHashKeys>;
        $i8 = lengthof $r5;
        if i7 >= $i8 goto label5;

        $r6 = <org.petero.droidfish.gamelogic.Position: long[] castleHashKeys>;
        $i9 = i5;
        i5 = i5 + 1;
        $l10 = staticinvoke <org.petero.droidfish.gamelogic.Position: long getRandomHashVal(int)>($i9);
        $r6[i7] = $l10;
        i7 = i7 + 1;
        goto label4;

     label5:
        i11 = 0;

     label6:
        $r7 = <org.petero.droidfish.gamelogic.Position: long[] epHashKeys>;
        $i12 = lengthof $r7;
        if i11 >= $i12 goto label7;

        $r8 = <org.petero.droidfish.gamelogic.Position: long[] epHashKeys>;
        $i13 = i5;
        i5 = i5 + 1;
        $l14 = staticinvoke <org.petero.droidfish.gamelogic.Position: long getRandomHashVal(int)>($i13);
        $r8[i11] = $l14;
        i11 = i11 + 1;
        goto label6;

     label7:
        return;
    }
}
public final class org.petero.droidfish.gamelogic.SearchListener$PvInfo extends java.lang.Object
{
    int depth;
    int score;
    int time;
    long nodes;
    int nps;
    boolean isMate;
    boolean upperBound;
    boolean lowerBound;
    java.util.ArrayList pv;
    java.lang.String pvStr;

    public void <init>(int, int, int, long, int, boolean, boolean, boolean, java.util.ArrayList)
    {
        org.petero.droidfish.gamelogic.SearchListener$PvInfo r0;
        int i0, i1, i2, i4;
        long l3;
        boolean z0, z1, z2;
        java.util.ArrayList r1;

        r0 := @this: org.petero.droidfish.gamelogic.SearchListener$PvInfo;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        l3 := @parameter3: long;
        i4 := @parameter4: int;
        z0 := @parameter5: boolean;
        z1 := @parameter6: boolean;
        z2 := @parameter7: boolean;
        r1 := @parameter8: java.util.ArrayList;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: java.lang.String pvStr> = "";
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int depth> = i0;
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int score> = i1;
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int time> = i2;
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: long nodes> = l3;
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: int nps> = i4;
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: boolean isMate> = z0;
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: boolean upperBound> = z1;
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: boolean lowerBound> = z2;
        r0.<org.petero.droidfish.gamelogic.SearchListener$PvInfo: java.util.ArrayList pv> = r1;
        return;
    }
}
public interface  org.petero.droidfish.gamelogic.SearchListener extends java.lang.Object
{

    public abstract void notifyDepth(int, int);

    public abstract void notifyCurrMove(int, org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move, int);

    public abstract void notifyPV(int, org.petero.droidfish.gamelogic.Position, java.util.ArrayList, org.petero.droidfish.gamelogic.Move);

    public abstract void notifyStats(int, long, int, int);

    public abstract void notifyBookInfo(int, java.lang.String, java.util.ArrayList);

    public abstract void notifySearchResult(int, java.lang.String, org.petero.droidfish.gamelogic.Move);

    public abstract void notifyEngineName(java.lang.String);

    public abstract void reportEngineError(java.lang.String);
}
final class org.petero.droidfish.gamelogic.TextIO$MoveInfo extends java.lang.Object
{
    int piece;
    int fromX;
    int fromY;
    int toX;
    int toY;
    int promPiece;

    void <init>()
    {
        org.petero.droidfish.gamelogic.TextIO$MoveInfo r0;
        byte $b0;

        r0 := @this: org.petero.droidfish.gamelogic.TextIO$MoveInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $b0 = -1;
        r0.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int promPiece> = $b0;
        r0.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toY> = $b0;
        r0.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toX> = $b0;
        r0.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY> = $b0;
        r0.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX> = $b0;
        r0.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int piece> = $b0;
        return;
    }
}
public class org.petero.droidfish.gamelogic.TextIO extends java.lang.Object
{
    public static final java.lang.String startPosFEN;
    private static java.lang.String[] pieceNames;

    public void <init>()
    {
        org.petero.droidfish.gamelogic.TextIO r0;

        r0 := @this: org.petero.droidfish.gamelogic.TextIO;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static final void setPieceNames(java.lang.String)
    {
        java.lang.String r0;
        java.lang.String[] r1;
        int $i0;

        r0 := @parameter0: java.lang.String;
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        $i0 = lengthof r1;
        if $i0 != 6 goto label0;

        <org.petero.droidfish.gamelogic.TextIO: java.lang.String[] pieceNames> = r1;

     label0:
        return;
    }

    public static final org.petero.droidfish.gamelogic.Position readFEN(java.lang.String) throws org.petero.droidfish.gamelogic.ChessParseError
    {
        java.lang.String r0, $r6, $r7, $r8, $r9, $r11, $r12, $r15, $r16, r18, $r20, $r21;
        org.petero.droidfish.gamelogic.Position $r1, r2, r4, $r30;
        java.lang.String[] r3;
        int i0, i1, i2, i5, $i6, $i7, i8, $i9, $i10, $i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, i35, $i36, $i37, $i38, i39, $i40, $i41, $i42, i43, $i44, $i45, $i46, i47, $i48, $i50, $i51, $i52, i53, $i54, $i55, $i56, i57, $i58, $i59, $i60, i61, $i62, $i63, $i64, i65, $i66;
        char c3, c4, $c11;
        org.petero.droidfish.gamelogic.ChessParseError $r5, $r10, $r13, $r14, $r17, $r19, $r26, $r27, $r28, $r29, $r32;
        boolean z0, $z1, $z2, $z3, $z4;
        byte b12, b31, b49;
        java.lang.NumberFormatException $r22, r23;
        int[] r24;

        r0 := @parameter0: java.lang.String;
        $r1 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.Position: void <init>()>();
        r2 = $r1;
        r3 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        $i6 = lengthof r3;
        if $i6 >= 2 goto label0;

        $r5 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r5.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int)>(2131099838);
        throw $r5;

     label0:
        i0 = 0;

     label1:
        $i7 = lengthof r3;
        if i0 >= $i7 goto label2;

        $r6 = r3[i0];
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();
        r3[i0] = $r7;
        i0 = i0 + 1;
        goto label1;

     label2:
        i8 = 7;
        i1 = 0;
        i2 = 0;

     label3:
        $r8 = r3[0];
        $i9 = virtualinvoke $r8.<java.lang.String: int length()>();
        if i2 >= $i9 goto label27;

        $r9 = r3[0];
        c3 = virtualinvoke $r9.<java.lang.String: char charAt(int)>(i2);
        tableswitch(c3)
        {
            case 47: goto label12;
            case 48: goto label25;
            case 49: goto label4;
            case 50: goto label5;
            case 51: goto label6;
            case 52: goto label7;
            case 53: goto label8;
            case 54: goto label9;
            case 55: goto label10;
            case 56: goto label11;
            case 57: goto label25;
            case 58: goto label25;
            case 59: goto label25;
            case 60: goto label25;
            case 61: goto label25;
            case 62: goto label25;
            case 63: goto label25;
            case 64: goto label25;
            case 65: goto label25;
            case 66: goto label15;
            case 67: goto label25;
            case 68: goto label25;
            case 69: goto label25;
            case 70: goto label25;
            case 71: goto label25;
            case 72: goto label25;
            case 73: goto label25;
            case 74: goto label25;
            case 75: goto label18;
            case 76: goto label25;
            case 77: goto label25;
            case 78: goto label14;
            case 79: goto label25;
            case 80: goto label13;
            case 81: goto label17;
            case 82: goto label16;
            case 83: goto label25;
            case 84: goto label25;
            case 85: goto label25;
            case 86: goto label25;
            case 87: goto label25;
            case 88: goto label25;
            case 89: goto label25;
            case 90: goto label25;
            case 91: goto label25;
            case 92: goto label25;
            case 93: goto label25;
            case 94: goto label25;
            case 95: goto label25;
            case 96: goto label25;
            case 97: goto label25;
            case 98: goto label21;
            case 99: goto label25;
            case 100: goto label25;
            case 101: goto label25;
            case 102: goto label25;
            case 103: goto label25;
            case 104: goto label25;
            case 105: goto label25;
            case 106: goto label25;
            case 107: goto label24;
            case 108: goto label25;
            case 109: goto label25;
            case 110: goto label20;
            case 111: goto label25;
            case 112: goto label19;
            case 113: goto label23;
            case 114: goto label22;
            default: goto label25;
        };

     label4:
        i1 = i1 + 1;
        goto label26;

     label5:
        i1 = i1 + 2;
        goto label26;

     label6:
        i1 = i1 + 3;
        goto label26;

     label7:
        i1 = i1 + 4;
        goto label26;

     label8:
        i1 = i1 + 5;
        goto label26;

     label9:
        i1 = i1 + 6;
        goto label26;

     label10:
        i1 = i1 + 7;
        goto label26;

     label11:
        i1 = i1 + 8;
        goto label26;

     label12:
        i8 = i8 + -1;
        i1 = 0;
        goto label26;

     label13:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 6);
        i1 = i1 + 1;
        goto label26;

     label14:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 5);
        i1 = i1 + 1;
        goto label26;

     label15:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 4);
        i1 = i1 + 1;
        goto label26;

     label16:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 3);
        i1 = i1 + 1;
        goto label26;

     label17:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 2);
        i1 = i1 + 1;
        goto label26;

     label18:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 1);
        i1 = i1 + 1;
        goto label26;

     label19:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 12);
        i1 = i1 + 1;
        goto label26;

     label20:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 11);
        i1 = i1 + 1;
        goto label26;

     label21:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 10);
        i1 = i1 + 1;
        goto label26;

     label22:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 9);
        i1 = i1 + 1;
        goto label26;

     label23:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 8);
        i1 = i1 + 1;
        goto label26;

     label24:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void safeSetPiece(org.petero.droidfish.gamelogic.Position,int,int,int)>(r2, i1, i8, 7);
        i1 = i1 + 1;
        goto label26;

     label25:
        $r10 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r10.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099839, r2);
        throw $r10;

     label26:
        i2 = i2 + 1;
        goto label3;

     label27:
        $r11 = r3[1];
        $i10 = virtualinvoke $r11.<java.lang.String: int length()>();
        if $i10 <= 0 goto label32;

        $r12 = r3[1];
        $c11 = virtualinvoke $r12.<java.lang.String: char charAt(int)>(0);
        lookupswitch($c11)
        {
            case 98: goto label29;
            case 119: goto label28;
            default: goto label30;
        };

     label28:
        z0 = 1;
        goto label31;

     label29:
        z0 = 0;
        goto label31;

     label30:
        $r13 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r13.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099840, r2);
        throw $r13;

     label31:
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setWhiteMove(boolean)>(z0);
        goto label33;

     label32:
        $r14 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r14.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099840, r2);
        throw $r14;

     label33:
        b12 = 0;
        $i13 = lengthof r3;
        if $i13 <= 2 goto label42;

        i14 = 0;

     label34:
        $r15 = r3[2];
        $i15 = virtualinvoke $r15.<java.lang.String: int length()>();
        if i14 >= $i15 goto label42;

        $r16 = r3[2];
        c4 = virtualinvoke $r16.<java.lang.String: char charAt(int)>(i14);
        lookupswitch(c4)
        {
            case 45: goto label39;
            case 75: goto label35;
            case 81: goto label36;
            case 107: goto label37;
            case 113: goto label38;
            default: goto label40;
        };

     label35:
        b12 = b12 | 2;
        goto label41;

     label36:
        b12 = b12 | 1;
        goto label41;

     label37:
        b12 = b12 | 8;
        goto label41;

     label38:
        b12 = b12 | 4;
        goto label41;

     label39:
        goto label41;

     label40:
        $r17 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r17.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099841, r2);
        throw $r17;

     label41:
        i14 = i14 + 1;
        goto label34;

     label42:
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>(b12);
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void removeBogusCastleFlags(org.petero.droidfish.gamelogic.Position)>(r2);
        $i16 = lengthof r3;
        if $i16 <= 3 goto label44;

        r18 = r3[3];
        $z1 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("-");
        if $z1 != 0 goto label44;

        $i17 = virtualinvoke r18.<java.lang.String: int length()>();
        if $i17 >= 2 goto label43;

        $r19 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r19.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099842, r2);
        throw $r19;

     label43:
        $i18 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: int getSquare(java.lang.String)>(r18);
        virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: void setEpSquare(int)>($i18);

     label44:
        $i19 = lengthof r3;
        if $i19 <= 4 goto label45;

        $r20 = r3[4];
        $i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);
        r2.<org.petero.droidfish.gamelogic.Position: int halfMoveClock> = $i20;

     label45:
        $i21 = lengthof r3;
        if $i21 <= 5 goto label46;

        $r21 = r3[5];
        $i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);
        r2.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter> = $i22;

     label46:
        goto label48;

     label47:
        $r22 := @caughtexception;
        r23 = $r22;

     label48:
        r24 = newarray (int)[13];
        i23 = 0;

     label49:
        if i23 >= 13 goto label50;

        r24[i23] = 0;
        i23 = i23 + 1;
        goto label49;

     label50:
        i24 = 0;

     label51:
        if i24 >= 8 goto label54;

        i5 = 0;

     label52:
        if i5 >= 8 goto label53;

        $i25 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i24, i5);
        $i26 = virtualinvoke r2.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i25);
        $i27 = r24[$i26];
        $i28 = $i27 + 1;
        r24[$i26] = $i28;
        i5 = i5 + 1;
        goto label52;

     label53:
        i24 = i24 + 1;
        goto label51;

     label54:
        $i29 = r24[1];
        if $i29 == 1 goto label55;

        $r26 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r26.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099843, r2);
        throw $r26;

     label55:
        $i30 = r24[7];
        if $i30 == 1 goto label56;

        $r27 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r27.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099844, r2);
        throw $r27;

     label56:
        b31 = 8;
        $i32 = r24[5];
        $i33 = $i32 - 2;
        $i34 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i33);
        i35 = b31 - $i34;
        $i36 = r24[4];
        $i37 = $i36 - 2;
        $i38 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i37);
        i39 = i35 - $i38;
        $i40 = r24[3];
        $i41 = $i40 - 2;
        $i42 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i41);
        i43 = i39 - $i42;
        $i44 = r24[2];
        $i45 = $i44 - 1;
        $i46 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i45);
        i47 = i43 - $i46;
        $i48 = r24[6];
        if $i48 <= i47 goto label57;

        $r28 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r28.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099849, r2);
        throw $r28;

     label57:
        b49 = 8;
        $i50 = r24[11];
        $i51 = $i50 - 2;
        $i52 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i51);
        i53 = b49 - $i52;
        $i54 = r24[10];
        $i55 = $i54 - 2;
        $i56 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i55);
        i57 = i53 - $i56;
        $i58 = r24[9];
        $i59 = $i58 - 2;
        $i60 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i59);
        i61 = i57 - $i60;
        $i62 = r24[8];
        $i63 = $i62 - 1;
        $i64 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i63);
        i65 = i61 - $i64;
        $i66 = r24[12];
        if $i66 <= i65 goto label58;

        $r29 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r29.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099850, r2);
        throw $r29;

     label58:
        $r30 = new org.petero.droidfish.gamelogic.Position;
        specialinvoke $r30.<org.petero.droidfish.gamelogic.Position: void <init>(org.petero.droidfish.gamelogic.Position)>(r2);
        r4 = $r30;
        $z2 = r2.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z2 != 0 goto label59;

        $z3 = 1;
        goto label60;

     label59:
        $z3 = 0;

     label60:
        virtualinvoke r4.<org.petero.droidfish.gamelogic.Position: void setWhiteMove(boolean)>($z3);
        $z4 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: boolean inCheck(org.petero.droidfish.gamelogic.Position)>(r4);
        if $z4 == 0 goto label61;

        $r32 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r32.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int,org.petero.droidfish.gamelogic.Position)>(2131099845, r2);
        throw $r32;

     label61:
        staticinvoke <org.petero.droidfish.gamelogic.TextIO: void fixupEPSquare(org.petero.droidfish.gamelogic.Position)>(r2);
        return r2;

        catch java.lang.NumberFormatException from label44 to label46 with label47;
    }

    public static final void removeBogusCastleFlags(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        byte b1;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getCastleMask()>();
        b1 = 0;
        $i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(4);
        if $i2 != 1 goto label1;

        $i3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(0);
        if $i3 != 3 goto label0;

        b1 = b1 | 1;

     label0:
        $i4 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(7);
        if $i4 != 3 goto label1;

        b1 = b1 | 2;

     label1:
        $i5 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(60);
        if $i5 != 7 goto label3;

        $i6 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(56);
        if $i6 != 9 goto label2;

        b1 = b1 | 4;

     label2:
        $i7 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(63);
        if $i7 != 9 goto label3;

        b1 = b1 | 8;

     label3:
        i8 = i0 & b1;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setCastleMask(int)>(i8);
        return;
    }

    public static final void fixupEPSquare(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, $i1, $i2, $i3;
        java.util.ArrayList r1;
        boolean z0, $z1, $z2;
        java.util.Iterator r2;
        org.petero.droidfish.gamelogic.Move r3;
        org.petero.droidfish.gamelogic.MoveGen $r4;
        java.lang.Object $r5;
        byte $b4;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if i0 < 0 goto label5;

        $r4 = <org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.MoveGen instance>;
        r1 = virtualinvoke $r4.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r0);
        z0 = 0;
        r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (org.petero.droidfish.gamelogic.Move) $r5;
        $i1 = r3.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i1 != i0 goto label3;

        $i2 = r3.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i2);
        $z2 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z2 == 0 goto label1;

        $b4 = 6;
        goto label2;

     label1:
        $b4 = 12;

     label2:
        if $i3 != $b4 goto label3;

        z0 = 1;
        goto label4;

     label3:
        goto label0;

     label4:
        if z0 != 0 goto label5;

        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setEpSquare(int)>(-1);

     label5:
        return;
    }

    private static final void safeSetPiece(org.petero.droidfish.gamelogic.Position, int, int, int) throws org.petero.droidfish.gamelogic.ChessParseError
    {
        org.petero.droidfish.gamelogic.Position r0;
        int i0, i1, i2, $i3;
        org.petero.droidfish.gamelogic.ChessParseError $r1, $r2, $r3;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        i2 := @parameter3: int;
        if i1 >= 0 goto label0;

        $r1 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r1.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int)>(2131099846);
        throw $r1;

     label0:
        if i0 <= 7 goto label1;

        $r2 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int)>(2131099847);
        throw $r2;

     label1:
        if i2 == 6 goto label2;

        if i2 != 12 goto label4;

     label2:
        if i1 == 0 goto label3;

        if i1 != 7 goto label4;

     label3:
        $r3 = new org.petero.droidfish.gamelogic.ChessParseError;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.ChessParseError: void <init>(int)>(2131099848);
        throw $r3;

     label4:
        $i3 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i0, i1);
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>($i3, i2);
        return;
    }

    public static final java.lang.String toFEN(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        java.lang.StringBuilder $r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, i7, $i8, i9, $i10, $i12, $i14, $i15;
        java.lang.RuntimeException $r16;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        java.lang.String $r20, $r35;
        char $c11, $c13;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        i0 = 7;

     label0:
        if i0 < 0 goto label21;

        i1 = 0;
        i2 = 0;

     label1:
        if i2 >= 8 goto label18;

        $i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i2, i0);
        i3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i4);
        if i3 != 0 goto label2;

        i1 = i1 + 1;
        goto label17;

     label2:
        if i1 <= 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        i1 = 0;

     label3:
        tableswitch(i3)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label8;
            case 6: goto label9;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label14;
            case 12: goto label15;
            default: goto label16;
        };

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(75);
        goto label17;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(81);
        goto label17;

     label6:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(82);
        goto label17;

     label7:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(66);
        goto label17;

     label8:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(78);
        goto label17;

     label9:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(80);
        goto label17;

     label10:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(107);
        goto label17;

     label11:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(113);
        goto label17;

     label12:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(114);
        goto label17;

     label13:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(98);
        goto label17;

     label14:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(110);
        goto label17;

     label15:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(112);
        goto label17;

     label16:
        $r16 = new java.lang.RuntimeException;
        specialinvoke $r16.<java.lang.RuntimeException: void <init>()>();
        throw $r16;

     label17:
        i2 = i2 + 1;
        goto label1;

     label18:
        if i1 <= 0 goto label19;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

     label19:
        if i0 <= 0 goto label20;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label20:
        i0 = i0 + -1;
        goto label0;

     label21:
        $z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z0 == 0 goto label22;

        $r20 = " w ";
        goto label23;

     label22:
        $r20 = " b ";

     label23:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);
        z1 = 0;
        $z2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean h1Castle()>();
        if $z2 == 0 goto label24;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(75);
        z1 = 1;

     label24:
        $z3 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean a1Castle()>();
        if $z3 == 0 goto label25;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(81);
        z1 = 1;

     label25:
        $z4 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean h8Castle()>();
        if $z4 == 0 goto label26;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(107);
        z1 = 1;

     label26:
        $z5 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: boolean a8Castle()>();
        if $z5 == 0 goto label27;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(113);
        z1 = 1;

     label27:
        if z1 != 0 goto label28;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label28:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $i5 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if $i5 < 0 goto label29;

        $i6 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        i7 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i6);
        $i8 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        i9 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i8);
        $i10 = i7 + 97;
        $c11 = (char) $i10;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11);
        $i12 = i9 + 49;
        $c13 = (char) $i12;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c13);
        goto label30;

     label29:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label30:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $i14 = r0.<org.petero.droidfish.gamelogic.Position: int halfMoveClock>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $i15 = r0.<org.petero.droidfish.gamelogic.Position: int fullMoveCounter>;
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);
        $r35 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r35;
    }

    public static final java.lang.String moveToString(org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move, boolean, boolean)
    {
        org.petero.droidfish.gamelogic.Position r0;
        org.petero.droidfish.gamelogic.Move r1;
        boolean z0, z1;
        java.lang.String $r2;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Move;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        $r2 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String moveToString(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move,boolean,boolean,java.util.List)>(r0, r1, z0, z1, null);
        return $r2;
    }

    public static final java.lang.String moveToString(org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move, boolean, boolean, java.util.List)
    {
        org.petero.droidfish.gamelogic.Position r0;
        org.petero.droidfish.gamelogic.Move r1, $r3, r5;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.util.List r2;
        java.lang.StringBuilder r4, $r6;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i37, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i49, $i51, $i53, $i55, $i57, $i59, $i60, $i61, $i62;
        java.lang.String[] $r11;
        java.lang.String $r12, $r14, $r30, $r32, $r40;
        char $c31, $c33, $c34, $c38, $c48, $c50, $c52, $c54, $c56, $c58;
        byte $b36;
        org.petero.droidfish.gamelogic.MoveGen $r21, $r36;
        java.lang.Object $r22;
        org.petero.droidfish.gamelogic.UndoInfo $r34, r35;
        java.util.ArrayList r37;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Move;
        z0 := @parameter2: boolean;
        z1 := @parameter3: boolean;
        r2 := @parameter4: java.util.List;
        if r1 == null goto label0;

        $r3 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(0, 0, 0);
        $z2 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Move: boolean equals(java.lang.Object)>($r3);
        if $z2 == 0 goto label1;

     label0:
        return "--";

     label1:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        r4 = $r6;
        i0 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(4, 0);
        i1 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(4, 7);
        $i12 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i12 != i0 goto label3;

        $i13 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i0);
        if $i13 != 1 goto label3;

        $i14 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i15 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(6, 0);
        if $i14 != $i15 goto label2;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O-O");
        goto label5;

     label2:
        $i16 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i17 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(2, 0);
        if $i16 != $i17 goto label5;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O-O-O");
        goto label5;

     label3:
        $i18 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i18 != i1 goto label5;

        $i19 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i1);
        if $i19 != 7 goto label5;

        $i20 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i21 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(6, 7);
        if $i20 != $i21 goto label4;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O-O");
        goto label5;

     label4:
        $i22 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i23 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(2, 7);
        if $i22 != $i23 goto label5;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("O-O-O");

     label5:
        $i24 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();
        if $i24 != 0 goto label26;

        $r11 = <org.petero.droidfish.gamelogic.TextIO: java.lang.String[] pieceNames>;
        if $r11 != null goto label6;

        z1 = 0;

     label6:
        $i25 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i25);
        if z1 == 0 goto label7;

        $r12 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pieceToCharLocalized(int)>(i2);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        goto label8;

     label7:
        $r14 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pieceToChar(int)>(i2);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

     label8:
        $i26 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        i3 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i26);
        $i27 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i27);
        $i28 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        i5 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i28);
        $i29 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        i6 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i29);
        if z0 == 0 goto label11;

        $i30 = i3 + 97;
        $c31 = (char) $i30;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c31);
        $i32 = i4 + 49;
        $c33 = (char) $i32;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c33);
        $z3 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: boolean isCapture(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move)>(r0, r1);
        if $z3 == 0 goto label9;

        $c34 = 120;
        goto label10;

     label9:
        $c34 = 45;

     label10:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c34);
        goto label24;

     label11:
        $z4 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z4 == 0 goto label12;

        $b36 = 6;
        goto label13;

     label12:
        $b36 = 12;

     label13:
        if i2 != $b36 goto label14;

        $z5 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: boolean isCapture(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move)>(r0, r1);
        if $z5 == 0 goto label23;

        $i37 = i3 + 97;
        $c38 = (char) $i37;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c38);
        goto label23;

     label14:
        i7 = 0;
        i8 = 0;
        i9 = 0;
        if r2 != null goto label15;

        $r21 = <org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.MoveGen instance>;
        r2 = virtualinvoke $r21.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r0);

     label15:
        i10 = interfaceinvoke r2.<java.util.List: int size()>();
        i11 = 0;

     label16:
        if i11 >= i10 goto label19;

        $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i11);
        r5 = (org.petero.droidfish.gamelogic.Move) $r22;
        $i39 = r5.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i40 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i39);
        if $i40 != i2 goto label18;

        $i41 = r5.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i42 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        if $i41 != $i42 goto label18;

        i7 = i7 + 1;
        $i43 = r5.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i44 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i43);
        if $i44 != i3 goto label17;

        i8 = i8 + 1;

     label17:
        $i45 = r5.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i46 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i45);
        if $i46 != i4 goto label18;

        i9 = i9 + 1;

     label18:
        i11 = i11 + 1;
        goto label16;

     label19:
        if i7 >= 2 goto label20;

        goto label23;

     label20:
        if i8 >= 2 goto label21;

        $i47 = i3 + 97;
        $c48 = (char) $i47;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c48);
        goto label23;

     label21:
        if i9 >= 2 goto label22;

        $i49 = i4 + 49;
        $c50 = (char) $i49;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c50);
        goto label23;

     label22:
        $i51 = i3 + 97;
        $c52 = (char) $i51;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c52);
        $i53 = i4 + 49;
        $c54 = (char) $i53;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c54);

     label23:
        $z6 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: boolean isCapture(org.petero.droidfish.gamelogic.Position,org.petero.droidfish.gamelogic.Move)>(r0, r1);
        if $z6 == 0 goto label24;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(120);

     label24:
        $i55 = i5 + 97;
        $c56 = (char) $i55;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c56);
        $i57 = i6 + 49;
        $c58 = (char) $i57;
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c58);
        $i59 = r1.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        if $i59 == 0 goto label26;

        if z1 == 0 goto label25;

        $i60 = r1.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        $r30 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pieceToCharLocalized(int)>($i60);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        goto label26;

     label25:
        $i61 = r1.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        $r32 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pieceToChar(int)>($i61);
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

     label26:
        $r34 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r34.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r35 = $r34;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r1, r35);
        z7 = staticinvoke <org.petero.droidfish.gamelogic.MoveGen: boolean inCheck(org.petero.droidfish.gamelogic.Position)>(r0);
        if z7 == 0 goto label28;

        $r36 = <org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.MoveGen instance>;
        r37 = virtualinvoke $r36.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r0);
        $i62 = virtualinvoke r37.<java.util.ArrayList: int size()>();
        if $i62 != 0 goto label27;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);
        goto label28;

     label27:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label28:
        virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: void unMakeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r1, r35);
        $r40 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r40;
    }

    private static final boolean isCapture(org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.Position r0;
        org.petero.droidfish.gamelogic.Move r1;
        int i0, $i1, $i2, $i3, $i6, $i7;
        boolean $z0;
        byte $b5;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Move;
        $i1 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i1);
        if $i2 != 0 goto label3;

        $i3 = r1.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        i0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i3);
        $z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z0 == 0 goto label0;

        $b5 = 6;
        goto label1;

     label0:
        $b5 = 12;

     label1:
        if i0 != $b5 goto label2;

        $i6 = r1.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i7 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if $i6 != $i7 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 1;
    }

    public static final boolean isValid(org.petero.droidfish.gamelogic.Position, org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.Position r0;
        org.petero.droidfish.gamelogic.Move r1;
        java.util.ArrayList r2;
        int i0, $i1;
        org.petero.droidfish.gamelogic.MoveGen $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter1: org.petero.droidfish.gamelogic.Move;
        if r1 != null goto label0;

        return 0;

     label0:
        $r3 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        r2 = virtualinvoke $r3.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r0);
        i0 = 0;

     label1:
        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        if i0 >= $i1 goto label3;

        $r4 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);
        $z0 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Move: boolean equals(java.lang.Object)>($r4);
        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;
        goto label1;

     label3:
        return 0;
    }

    public static final org.petero.droidfish.gamelogic.Move stringToMove(org.petero.droidfish.gamelogic.Position, java.lang.String)
    {
        org.petero.droidfish.gamelogic.Position r0;
        java.lang.String r1;
        org.petero.droidfish.gamelogic.Move $r2;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter1: java.lang.String;
        $r2 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: org.petero.droidfish.gamelogic.Move stringToMove(org.petero.droidfish.gamelogic.Position,java.lang.String,java.util.ArrayList)>(r0, r1, null);
        return $r2;
    }

    public static final org.petero.droidfish.gamelogic.Move stringToMove(org.petero.droidfish.gamelogic.Position, java.lang.String, java.util.ArrayList)
    {
        org.petero.droidfish.gamelogic.Position r0;
        java.lang.String r1, r5, r6, r7;
        java.util.ArrayList r2, $r17, r18;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12;
        org.petero.droidfish.gamelogic.TextIO$MoveInfo r3, $r8;
        int i0, i2, i3, i4, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, i30, $i31, $i32, i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, i55, i56, $i57, $i58, i59;
        char c1;
        org.petero.droidfish.gamelogic.Move $r4, r20, $r22, r23, r25;
        byte $b5, $b6, $b8, $b9, $b28;
        org.petero.droidfish.gamelogic.MoveGen $r16;
        java.lang.Object $r19, $r21, $r24;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.util.ArrayList;
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--");
        if $z3 == 0 goto label0;

        $r4 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r4.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(0, 0, 0);
        return $r4;

     label0:
        r5 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("=", "");
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\+", "");
        r7 = virtualinvoke r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("#", "");
        z0 = r0.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $r8 = new org.petero.droidfish.gamelogic.TextIO$MoveInfo;
        specialinvoke $r8.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: void <init>()>();
        r3 = $r8;
        z1 = 0;
        $z4 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("O-O");
        if $z4 != 0 goto label1;

        $z5 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("0-0");
        if $z5 != 0 goto label1;

        $z6 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("o-o");
        if $z6 == 0 goto label6;

     label1:
        if z0 == 0 goto label2;

        $b5 = 1;
        goto label3;

     label2:
        $b5 = 7;

     label3:
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int piece> = $b5;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX> = 4;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toX> = 6;
        if z0 == 0 goto label4;

        $b6 = 0;
        goto label5;

     label4:
        $b6 = 7;

     label5:
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toY> = $b6;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY> = $b6;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int promPiece> = 0;
        goto label32;

     label6:
        $z7 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("O-O-O");
        if $z7 != 0 goto label7;

        $z8 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("0-0-0");
        if $z8 != 0 goto label7;

        $z9 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("o-o-o");
        if $z9 == 0 goto label12;

     label7:
        if z0 == 0 goto label8;

        $b8 = 1;
        goto label9;

     label8:
        $b8 = 7;

     label9:
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int piece> = $b8;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX> = 4;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toX> = 2;
        if z0 == 0 goto label10;

        $b9 = 0;
        goto label11;

     label10:
        $b9 = 7;

     label11:
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toY> = $b9;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY> = $b9;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int promPiece> = 0;
        goto label32;

     label12:
        z2 = 0;
        i0 = 0;

     label13:
        $i11 = virtualinvoke r7.<java.lang.String: int length()>();
        if i0 >= $i11 goto label24;

        c1 = virtualinvoke r7.<java.lang.String: char charAt(int)>(i0);
        if i0 != 0 goto label14;

        i2 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: int charToPiece(boolean,char)>(z0, c1);
        if i2 < 0 goto label14;

        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int piece> = i2;
        goto label23;

     label14:
        i12 = c1 - 97;
        if i12 < 0 goto label17;

        if i12 >= 8 goto label17;

        if z2 != 0 goto label15;

        $i13 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX>;
        if $i13 < 0 goto label16;

     label15:
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toX> = i12;
        goto label17;

     label16:
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX> = i12;

     label17:
        i3 = c1 - 49;
        if i3 < 0 goto label20;

        if i3 >= 8 goto label20;

        if z2 != 0 goto label18;

        $i14 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY>;
        if $i14 < 0 goto label19;

     label18:
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toY> = i3;
        goto label20;

     label19:
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY> = i3;

     label20:
        if c1 == 120 goto label21;

        if c1 != 45 goto label22;

     label21:
        z2 = 1;
        if c1 != 120 goto label22;

        z1 = 1;

     label22:
        $i15 = virtualinvoke r7.<java.lang.String: int length()>();
        $i16 = $i15 - 1;
        if i0 != $i16 goto label23;

        i4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: int charToPiece(boolean,char)>(z0, c1);
        if i4 < 0 goto label23;

        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int promPiece> = i4;

     label23:
        i0 = i0 + 1;
        goto label13;

     label24:
        $i17 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX>;
        if $i17 < 0 goto label25;

        $i18 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toX>;
        if $i18 >= 0 goto label25;

        $i19 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX>;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toX> = $i19;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX> = -1;

     label25:
        $i20 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY>;
        if $i20 < 0 goto label26;

        $i21 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toY>;
        if $i21 >= 0 goto label26;

        $i22 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY>;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toY> = $i22;
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY> = -1;

     label26:
        $i23 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int piece>;
        if $i23 >= 0 goto label31;

        $i24 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX>;
        if $i24 < 0 goto label27;

        $i25 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY>;
        if $i25 < 0 goto label27;

        $i26 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toX>;
        if $i26 < 0 goto label27;

        $i27 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toY>;
        if $i27 < 0 goto label27;

        $z10 = 1;
        goto label28;

     label27:
        $z10 = 0;

     label28:
        z11 = $z10;
        if z11 != 0 goto label31;

        if z0 == 0 goto label29;

        $b28 = 6;
        goto label30;

     label29:
        $b28 = 12;

     label30:
        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int piece> = $b28;

     label31:
        $i29 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int promPiece>;
        if $i29 >= 0 goto label32;

        r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int promPiece> = 0;

     label32:
        if r2 != null goto label33;

        $r16 = <org.petero.droidfish.gamelogic.MoveGen: org.petero.droidfish.gamelogic.MoveGen instance>;
        r2 = virtualinvoke $r16.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r0);

     label33:
        $r17 = new java.util.ArrayList;
        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>(2);
        r18 = $r17;
        i30 = 0;

     label34:
        $i31 = virtualinvoke r2.<java.util.ArrayList: int size()>();
        if i30 >= $i31 goto label42;

        $r19 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i30);
        r20 = (org.petero.droidfish.gamelogic.Move) $r19;
        $i32 = r20.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        i33 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i32);
        z12 = 1;
        $i34 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int piece>;
        if $i34 < 0 goto label35;

        $i35 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int piece>;
        if $i35 == i33 goto label35;

        z12 = 0;

     label35:
        $i36 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX>;
        if $i36 < 0 goto label36;

        $i37 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromX>;
        $i38 = r20.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i39 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i38);
        if $i37 == $i39 goto label36;

        z12 = 0;

     label36:
        $i40 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY>;
        if $i40 < 0 goto label37;

        $i41 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int fromY>;
        $i42 = r20.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        $i43 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i42);
        if $i41 == $i43 goto label37;

        z12 = 0;

     label37:
        $i44 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toX>;
        if $i44 < 0 goto label38;

        $i45 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toX>;
        $i46 = r20.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i47 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>($i46);
        if $i45 == $i47 goto label38;

        z12 = 0;

     label38:
        $i48 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toY>;
        if $i48 < 0 goto label39;

        $i49 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int toY>;
        $i50 = r20.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $i51 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>($i50);
        if $i49 == $i51 goto label39;

        z12 = 0;

     label39:
        $i52 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int promPiece>;
        if $i52 < 0 goto label40;

        $i53 = r3.<org.petero.droidfish.gamelogic.TextIO$MoveInfo: int promPiece>;
        $i54 = r20.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        if $i53 == $i54 goto label40;

        z12 = 0;

     label40:
        if z12 == 0 goto label41;

        virtualinvoke r18.<java.util.ArrayList: boolean add(java.lang.Object)>(r20);

     label41:
        i30 = i30 + 1;
        goto label34;

     label42:
        i55 = virtualinvoke r18.<java.util.ArrayList: int size()>();
        if i55 != 0 goto label43;

        return null;

     label43:
        if i55 != 1 goto label44;

        $r21 = virtualinvoke r18.<java.util.ArrayList: java.lang.Object get(int)>(0);
        $r22 = (org.petero.droidfish.gamelogic.Move) $r21;
        return $r22;

     label44:
        if z1 != 0 goto label45;

        return null;

     label45:
        r23 = null;
        i56 = 0;

     label46:
        $i57 = virtualinvoke r18.<java.util.ArrayList: int size()>();
        if i56 >= $i57 goto label49;

        $r24 = virtualinvoke r18.<java.util.ArrayList: java.lang.Object get(int)>(i56);
        r25 = (org.petero.droidfish.gamelogic.Move) $r24;
        $i58 = r25.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        i59 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i58);
        if i59 == 0 goto label48;

        if r23 != null goto label47;

        r23 = r25;
        goto label48;

     label47:
        return null;

     label48:
        i56 = i56 + 1;
        goto label46;

     label49:
        return r23;
    }

    public static final java.lang.String moveToUCIString(org.petero.droidfish.gamelogic.Move)
    {
        org.petero.droidfish.gamelogic.Move r0;
        java.lang.String r1, $r4, r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Move;
        $i0 = r0.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        r1 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String squareToString(int)>($i0);
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $i1 = r0.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $r4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String squareToString(int)>($i1);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $i2 = r0.<org.petero.droidfish.gamelogic.Move: int promoteTo>;
        tableswitch($i2)
        {
            case 2: goto label0;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label0;
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label3;
            default: goto label4;
        };

     label0:
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("q");
        r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label4;

     label1:
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("r");
        r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label4;

     label2:
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");
        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label4;

     label3:
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n");
        r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label4;

     label4:
        return r6;
    }

    public static final org.petero.droidfish.gamelogic.Move UCIstringToMove(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        null_type n0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8;
        char c2;
        boolean z0;
        byte b3, $b9, $b10, $b11, $b12;
        org.petero.droidfish.gamelogic.Move $r3, r4;

        r0 := @parameter0: java.lang.String;
        n0 = null;
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i4 < 4 goto label0;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i5 <= 5 goto label1;

     label0:
        return n0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);
        i0 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: int getSquare(java.lang.String)>($r1);
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(2, 4);
        i1 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: int getSquare(java.lang.String)>($r2);
        if i0 < 0 goto label2;

        if i1 >= 0 goto label3;

     label2:
        return n0;

     label3:
        c2 = 32;
        z0 = 1;
        $i6 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i6 != 5 goto label6;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(4);
        $i7 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i1);
        if $i7 != 7 goto label4;

        z0 = 1;
        goto label6;

     label4:
        $i8 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i1);
        if $i8 != 0 goto label5;

        z0 = 0;
        goto label6;

     label5:
        return n0;

     label6:
        lookupswitch(c2)
        {
            case 32: goto label7;
            case 98: goto label14;
            case 110: goto label17;
            case 113: goto label8;
            case 114: goto label11;
            default: goto label20;
        };

     label7:
        b3 = 0;
        goto label21;

     label8:
        if z0 == 0 goto label9;

        $b9 = 2;
        goto label10;

     label9:
        $b9 = 8;

     label10:
        b3 = $b9;
        goto label21;

     label11:
        if z0 == 0 goto label12;

        $b10 = 3;
        goto label13;

     label12:
        $b10 = 9;

     label13:
        b3 = $b10;
        goto label21;

     label14:
        if z0 == 0 goto label15;

        $b11 = 4;
        goto label16;

     label15:
        $b11 = 10;

     label16:
        b3 = $b11;
        goto label21;

     label17:
        if z0 == 0 goto label18;

        $b12 = 5;
        goto label19;

     label18:
        $b12 = 11;

     label19:
        b3 = $b12;
        goto label21;

     label20:
        return n0;

     label21:
        $r3 = new org.petero.droidfish.gamelogic.Move;
        specialinvoke $r3.<org.petero.droidfish.gamelogic.Move: void <init>(int,int,int)>(i0, i1, b3);
        r4 = $r3;
        return r4;
    }

    public static final int getSquare(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i4;
        char $c2, $c3;

        r0 := @parameter0: java.lang.String;
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);
        i0 = $c2 - 97;
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);
        i1 = $c3 - 49;
        if i0 < 0 goto label0;

        if i0 > 7 goto label0;

        if i1 < 0 goto label0;

        if i1 <= 7 goto label1;

     label0:
        return -1;

     label1:
        $i4 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i0, i1);
        return $i4;
    }

    public static final java.lang.String squareToString(int)
    {
        int i0, i1, i2, $i3, $i5;
        java.lang.StringBuilder $r0, r1;
        char $c4, $c6;
        java.lang.String $r4;

        i0 := @parameter0: int;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
        r1 = $r0;
        i1 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getX(int)>(i0);
        i2 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getY(int)>(i0);
        $i3 = i1 + 97;
        $c4 = (char) $i3;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);
        $i5 = i2 + 49;
        $c6 = (char) $i5;
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r4;
    }

    public static final java.lang.String asciiBoard(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gamelogic.Position r0;
        java.lang.StringBuilder $r1, r2;
        java.lang.String r3, $r10, r14, $r20;
        int i0, i1, i2, $i3, $i5;
        boolean z0, $z1;
        java.lang.Object[] $r4;
        char $c4;

        r0 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(400);
        r2 = $r1;
        $r4 = newarray (java.lang.Object)[0];
        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%n", $r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    +----+----+----+----+----+----+----+----+");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        i0 = 7;

     label0:
        if i0 < 0 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    |");
        i1 = 0;

     label1:
        if i1 >= 8 goto label9;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        $i3 = staticinvoke <org.petero.droidfish.gamelogic.Position: int getSquare(int,int)>(i1, i0);
        i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>($i3);
        if i2 != 0 goto label4;

        z0 = staticinvoke <org.petero.droidfish.gamelogic.Position: boolean darkSquare(int,int)>(i1, i0);
        if z0 == 0 goto label2;

        $r10 = ".. |";
        goto label3;

     label2:
        $r10 = "   |";

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        goto label8;

     label4:
        $z1 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i2);
        if $z1 == 0 goto label5;

        $c4 = 32;
        goto label6;

     label5:
        $c4 = 42;

     label6:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);
        r14 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pieceToChar(int)>(i2);
        $i5 = virtualinvoke r14.<java.lang.String: int length()>();
        if $i5 != 0 goto label7;

        r14 = "P";

     label7:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" |");

     label8:
        i1 = i1 + 1;
        goto label1;

     label9:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    +----+----+----+----+----+----+----+----+");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        i0 = i0 + -1;
        goto label0;

     label10:
        $r20 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r20;
    }

    public static final java.lang.String pieceAndSquareToString(int, int, int)
    {
        int i0, i1, i2;
        java.lang.StringBuilder $r0, r1;
        boolean z0, $z1;
        char $c3;
        java.lang.String[] $r4;
        java.lang.String $r5, $r8, $r10, $r12;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
        r1 = $r0;
        if i0 != 2 goto label0;

        $c3 = staticinvoke <org.petero.droidfish.gamelogic.Piece: char toUniCode(int)>(i1);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);
        goto label9;

     label0:
        if i0 == 0 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;
        if i1 == 6 goto label3;

        if i1 != 12 goto label6;

     label3:
        if z0 == 0 goto label4;

        $r4 = <org.petero.droidfish.gamelogic.TextIO: java.lang.String[] pieceNames>;
        $r5 = $r4[0];
        goto label5;

     label4:
        $r5 = "P";

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        goto label9;

     label6:
        if z0 == 0 goto label7;

        $r8 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pieceToCharLocalized(int)>(i1);
        goto label8;

     label7:
        $r8 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String pieceToChar(int)>(i1);

     label8:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label9:
        $r10 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: java.lang.String squareToString(int)>(i2);
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r12;
    }

    private static final java.lang.String pieceToChar(int)
    {
        int i0;

        i0 := @parameter0: int;
        tableswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label0;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label5;
            case 7: goto label4;
            case 8: goto label0;
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label3;
            default: goto label5;
        };

     label0:
        return "Q";

     label1:
        return "R";

     label2:
        return "B";

     label3:
        return "N";

     label4:
        return "K";

     label5:
        return "";
    }

    public static final java.lang.String pieceToCharLocalized(int)
    {
        int i0;
        java.lang.String[] $r0, $r2, $r4, $r6, $r8;
        java.lang.String $r1, $r3, $r5, $r7, $r9;

        i0 := @parameter0: int;
        tableswitch(i0)
        {
            case 1: goto label4;
            case 2: goto label0;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label5;
            case 7: goto label4;
            case 8: goto label0;
            case 9: goto label1;
            case 10: goto label2;
            case 11: goto label3;
            default: goto label5;
        };

     label0:
        $r0 = <org.petero.droidfish.gamelogic.TextIO: java.lang.String[] pieceNames>;
        $r1 = $r0[4];
        return $r1;

     label1:
        $r2 = <org.petero.droidfish.gamelogic.TextIO: java.lang.String[] pieceNames>;
        $r3 = $r2[3];
        return $r3;

     label2:
        $r4 = <org.petero.droidfish.gamelogic.TextIO: java.lang.String[] pieceNames>;
        $r5 = $r4[2];
        return $r5;

     label3:
        $r6 = <org.petero.droidfish.gamelogic.TextIO: java.lang.String[] pieceNames>;
        $r7 = $r6[1];
        return $r7;

     label4:
        $r8 = <org.petero.droidfish.gamelogic.TextIO: java.lang.String[] pieceNames>;
        $r9 = $r8[5];
        return $r9;

     label5:
        return "";
    }

    private static final int charToPiece(boolean, char)
    {
        boolean z0;
        char c0;
        byte $b1, $b2, $b3, $b4, $b5, $b6;

        z0 := @parameter0: boolean;
        c0 := @parameter1: char;
        lookupswitch(c0)
        {
            case 66: goto label6;
            case 75: goto label12;
            case 78: goto label9;
            case 80: goto label15;
            case 81: goto label0;
            case 82: goto label3;
            case 107: goto label12;
            case 110: goto label9;
            case 112: goto label15;
            case 113: goto label0;
            case 114: goto label3;
            default: goto label18;
        };

     label0:
        if z0 == 0 goto label1;

        $b1 = 2;
        goto label2;

     label1:
        $b1 = 8;

     label2:
        return $b1;

     label3:
        if z0 == 0 goto label4;

        $b2 = 3;
        goto label5;

     label4:
        $b2 = 9;

     label5:
        return $b2;

     label6:
        if z0 == 0 goto label7;

        $b3 = 4;
        goto label8;

     label7:
        $b3 = 10;

     label8:
        return $b3;

     label9:
        if z0 == 0 goto label10;

        $b4 = 5;
        goto label11;

     label10:
        $b4 = 11;

     label11:
        return $b4;

     label12:
        if z0 == 0 goto label13;

        $b5 = 1;
        goto label14;

     label13:
        $b5 = 7;

     label14:
        return $b5;

     label15:
        if z0 == 0 goto label16;

        $b6 = 6;
        goto label17;

     label16:
        $b6 = 12;

     label17:
        return $b6;

     label18:
        return -1;
    }

    public static final java.lang.String pgnPromotion(java.lang.String)
    {
        java.lang.String r0, $r2, $r5, $r7;
        int i0, $i2, $i4, $i5, $i6, $i7;
        char c1, $c3;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;

        r0 := @parameter0: java.lang.String;
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        i0 = $i2 - 1;

     label0:
        if i0 <= 0 goto label2;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        if c1 == 35 goto label1;

        if c1 == 43 goto label1;

        goto label2;

     label1:
        i0 = i0 + -1;
        goto label0;

     label2:
        if i0 <= 0 goto label3;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);
        $i4 = staticinvoke <org.petero.droidfish.gamelogic.TextIO: int charToPiece(boolean,char)>(1, $c3);
        if $i4 == -1 goto label3;

        i0 = i0 + -1;

     label3:
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $i5 = i0 + 1;
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
        $i6 = i0 + 1;
        $i7 = virtualinvoke r0.<java.lang.String: int length()>();
        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, $i7);
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r7;
    }

    static void <clinit>()
    {
        <org.petero.droidfish.gamelogic.TextIO: java.lang.String[] pieceNames> = null;
        return;
    }
}
public class org.petero.droidfish.gamelogic.TimeControl extends java.lang.Object
{
    private long timeControl;
    private int movesPerSession;
    private long increment;
    private long whiteBaseTime;
    private long blackBaseTime;
    int currentMove;
    boolean whiteToMove;
    long elapsed;
    long timerT0;

    public void <init>()
    {
        org.petero.droidfish.gamelogic.TimeControl r0;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        virtualinvoke r0.<org.petero.droidfish.gamelogic.TimeControl: void setTimeControl(long,int,long)>(300000L, 0, 0L);
        virtualinvoke r0.<org.petero.droidfish.gamelogic.TimeControl: void reset()>();
        return;
    }

    public final void reset()
    {
        org.petero.droidfish.gamelogic.TimeControl r0;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        r0.<org.petero.droidfish.gamelogic.TimeControl: int currentMove> = 1;
        r0.<org.petero.droidfish.gamelogic.TimeControl: boolean whiteToMove> = 1;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long elapsed> = 0L;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long timerT0> = 0L;
        return;
    }

    public final void setTimeControl(long, int, long)
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        long l0, l2;
        int i1;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        l0 := @parameter0: long;
        i1 := @parameter1: int;
        l2 := @parameter2: long;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long timeControl> = l0;
        r0.<org.petero.droidfish.gamelogic.TimeControl: int movesPerSession> = i1;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long increment> = l2;
        return;
    }

    public final void setCurrentMove(int, boolean, long, long)
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        int i0;
        boolean z0;
        long l1, l2;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        i0 := @parameter0: int;
        z0 := @parameter1: boolean;
        l1 := @parameter2: long;
        l2 := @parameter3: long;
        r0.<org.petero.droidfish.gamelogic.TimeControl: int currentMove> = i0;
        r0.<org.petero.droidfish.gamelogic.TimeControl: boolean whiteToMove> = z0;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long whiteBaseTime> = l1;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long blackBaseTime> = l2;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long timerT0> = 0L;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long elapsed> = 0L;
        return;
    }

    public final boolean clockRunning()
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        $l0 = r0.<org.petero.droidfish.gamelogic.TimeControl: long timerT0>;
        $b1 = $l0 cmp 0L;
        if $b1 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public final void startTimer(long)
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        long l0;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        l0 := @parameter0: long;
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.TimeControl: boolean clockRunning()>();
        if $z0 != 0 goto label0;

        r0.<org.petero.droidfish.gamelogic.TimeControl: long timerT0> = l0;

     label0:
        return;
    }

    public final void stopTimer(long)
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        long l0, l1, l2, $l3, $l5, $l6;
        boolean $z0;
        byte $b4;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        l0 := @parameter0: long;
        $z0 = virtualinvoke r0.<org.petero.droidfish.gamelogic.TimeControl: boolean clockRunning()>();
        if $z0 == 0 goto label0;

        l1 = l0;
        $l3 = r0.<org.petero.droidfish.gamelogic.TimeControl: long timerT0>;
        l2 = l1 - $l3;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long timerT0> = 0L;
        $b4 = l2 cmp 0L;
        if $b4 <= 0 goto label0;

        $l5 = r0.<org.petero.droidfish.gamelogic.TimeControl: long elapsed>;
        $l6 = $l5 + l2;
        r0.<org.petero.droidfish.gamelogic.TimeControl: long elapsed> = $l6;

     label0:
        return;
    }

    public final int moveMade(long, boolean)
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        long l0, l1, $l3, $l5;
        boolean z0, $z1;
        int $i2, $i4, $i6;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        l0 := @parameter0: long;
        z0 := @parameter1: boolean;
        virtualinvoke r0.<org.petero.droidfish.gamelogic.TimeControl: void stopTimer(long)>(l0);
        $z1 = r0.<org.petero.droidfish.gamelogic.TimeControl: boolean whiteToMove>;
        $i2 = virtualinvoke r0.<org.petero.droidfish.gamelogic.TimeControl: int getRemainingTime(boolean,long)>($z1, l0);
        l1 = (long) $i2;
        if z0 == 0 goto label0;

        $l3 = r0.<org.petero.droidfish.gamelogic.TimeControl: long increment>;
        l1 = l1 + $l3;
        $i4 = virtualinvoke r0.<org.petero.droidfish.gamelogic.TimeControl: int getMovesToTC()>();
        if $i4 != 1 goto label0;

        $l5 = r0.<org.petero.droidfish.gamelogic.TimeControl: long timeControl>;
        l1 = l1 + $l5;

     label0:
        r0.<org.petero.droidfish.gamelogic.TimeControl: long elapsed> = 0L;
        $i6 = (int) l1;
        return $i6;
    }

    public final int getRemainingTime(boolean, long)
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        boolean z0, $z1;
        long l0, l1, $l2, $l3, $l4, $l6, $l7;
        byte $b5;
        int $i8;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        z0 := @parameter0: boolean;
        l0 := @parameter1: long;
        if z0 == 0 goto label0;

        $l2 = r0.<org.petero.droidfish.gamelogic.TimeControl: long whiteBaseTime>;
        goto label1;

     label0:
        $l2 = r0.<org.petero.droidfish.gamelogic.TimeControl: long blackBaseTime>;

     label1:
        l1 = $l2;
        $z1 = r0.<org.petero.droidfish.gamelogic.TimeControl: boolean whiteToMove>;
        if z0 != $z1 goto label2;

        $l3 = r0.<org.petero.droidfish.gamelogic.TimeControl: long elapsed>;
        l1 = l1 - $l3;
        $l4 = r0.<org.petero.droidfish.gamelogic.TimeControl: long timerT0>;
        $b5 = $l4 cmp 0L;
        if $b5 == 0 goto label2;

        $l6 = r0.<org.petero.droidfish.gamelogic.TimeControl: long timerT0>;
        $l7 = l0 - $l6;
        l1 = l1 - $l7;

     label2:
        $i8 = (int) l1;
        return $i8;
    }

    public final int getInitialTime()
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        long $l0;
        int $i1;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        $l0 = r0.<org.petero.droidfish.gamelogic.TimeControl: long timeControl>;
        $i1 = (int) $l0;
        return $i1;
    }

    public final int getIncrement()
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        long $l0;
        int $i1;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        $l0 = r0.<org.petero.droidfish.gamelogic.TimeControl: long increment>;
        $i1 = (int) $l0;
        return $i1;
    }

    public final int getMovesToTC()
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        $i1 = r0.<org.petero.droidfish.gamelogic.TimeControl: int movesPerSession>;
        if $i1 > 0 goto label0;

        return 0;

     label0:
        i0 = 1;

     label1:
        $i2 = r0.<org.petero.droidfish.gamelogic.TimeControl: int currentMove>;
        if i0 > $i2 goto label2;

        $i3 = r0.<org.petero.droidfish.gamelogic.TimeControl: int movesPerSession>;
        i0 = i0 + $i3;
        goto label1;

     label2:
        $i4 = r0.<org.petero.droidfish.gamelogic.TimeControl: int currentMove>;
        $i5 = i0 - $i4;
        return $i5;
    }

    public final int getMovesPerSession()
    {
        org.petero.droidfish.gamelogic.TimeControl r0;
        int $i0;

        r0 := @this: org.petero.droidfish.gamelogic.TimeControl;
        $i0 = r0.<org.petero.droidfish.gamelogic.TimeControl: int movesPerSession>;
        return $i0;
    }
}
public class org.petero.droidfish.gamelogic.UndoInfo extends java.lang.Object
{
    int capturedPiece;
    int castleMask;
    int epSquare;
    int halfMoveClock;

    public void <init>()
    {
        org.petero.droidfish.gamelogic.UndoInfo r0;

        r0 := @this: org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
class org.petero.droidfish.gtb.GtbProbe$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.petero.droidfish.gtb.GtbProbe this$0;

    void <init>(org.petero.droidfish.gtb.GtbProbe)
    {
        org.petero.droidfish.gtb.GtbProbe$1 r0;
        org.petero.droidfish.gtb.GtbProbe r1;

        r0 := @this: org.petero.droidfish.gtb.GtbProbe$1;
        r1 := @parameter0: org.petero.droidfish.gtb.GtbProbe;
        r0.<org.petero.droidfish.gtb.GtbProbe$1: org.petero.droidfish.gtb.GtbProbe this$0> = r1;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public void run()
    {
        org.petero.droidfish.gtb.GtbProbe$1 r0;
        java.lang.InterruptedException r1, $r2;
        org.petero.droidfish.gtb.GtbProbe $r3;

        r0 := @this: org.petero.droidfish.gtb.GtbProbe$1;

     label0:
        staticinvoke <java.lang.Thread: void sleep(long)>(500L);

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        r1 = $r2;

     label3:
        $r3 = r0.<org.petero.droidfish.gtb.GtbProbe$1: org.petero.droidfish.gtb.GtbProbe this$0>;
        virtualinvoke $r3.<org.petero.droidfish.gtb.GtbProbe: void initIfNeeded()>();
        return;

        catch java.lang.InterruptedException from label0 to label1 with label2;
    }
}
class org.petero.droidfish.gtb.GtbProbe extends java.lang.Object
{
    private java.lang.String currTbPath;
    private java.util.concurrent.ConcurrentLinkedQueue tbPathQueue;
    static final int NOPIECE;
    static final int PAWN;
    static final int KNIGHT;
    static final int BISHOP;
    static final int ROOK;
    static final int QUEEN;
    static final int KING;
    static final int NOSQUARE;
    static final int H1_CASTLE;
    static final int A1_CASTLE;
    static final int H8_CASTLE;
    static final int A8_CASTLE;
    static final int DRAW;
    static final int WMATE;
    static final int BMATE;
    static final int FORBID;
    static final int UNKNOWN;

    void <init>()
    {
        org.petero.droidfish.gtb.GtbProbe r0;
        java.util.concurrent.ConcurrentLinkedQueue $r1;

        r0 := @this: org.petero.droidfish.gtb.GtbProbe;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.petero.droidfish.gtb.GtbProbe: java.lang.String currTbPath> = "";
        $r1 = new java.util.concurrent.ConcurrentLinkedQueue;
        specialinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();
        r0.<org.petero.droidfish.gtb.GtbProbe: java.util.concurrent.ConcurrentLinkedQueue tbPathQueue> = $r1;
        return;
    }

    public final void setPath(java.lang.String, boolean)
    {
        org.petero.droidfish.gtb.GtbProbe r0;
        java.lang.String r1, $r5;
        boolean z0, $z1, $z2;
        org.petero.droidfish.gtb.GtbProbe$1 $r2;
        java.lang.Thread r3, $r7;
        java.util.concurrent.ConcurrentLinkedQueue $r4, $r6;

        r0 := @this: org.petero.droidfish.gtb.GtbProbe;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        if z0 != 0 goto label0;

        $r4 = r0.<org.petero.droidfish.gtb.GtbProbe: java.util.concurrent.ConcurrentLinkedQueue tbPathQueue>;
        $z1 = virtualinvoke $r4.<java.util.concurrent.ConcurrentLinkedQueue: boolean isEmpty()>();
        if $z1 == 0 goto label0;

        $r5 = r0.<org.petero.droidfish.gtb.GtbProbe: java.lang.String currTbPath>;
        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);
        if $z2 != 0 goto label1;

     label0:
        $r6 = r0.<org.petero.droidfish.gtb.GtbProbe: java.util.concurrent.ConcurrentLinkedQueue tbPathQueue>;
        virtualinvoke $r6.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>(r1);
        $r7 = new java.lang.Thread;
        $r2 = new org.petero.droidfish.gtb.GtbProbe$1;
        specialinvoke $r2.<org.petero.droidfish.gtb.GtbProbe$1: void <init>(org.petero.droidfish.gtb.GtbProbe)>(r0);
        specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);
        r3 = $r7;
        virtualinvoke r3.<java.lang.Thread: void setPriority(int)>(1);
        virtualinvoke r3.<java.lang.Thread: void start()>();

     label1:
        return;
    }

    public final synchronized void initIfNeeded()
    {
        org.petero.droidfish.gtb.GtbProbe r0;
        java.lang.String r1, $r10;
        java.lang.Object r2, $r5, $r8, $r9;
        java.lang.Throwable r3, $r11;
        java.util.concurrent.ConcurrentLinkedQueue $r4, $r6, $r7;
        boolean $z0;

        r0 := @this: org.petero.droidfish.gtb.GtbProbe;
        $r4 = r0.<org.petero.droidfish.gtb.GtbProbe: java.util.concurrent.ConcurrentLinkedQueue tbPathQueue>;
        $r5 = virtualinvoke $r4.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();
        r1 = (java.lang.String) $r5;

     label0:
        $r6 = r0.<org.petero.droidfish.gtb.GtbProbe: java.util.concurrent.ConcurrentLinkedQueue tbPathQueue>;
        $z0 = virtualinvoke $r6.<java.util.concurrent.ConcurrentLinkedQueue: boolean isEmpty()>();
        if $z0 != 0 goto label1;

        $r7 = r0.<org.petero.droidfish.gtb.GtbProbe: java.util.concurrent.ConcurrentLinkedQueue tbPathQueue>;
        $r8 = virtualinvoke $r7.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();
        r1 = (java.lang.String) $r8;
        goto label0;

     label1:
        if r1 == null goto label7;

        r0.<org.petero.droidfish.gtb.GtbProbe: java.lang.String currTbPath> = r1;
        $r9 = <org.petero.droidfish.engine.EngineUtil: java.lang.Object nativeLock>;
        r2 = $r9;
        entermonitor $r9;

     label2:
        $r10 = r0.<org.petero.droidfish.gtb.GtbProbe: java.lang.String currTbPath>;
        staticinvoke <org.petero.droidfish.gtb.GtbProbe: boolean init(java.lang.String)>($r10);
        exitmonitor r2;

     label3:
        goto label7;

     label4:
        $r11 := @caughtexception;

     label5:
        r3 = $r11;
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final native boolean probeHard(boolean, int, int, int[], int[], byte[], byte[], int[]);

    private static final native boolean init(java.lang.String);

    static void <clinit>()
    {
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("gtb");
        return;
    }
}
public final class org.petero.droidfish.gtb.Probe$ProbeResult extends java.lang.Object
{
    public static final int DRAW;
    public static final int WMATE;
    public static final int BMATE;
    public static final int UNKNOWN;
    public int result;
    public int movesToMate;

    public void <init>()
    {
        org.petero.droidfish.gtb.Probe$ProbeResult r0;

        r0 := @this: org.petero.droidfish.gtb.Probe$ProbeResult;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }
}
public class org.petero.droidfish.gtb.Probe extends java.lang.Object
{
    private final org.petero.droidfish.gtb.GtbProbe gtb;
    private final int[] whiteSquares;
    private final int[] blackSquares;
    private final byte[] whitePieces;
    private final byte[] blackPieces;
    private static final org.petero.droidfish.gtb.Probe INSTANCE;

    public static org.petero.droidfish.gtb.Probe getInstance()
    {
        org.petero.droidfish.gtb.Probe $r0;

        $r0 = <org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.Probe INSTANCE>;
        return $r0;
    }

    private void <init>()
    {
        org.petero.droidfish.gtb.Probe r0;
        org.petero.droidfish.gtb.GtbProbe $r1;
        int[] $r2, $r3;
        byte[] $r4, $r5;

        r0 := @this: org.petero.droidfish.gtb.Probe;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new org.petero.droidfish.gtb.GtbProbe;
        specialinvoke $r1.<org.petero.droidfish.gtb.GtbProbe: void <init>()>();
        r0.<org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.GtbProbe gtb> = $r1;
        $r2 = newarray (int)[65];
        r0.<org.petero.droidfish.gtb.Probe: int[] whiteSquares> = $r2;
        $r3 = newarray (int)[65];
        r0.<org.petero.droidfish.gtb.Probe: int[] blackSquares> = $r3;
        $r4 = newarray (byte)[65];
        r0.<org.petero.droidfish.gtb.Probe: byte[] whitePieces> = $r4;
        $r5 = newarray (byte)[65];
        r0.<org.petero.droidfish.gtb.Probe: byte[] blackPieces> = $r5;
        return;
    }

    public void setPath(java.lang.String, boolean)
    {
        org.petero.droidfish.gtb.Probe r0;
        java.lang.String r1;
        boolean z0;
        org.petero.droidfish.gtb.GtbProbe $r2;

        r0 := @this: org.petero.droidfish.gtb.Probe;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = r0.<org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.GtbProbe gtb>;
        virtualinvoke $r2.<org.petero.droidfish.gtb.GtbProbe: void setPath(java.lang.String,boolean)>(r1, z0);
        return;
    }

    public final org.petero.droidfish.gtb.Probe$ProbeResult probeHard(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gtb.Probe r0;
        org.petero.droidfish.gamelogic.Position r1;
        byte b0;
        int i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.petero.droidfish.gtb.Probe$ProbeResult r2, $r38;
        int[] $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r28, r31, $r34, $r35;
        byte[] $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r29, $r30, $r36, $r37;
        org.petero.droidfish.gtb.GtbProbe $r32, $r33;

        r0 := @this: org.petero.droidfish.gtb.Probe;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        b0 = 0;
        $z1 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: boolean a1Castle()>();
        if $z1 == 0 goto label0;

        b0 = b0 | 4;

     label0:
        $z2 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: boolean h1Castle()>();
        if $z2 == 0 goto label1;

        b0 = b0 | 8;

     label1:
        $z3 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: boolean a8Castle()>();
        if $z3 == 0 goto label2;

        b0 = b0 | 1;

     label2:
        $z4 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: boolean h8Castle()>();
        if $z4 == 0 goto label3;

        b0 = b0 | 2;

     label3:
        i1 = 0;
        i2 = 0;
        i3 = 0;

     label4:
        if i3 >= 64 goto label18;

        i4 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i3);
        tableswitch(i4)
        {
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label7;
            case 4: goto label8;
            case 5: goto label9;
            case 6: goto label10;
            case 7: goto label11;
            case 8: goto label12;
            case 9: goto label13;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label16;
            default: goto label17;
        };

     label5:
        $r3 = r0.<org.petero.droidfish.gtb.Probe: int[] whiteSquares>;
        $r3[i1] = i3;
        $r4 = r0.<org.petero.droidfish.gtb.Probe: byte[] whitePieces>;
        $i5 = i1;
        i1 = i1 + 1;
        $r4[$i5] = 6;
        goto label17;

     label6:
        $r5 = r0.<org.petero.droidfish.gtb.Probe: int[] whiteSquares>;
        $r5[i1] = i3;
        $r6 = r0.<org.petero.droidfish.gtb.Probe: byte[] whitePieces>;
        $i6 = i1;
        i1 = i1 + 1;
        $r6[$i6] = 5;
        goto label17;

     label7:
        $r7 = r0.<org.petero.droidfish.gtb.Probe: int[] whiteSquares>;
        $r7[i1] = i3;
        $r8 = r0.<org.petero.droidfish.gtb.Probe: byte[] whitePieces>;
        $i7 = i1;
        i1 = i1 + 1;
        $r8[$i7] = 4;
        goto label17;

     label8:
        $r9 = r0.<org.petero.droidfish.gtb.Probe: int[] whiteSquares>;
        $r9[i1] = i3;
        $r10 = r0.<org.petero.droidfish.gtb.Probe: byte[] whitePieces>;
        $i8 = i1;
        i1 = i1 + 1;
        $r10[$i8] = 3;
        goto label17;

     label9:
        $r11 = r0.<org.petero.droidfish.gtb.Probe: int[] whiteSquares>;
        $r11[i1] = i3;
        $r12 = r0.<org.petero.droidfish.gtb.Probe: byte[] whitePieces>;
        $i9 = i1;
        i1 = i1 + 1;
        $r12[$i9] = 2;
        goto label17;

     label10:
        $r13 = r0.<org.petero.droidfish.gtb.Probe: int[] whiteSquares>;
        $r13[i1] = i3;
        $r14 = r0.<org.petero.droidfish.gtb.Probe: byte[] whitePieces>;
        $i10 = i1;
        i1 = i1 + 1;
        $r14[$i10] = 1;
        goto label17;

     label11:
        $r15 = r0.<org.petero.droidfish.gtb.Probe: int[] blackSquares>;
        $r15[i2] = i3;
        $r16 = r0.<org.petero.droidfish.gtb.Probe: byte[] blackPieces>;
        $i11 = i2;
        i2 = i2 + 1;
        $r16[$i11] = 6;
        goto label17;

     label12:
        $r17 = r0.<org.petero.droidfish.gtb.Probe: int[] blackSquares>;
        $r17[i2] = i3;
        $r18 = r0.<org.petero.droidfish.gtb.Probe: byte[] blackPieces>;
        $i12 = i2;
        i2 = i2 + 1;
        $r18[$i12] = 5;
        goto label17;

     label13:
        $r19 = r0.<org.petero.droidfish.gtb.Probe: int[] blackSquares>;
        $r19[i2] = i3;
        $r20 = r0.<org.petero.droidfish.gtb.Probe: byte[] blackPieces>;
        $i13 = i2;
        i2 = i2 + 1;
        $r20[$i13] = 4;
        goto label17;

     label14:
        $r21 = r0.<org.petero.droidfish.gtb.Probe: int[] blackSquares>;
        $r21[i2] = i3;
        $r22 = r0.<org.petero.droidfish.gtb.Probe: byte[] blackPieces>;
        $i14 = i2;
        i2 = i2 + 1;
        $r22[$i14] = 3;
        goto label17;

     label15:
        $r23 = r0.<org.petero.droidfish.gtb.Probe: int[] blackSquares>;
        $r23[i2] = i3;
        $r24 = r0.<org.petero.droidfish.gtb.Probe: byte[] blackPieces>;
        $i15 = i2;
        i2 = i2 + 1;
        $r24[$i15] = 2;
        goto label17;

     label16:
        $r25 = r0.<org.petero.droidfish.gtb.Probe: int[] blackSquares>;
        $r25[i2] = i3;
        $r26 = r0.<org.petero.droidfish.gtb.Probe: byte[] blackPieces>;
        $i16 = i2;
        i2 = i2 + 1;
        $r26[$i16] = 1;

     label17:
        i3 = i3 + 1;
        goto label4;

     label18:
        $r27 = r0.<org.petero.droidfish.gtb.Probe: int[] whiteSquares>;
        $r27[i1] = 64;
        $r28 = r0.<org.petero.droidfish.gtb.Probe: int[] blackSquares>;
        $r28[i2] = 64;
        $r29 = r0.<org.petero.droidfish.gtb.Probe: byte[] whitePieces>;
        $r29[i1] = 0;
        $r30 = r0.<org.petero.droidfish.gtb.Probe: byte[] blackPieces>;
        $r30[i2] = 0;
        i17 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getEpSquare()>();
        if i17 != -1 goto label19;

        i17 = 64;

     label19:
        r31 = newarray (int)[2];
        z0 = 0;
        $i18 = i1 + i2;
        if $i18 > 5 goto label20;

        $r32 = r0.<org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.GtbProbe gtb>;
        virtualinvoke $r32.<org.petero.droidfish.gtb.GtbProbe: void initIfNeeded()>();
        $r33 = r0.<org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.GtbProbe gtb>;
        $z5 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $r34 = r0.<org.petero.droidfish.gtb.Probe: int[] whiteSquares>;
        $r35 = r0.<org.petero.droidfish.gtb.Probe: int[] blackSquares>;
        $r36 = r0.<org.petero.droidfish.gtb.Probe: byte[] whitePieces>;
        $r37 = r0.<org.petero.droidfish.gtb.Probe: byte[] blackPieces>;
        z0 = virtualinvoke $r33.<org.petero.droidfish.gtb.GtbProbe: boolean probeHard(boolean,int,int,int[],int[],byte[],byte[],int[])>($z5, i17, b0, $r34, $r35, $r36, $r37, r31);

     label20:
        $r38 = new org.petero.droidfish.gtb.Probe$ProbeResult;
        specialinvoke $r38.<org.petero.droidfish.gtb.Probe$ProbeResult: void <init>()>();
        r2 = $r38;
        if z0 == 0 goto label25;

        $i19 = r31[0];
        tableswitch($i19)
        {
            case 0: goto label21;
            case 1: goto label22;
            case 2: goto label23;
            default: goto label24;
        };

     label21:
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int result> = 0;
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate> = 0;
        goto label26;

     label22:
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int result> = 1;
        $i20 = r31[1];
        $i21 = $i20 + 1;
        $i22 = $i21 / 2;
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate> = $i22;
        goto label26;

     label23:
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int result> = 2;
        $i23 = r31[1];
        $i24 = $i23 + 1;
        $i25 = $i24 / 2;
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate> = $i25;
        goto label26;

     label24:
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int result> = 3;
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate> = 0;
        goto label26;

     label25:
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int result> = 3;
        r2.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate> = 0;

     label26:
        return r2;
    }

    public final java.util.ArrayList findOptimal(org.petero.droidfish.gamelogic.Position)
    {
        org.petero.droidfish.gtb.Probe r0;
        org.petero.droidfish.gamelogic.Position r1;
        org.petero.droidfish.gamelogic.MoveGen $r2;
        java.util.ArrayList r3, r4, r5, $r10, $r11, $r17;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.petero.droidfish.gamelogic.UndoInfo r6, $r12;
        java.util.Iterator r7, r14;
        org.petero.droidfish.gamelogic.Move r8, r16;
        org.petero.droidfish.gtb.Probe$ProbeResult r9;
        boolean $z0, $z2, $z5;
        java.lang.Object $r13, $r15;

        r0 := @this: org.petero.droidfish.gtb.Probe;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        $r2 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r2.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        r3 = virtualinvoke $r2.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r1);
        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        r4 = $r10;
        $r11 = new java.util.ArrayList;
        specialinvoke $r11.<java.util.ArrayList: void <init>()>();
        r5 = $r11;
        i0 = 100000;
        i1 = -1000000;
        $r12 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r12.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r6 = $r12;
        r7 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label9;

        $r13 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
        r8 = (org.petero.droidfish.gamelogic.Move) $r13;
        virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r8, r6);
        r9 = virtualinvoke r0.<org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.Probe$ProbeResult probeHard(org.petero.droidfish.gamelogic.Position)>(r1);
        virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: void unMakeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r8, r6);
        $i4 = r9.<org.petero.droidfish.gtb.Probe$ProbeResult: int result>;
        if $i4 != 3 goto label1;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);
        goto label8;

     label1:
        $i5 = r9.<org.petero.droidfish.gtb.Probe$ProbeResult: int result>;
        if $i5 != 1 goto label2;

        $i6 = r9.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate>;
        i2 = 100000 - $i6;
        goto label4;

     label2:
        $i7 = r9.<org.petero.droidfish.gtb.Probe$ProbeResult: int result>;
        if $i7 != 2 goto label3;

        $i8 = r9.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate>;
        $i9 = 100000 - $i8;
        i2 = neg $i9;
        goto label4;

     label3:
        i2 = 0;

     label4:
        $z2 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z2 == 0 goto label5;

        $i10 = i2;
        goto label6;

     label5:
        $i10 = neg i2;

     label6:
        i3 = $i10;
        if i3 <= i1 goto label7;

        virtualinvoke r4.<java.util.ArrayList: void clear()>();
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);
        i1 = i3;
        goto label8;

     label7:
        if i3 != i1 goto label8;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label8:
        goto label0;

     label9:
        r14 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z5 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();
        if $z5 == 0 goto label11;

        $r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();
        r16 = (org.petero.droidfish.gamelogic.Move) $r15;
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);
        goto label10;

     label11:
        $i11 = virtualinvoke r4.<java.util.ArrayList: int size()>();
        $i12 = virtualinvoke r3.<java.util.ArrayList: int size()>();
        if $i11 >= $i12 goto label12;

        $r17 = r4;
        goto label13;

     label12:
        $r17 = null;

     label13:
        return $r17;
    }

    public final java.util.ArrayList movePieceProbe(org.petero.droidfish.gamelogic.Position, int)
    {
        org.petero.droidfish.gtb.Probe r0;
        org.petero.droidfish.gamelogic.Position r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.ArrayList r2, r3, $r8;
        org.petero.droidfish.gamelogic.UndoInfo r4, $r10;
        java.util.Iterator r5;
        org.petero.droidfish.gamelogic.Move r6;
        org.petero.droidfish.gtb.Probe$ProbeResult r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.petero.droidfish.gamelogic.MoveGen $r9;
        java.lang.Object $r11;
        org.petero.droidfish.gamelogic.Pair $r12;
        java.lang.Integer $r13, $r14;

        r0 := @this: org.petero.droidfish.gtb.Probe;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter1: int;
        i1 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i0);
        if i1 == 0 goto label0;

        $z0 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        $z1 = staticinvoke <org.petero.droidfish.gamelogic.Piece: boolean isWhite(int)>(i1);
        if $z0 == $z1 goto label1;

     label0:
        return null;

     label1:
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r2 = $r8;
        $r9 = new org.petero.droidfish.gamelogic.MoveGen;
        specialinvoke $r9.<org.petero.droidfish.gamelogic.MoveGen: void <init>()>();
        r3 = virtualinvoke $r9.<org.petero.droidfish.gamelogic.MoveGen: java.util.ArrayList legalMoves(org.petero.droidfish.gamelogic.Position)>(r1);
        $r10 = new org.petero.droidfish.gamelogic.UndoInfo;
        specialinvoke $r10.<org.petero.droidfish.gamelogic.UndoInfo: void <init>()>();
        r4 = $r10;
        r5 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 == 0 goto label11;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r6 = (org.petero.droidfish.gamelogic.Move) $r11;
        $i3 = r6.<org.petero.droidfish.gamelogic.Move: int 'from'>;
        if $i3 == i0 goto label3;

        goto label2;

     label3:
        virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: void makeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r6, r4);
        r7 = virtualinvoke r0.<org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.Probe$ProbeResult probeHard(org.petero.droidfish.gamelogic.Position)>(r1);
        virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: void unMakeMove(org.petero.droidfish.gamelogic.Move,org.petero.droidfish.gamelogic.UndoInfo)>(r6, r4);
        $i4 = r7.<org.petero.droidfish.gtb.Probe$ProbeResult: int result>;
        if $i4 != 3 goto label4;

        goto label2;

     label4:
        i2 = 0;
        $i5 = r7.<org.petero.droidfish.gtb.Probe$ProbeResult: int result>;
        if $i5 != 1 goto label7;

        $z3 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z3 == 0 goto label5;

        $i6 = r7.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate>;
        $i7 = $i6 + 1;
        goto label6;

     label5:
        $i8 = r7.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate>;
        $i7 = neg $i8;

     label6:
        i2 = $i7;
        goto label10;

     label7:
        $i9 = r7.<org.petero.droidfish.gtb.Probe$ProbeResult: int result>;
        if $i9 != 2 goto label10;

        $z4 = r1.<org.petero.droidfish.gamelogic.Position: boolean whiteMove>;
        if $z4 == 0 goto label8;

        $i10 = r7.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate>;
        $i11 = neg $i10;
        goto label9;

     label8:
        $i12 = r7.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate>;
        $i11 = $i12 + 1;

     label9:
        i2 = $i11;

     label10:
        $r12 = new org.petero.droidfish.gamelogic.Pair;
        $i13 = r6.<org.petero.droidfish.gamelogic.Move: int 'to'>;
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        specialinvoke $r12.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>($r13, $r14);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);
        goto label2;

     label11:
        return r2;
    }

    public final java.util.ArrayList relocatePieceProbe(org.petero.droidfish.gamelogic.Position, int)
    {
        org.petero.droidfish.gtb.Probe r0;
        org.petero.droidfish.gamelogic.Position r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1;
        java.util.ArrayList r2, $r4;
        org.petero.droidfish.gtb.Probe$ProbeResult r3;
        org.petero.droidfish.gamelogic.Pair $r5;
        java.lang.Integer $r6, $r7;

        r0 := @this: org.petero.droidfish.gtb.Probe;
        r1 := @parameter0: org.petero.droidfish.gamelogic.Position;
        i0 := @parameter1: int;
        i1 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i0);
        if i1 != 0 goto label0;

        return null;

     label0:
        $i4 = staticinvoke <org.petero.droidfish.gamelogic.Piece: int makeWhite(int)>(i1);
        if $i4 != 6 goto label1;

        $z1 = 1;
        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        r2 = $r4;
        i2 = 0;

     label3:
        if i2 >= 64 goto label10;

        if i2 == i0 goto label4;

        $i5 = virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: int getPiece(int)>(i2);
        if $i5 == 0 goto label4;

        goto label9;

     label4:
        if z0 == 0 goto label5;

        if i2 < 8 goto label9;

        if i2 < 56 goto label5;

        goto label9;

     label5:
        virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>(i0, 0);
        virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>(i2, i1);
        r3 = virtualinvoke r0.<org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.Probe$ProbeResult probeHard(org.petero.droidfish.gamelogic.Position)>(r1);
        virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>(i2, 0);
        virtualinvoke r1.<org.petero.droidfish.gamelogic.Position: void setPiece(int,int)>(i0, i1);
        $i6 = r3.<org.petero.droidfish.gtb.Probe$ProbeResult: int result>;
        if $i6 != 3 goto label6;

        goto label9;

     label6:
        i3 = 0;
        $i7 = r3.<org.petero.droidfish.gtb.Probe$ProbeResult: int result>;
        if $i7 != 1 goto label7;

        i3 = r3.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate>;
        goto label8;

     label7:
        $i8 = r3.<org.petero.droidfish.gtb.Probe$ProbeResult: int result>;
        if $i8 != 2 goto label8;

        $i9 = r3.<org.petero.droidfish.gtb.Probe$ProbeResult: int movesToMate>;
        i3 = neg $i9;

     label8:
        $r5 = new org.petero.droidfish.gamelogic.Pair;
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
        specialinvoke $r5.<org.petero.droidfish.gamelogic.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r7);
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label9:
        i2 = i2 + 1;
        goto label3;

     label10:
        return r2;
    }

    static void <clinit>()
    {
        org.petero.droidfish.gtb.Probe $r0;

        $r0 = new org.petero.droidfish.gtb.Probe;
        specialinvoke $r0.<org.petero.droidfish.gtb.Probe: void <init>()>();
        <org.petero.droidfish.gtb.Probe: org.petero.droidfish.gtb.Probe INSTANCE> = $r0;
        return;
    }
}
public class edu.gatech.util.innerClass extends java.lang.Object
{
    public static java.util.List allMethods;
    public static java.util.Stack methodStack;
    public static java.util.Map currentFeats;
    public static int runSeq;

    public void <init>()
    {
        edu.gatech.util.innerClass r0;

        r0 := @this: edu.gatech.util.innerClass;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void test()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("testing");
        return;
    }

    public static void callMethod(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1, $r17, $r24;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Iterator r2;
        java.util.ArrayList r3, $r8;
        java.util.Map$Entry r4;
        java.util.Map $r5, $r6, $r14, $r20, $r25;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r9, $r11, $r15, $r16, $r21, $r22;
        java.lang.StringBuilder $r10, $r12, $r13, $r18, $r19, $r23;
        java.lang.Integer $r26;
        java.util.Date $r28, r29;
        edu.gatech.util.MethodInfo $r30, r31;
        long $l6;
        java.util.List $r32;
        java.util.Stack $r33;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        $i1 = <edu.gatech.util.innerClass: int runSeq>;
        $i2 = $i1 + 1;
        <edu.gatech.util.innerClass: int runSeq> = $i2;
        $r5 = <edu.gatech.util.innerFeature: java.util.Map featureKeySet>;
        $i3 = interfaceinvoke $r5.<java.util.Map: int size()>();
        if $i3 <= 0 goto label2;

        $r6 = <edu.gatech.util.innerFeature: java.util.Map featureKeySet>;
        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();
        $r8 = new java.util.ArrayList;
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();
        r3 = $r8;

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r9;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r14 = <edu.gatech.util.innerFeature: java.util.Map featureKeySet>;
        $r15 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r16 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);
        $r17 = (java.lang.String) $r16;
        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r20 = <edu.gatech.util.innerFeature: java.util.Map featureValSet>;
        $r21 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r22 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21);
        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r24);
        goto label0;

     label1:
        $r25 = <edu.gatech.util.innerClass: java.util.Map currentFeats>;
        $i4 = <edu.gatech.util.innerClass: int runSeq>;
        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, r3);

     label2:
        $r28 = new java.util.Date;
        specialinvoke $r28.<java.util.Date: void <init>()>();
        r29 = $r28;
        $r30 = new edu.gatech.util.MethodInfo;
        $i5 = <edu.gatech.util.innerClass: int runSeq>;
        $l6 = virtualinvoke r29.<java.util.Date: long getTime()>();
        specialinvoke $r30.<edu.gatech.util.MethodInfo: void <init>(java.lang.String,int,long,java.lang.String,int)>(r0, $i5, $l6, r1, i0);
        r31 = $r30;
        $r32 = <edu.gatech.util.innerClass: java.util.List allMethods>;
        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>(r31);
        $r33 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        virtualinvoke $r33.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r31);
        return;
    }

    public static void endMethod(java.lang.String)
    {
        java.lang.String r0;
        java.util.Date $r1, r2;
        edu.gatech.util.MethodInfo r3;
        java.util.Stack $r4;
        java.lang.Object $r5;
        long $l0;

        r0 := @parameter0: java.lang.String;
        $r1 = new java.util.Date;
        specialinvoke $r1.<java.util.Date: void <init>()>();
        r2 = $r1;
        $r4 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();
        r3 = (edu.gatech.util.MethodInfo) $r5;
        $l0 = virtualinvoke r2.<java.util.Date: long getTime()>();
        virtualinvoke r3.<edu.gatech.util.MethodInfo: void setRunTime(long)>($l0);
        staticinvoke <edu.gatech.util.innerClass: void printInfo(edu.gatech.util.MethodInfo)>(r3);
        return;
    }

    public static void runningMethod(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;
        return;
    }

    public static void setNonPrimBase(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0, $r4;
        java.lang.String r1, $r5;
        java.util.Stack $r2;
        edu.gatech.util.MethodInfo r3;
        int i0;
        java.lang.Boolean $r6;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.String;
        $r2 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r4 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();
        r3 = (edu.gatech.util.MethodInfo) $r4;
        i0 = staticinvoke <edu.gatech.util.innerClass: int getSerializedSize(java.lang.Object)>(r0);
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        virtualinvoke r3.<edu.gatech.util.MethodInfo: void setBase(java.lang.String,java.lang.String,java.lang.Boolean,int)>(r1, $r5, $r6, i0);
        return;
    }

    public static void setPrimBase(java.lang.String)
    {
        java.lang.String r0;
        java.util.Stack $r1;
        edu.gatech.util.MethodInfo r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r3 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();
        r2 = (edu.gatech.util.MethodInfo) $r3;
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r2.<edu.gatech.util.MethodInfo: void setBase(java.lang.String,java.lang.String,java.lang.Boolean,int)>(r0, null, $r4, -1);
        return;
    }

    public static void setNonPrimReturnVal(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0, $r4;
        java.lang.String r1, $r5;
        java.util.Stack $r2;
        edu.gatech.util.MethodInfo r3;
        int i0;
        java.lang.Boolean $r6;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.String;
        $r2 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r4 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();
        r3 = (edu.gatech.util.MethodInfo) $r4;
        i0 = staticinvoke <edu.gatech.util.innerClass: int getSerializedSize(java.lang.Object)>(r0);
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        virtualinvoke r3.<edu.gatech.util.MethodInfo: void setReturnVal(java.lang.String,java.lang.String,java.lang.Boolean,int)>(r1, $r5, $r6, i0);
        return;
    }

    public static void setPrimReturnVal(java.lang.String)
    {
        java.lang.String r0;
        java.util.Stack $r1;
        edu.gatech.util.MethodInfo r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        r0 := @parameter0: java.lang.String;
        $r1 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r3 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();
        r2 = (edu.gatech.util.MethodInfo) $r3;
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r2.<edu.gatech.util.MethodInfo: void setReturnVal(java.lang.String,java.lang.String,java.lang.Boolean,int)>(r0, null, $r4, -1);
        return;
    }

    public static void setNonPrimParam(java.lang.Object, int, java.lang.String)
    {
        java.lang.Object r0, $r4;
        int i0, i1;
        java.lang.String r1, $r5;
        java.util.Stack $r2;
        edu.gatech.util.MethodInfo r3;
        java.lang.Boolean $r6;

        r0 := @parameter0: java.lang.Object;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        $r2 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r4 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();
        r3 = (edu.gatech.util.MethodInfo) $r4;
        i1 = staticinvoke <edu.gatech.util.innerClass: int getSerializedSize(java.lang.Object)>(r0);
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
        virtualinvoke r3.<edu.gatech.util.MethodInfo: void setParam(int,java.lang.String,java.lang.String,java.lang.Boolean,int)>(i0, r1, $r5, $r6, i1);
        return;
    }

    public static void setPrimParam(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        java.util.Stack $r1;
        edu.gatech.util.MethodInfo r2;
        java.lang.Object $r3;
        java.lang.Boolean $r4;

        i0 := @parameter0: int;
        r0 := @parameter1: java.lang.String;
        $r1 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r3 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();
        r2 = (edu.gatech.util.MethodInfo) $r3;
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
        virtualinvoke r2.<edu.gatech.util.MethodInfo: void setParam(int,java.lang.String,java.lang.String,java.lang.Boolean,int)>(i0, r0, null, $r4, -1);
        return;
    }

    public static void updateArrayForParam(java.lang.Object, int, java.lang.String, int)
    {
        java.lang.Object r0, $r4;
        int i0, i1;
        java.lang.String r1;
        java.util.Stack $r2;
        edu.gatech.util.MethodInfo r3;
        edu.gatech.util.ObjectInfo[] $r5;
        edu.gatech.util.ObjectInfo $r6;

        r0 := @parameter0: java.lang.Object;
        i0 := @parameter1: int;
        r1 := @parameter2: java.lang.String;
        i1 := @parameter3: int;
        $r2 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r4 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();
        r3 = (edu.gatech.util.MethodInfo) $r4;
        $r5 = r3.<edu.gatech.util.MethodInfo: edu.gatech.util.ObjectInfo[] paramList>;
        $r6 = $r5[i0];
        virtualinvoke $r6.<edu.gatech.util.ObjectInfo: void updateArrayInfo(java.lang.Object,java.lang.String,int)>(r0, r1, i1);
        return;
    }

    public static void updateArrayForBase(java.lang.Object, java.lang.String, int)
    {
        java.lang.Object r0, $r4;
        java.lang.String r1;
        int i0;
        java.util.Stack $r2;
        edu.gatech.util.MethodInfo r3;
        edu.gatech.util.ObjectInfo $r5;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        $r2 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r4 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();
        r3 = (edu.gatech.util.MethodInfo) $r4;
        $r5 = r3.<edu.gatech.util.MethodInfo: edu.gatech.util.ObjectInfo base>;
        virtualinvoke $r5.<edu.gatech.util.ObjectInfo: void updateArrayInfo(java.lang.Object,java.lang.String,int)>(r0, r1, i0);
        return;
    }

    public static void updateArrayForReturn(java.lang.Object, java.lang.String, int)
    {
        java.lang.Object r0, $r4;
        java.lang.String r1;
        int i0;
        java.util.Stack $r2;
        edu.gatech.util.MethodInfo r3;
        edu.gatech.util.ObjectInfo $r5;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        $r2 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r4 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();
        r3 = (edu.gatech.util.MethodInfo) $r4;
        $r5 = r3.<edu.gatech.util.MethodInfo: edu.gatech.util.ObjectInfo returnVal>;
        virtualinvoke $r5.<edu.gatech.util.ObjectInfo: void updateArrayInfo(java.lang.Object,java.lang.String,int)>(r0, r1, i0);
        return;
    }

    public static void setParamCount(int)
    {
        int i0;
        java.util.Stack $r0;
        edu.gatech.util.MethodInfo r1;
        java.lang.Object $r2;

        i0 := @parameter0: int;
        $r0 = <edu.gatech.util.innerClass: java.util.Stack methodStack>;
        $r2 = virtualinvoke $r0.<java.util.Stack: java.lang.Object peek()>();
        r1 = (edu.gatech.util.MethodInfo) $r2;
        virtualinvoke r1.<edu.gatech.util.MethodInfo: void initParamList(int)>(i0);
        return;
    }

    private static int getSerializedSize(java.lang.Object)
    {
        java.lang.Object r0;
        int i0;
        java.io.ByteArrayOutputStream r1, $r3;
        null_type n0;
        byte[] r2;
        java.io.ObjectOutputStream $r4, r5;
        java.lang.Exception $r6, r7;

        r0 := @parameter0: java.lang.Object;
        i0 = -1;
        $r3 = new java.io.ByteArrayOutputStream;
        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();
        r1 = $r3;
        n0 = null;

     label0:
        $r4 = new java.io.ObjectOutputStream;
        specialinvoke $r4.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r1);
        r5 = $r4;
        interfaceinvoke r5.<java.io.ObjectOutput: void writeObject(java.lang.Object)>(r0);
        r2 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        i0 = lengthof r2;
        interfaceinvoke r5.<java.io.ObjectOutput: void close()>();
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        r7 = $r6;

     label3:
        return i0;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public static void printInfo(edu.gatech.util.MethodInfo)
    {
        edu.gatech.util.MethodInfo r0;
        java.io.PrintWriter $r1, r4;
        java.io.BufferedWriter $r2;
        java.io.FileWriter $r3;
        java.util.List r5;
        java.util.Iterator r6;
        java.lang.String r7, $r12, $r17, $r21;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r18, $r19, $r20;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5;
        java.util.Map $r22, $r24, $r28;
        java.lang.Integer $r23, $r25, $r29;
        boolean $z0, $z1;
        java.lang.Object $r26, $r27;
        java.lang.Exception $r31, r32;

        r0 := @parameter0: edu.gatech.util.MethodInfo;

     label0:
        $r1 = new java.io.PrintWriter;
        $r2 = new java.io.BufferedWriter;
        $r3 = new java.io.FileWriter;
        specialinvoke $r3.<java.io.FileWriter: void <init>(java.lang.String,boolean)>("/mnt/sdcard/log.txt", 1);
        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);
        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r2);
        r4 = $r1;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time:  ");
        $l0 = r0.<edu.gatech.util.MethodInfo: long runTime>;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r12 = r0.<edu.gatech.util.MethodInfo: java.lang.String fileName>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : line");
        $i1 = r0.<edu.gatech.util.MethodInfo: int lineNum>;
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r17 = r0.<edu.gatech.util.MethodInfo: java.lang.String methodSig>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $i2 = r0.<edu.gatech.util.MethodInfo: int runSeq>;
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>($r21);
        $r22 = <edu.gatech.util.innerClass: java.util.Map currentFeats>;
        $i3 = r0.<edu.gatech.util.MethodInfo: int runSeq>;
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
        $z0 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>($r23);
        if $z0 == 0 goto label3;

        $r24 = <edu.gatech.util.innerClass: java.util.Map currentFeats>;
        $i4 = r0.<edu.gatech.util.MethodInfo: int runSeq>;
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
        $r26 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);
        r5 = (java.util.List) $r26;
        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label2;

        $r27 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r27;
        virtualinvoke r4.<java.io.PrintWriter: void println(java.lang.String)>(r7);
        goto label1;

     label2:
        $r28 = <edu.gatech.util.innerClass: java.util.Map currentFeats>;
        $i5 = r0.<edu.gatech.util.MethodInfo: int runSeq>;
        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
        interfaceinvoke $r28.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r29);

     label3:
        virtualinvoke r4.<java.io.PrintWriter: void close()>();

     label4:
        goto label6;

     label5:
        $r31 := @caughtexception;
        r32 = $r31;
        virtualinvoke r32.<java.lang.Exception: void printStackTrace()>();

     label6:
        return;

        catch java.lang.Exception from label0 to label4 with label5;
    }

    public static void printAllInfo()
    {
        java.io.PrintWriter $r0, r3;
        java.io.BufferedWriter $r1;
        java.io.FileWriter $r2;
        int i0, $i1, $i3, $i4;
        edu.gatech.util.MethodInfo r4;
        java.util.List $r5, $r6;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r18, $r19, $r20;
        long $l2;
        java.lang.String $r12, $r17, $r21;
        java.lang.Exception $r22, r23;

     label0:
        $r0 = new java.io.PrintWriter;
        $r1 = new java.io.BufferedWriter;
        $r2 = new java.io.FileWriter;
        specialinvoke $r2.<java.io.FileWriter: void <init>(java.lang.String,boolean)>("/mnt/sdcard/log.txt", 1);
        specialinvoke $r1.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r2);
        specialinvoke $r0.<java.io.PrintWriter: void <init>(java.io.Writer)>($r1);
        r3 = $r0;
        i0 = 0;

     label1:
        $r5 = <edu.gatech.util.innerClass: java.util.List allMethods>;
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        if i0 >= $i1 goto label2;

        $r6 = <edu.gatech.util.innerClass: java.util.List allMethods>;
        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);
        r4 = (edu.gatech.util.MethodInfo) $r7;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Time:  ");
        $l2 = r4.<edu.gatech.util.MethodInfo: long runTime>;
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r12 = r4.<edu.gatech.util.MethodInfo: java.lang.String fileName>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : line");
        $i3 = r4.<edu.gatech.util.MethodInfo: int lineNum>;
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r17 = r4.<edu.gatech.util.MethodInfo: java.lang.String methodSig>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $i4 = r4.<edu.gatech.util.MethodInfo: int runSeq>;
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>($r21);
        i0 = i0 + 1;
        goto label1;

     label2:
        virtualinvoke r3.<java.io.PrintWriter: void close()>();

     label3:
        goto label5;

     label4:
        $r22 := @caughtexception;
        r23 = $r22;
        virtualinvoke r23.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label0 to label3 with label4;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        java.util.Stack $r1;
        java.util.HashMap $r2;

        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        <edu.gatech.util.innerClass: java.util.List allMethods> = $r0;
        $r1 = new java.util.Stack;
        specialinvoke $r1.<java.util.Stack: void <init>()>();
        <edu.gatech.util.innerClass: java.util.Stack methodStack> = $r1;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        <edu.gatech.util.innerClass: java.util.Map currentFeats> = $r2;
        <edu.gatech.util.innerClass: int runSeq> = 0;
        return;
    }
}
public class edu.gatech.util.innerFeature extends java.lang.Object
{
    static int counter;
    public static java.util.Map featureKeySet;
    public static java.util.Map featureValSet;

    public void <init>()
    {
        edu.gatech.util.innerFeature r0;

        r0 := @this: edu.gatech.util.innerFeature;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void addFeature(java.lang.String, java.lang.String, int, int)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3;
        java.util.Map $r2, $r3, $r5, $r8, $r11, $r14;
        boolean $z0;
        java.lang.Integer $r6, $r10, $r13, $r15;
        java.lang.Object $r9, $r12;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        i1 := @parameter3: int;
        $r2 = <edu.gatech.util.innerFeature: java.util.Map featureKeySet>;
        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);
        if $z0 != 0 goto label0;

        $r3 = <edu.gatech.util.innerFeature: java.util.Map featureKeySet>;
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);
        $r5 = <edu.gatech.util.innerFeature: java.util.Map featureValSet>;
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);
        goto label5;

     label0:
        lookupswitch(i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r8 = <edu.gatech.util.innerFeature: java.util.Map featureValSet>;
        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r10 = (java.lang.Integer) $r9;
        i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();
        if i0 <= 0 goto label4;

        i2 = i2 + 1;
        goto label4;

     label2:
        $r11 = <edu.gatech.util.innerFeature: java.util.Map featureValSet>;
        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r13 = (java.lang.Integer) $r12;
        i3 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();
        i2 = i3 + i0;
        goto label4;

     label3:
        i2 = i0;

     label4:
        $r14 = <edu.gatech.util.innerFeature: java.util.Map featureValSet>;
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);
        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r15);

     label5:
        return;
    }

    public static java.lang.String getName(java.lang.String)
    {
        java.lang.String r0, r2, $r5;
        java.util.Map $r1, $r3, $r9, $r11;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        int $i0, $i1;
        java.lang.Integer $r12;

        r0 := @parameter0: java.lang.String;
        $r1 = <edu.gatech.util.innerFeature: java.util.Map featureKeySet>;
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);
        if $z0 == 0 goto label0;

        $r3 = <edu.gatech.util.innerFeature: java.util.Map featureKeySet>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);
        $r5 = (java.lang.String) $r4;
        return $r5;

     label0:
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c");
        $i0 = <edu.gatech.util.innerFeature: int counter>;
        $i1 = $i0 + 1;
        <edu.gatech.util.innerFeature: int counter> = $i1;
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = <edu.gatech.util.innerFeature: java.util.Map featureKeySet>;
        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);
        $r11 = <edu.gatech.util.innerFeature: java.util.Map featureValSet>;
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r12);
        return r2;
    }

    public static void testPrint(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        java.util.Map $r1, $r14, $r26;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.StringBuilder $r4, $r9, $r10, $r12, $r13, $r17, $r19, $r21, $r22, $r24, $r25, $r29;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6, $r8, $r11, $r15, $r16, $r20, $r23, $r27, $r28;
        java.io.PrintStream $r7;
        java.lang.String $r18, $r30;

        r0 := @parameter0: java.io.PrintWriter;
        $r1 = <edu.gatech.util.innerFeature: java.util.Map featureKeySet>;
        $r5 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();
        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r3 = (java.util.Map$Entry) $r6;
        $r7 = <java.lang.System: java.io.PrintStream out>;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r14 = <edu.gatech.util.innerFeature: java.util.Map featureValSet>;
        $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r16 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);
        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r18);
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();
        $r20 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r23 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");
        $r26 = <edu.gatech.util.innerFeature: java.util.Map featureValSet>;
        $r27 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r28 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>($r27);
        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r30);
        goto label0;

     label1:
        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;

        <edu.gatech.util.innerFeature: int counter> = 0;
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        <edu.gatech.util.innerFeature: java.util.Map featureKeySet> = $r0;
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        <edu.gatech.util.innerFeature: java.util.Map featureValSet> = $r1;
        return;
    }
}
public class edu.gatech.util.MethodInfo extends java.lang.Object
{
    public int runSeq;
    public java.lang.String methodSig;
    public java.lang.String fileName;
    public int lineNum;
    public edu.gatech.util.ObjectInfo base;
    public edu.gatech.util.ObjectInfo returnVal;
    public edu.gatech.util.ObjectInfo[] paramList;
    public long startTime;
    public long runTime;

    public void <init>(java.lang.String, int, long, java.lang.String, int)
    {
        edu.gatech.util.MethodInfo r0;
        java.lang.String r1, r2;
        int i0, i2;
        long l1;

        r0 := @this: edu.gatech.util.MethodInfo;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        l1 := @parameter2: long;
        r2 := @parameter3: java.lang.String;
        i2 := @parameter4: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<edu.gatech.util.MethodInfo: java.lang.String methodSig> = r1;
        r0.<edu.gatech.util.MethodInfo: int runSeq> = i0;
        r0.<edu.gatech.util.MethodInfo: long startTime> = l1;
        r0.<edu.gatech.util.MethodInfo: java.lang.String fileName> = r2;
        r0.<edu.gatech.util.MethodInfo: int lineNum> = i2;
        return;
    }

    public void setRunTime(long)
    {
        edu.gatech.util.MethodInfo r0;
        long l0, $l1, $l2;

        r0 := @this: edu.gatech.util.MethodInfo;
        l0 := @parameter0: long;
        $l1 = r0.<edu.gatech.util.MethodInfo: long startTime>;
        $l2 = l0 - $l1;
        r0.<edu.gatech.util.MethodInfo: long runTime> = $l2;
        return;
    }

    public void initParamList(int)
    {
        edu.gatech.util.MethodInfo r0;
        int i0;
        edu.gatech.util.ObjectInfo[] $r1;

        r0 := @this: edu.gatech.util.MethodInfo;
        i0 := @parameter0: int;
        $r1 = newarray (edu.gatech.util.ObjectInfo)[i0];
        r0.<edu.gatech.util.MethodInfo: edu.gatech.util.ObjectInfo[] paramList> = $r1;
        return;
    }

    public void setParam(int, java.lang.String, java.lang.String, java.lang.Boolean, int)
    {
        edu.gatech.util.MethodInfo r0;
        int i0, i1;
        java.lang.String r1, r2;
        java.lang.Boolean r3;
        edu.gatech.util.ObjectInfo $r4, $r7;
        edu.gatech.util.ObjectInfo[] $r5, $r6;
        boolean $z0;

        r0 := @this: edu.gatech.util.MethodInfo;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.String;
        r2 := @parameter2: java.lang.String;
        r3 := @parameter3: java.lang.Boolean;
        i1 := @parameter4: int;
        $r5 = r0.<edu.gatech.util.MethodInfo: edu.gatech.util.ObjectInfo[] paramList>;
        $r4 = new edu.gatech.util.ObjectInfo;
        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();
        specialinvoke $r4.<edu.gatech.util.ObjectInfo: void <init>(java.lang.String,java.lang.String,boolean,int)>(r1, r2, $z0, i1);
        $r5[i0] = $r4;
        if i1 == -1 goto label0;

        $r6 = r0.<edu.gatech.util.MethodInfo: edu.gatech.util.ObjectInfo[] paramList>;
        $r7 = $r6[i0];
        $r7.<edu.gatech.util.ObjectInfo: boolean isSerialized> = 0;

     label0:
        return;
    }

    public void setBase(java.lang.String, java.lang.String, java.lang.Boolean, int)
    {
        edu.gatech.util.MethodInfo r0;
        java.lang.String r1, r2;
        java.lang.Boolean r3;
        int i0;
        edu.gatech.util.ObjectInfo $r4;
        boolean $z0;

        r0 := @this: edu.gatech.util.MethodInfo;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Boolean;
        i0 := @parameter3: int;
        $r4 = new edu.gatech.util.ObjectInfo;
        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();
        specialinvoke $r4.<edu.gatech.util.ObjectInfo: void <init>(java.lang.String,java.lang.String,boolean,int)>(r1, r2, $z0, i0);
        r0.<edu.gatech.util.MethodInfo: edu.gatech.util.ObjectInfo base> = $r4;
        return;
    }

    public void setReturnVal(java.lang.String, java.lang.String, java.lang.Boolean, int)
    {
        edu.gatech.util.MethodInfo r0;
        java.lang.String r1, r2;
        java.lang.Boolean r3;
        int i0;
        edu.gatech.util.ObjectInfo $r4;
        boolean $z0;

        r0 := @this: edu.gatech.util.MethodInfo;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Boolean;
        i0 := @parameter3: int;
        $r4 = new edu.gatech.util.ObjectInfo;
        $z0 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();
        specialinvoke $r4.<edu.gatech.util.ObjectInfo: void <init>(java.lang.String,java.lang.String,boolean,int)>(r1, r2, $z0, i0);
        r0.<edu.gatech.util.MethodInfo: edu.gatech.util.ObjectInfo returnVal> = $r4;
        return;
    }
}
public class edu.gatech.util.ObjectInfo extends java.lang.Object
{
    public java.lang.String type;
    public java.lang.String value;
    public boolean isPrimType;
    public boolean isSerialized;
    public int serializedSize;
    public boolean isArray;
    public java.lang.String elementType;
    public int arrayDimension;
    public int arraySize;

    public void <init>(java.lang.String, java.lang.String, boolean, int)
    {
        edu.gatech.util.ObjectInfo r0;
        java.lang.String r1, r2;
        boolean z0, $z1;
        int i0;

        r0 := @this: edu.gatech.util.ObjectInfo;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        i0 := @parameter3: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<edu.gatech.util.ObjectInfo: java.lang.String type> = r1;
        r0.<edu.gatech.util.ObjectInfo: java.lang.String value> = r2;
        r0.<edu.gatech.util.ObjectInfo: boolean isPrimType> = z0;
        r0.<edu.gatech.util.ObjectInfo: int serializedSize> = i0;
        if i0 == -1 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        r0.<edu.gatech.util.ObjectInfo: boolean isSerialized> = $z1;
        r0.<edu.gatech.util.ObjectInfo: boolean isArray> = 0;
        return;
    }

    public void updateArrayInfo(java.lang.Object, java.lang.String, int)
    {
        edu.gatech.util.ObjectInfo r0;
        java.lang.Object r1;
        java.lang.String r2;
        int i0;

        r0 := @this: edu.gatech.util.ObjectInfo;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.String;
        i0 := @parameter2: int;
        r0.<edu.gatech.util.ObjectInfo: boolean isArray> = 1;
        r0.<edu.gatech.util.ObjectInfo: java.lang.String elementType> = r2;
        r0.<edu.gatech.util.ObjectInfo: int arrayDimension> = i0;
        return;
    }
}
